{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/functions/ScrollToTop.js","components/placeholders/LoadingProgress.js","styles/changers.js","components/header/headerHelpers/category/AddCategory.js","components/header/headerHelpers/category/AddPage.js","components/header/headerHelpers/category/ChangeCategory.js","components/header/headerHelpers/category/ChangePage.js","components/header/headerHelpers/CategoriesChanger.js","components/functions/colorChanger/ColorPicker.js","components/functions/colorChanger/ColorSelecter.js","components/functions/colorChanger/ColorCalculation.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/headerHelpers/RequestsChanger.js","assets/icons/half-moon.svg","assets/icons/sun.svg","components/header/dumb/ThemeSwitcher.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/Login.js","components/Error.js","styles/inputs.js","components/functions/InputChange.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/list/DumbComponent.js","components/library/list/StyledComponent.js","components/library/list/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/AddItem.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/DumbComponent.js","components/library/table/AddItem.js","components/library/table/ChangeItem.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/library/formLine/DumbComponent.js","components/library/formLine/StyledComponent.js","components/library/formLine/ElementCreator.js","components/library/swiper/DumbComponent.js","components/library/swiper/AddItem.js","components/library/swiper/StyledComponent.js","components/library/swiper/ElementCreator.js","components/library/banner/DumbComponent.js","components/library/banner/StyledComponent.js","components/library/banner/ElementCreator.js","components/library/blocksPages/DumbComponent.js","components/library/blocksPages/AddItem.js","components/library/blocksPages/StyledComponent.js","components/library/blocksPages/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","idArrayForDelete","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","clearArrayForDelete","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","name","storageRef","ref","imageRef","child","images","removeImage","removeImagesFromArray","SendFormContext","SendFormProvider","requests","modalSettings","isAlertSeverity","alertText","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","time","setTimeout","req","newList","slice","newReq","Object","assign","getCurrentDate","push","closeAlertFromTimeout","severity","duration","isShowAlert","updateRequests","updateModalSettings","sendRequests","closeAlert","setCustomAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","StylesChangers","theme","menu","palette","background","paper","paddingLeft","paddingRight","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","fontSize","fontWeight","borderBottom","divider","default","padding","marginBottom","cursor","btnSetting","deepOrange","minWidth","transition","transitions","easing","easeInOut","shorter","flexDirection","btnSave","bottom","paddingTop","paddingBottom","opacity","btnWithLabel","spacing","btnDrawerStyle","easeIn","btnDrawerItem","secondary","containerWrapper","outline","outlineOffset","responseValues","margin","marginRight","responseTablets","border","success","fill","responseMobile","mobileTooltip","tabletTooltip","dialogContentUnstyle","AddCategory","useState","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","onSubmit","e","preventDefault","addCategory","FormGroup","Box","mb","TextField","required","fullWidth","label","variant","onChange","style","Tooltip","title","placement","IconButton","Button","type","AddPage","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","addPage","id","Typography","gutterBottom","size","ChangeCategory","setValue","disabled","onClick","handleUpdateCategory","ml","itemPages","handleUpdatePage","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","setOpen","isDisableBtn","setIsDisableBtn","commonClasses","classesRef","maxWidth","listPages","marginTop","listStyle","titlePages","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","pageBox","pageBoxLi","fade","newTitle","newSlug","newCategories","newPage","JSON","parse","stringify","uuid","pages","categoryId","pageId","handleSave","swapCategory","direction","activeIndex","indexOf","length","movedItem","placeItem","swapPage","activeCategory","dumbWrapper","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","component","Grid","container","xs","newCategory","index","disableElevation","confirm","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","Accordion","AccordionSummary","expandIcon","aria-controls","p","indexPages","ChangePage","mt","ColorPicker","memo","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","isDisableSaveIcon","setIsDisableSaveIcon","contrastColor","getContrastText","primary","boxColor","flexGrow","borderRadius","shape","short","boxShadow","shadows","boxPicker","iconButton","iconButtonDisabled","prevOpen","onChangeComplete","newColor","hex","ColorSelecter","colorSelect","setColorSelect","colorCustom","setColorCustom","isContrastSelect","block","main","warning","info","defaultColor","colorCustomText","FormControl","InputLabel","Select","labelId","MenuItem","getColorByPalette","getColorByPaletteForGradient","getColorByPaletteReverse","isNoThemeColor","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","modalTarget","setModalTarget","colorTheme","newLogo","newModal","uploadHandler","imageData","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","Divider","FormControlLabel","control","Switch","checked","mr","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","newSettings","row","Number","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","lightError","setLightError","darkError","setDarkError","lightWarning","setLightWarning","darkWarning","setDarkWarning","lightInfo","setLightInfo","darkInfo","setDarkInfo","lightSuccess","setLightSuccess","darkSuccess","setDarkSuccess","colorPreview","colorItem","flexWrap","startIcon","RequestsChanger","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","amber","newData","my","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","innerIndex","String","CardActions","isCheck","handleOnceCheck","handleRemove","Checkbox","request","ThemeSwitcher","ThemeCustomSwitch","withStyles","switchBase","transform","darkThemeIcon","thumb","lightThemeIcon","backgroundSize","backgroundPosition","track","create","focusVisible","focusVisibleClassName","disableRipple","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","shortest","toolbar","listUnstyle","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","menuColor","iconColor","accordionReset","drawerHeader","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","handleSignOut","content","indexPage","borderTop","px","openModal","edge","DumbComponent","backgroundHeader","widthMobile","mobileView","setMobileView","modalBtnColor","headerRef","useRef","topHeaderRef","darken","header","fixedPadding","topHeader","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","buttonModal","linkModal","setResponsiveness","setScrollHeader","headerTop","pageYOffset","current","classList","add","remove","err","addEventListener","removeEventListener","logout","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ModalChanger","ElementCreator","Header","Footer","contrastFooter","backgroundFooter","footer","down","buttonToTop","handleClickToTop","Login","setName","setPassword","setError","isRedirect","setIsRedirect","isSubmit","setIsSubmit","avatar","form","submitBtn","forgotTitle","disableCheck","Avatar","CircularProgress","loginWithEmail","res","autoComplete","autoFocus","Alert","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","InputChange","multiline","valueLocal","setValueLocal","onBlur","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","libraryList","setPadding","setMargin","setDisplay","setFlexDirection","backgroundSelect","setBackgroundSelect","backgroundCustom","setBackgroundCustom","borderColor","borderColorSelect","setBorderColorSelect","borderColorCustom","setBorderColorCustom","shadow","setShadow","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","bgTheme","borderTheme","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","addHeading","a","newChildren","newItem","reSaveContainer","reSaveContainerStyleSettings","aria-haspopup","currentTarget","keepMounted","Boolean","tooltip","resposiveFontSize","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","outlineColor","swapHeading","swapChildrens","viewCorrect","sentData","reSaveChildren","prop","isFirst","isLast","removeItem","liClass","itemsStyle","mobileClass","items","setPaddingLeft","setItems","itemsPadding","setItemsPadding","itemsListStyle","setItemsListStyle","setNewItem","mobileMarginTopComputed","mobileMarginBottomComputed","handleItemChange","newItems","swapItem","swapList","splice","deleteItemList","swapParagraph","imageBorderColor","imageClassName","imageStyle","imageStabilization","sm","imageUrl","titleImg","imageBorderColorSelect","setImageBorderColorSelect","imageBorderColorCustom","setImageBorderColorCustom","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageBorderTheme","imageAccordion","imagePreview","imageLabel","handleImageMargin","handleImageUpload","generateImageName","downloadURL","pt","pb","align","F","styleClass","noPadding","yesPadding","isPaperClassForContainer","isPaperClassForPaper","renderItems","orderFirst","orderLast","createArrayImages","forEach","swapContainer","removeContainer","newArr","colorFocusInput","formPhone","setFormPhone","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","maxWidthContainer","input","up","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","md","xlinkHref","phone","place","placeholder","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","iconName","setIconName","setMarginTop","setMarginBottom","setMaxWidthContainer","tabletMarginTopComputed","tabletMarginBottomComputed","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","AddItem","newItemTitle","setNewItemTitle","newItemBody","setNewItemBody","addItem","handleUpdateItemHead","handleUpdateItemBody","itemLayout","colorMapOnload","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","fontFamily","link","boxForFlex","heightRegular","linksContainer","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","cols","rows","setLocation","setPhone","setInputComment","setMapFrame","isButton","setIsButton","textButton","targetButton","setTextButton","setTargetButton","headingSize","colorMain","containerColored","containerFlexed","setHeadingSize","CustomizedTables","mainColor","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isBotton","isBottonClick","setIsBottonClick","StyledTableRow","TableRow","table","tableCell","tableButtonCell","tableButton","tableContainer","tableHeader","handleVisible","OnceRow","hover","TableCell","scope","price","TableContainer","Table","TableHead","TableBody","newItemPrice","setNewItemPrice","ChangeItem","setPrice","handleRowChange","setRows","setTableRow","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","handleTableHeadChange","newRow","newRows","rowLayout","lineDecor","gridItem","SwiperCore","use","Navigation","history","useHistory","isSwiper","setIsSwiper","slidesForViewDesktop","slidesPerView","slidesForViewTablet","slidesPerViewTablet","slidesForViewMobile","slidesPerViewMobile","spaceBetween","speed","loop","freeMode","slides","slideHeight","setSlideHeight","slideRef","swiper","activeSlide","slide","overflow","slideBox","slideImg","backgroundRepeat","slideTitle","gallery","marginRigth","getWidthViewport","actualWidth","slideHeightCalc","clientWidth","renderSlide","isUrl","handleSlideClick","600","960","navigation","newImageName","setNewImageName","newImageUrl","setNewImageUrl","newImageTitle","setNewImageTitle","addSlide","replace","setSlidesPerView","setSlidesPerViewTablet","setSlidesPerViewMobile","setSpaceBetween","setSpeed","setLoop","setFreeMode","setSlides","imageForDelete","setImageForDelete","slideContainer","dumbSlide","dumbSlideButtons","dumbSlideTitle","tooltipReload","handleSlideTitle","newSlides","handleChangeIsButtonTarget","swipeSlide","element","renderLinkList","links","categorySlug","imgArray","handleChangeIsButton","handleChangeIsUrl","handleChangeUrl","newImageForDelete","deletedImageName","removeSlide","isLink","colorText","paddingVertical","bannerBackground","bannerContent","setMinHeight","colorTextSelect","setColorTextSelect","colorTextCustom","setColorTextCustom","setPaddingVertical","paddingVerticalComputed","colorButtonTheme","colorTextTheme","boxSizing","standard","slideBtn","newSvg","setNewSvg","idActive","setIdActive","dumbSlideSvg","handleSlideSvg","activeItem","inner","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","FormLineLayout","formLine","SwiperLayout","BannerLayout","banner","BlocksPagesLayout","blocksPages","setData","btnContainer","boxMenuItem","fetchData","document","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","innerHeight","key","RouterComponent","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","closeBtn","targetContainer","targetLabel","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2a266453.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 600) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        idArrayForDelete: [],\r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n        \r\n        // imageList: [], \r\n    }\r\n    \r\n \r\n    \r\n\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n        // this.fetchListFromStorage()\r\n    } \r\n    // fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .then( () => {\r\n    //         this.setState({\r\n    //             imageList: imagesArray\r\n    //         })\r\n    //     })\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n        \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 700);\r\n        \r\n    // }\r\n\r\n    async updateCategories(data) { \r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {    \r\n        // const pageRef = firebase.db.collection(\"site1\").doc(slug)\r\n        // const doc = await pageRef.get();\r\n        \r\n        // let idArray = []\r\n\r\n        // if (!doc.exists) {\r\n        //     console.log('No such page!');  \r\n        // } else { \r\n        //     const items = doc.data().items\r\n        //     items.forEach(item => {\r\n        //         if(item.type === 'container') { \r\n        //             item.children.forEach( child => {\r\n        //                 if(child.type === 'paragraphImage') {\r\n        //                     idArray.push(child.id)\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //         else {  \r\n        //             idArray.push(item.id)\r\n        //         }\r\n        //     });\r\n        // }\r\n        // this.setState({\r\n        //     idArrayForDelete: idArray\r\n        // })\r\n\r\n        // await pageRef.delete()\r\n        // // .then( () => {\r\n        // //     setTimeout(() => {\r\n        // //         this.setState({\r\n        // //             idArrayForDelete: []\r\n        // //         })\r\n        // //     }, 1000);\r\n        // // })\r\n        // .then( () => {\r\n        //     this.state.imageList.forEach( imageName => {\r\n        //         idArray.forEach(id => {\r\n        //             if(imageName.includes(id)) this.removeImage(imageName)\r\n        //         })\r\n        //     })\r\n        // })\r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n    // async removeImage(name) { \r\n    //     if(name !== '') {\r\n    //         const storageRef = firebase.storage.ref();\r\n \r\n    //         const imageRef = storageRef.child(name)\r\n        \r\n    //         try {\r\n    //             await imageRef.delete().then(function() {\r\n    //                 console.log('File deleted successfully')\r\n    //             }).catch(function(error) {\r\n    //                 console.log(error) \r\n    //             }); \r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    idArrayForDelete: this.state.idArrayForDelete, \r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    clearArrayForDelete: () => {\r\n                        this.setState({\r\n                            idArrayForDelete: []\r\n                        })\r\n                    }, \r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    // state = {  \r\n    //     imageList: [], \r\n    // } \r\n\r\n    // async componentDidMount() { \r\n    //       this.fetchListFromStorage()\r\n    //     //   this.fetchListFromFirestore()\r\n    // }\r\n\r\n    // async fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     await listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n    //     this.setState({\r\n    //         imageList: imagesArray\r\n    //     }) \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 500);\r\n        \r\n    // }\r\n\r\n    // async addImageToList(newImage, oldName) {\r\n    //     const newList = this.state.imageList.slice()\r\n    //     let newItem\r\n    //     let isNew = true\r\n    //     let isNeedUpdate = newImage.name === oldName ? false : true \r\n    //     if(isNeedUpdate) { \r\n    //         for(let i = 0; i < newList.length; i++) {\r\n    //             if(newList[i].name === newImage.name) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity++ \r\n    //                 isNew = false\r\n    //             }\r\n    //             if(newList[i].name === oldName) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity--  \r\n    //                 if( newList[i].quantity === 0 ) { \r\n    //                     this.removeImage(oldName) \r\n    //                     newList.splice(i, 1)\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //         if(isNew) {\r\n    //             newItem = {\r\n    //                 name: newImage.name, \r\n    //                 url: newImage.url, \r\n    //                 quantity: 1\r\n    //             }\r\n    //             newList.push(newItem)\r\n    //         }\r\n    //     }\r\n    //     else { \r\n    //         console.log(newImage, oldName)\r\n    //     }\r\n         \r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })\r\n \r\n    //     console.log(this.state.imageList, oldName)\r\n\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    // async fetchListFromFirestore() {\r\n    //     const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n    //     const doc = await listRef.get();\r\n      \r\n    //     if (!doc.exists) {\r\n    //         console.log('No such page!');  \r\n\r\n    //     } else { \r\n    //         this.setState({\r\n    //             imageList: doc.data().list\r\n    //         }) \r\n    //     }\r\n    // }\r\n    // async uploadImage(imageData, oldName) { \r\n    //     const storageRef = await firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n    //     const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n    //     const newImage = {\r\n    //         url: downloadURL, \r\n    //         name: imageData.name, \r\n    //         quantity: 1\r\n    //     }\r\n    //     this.addImageToList(newImage, oldName)\r\n  \r\n    // }\r\n    // async updateList(newList) {\r\n    //     await firebase.db.collection(\"site1category\").doc(\"imageList\").update({\r\n    //         list: newList, \r\n    //     }).then(() => { \r\n    //         this.setState({\r\n    //             imageList: newList\r\n    //         })\r\n    //     })\r\n    // }\r\n \r\n    // removeImageFromStoreAndList(name) {\r\n    //     console.log(name)\r\n    //     const newList = this.state.imageList.slice()\r\n    //     newList.map( (item, index) => {\r\n    //         if(item.name === name) {\r\n    //             item.quantity--\r\n    //             if(item.quantity === 0) newList.splice(index, 1)\r\n    //         }\r\n    //     })\r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })  \r\n    //     this.removeImage(name)\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    async removeImage(name) { \r\n        if(name !== '') {\r\n            const storageRef = firebase.storage.ref();\r\n \r\n            const imageRef = storageRef.child(name)\r\n        \r\n            try {\r\n                await imageRef.delete().then(function() {\r\n                    console.log('File deleted successfully')\r\n                }).catch(function(error) {\r\n                    console.log(error) \r\n                }); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n    removeImagesFromArray(images) {\r\n        console.log(images)\r\n    }\r\n   \r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    // imageList: this.state.imageList, \r\n                    // nameList: this.state.nameList ,\r\n                    \r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    },\r\n                    removeImagesFromArray: (array) => {\r\n                        this.removeImagesFromArray(array)\r\n                    },\r\n                    // removeImageFromStoreAndList: (name) => {\r\n                    //     this.removeImageFromStoreAndList(name)\r\n                    // },\r\n                    // uploadImage: (data, name) => {\r\n                    //     this.uploadImage(data, name)\r\n                    // }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isAlertSeverity: null,\r\n        alertText: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            })  \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout(time) {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isAlertSeverity: null,\r\n                alertText: ''\r\n            })\r\n        }, time);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isAlertSeverity: 'info',\r\n            alertText: \"Your request is being processed\"\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isAlertSeverity: 'success', \r\n                alertText: 'Your request was accepted successfully'\r\n            })\r\n            this.closeAlertFromTimeout(7000)\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isAlertSeverity: 'error', \r\n                alertText: \"An error has occurred :(\"\r\n            })\r\n            this.closeAlertFromTimeout(700)\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    setCustomAlert(severity, text, duration) {\r\n        this.setState({  \r\n            isAlertSeverity: severity, \r\n            alertText: text\r\n        })\r\n        this.closeAlertFromTimeout(duration)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isAlertSeverity, \r\n                    modalSettings: this.state.modalSettings, \r\n                    alertText: this.state.alertText, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isAlertSeverity: null, \r\n                            alertText: ''\r\n                        }) \r\n                    }, \r\n                    setCustomAlert: (severity, text, duration) => {\r\n                        this.setCustomAlert(severity, text, duration)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            // paddingBottom: 50,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        btnWithLabel: {\r\n            padding: 0, \r\n            '& label': {\r\n                padding: theme.spacing(1, 2), \r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            outlineOffset: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                // outlineColor: `${theme.palette.error.main}`,\r\n                // zIndex: 100, \r\n                 \r\n                // '& $mtView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $mbView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $btnDrawerStyle' : { \r\n                //     opacity: 1\r\n                // }\r\n            }\r\n        },\r\n        responseValues: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            padding: theme.spacing(1, 2),\r\n            margin: theme.spacing(1, 0), \r\n            '& p': {\r\n                margin: 0\r\n            },\r\n            '& svg': {\r\n                marginRight: 8, \r\n            }\r\n        }, \r\n        responseTablets: { \r\n            border: `1px solid ${theme.palette.success.dark}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.dark \r\n            }\r\n        },\r\n        responseMobile: { \r\n            border: `1px solid ${theme.palette.success.light}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.light \r\n            }\r\n        },\r\n        mobileTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.light\r\n        },\r\n        tabletTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.dark\r\n        }, \r\n        dialogContentUnstyle: {\r\n            outline: 0, \r\n            padding: 0\r\n        }\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n\r\nconst AddCategory = (props) => {\r\n\r\n    \r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.addCategory(newCategoryTitle, newCategorySlug)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <Box mb={1}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label=\"Category title\" \r\n                        variant=\"outlined\" \r\n                        value={newCategoryTitle}\r\n                        onChange={(e) => { setNewCategoryTitle(e.target.value) }}\r\n                    />\r\n                </Box>\r\n                <Box mb={1} style={{position: 'relative'}}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label=\"Category slug\" \r\n                        variant=\"outlined\" \r\n                        value={newCategorySlug}\r\n                        onChange={(e) => { setNewCategorySlug( e.target.value)}}\r\n                            \r\n                    />\r\n                    <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                        <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                            <InfoOutlined color={'secondary'}/>\r\n                        </IconButton>\r\n                    </Tooltip> \r\n                </Box>\r\n                <Box mb={1}>\r\n                    <Button \r\n                        type='submit'\r\n                        color={'primary'} \r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                    >\r\n                        Add New Category\r\n                    </Button> \r\n                </Box>\r\n            </FormGroup>\r\n\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton,\r\n    Typography, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\nconst AddPage = (props) => {\r\n     \r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addPage(newPageTitle, newPageSlug, props.id)\r\n        setNewPageTitle('')\r\n        setNewPageSlug('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box display='flex' justifyContent={'flex-end'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new page</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New page title\" \r\n                            variant=\"outlined\" \r\n                            value={newPageTitle}\r\n                            onChange={(e) => { setNewPageTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New page slug\" \r\n                            variant=\"outlined\" \r\n                            value={newPageSlug}\r\n                            onChange={(e) => { setNewPageSlug(e.target.value)}}\r\n                            \r\n                        />\r\n                        <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                            <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                <InfoOutlined size={10} color={'secondary'}/>\r\n                            </IconButton>\r\n                        </Tooltip> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Page\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddPage\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n    console.log('category title changer')\r\n\r\n    const [value, setValue] = useState(props.item.title)\r\n\r\n    console.log(value)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdateCategory(value, props.item.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.item.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Category ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.item.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField  \r\n                    required\r\n                    type='text' \r\n                    label=\"Category title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue(e.target.value)}}\r\n                />     \r\n                <TextField \r\n                    type='text' \r\n                    label=\"Category slug (read only)\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.item.slug} \r\n                    disabled={true} \r\n                />  \r\n            </Box> \r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n\r\n    const [value, setValue] = useState(props.itemPages.title)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdatePage(value, props.item.id, props.itemPages.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.itemPages.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Page ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.itemPages.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField \r\n                    required\r\n                    type='text' \r\n                    label=\"Page title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue( e.target.value )}}\r\n                />     \r\n                <TextField  \r\n                    type='text' \r\n                    label=\"Page slug\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.itemPages.slug} \r\n                    disabled={true}\r\n                />  \r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport AddCategory from './category/AddCategory'\r\nimport AddPage from './category/AddPage'\r\nimport ChangeCategory from './category/ChangeCategory'\r\nimport ChangePage from './category/ChangePage'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid,\r\n    fade,  \r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n\r\n    console.log('Categories Changer')\r\n     \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    \r\n \r\n    const handleOpen = () => {  \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting , dialogContentUnstyle } = commonClasses\r\n       \r\n        return( { \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid ${theme.palette.divider}`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }, \r\n            pageBox: {\r\n                display: 'flex',  \r\n                justifyContent: 'space-between', \r\n                alignItems: 'center', \r\n                marginBottom: theme.spacing(2), \r\n            }, \r\n            pageBoxLi: {\r\n                padding: 5, \r\n                border: `1px solid ${fade(theme.palette.success.light, 0.3)}`\r\n\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (newTitle, newSlug) => {\r\n        let newList = categories.slice() \r\n        let newCategory = JSON.parse(JSON.stringify(categoryLayout)); \r\n\r\n        newCategory.id = uuid()\r\n        newCategory.title = newTitle\r\n        newCategory.slug = newSlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList) \r\n    }\r\n    const addPage = (newTitle, newSlug, id) => {  \r\n        \r\n        let newCategories = categories.slice()\r\n        \r\n        let newPage = JSON.parse(JSON.stringify(pageLayout));  \r\n        newPage.id = uuid()\r\n        newPage.title = newTitle\r\n        newPage.slug = newSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) {  \r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n    } \r\n     \r\n    const handleUpdateCategory = (value, id) => {  \r\n        let newCategories = categories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = categories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        // setCategories(localCategories)\r\n        setIsDisableBtn(true) \r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = JSON.parse(JSON.stringify(categories)) \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n          \r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        })  \r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        const conf = window.confirm('Delete category?')\r\n        if(conf) {\r\n            let filtered = categories.filter((item) => (item.id !== id))  \r\n            const deleted = categories.filter( (item) => (item.id === id))\r\n            let arrayOfPagesForDelete = [] \r\n\r\n            arrayOfPagesForDelete.push(deleted[0].slug)\r\n            if(deleted[0].pages.length > 0) {\r\n                deleted[0].pages.map((item) => {\r\n                    arrayOfPagesForDelete.push(item.slug)\r\n                    return 0\r\n                })\r\n            }\r\n\r\n            setCategories(filtered)  \r\n            deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        }  \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        const conf = window.confirm('Delete page?')\r\n            if(conf) {\r\n            categories.map( category => {\r\n                if(category.id === categoryId) {  \r\n                    let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                    category.pages = filtered\r\n                }\r\n                return 0 \r\n            }) \r\n            setCategories(categories)  \r\n\r\n            deletePageFromFirebase(slug)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <AddCategory addCategory={addCategory} />\r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    {\r\n                                                        item.slug === '/' ?\r\n                                                        <Tooltip title=\"You can't remove Home Category\" placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}  \r\n                                                            > \r\n                                                                <InfoOutlined style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button> \r\n                                                        </Tooltip>\r\n                                                        :\r\n                                                        <Tooltip title='Delete Category' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}\r\n                                                                onClick={() => { deleteCategory(item.id) }}\r\n                                                            > \r\n                                                                <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            \r\n                                                            <ChangeCategory item={item} handleUpdateCategory={handleUpdateCategory}  />\r\n\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages}  className={classes.pageBoxLi}  >\r\n                                                                            <Box className={classes.pageBox}  >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            \r\n                                                                            <ChangePage handleUpdatePage={handleUpdatePage} item={item} itemPages={itemPages} /> \r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n\r\n                                                                    <AddPage addPage={addPage} id={item.id} />    \r\n                                                                 \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box mt={5} />\r\n                                    {/* <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState, useEffect } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n    const [isDisableSaveIcon, setIsDisableSaveIcon] = useState(true); \r\n \r\n\r\n    const togglePicker = () => {\r\n        setIsOpen(prevOpen => !prevOpen)\r\n        setColor(initialColor)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const handleChange = (newColor) => {\r\n        setColor(newColor.hex)\r\n        setIsDisableSaveIcon(false)\r\n    }\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit') \r\n        setIsDisableSaveIcon(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(initialColor === 'inherit' ) setColor('#0000')\r\n    }, [initialColor])\r\n\r\n    const useStyles = makeStyles( theme => { \r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'warning' && \r\n            color !== 'error' && \r\n            color !== 'info' && \r\n            color !== 'success' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'contrast' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.short}ms ${theme.transitions.easing.easeInOut} `, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[2]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }, \r\n            iconButton: {\r\n                padding: theme.spacing(1)\r\n            }, \r\n            iconButtonDisabled: {\r\n                opacity: 0\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    isDisableSaveIcon ? \r\n                    <IconButton disabled={true} className={`${classes.iconButton} ${classes.iconButtonDisabled}`} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save}  color={'primary'} className={classes.iconButton} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react'\r\n\r\nimport { ColorPicker } from './ColorPicker'\r\n\r\nimport { FormControl, InputLabel, Select , MenuItem, Box, makeStyles } from '@material-ui/core'\r\n\r\nfunction ColorSelecter({label, colorSelect, setColorSelect, colorCustom , setColorCustom, setIsDisableBtn, position, noInherit, isContrastSelect }) {\r\n    \r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        block: {\r\n            position: 'absolute', \r\n            top: 'calc(50% - 12px)', \r\n            right: 7, \r\n            height: 24, \r\n            width: 24\r\n        },\r\n        primary: {\r\n            backgroundColor: theme.palette.primary.main\r\n        },\r\n        secondary: {\r\n            backgroundColor: theme.palette.secondary.main\r\n        },\r\n        warning: {\r\n            backgroundColor: theme.palette.warning.main\r\n        },\r\n        error: {\r\n            backgroundColor: theme.palette.error.main\r\n        },\r\n        info: {\r\n            backgroundColor: theme.palette.info.main\r\n        },\r\n        success: {\r\n            backgroundColor: theme.palette.success.main\r\n        },\r\n        defaultColor: {\r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        paper: { \r\n            backgroundColor: theme.palette.background.paper\r\n        }\r\n    }))\r\n    const { block, primary , secondary , warning , error , info, success, defaultColor , paper } = useStyles()\r\n    const colorCustomText = (colorCustom !== 'primary' && colorCustom !== 'secondary' &&  colorCustom !== 'warning' &&\r\n                            colorCustom !== 'error' && colorCustom !== 'info' && colorCustom !== 'success' ) ? ` - ${colorCustom}` : \" \"\r\n    return (\r\n        <Box display=\"flex\" alignItems='center'>\r\n            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                <InputLabel id=\"color-select-label\">{label}</InputLabel>\r\n                <Select\r\n                    labelId=\"color-select-label\"\r\n                    id=\"color-select\"\r\n                    value={colorSelect}\r\n                    onChange={(e) => { setIsDisableBtn(false); setColorSelect(e.target.value) }} \r\n                >\r\n                    <MenuItem style={{position: 'relative'}} value={'primary'}>\r\n                        Primary\r\n                        <Box className={`${block} ${primary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'secondary'}>\r\n                        Secondary \r\n                        <Box className={`${block} ${secondary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'warning'}>\r\n                        Warning\r\n                        <Box className={`${block} ${warning}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'error'}>\r\n                        Error\r\n                        <Box className={`${block} ${error}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'info'}>\r\n                        Info\r\n                        <Box className={`${block} ${info}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'success'}>\r\n                        Success\r\n                        <Box className={`${block} ${success}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'default'}>\r\n                        Default Background\r\n                        <Box className={`${block} ${defaultColor}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'paper'}>\r\n                        Paper Background\r\n                        <Box className={`${block} ${paper}`} />\r\n                    </MenuItem>\r\n                    {   \r\n                        isContrastSelect &&\r\n                        <MenuItem style={{position: 'relative'}} value={'contrast'}>\r\n                            Contrast (about Background)\r\n                        </MenuItem>\r\n                    }\r\n                    <MenuItem value={'custom'}>\r\n                        Custom  {colorCustomText}\r\n                    </MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <Box ml={1} >\r\n                {\r\n                    colorSelect === 'custom' &&\r\n                    <ColorPicker\r\n                        initialColor = {colorCustom}\r\n                        changeColor = {setColorCustom}\r\n                        setIsDisableBtn = {setIsDisableBtn}\r\n                        position = {position}\r\n                        noInherit={noInherit}\r\n                    />  \r\n                }\r\n                \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ColorSelecter\r\n","export const getColorByPalette = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.primary.main \r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.error.main \r\n        } \r\n        case ('info') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.success.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.default\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('contrast') : {\r\n            return 'contrast'\r\n        } \r\n        default: return color\r\n    } \r\n}\r\nexport const getColorByPaletteForGradient = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return [theme.palette.primary.main, theme.palette.primary.dark] \r\n        } \r\n        case ('secondary') : {\r\n            return [theme.palette.secondary.main, theme.palette.secondary.dark] \r\n        } \r\n        case ('warning') : {\r\n            return [theme.palette.warning.main, theme.palette.warning.dark] \r\n        } \r\n        case ('error') : {\r\n            return [theme.palette.error.main, theme.palette.error.dark] \r\n        } \r\n        case ('info') : {\r\n            return [theme.palette.info.main, theme.palette.info.dark] \r\n        } \r\n        case ('success') : {\r\n            return  [theme.palette.success.main, theme.palette.success.dark]\r\n        } \r\n        case ('default') : {\r\n            return [theme.palette.background.paper, theme.palette.background.default]\r\n        } \r\n        case ('paper') : {\r\n            return [theme.palette.background.default, theme.palette.background.paper]\r\n        } \r\n        default: return [color, color]\r\n    } \r\n}\r\nexport const getColorByPaletteReverse = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('info') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.default\r\n        }\r\n        default: return color\r\n    } \r\n}\r\nexport const isNoThemeColor = (color) => {\r\n    if(\r\n        color !== 'contrast' && \r\n        color !== 'default' && \r\n        color !== 'paper' && \r\n        color !== 'primary' && \r\n        color !== 'secondary' &&\r\n        color !== 'warning' &&\r\n        color !== 'error' &&\r\n        color !== 'info' &&\r\n        color !== 'success' \r\n    ) return true \r\n    else return false \r\n}\r\n","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch, \r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n  \r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n    const [modalTarget, setModalTarget] = React.useState(modal.target || 'buy') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    \r\n    const colorTheme = isNoThemeColor(modal.color) \r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [modal])\r\n\r\n    const handleOpen = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        \r\n        const { menu, menuTitle, btnSetting, btnSave, btnWithLabel, dialogContentUnstyle } = commonClasses\r\n\r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,  \r\n            btnWithLabel: {...btnWithLabel, ...{\r\n                '& label': {\r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    padding: theme.spacing(1, 2)\r\n                }\r\n            }},\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText, \r\n            target: modalTarget\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true) \r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => { \r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n                \r\n                setIsDisableBtn(false)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Logo/Modal Settings  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained' \r\n                                        className={classes.btnWithLabel}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> <ImageIcon color=\"action\" /> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    /> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <Box mr={1} display='inline'>\r\n                                                    <TextField\r\n                                                        type='text'\r\n                                                        label=\"Text for Button\"\r\n                                                        variant=\"outlined\"\r\n                                                        value={modalText}\r\n                                                        onChange={(e) => {\r\n                                                        setIsDisableBtn(false);\r\n                                                        setModalText(e.target.value)\r\n                                                    }}/>  \r\n                                                </Box> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Target for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalTarget}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalTarget(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <ColorSelecter\r\n                                                label={'Color for Button'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={true}\r\n                                            /> \r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box mt={5} /> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n\r\n    \r\n    const colorTheme = isNoThemeColor(settings.classes.backgroundColor) \r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n    }, [settings])\r\n     \r\n    const handleOpen = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle } = commonClasses\r\n        \r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true) \r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                               { !isDisableBtn && \"Close to save - \" }  Header Style Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                        <ColorSelecter\r\n                                            label={'Background for Header'}\r\n                                            colorSelect={settingBackgroundSelect} \r\n                                            setColorSelect={setSettingBackgroundSelect}\r\n                                            colorCustom={settingBackgroundCustom}\r\n                                            setColorCustom={setSettingBackgroundCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        />\r\n                                             \r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box mt={5} /> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../functions/colorChanger/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n    const [lightError, setLightError] = React.useState(themeLight.palette.error.main) \r\n    const [darkError, setDarkError] = React.useState(themeDark.palette.error.main) \r\n\r\n    const [lightWarning, setLightWarning] = React.useState(themeLight.palette.warning.main) \r\n    const [darkWarning, setDarkWarning] = React.useState(themeDark.palette.warning.main) \r\n\r\n    const [lightInfo, setLightInfo] = React.useState(themeLight.palette.info.main) \r\n    const [darkInfo, setDarkInfo] = React.useState(themeDark.palette.info.main) \r\n\r\n    const [lightSuccess, setLightSuccess] = React.useState(themeLight.palette.success.main) \r\n    const [darkSuccess, setDarkSuccess] = React.useState(themeDark.palette.success.main) \r\n \r\n    // text.primary\r\n    // text.secondary\r\n    // text.disabled\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, dialogContentUnstyle } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }, \r\n            dialogContentUnstyle: dialogContentUnstyle\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    const handleSave = () => {  \r\n \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                },\r\n                error: {\r\n                    main: lightError\r\n                },\r\n                warning: {\r\n                    main: lightWarning\r\n                },\r\n                info: {\r\n                    main: lightInfo\r\n                },\r\n                success: {\r\n                    main: lightSuccess\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                },\r\n                error: {\r\n                    main: darkError\r\n                },\r\n                warning: {\r\n                    main: darkWarning\r\n                },\r\n                info: {\r\n                    main: darkInfo\r\n                },\r\n                success: {\r\n                    main: darkSuccess\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={2}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Warning - { lightWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightWarning}\r\n                                        changeColor = {setLightWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Error - { lightError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightError}\r\n                                        changeColor = {setLightError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Info - { lightInfo }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightInfo}\r\n                                        changeColor = {setLightInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Success - { lightSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSuccess}\r\n                                        changeColor = {setLightSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Warning- { darkWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkWarning}\r\n                                        changeColor = {setDarkWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Error - { darkError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkError}\r\n                                        changeColor = {setDarkError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Info - { darkInfo}\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkInfo}\r\n                                        changeColor = {setDarkInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Succwss - { darkSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSuccess}\r\n                                        changeColor = {setDarkSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n  \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,   \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors' \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n     \r\n    const colorTheme = isNoThemeColor(modalSettings.colorButton)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [modalSettings.colorButton])\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle } = commonClasses\r\n\r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }},  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true) \r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Modal Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <ColorSelecter\r\n                                    label={'Color for Button'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={true}\r\n                                /> \r\n                            </Box>\r\n                             \r\n                            <Box mt={5} /> \r\n\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, dialogContentUnstyle } = commonClasses\r\n        \r\n        return ({ \r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {   \r\n        const conf = window.confirm('Delete request?') \r\n        if(conf) {\r\n            const newReq = localRequests.slice()\r\n            const filtered = newReq.filter(item => ( item.time !== id ))\r\n    \r\n            setLocalRequests(filtered)\r\n            setIsDisableBtn(false) \r\n        }\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","export default __webpack_public_path__ + \"static/media/half-moon.4946e6c2.svg\";","export default __webpack_public_path__ + \"static/media/sun.b7c92f87.svg\";","import React from 'react'\r\n\r\nimport {  \r\n    FormControlLabel, \r\n    Switch,\r\n    withStyles\r\n} from \"@material-ui/core\"; \r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\n \r\nimport darkThemeIcon from '../../../assets/icons/half-moon.svg'\r\nimport lightThemeIcon from '../../../assets/icons/sun.svg' \r\n\r\nfunction ThemeSwitcher() {\r\n\r\n    const { setThemeMode, themeMode} = React.useContext(CategoryContext)    \r\n  \r\n    const checked = themeMode === 'dark' ? true : false\r\n    \r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    const ThemeCustomSwitch = withStyles((theme) => ({\r\n        root: {\r\n          width: 60,\r\n          height: 28,\r\n          padding: 0, \r\n          marginRight: 5\r\n        },\r\n        switchBase: {\r\n          padding: 1,  \r\n          '&$checked': {\r\n            transform: 'translateX(32px)',\r\n            color: '#27536b',\r\n            '& + $track': {\r\n              backgroundColor: '#27536b',\r\n              opacity: 1,\r\n              border: 'none',\r\n            },\r\n            '&  $thumb': { \r\n              opacity: 1,\r\n              border: 'none',\r\n              backgroundImage: `url(${darkThemeIcon})`\r\n            },\r\n          },\r\n          '&$focusVisible $thumb': {\r\n            color: '#52d869', \r\n          },\r\n        },\r\n        thumb: {\r\n          width: 26,\r\n          height: 26,\r\n          backgroundImage: `url(${lightThemeIcon})`,\r\n          backgroundSize: '28px',\r\n          backgroundPosition: 'center',  \r\n        },\r\n        track: {\r\n          borderRadius: 28 / 2,\r\n          border: `1px solid #a3d4ff`,\r\n          backgroundColor: '#a3d4ff',\r\n          opacity: 1,\r\n          transition: theme.transitions.create(['background-color', 'border']),\r\n        },\r\n        checked: {},\r\n        focusVisible: {},\r\n      }))(({ classes, ...props }) => {\r\n        return (\r\n          <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n              root: classes.root,\r\n              switchBase: classes.switchBase,\r\n              thumb: classes.thumb,\r\n              track: classes.track,\r\n              checked: classes.checked,\r\n            }}\r\n            {...props}\r\n          />\r\n        );\r\n      });\r\n    return ( \r\n        <FormControlLabel\r\n            control={<ThemeCustomSwitch checked={checked} onChange={handleChange} name=\"checkedB\" />}\r\n            label={checked ? 'Night Mode' : 'Light Mode'}\r\n        /> \r\n    ) \r\n}\r\n\r\nexport default ThemeSwitcher\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n    Button\r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nconst Mobile = (props) => { \r\n \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: props.menuColor,\r\n                    color: props.iconColor\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            drawerHeader: {\r\n                margin: theme.spacing(1, 2), \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between', \r\n                '& .log-button': {\r\n                    minWidth: 100\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset, drawerHeader } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n    const handleModal = () => {\r\n        handleDrawerClose()\r\n        props.openModal()\r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box className={drawerHeader}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        {\r\n                            props.user ? \r\n                            <Button \r\n                                size='medium'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={ () => { props.handleSignOut(); handleDrawerClose()  } }\r\n                                className={'log-button'}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                            :\r\n                            <NavLink to='/login' onClick={handleDrawerClose}>\r\n                                <Button  \r\n                                    color='primary' \r\n                                    variant=\"contained\"\r\n                                    size='medium'\r\n                                    className={'log-button'} \r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </NavLink>\r\n                        }\r\n                        \r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box my={3} width={'100%'} clone={true} onClick={handleModal}>\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                    \r\n                    <Box px={3} my={2} >\r\n                        <Box  width={'100%'} clone={true} >\r\n                            <ThemeSwitcher/>\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                color: \"default\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon style={{color: props.iconColor}} />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n   \r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button, \r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\n\r\nimport { getColorByPalette } from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent() { \r\n\r\n    console.log('dumb header')\r\n\r\n    const { setCustomAlert } = React.useContext(SendFormContext)\r\n    const { user } = React.useContext(ModeContext)\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings } = React.useContext(CategoryContext)    \r\n    \r\n    const [mobileView, setMobileView] = useState(true); \r\n   \r\n    let backgroundHeader\r\n    let colorHeader \r\n    let hoverActiveLinkColor \r\n  \r\n    let modalBtnColor = modal.color  \r\n\r\n    let widthMobile \r\n     \r\n    const headerRef = React.useRef(null);\r\n    const topHeaderRef = React.useRef(null);\r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`] \r\n        modalBtnColor= getColorByPalette(theme, modal.color)  \r\n\r\n        backgroundHeader = getColorByPalette(theme, settings.classes.backgroundColor) \r\n\r\n        hoverActiveLinkColor = darken(backgroundHeader, 0.3)\r\n        colorHeader =  theme.palette.getContrastText(backgroundHeader)  \r\n \r\n        if(settings.classes.backgroundColor === 'paper' || settings.classes.backgroundColor === 'default') {  \r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n  \r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `, \r\n               \r\n                top: 0,  \r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n                '&.sticky' : {\r\n                    transform: \"translateY(-41px)\",\r\n                    [`@media (max-width: ${widthMobile}px)`]: {\r\n                        transform: \"translateY(0px)\",\r\n                    }\r\n                }\r\n            },\r\n            fixedPadding: { \r\n                minHeight: 100 + settings.classes.paddingY*2 , \r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    minHeight: 60 + settings.classes.paddingY , \r\n                },\r\n            },\r\n            topHeader: {   \r\n                height: '100%', \r\n                paddingTop: 5, \r\n                paddingBottom: 5,  \r\n                backgroundColor:  \"rgba(0, 0, 0, 0.16)\" , \r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `,  \r\n                '&.sticky' : {\r\n                    // transform: 'scaleY(0)',\r\n                    // transformOrigin: 'top', \r\n                    height: 0, \r\n                    opacity: 0\r\n                }\r\n            },\r\n            logoMain: { \r\n                fontWeight: 700,\r\n                fontSize: 22,\r\n                color: colorHeader , \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundColor: modalBtnColor,   \r\n                color: theme.palette.getContrastText(modalBtnColor), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': {  \r\n                    backgroundColor: darken(modalBtnColor, .3) , \r\n                }\r\n            }, \r\n            linkModal: {  \r\n                textTransform: 'inherit', \r\n                color: colorHeader, \r\n                padding: theme.spacing(0.5, 1.2),\r\n                '&:hover': { \r\n                    backgroundColor: modalBtnColor, \r\n                    color: theme.palette.getContrastText(modalBtnColor), \r\n                    cursor: 'pointer'\r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal, linkModal, topHeader} = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {  \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        const setScrollHeader = () => { \r\n            if(mobileView) {\r\n                const headerTop =  window.pageYOffset \r\n                try {\r\n                    if( headerTop > 1 ) {\r\n                        headerRef.current.classList.add('sticky')\r\n                    } else {\r\n                        headerRef.current.classList.remove('sticky')\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.log(err)\r\n                } \r\n            }\r\n        } \r\n        setResponsiveness(); \r\n        setScrollHeader();\r\n\r\n        window.addEventListener(\"resize\", setResponsiveness);\r\n        window.addEventListener(\"scroll\", setScrollHeader);\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', setResponsiveness) \r\n            window.removeEventListener('scroll', setScrollHeader) \r\n        }\r\n        // eslint-disable-next-line \r\n    }, []);\r\n     \r\n\r\n    const openModal = () => { \r\n        handleOpen(modal.target) \r\n    }\r\n\r\n    const handleSignOut = () => { \r\n        firebase.logout()\r\n        setCustomAlert('warning', 'You are logged out successfully', 3000)\r\n    }\r\n  \r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button \r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n    const topHeaderModalBtn = () => ( \r\n        <Button\r\n            onClick={() => { openModal(modal.target) }} \r\n            className={linkModal}\r\n            size='small' \r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n                 \r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            } \r\n            <AppBar className={header} ref={headerRef}  id='header'>\r\n                    { \r\n                        !mobileView &&\r\n                        <Box className={topHeader} ref={topHeaderRef} >\r\n                            <Container \r\n                                disableGutters={settings.disableGutters}\r\n                                fixed={settings.fixed} \r\n                                maxWidth={settings.maxWidth}  \r\n                            > \r\n                                <Box display='flex' alignItems='center' justifyContent='space-between'>\r\n                                    {  modal.isModal ? topHeaderModalBtn() : ( <span></span> ) }\r\n                                    <Box display='flex' alignItems='center' >\r\n                                        \r\n                                        <ThemeSwitcher/>\r\n                                        \r\n                                        {\r\n                                            user ?\r\n                                            <Button \r\n                                                size='small'\r\n                                                color='secondary' \r\n                                                variant={'contained'} \r\n                                                onClick={handleSignOut}\r\n                                            >\r\n                                                Sign Out\r\n                                            </Button>\r\n                                            :\r\n                                            <NavLink to='/login'>\r\n                                                <Button \r\n                                                    color='default' \r\n                                                    variant=\"outlined\"\r\n                                                    size='small'\r\n                                                >\r\n                                                    Login\r\n                                                </Button>\r\n                                            </NavLink>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n                                </Box>\r\n                            </Container>\r\n                        </Box>\r\n                    }\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop   \r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            openModal={openModal}\r\n                            iconColor={colorHeader}  \r\n                            menuColor={backgroundHeader}  \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                            user={user}\r\n                            handleSignOut={handleSignOut}\r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\n\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: open ? 1 : 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 10, \r\n            top: 5, \r\n            width: 60, \r\n            height: 60,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            textAlign: 'center' ,\r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.headerContainer}>\r\n  \r\n            <div>   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >   \r\n                    {open ? 'close' : 'open' }\r\n                    <br/>\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <RequestsChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { makeStyles, Box, Typography, Container, IconButton, Tooltip, darken } from '@material-ui/core'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nimport { getColorByPalette } from '../functions/colorChanger/ColorCalculation'\r\n\r\nfunction Footer() {\r\n\r\n    const { logo, settings } = React.useContext(CategoryContext)\r\n\r\n    let backgroundFooter = settings.classes.backgroundColor\r\n    let contrastFooter\r\n    let hoverActiveLinkColor\r\n     \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        backgroundFooter = getColorByPalette(theme, backgroundFooter) \r\n        contrastFooter = theme.palette.getContrastText(backgroundFooter)\r\n        hoverActiveLinkColor = darken(backgroundFooter, 0.3)\r\n\r\n        if(settings.classes.backgroundColor === 'paper' || settings.classes.backgroundColor === 'default') {  \r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n\r\n        return({ \r\n            footer: {\r\n                backgroundColor: backgroundFooter, \r\n                padding: theme.spacing(3, 0)\r\n            }, \r\n            logoMain: { \r\n                color: contrastFooter,\r\n                fontWeight: 700,\r\n                fontSize: 25, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                color: contrastFooter,\r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 70, \r\n                height: 50, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: 45, \r\n                    height: 30, \r\n                },\r\n            },  \r\n            buttonToTop: {\r\n                '&:hover': {\r\n                    backgroundColor: hoverActiveLinkColor\r\n                }\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n \r\n    const createLogo = () => (\r\n        <NavLink to={'/'} style={{textDecoration: 'none', display: 'inline-block'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={classes.logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={classes.logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={classes.logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n    const buttonToTop = () => (\r\n        <Tooltip title='To Top' placement='top' >\r\n            <IconButton \r\n                className={classes.buttonToTop}  \r\n                onClick={handleClickToTop}\r\n            >\r\n                <KeyboardArrowUpIcon style={{fill: contrastFooter}}/>\r\n            </IconButton>\r\n        </Tooltip>\r\n    )\r\n    const handleClickToTop = () => {\r\n        window.scrollTo({\r\n            top: 0, \r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n\r\n                <Box display='flex' alignItems=\"center\" justifyContent='space-between'>\r\n                    { createLogo() }\r\n                    { buttonToTop() }\r\n                </Box>\r\n                \r\n \r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\nimport ModeContext from '../context/modeContext/ModeContext' \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext' \r\n \r\nimport { Avatar, Button, TextField, Box, Container, CircularProgress, Typography, Tooltip } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab'; \r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setCustomAlert } = React.useContext(SendFormContext)\r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n    const { user } = React.useContext(ModeContext) \r\n \r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    const [isSubmit, setIsSubmit] = React.useState(false)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false) \r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        if(user) setIsRedirect(true)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          marginBottom: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: isSubmit ? theme.palette.primary.main : theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', // Fix IE 11 issue.\r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submitBtn: {  \r\n            minHeight: 55\r\n        },\r\n        forgotTitle: {\r\n            textAlign: 'center'\r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n    const disableCheck = () => { \r\n        console.log(name, password)\r\n        if(name !== '') setIsDisableBtn(false)\r\n        else setIsDisableBtn(true)   \r\n    }\r\n\r\n    const handleChange = (value, place) => {\r\n        switch(place) {\r\n            case ('name') : { \r\n                setName(value)\r\n                break;\r\n            }\r\n            case ('password'): {\r\n                setPassword(value)\r\n                break;\r\n            }\r\n            default: break;\r\n        } \r\n        setError(null)\r\n        \r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        setIsLoading(true)\r\n        setIsDisableBtn(true)\r\n        setIsSubmit(true)\r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n            setIsSubmit(false) \r\n            setCustomAlert('success', `Hello, ${res.user.email}. Now you can change site`, 7000)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n            setIsSubmit(false)\r\n            setIsLoading(false)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>  \r\n            {/* <Dumb/> */}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        { isSubmit ? <CircularProgress size={25} color={'#fff'}  /> : <LockOutlinedIcon /> }\r\n                    </Avatar> \r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                id=\"text\"\r\n                                label=\"User\"\r\n                                name=\"user\"\r\n                                autoComplete='true'\r\n                                autoFocus\r\n                                value={name}\r\n                                onChange={  (e)=>{setName(e.target.value); disableCheck()} }\r\n                            />\r\n                        </Box>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\" \r\n                                value={password}\r\n                                onChange={  (e)=>{setPassword(e.target.value); disableCheck()} }\r\n                            />\r\n                        </Box>\r\n                        {\r\n                            error && \r\n                            <Box mb={2} >\r\n                                <Alert severity=\"error\">{error.message}</Alert>\r\n                            </Box>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            size='medium'\r\n                            color=\"primary\"\r\n                            className={classes.submitBtn}\r\n                            disabled={isDisableBtn} \r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                        \r\n                    <Box mt={2} >\r\n                        <Tooltip title=\"It's your problem\" placement='top'>\r\n                            <Typography variant='caption' className={classes.forgotTitle}>\r\n                                Forgot Password? \r\n                            </Typography>\r\n                        </Tooltip>\r\n                    </Box>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5, \r\n            display: 'flex', \r\n            alignItems: 'center'\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React, { memo, useState } from \"react\";\r\n\r\nimport { TextField } from '@material-ui/core' \r\n \r\n\r\n\r\nconst InputChange = memo(({ id, fullWidth, multiline,  type, size, label, variant, value, setValue, setIsDisableBtn }) => {\r\n\r\n   \r\n    const [valueLocal, setValueLocal] = useState(value)   \r\n   \r\n    React.useEffect(() => {\r\n        if(valueLocal !== value) {\r\n            setValueLocal(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const save = () => { \r\n        if(valueLocal !== value) {\r\n            if(id !== null ) setValue(valueLocal, id)\r\n            else setValue(valueLocal)\r\n\r\n            setIsDisableBtn(false) \r\n        } \r\n    } \r\n    \r\n    const handleChange = (e) => {\r\n        type === 'number' ? setValueLocal(Number(e.target.value)) : setValueLocal(e.target.value)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n      \r\n    return ( \r\n        <TextField\r\n            fullWidth={fullWidth}\r\n            type={type}\r\n            multiline={multiline}\r\n            size={size}\r\n            label={label}\r\n            variant={variant}\r\n            value={valueLocal}\r\n            onChange={handleChange}\r\n            onBlur={save}\r\n        /> \r\n    )\r\n})\r\n\r\nexport default InputChange\r\n","import React from 'react' \r\nimport Draggable from 'react-draggable'; \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\n\r\nimport uuid from 'react-uuid' \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter' \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu, Tooltip,\r\n    FormControl, InputLabel,\r\n    Select, Typography, IconButton, \r\n    Modal, DialogContent, \r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n    const libraryList = layouts.list\r\n\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n\r\n    const [borderColorSelect,  setBorderColorSelect] = React.useState(props.data.classes.borderColor || 'inherit')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor || 'inherit')\r\n \r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n \r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0)\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  0)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor])\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem  } = commonStyle \r\n \r\n        \r\n        return ({   \r\n            dialogContentUnstyle:dialogContentUnstyle, \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                // maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                width: 600, \r\n            } },\r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip,\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,  \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection  \r\n    }  \r\n     \r\n\r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.handleClose()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = props.data.children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = JSON.parse(JSON.stringify(libraryHeading)); \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraph)); \r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraphImage)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            case 'list' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryList)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n   \r\n        props.handleClose()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        if (backgroundSelect === 'custom') { myClassName.backgroundColor = backgroundCustom }\r\n        else { myClassName.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { myClassName.color = colorCustom } \r\n        else { myClassName.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { myClassName.borderColor = borderColorCustom } \r\n        else { myClassName.borderColor = borderColorSelect }\r\n\r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true);  \r\n    } \r\n\r\n    const handleClose = () => {\r\n        if(!isDisableBtn)reSaveClassesSettings()\r\n        props.handleClose()\r\n    } \r\n    \r\n    \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} >  \r\n                <Modal \r\n                    open={props.open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Container Settings<OpenWithIcon/>\r\n                                </Typography>\r\n                    <FormGroup > \r\n                        <Typography  variant={'h6'} gutterBottom  >\r\n                            Add item from libs\r\n                        </Typography>\r\n                        <Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button \r\n                                        aria-controls=\"heading-menu\" \r\n                                        aria-haspopup=\"true\" \r\n                                        onClick={handleHeadingMenuClick}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Heading\r\n                                    </Button>\r\n                                </Box>\r\n                                \r\n                                <Menu\r\n                                    id=\"heading-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleHeadingMenuClose}\r\n                                >\r\n                                    <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                    <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                    <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                    <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                    <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                    <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                </Menu>\r\n\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraph');}}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Paragraph\r\n                                    </Button>\r\n                                </Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        Paragraph-Image\r\n                                    </Button>\r\n                                </Box> \r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('list', 'list');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        List\r\n                                    </Button>\r\n                                </Box> \r\n                        </Box>\r\n\r\n                    </FormGroup>\r\n\r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Settings \r\n                    </Typography>\r\n                    <FormGroup row>\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                            <Select\r\n                                labelId=\"dis-gutters-label\"\r\n                                id=\"dis-gutters-style\"\r\n                                value={settingGutter}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        \r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                            <Select\r\n                                labelId=\"fixed-label\"\r\n                                id=\"fixed-style\"\r\n                                value={settingFixed}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>  \r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup row> \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                            <Select\r\n                                labelId=\"maxWidth-label\"\r\n                                id=\"maxWidth-style\"\r\n                                value={settingMaxWidth}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-container-label\"\r\n                                id=\"inner-container-style\"\r\n                                value={settingInnerContainer}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup row> \r\n                            \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-paper-label\"\r\n                                id=\"inner-paper-style\"\r\n                                value={settingIsPaper}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    \r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Styles \r\n                    </Typography>\r\n                    <React.Fragment>\r\n                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                <TabletMacIcon/>\r\n                                <Box>   \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.8 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.8 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.8 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.8 }</b> \r\n                                    </p>     \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>  \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.5 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.5 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.5 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.5 }</b> \r\n                                    </p>        \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n                        {/* display */}\r\n                        <Box className={classes.inputGroup}>\r\n\r\n                            <Tooltip title=\"For correct margin inside conteiner recomended:   display: flex, flexDirection: column\"  >\r\n                                <IconButton>\r\n                                    <InfoOutlined/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"display-style-label\"\r\n                                        id=\"display-style\"\r\n                                        value={display}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'block'}>Block</MenuItem>  \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                                {\r\n                                    display === 'flex' &&\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"direction-style-label\"\r\n                                            id=\"direction-style\"\r\n                                            value={flexDirection}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={'row'}>Row</MenuItem>  \r\n                                            <MenuItem value={'column'}>Column</MenuItem>  \r\n                                            <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                            <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>   \r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* margin */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Top'\r\n                                        variant='filled'\r\n                                        value={margin.top}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Bottom'\r\n                                        variant='filled'\r\n                                        value={margin.bottom}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* padding */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Top\" \r\n                                        variant='filled'\r\n                                        value={padding.top}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Bottom\" \r\n                                        variant='filled'\r\n                                        value={padding.bottom}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n\r\n                        </Box>\r\n                        \r\n                        {/* bg-color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} > \r\n                                <ColorSelecter\r\n                                    label={'Background'}\r\n                                    colorSelect={backgroundSelect} \r\n                                    setColorSelect={setBackgroundSelect}\r\n                                    colorCustom={backgroundCustom}\r\n                                    setColorCustom={setBackgroundCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false}\r\n                                />  \r\n                            </Box>\r\n                        </Box>\r\n                        <Box  className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Color'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false}\r\n                                    isContrastSelect={true}\r\n                                />   \r\n                                {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                            </Box> \r\n                        </Box>\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Border Color'}\r\n                                    colorSelect={borderColorSelect} \r\n                                    setColorSelect={setBorderColorSelect}\r\n                                    colorCustom={borderColorCustom}\r\n                                    setColorCustom={setBorderColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false} \r\n                                />  \r\n                            </Box> \r\n                        </Box>\r\n                         \r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                <Select\r\n                                    labelId=\"shadow-style-label\"\r\n                                    id=\"shadow-style\"\r\n                                    value={shadow}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                    0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                    <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                    0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                    <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                    0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                </Select>\r\n                            </FormControl> \r\n                            \r\n                        </Box>\r\n                            \r\n                        {/* border */}\r\n                        <Box className={classes.inputGroup}> \r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Radius\" \r\n                                        variant='filled'\r\n                                        value={borderRadius}\r\n                                        setValue={setBorderRadius}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Width\" \r\n                                        variant='filled'\r\n                                        value={borderWidth}\r\n                                        setValue={setBorderWidth}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Box mt={5} />\r\n                        {/* <Box  className={classes.btnSave}>\r\n                            <Button\r\n                                disabled={isDisableBtn}\r\n                            \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size={'medium'} \r\n                                onClick={reSaveClassesSettings}\r\n                            >\r\n                                Save\r\n                            </Button> \r\n                        </Box> */}\r\n                        \r\n                    </React.Fragment> \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                </Modal> \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} ,\r\n            resposiveFontSize: { \r\n                [`@media (max-width: 960px)`]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.8 : 20, \r\n                    marginTop: props.className.marginTop*0.8,\r\n                    marginBottom: props.className.marginBottom*0.8\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.6 : 20,\r\n                    lineHeight : 1.2, \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n             \r\n          })\r\n    } );\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren.length > 0) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n        else {\r\n            return `(No text - ${props.data.variant})`\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent,\r\n    ButtonGroup,\r\n    FormGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n \r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n          \r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, responseValues, responseTablets, responseMobile, mobileTooltip, tabletTooltip, dialogContentUnstyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            // btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${margin.top * 0.8}px`,  \r\n                        height: `${margin.top * 0.8}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${margin.bottom * 0.8}px`,\r\n                        height: `${margin.bottom * 0.8 }px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${margin.bottom * 0.5}px`,\r\n                        height: `${margin.bottom * 0.5 }px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n            tooltip: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.primary.main\r\n            }\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n \r\n\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        // handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    const swapHeading = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const viewCorrect = props.data.classes.display !== 'block' ? `(uncorrect view for ${props.data.classes.display} display)` : ''\r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    { !isDisableBtn && \"Close to save - \" } Heading - {props.data.variant} Settings <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <InputChange\r\n                                        id={null}\r\n                                        fullWidth={true}\r\n                                        multiline={true}\r\n                                        type='text'\r\n                                        size=\"medium\" \r\n                                        label=\"Text input\"\r\n                                        variant='standard'\r\n                                        value={textInDumb}\r\n                                        setValue={setTextInDumb}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    />      \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip classes={{tooltip: classes.tooltip}}  title=\"If enabled, the type will be smaller on mobile devices and the alignment will be centered\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n                                <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                        <TabletMacIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.8 }</b>; MarginBottom: <b>{margin.bottom * 0.8 }</b> </p>   \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.8 : 20 }</b> </p>   \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                        <PhoneIphoneIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p>  \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.6 : 20 }</b>  LineHeight: <b>{1.2} </b> </p>   \r\n                                                    <p>TextAlign:  <b>center</b> </p>\r\n  \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={display}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'block'}>Block</MenuItem> \r\n                                            <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                            <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                            <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>  \r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='filled'\r\n                                                value={margin.top}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={margin.bottom}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Left'\r\n                                                variant='filled'\r\n                                                value={margin.left}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Right'\r\n                                                variant='filled'\r\n                                                value={margin.right}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top\" \r\n                                                variant='filled'\r\n                                                value={padding.top}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Bottom\" \r\n                                                variant='filled'\r\n                                                value={padding.bottom}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Left\" \r\n                                                variant='filled'\r\n                                                value={padding.left}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Right\" \r\n                                                variant='filled'\r\n                                                value={padding.right}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Background'}\r\n                                            colorSelect={backgroundSelect} \r\n                                            setColorSelect={setBackgroundSelect}\r\n                                            colorCustom={backgroundCustom}\r\n                                            setColorCustom={setBackgroundCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                            isContrastSelect={true} \r\n                                        /> \r\n                                        {\r\n                                            backgroundCustom === 'inherit' &&\r\n                                            colorSelect === 'contrast' && \r\n                                            <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>\r\n                                        } \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Font Size\" \r\n                                                variant='filled'\r\n                                                value={fontSize}\r\n                                                setValue={setFontSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Line Height (em)\" \r\n                                                variant='filled'\r\n                                                value={lineHeight}\r\n                                                setValue={setLineHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                     \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={borderRadius}\r\n                                                setValue={setBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={borderWidth}\r\n                                                setValue={setBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber} >   \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={borderColorSelect} \r\n                                                setColorSelect={setBorderColorSelect}\r\n                                                colorCustom={borderColorCustom}\r\n                                                setColorCustom={setBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                                {/* <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box> */}\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                        \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb list') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        \r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: color,   \r\n            }},  \r\n            liClass: props.data.itemsStyle,\r\n            mobileClass: {\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: props.className.marginTop === 0 ? 0 : (props.className.marginTop > 30 ? props.className.marginTop*0.6 : 15), \r\n                    marginBottom: props.className.marginBottom === 0 ? 0 : (props.className.marginBottom > 30 ? props.className.marginBottom*0.6 : 15),  \r\n                    paddingLeft: props.className.paddingLeft === 0 ? 0 : (props.className.paddingLeft > 30 ? props.className.paddingLeft*0.6 : 15)\r\n                } \r\n            }\r\n          })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n           <ul className={`${classes.myClassName} ${classes.mobileClass}`}>\r\n                {\r\n                    props.data.items.map( (item, index) => (\r\n                        <li key={index} className={classes.liClass}>\r\n                            {item}\r\n                        </li>\r\n                    ))        \r\n                }\r\n                {\r\n                    props.data.items.length === 0 &&\r\n                    <li className={classes.liClass} >No items</li>\r\n                }\r\n           </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    Grid,  \r\n    Button, \r\n    ButtonGroup, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n  \r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';   \r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled list work')\r\n\r\n    const [paddingLeft, setPaddingLeft] = React.useState( props.data.classes.paddingLeft || 15 )\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    }) \r\n     \r\n    const [colorSelect, setColorSelect] = React.useState(props.data.classes.color || 'inherit') \r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit') \r\n\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [items, setItems] = React.useState(props.data.items || [])\r\n    const [itemsPadding, setItemsPadding] = React.useState(props.data.itemsStyle.paddingBottom || [])\r\n    const [itemsListStyle, setItemsListStyle] = React.useState(props.data.itemsStyle.listStyle || 'decimal')\r\n    const [newItem, setNewItem] = React.useState('') \r\n\r\n    const mobileMarginTopComputed = margin.top === 0 ? 0 : (margin.top > 30 ? margin.top*0.6 : 15)\r\n    const mobileMarginBottomComputed = margin.bottom === 0 ? 0 : (margin.bottom > 30 ? margin.bottom*0.6 : 15)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { mtView, mbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({ \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }   \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n            movingPageBtn: {  \r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = {  \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        paddingLeft: paddingLeft,  \r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight \r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.itemsStyle = {\r\n            paddingBottom: itemsPadding, \r\n            listStyle: itemsListStyle\r\n        }\r\n        sentData.items = items\r\n        if(colorSelect === 'custom') {\r\n            sentData.classes.color = colorCustom\r\n        } else {\r\n            sentData.classes.color = colorSelect\r\n        }\r\n \r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleItemChange = (value, index) => {\r\n        let newItems = items.slice()\r\n        newItems[index] = value\r\n        setItems(newItems)\r\n        setIsDisableBtn(false)\r\n    }\r\n    const swapItem = (direction, index) => {\r\n        let newItems = items.slice() \r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex - 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex + 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const deleteItemList = (index) => { \r\n        let conf = window.confirm(\"Delete item?\");\r\n        if(conf) {\r\n            let newItems = items.slice()\r\n            newItems.splice(index, 1)\r\n             \r\n            setItems(newItems) \r\n            setIsDisableBtn(false)\r\n        } \r\n    } \r\n    const handleAddItem = () => {\r\n        let newItems = items.slice()\r\n        \r\n        newItems.push(newItem)\r\n \r\n        setItems(newItems)\r\n        \r\n        setNewItem('') \r\n        setIsDisableBtn(false)\r\n    } \r\n    const swapList = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } List Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>\r\n                                        <p>\r\n                                            MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                            MarginBottom: <b>{mobileMarginBottomComputed}</b> \r\n                                        </p> \r\n                                        <p>PaddingLeft:  <b>{paddingLeft === 0 ? 0 : (paddingLeft > 30 ? paddingLeft*0.6 : 15)}</b></p>\r\n                                    </Box>\r\n                                </Box> \r\n                            </Tooltip> \r\n                               \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>  \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Block Padding Left\" \r\n                                            variant='filled'\r\n                                            value={paddingLeft}\r\n                                            setValue={setPaddingLeft}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Item Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={itemsPadding}\r\n                                            setValue={setItemsPadding}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                </Box>\r\n                                 \r\n                            </Box>\r\n                           \r\n                                     \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup} mt={2}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl> \r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">List Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={itemsListStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setItemsListStyle((e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={'circle'}>Circle</MenuItem>\r\n                                            <MenuItem value={'disc'}>Disc</MenuItem>\r\n                                            <MenuItem value={'square'}>Square</MenuItem>\r\n                                            <MenuItem value={'decimal'}>Numbers</MenuItem>\r\n                                            <MenuItem value={'lower-alpha'}>lower-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-alpha'}>upper-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-roman'}>upper-roman</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n \r\n                                       \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >\r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"left\"\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n\r\n                            {/* items */}\r\n                            <Box className={classes.inputGroup} mt={3}>  \r\n                                {\r\n                                    items.map( (item, index) => {\r\n                                        return (\r\n                                            <Box key={index} display={'flex'} alignItems='flex-start' p={1} > \r\n                                                <InputChange\r\n                                                    id={index}\r\n                                                    fullWidth={true}\r\n                                                    multiline={true}\r\n                                                    type='text'\r\n                                                    size=\"small\" \r\n                                                    label={`Item ${index+1}`} \r\n                                                    variant='outlined'\r\n                                                    value={item}\r\n                                                    setValue={handleItemChange}\r\n                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                />  \r\n                                                <Box mr={0.5} />\r\n                                                <ButtonGroup \r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingPageBtn}\r\n                                                    >  \r\n                                                        {\r\n                                                            items.indexOf(item) !== 0 &&\r\n                                                            <Tooltip title='Get Up' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('up', index) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                        {\r\n                                                            items.indexOf(item) !== items.length - 1 &&\r\n                                                            <Tooltip title='Get Down' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('down', index) }} \r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                            \r\n                                                        <Tooltip title='Delete Item' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"secondary\"\r\n                                                                disableElevation={true} \r\n                                                                onClick={() => { deleteItemList(index) }}\r\n                                                            > \r\n                                                                <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup> \r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                } \r\n                                <Box px={1}>\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='text'\r\n                                        label={`New Item`} \r\n                                        variant=\"outlined\" \r\n                                        size='small'  \r\n                                        value={newItem}\r\n                                        onChange={ (e) => {setNewItem(e.target.value)} }     \r\n                                    />\r\n                                    <Box my={1}>\r\n                                        <Button \r\n                                            onClick={handleAddItem}\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            disabled={newItem.length > 0 ? false : true}\r\n                                        >\r\n                                            Add new item\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box mt={5} />\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` list margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` list margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                               \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}   \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                            \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete List\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes}  \r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n \r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor) \r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }}   \r\n        })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren.length !== 0 ? props.textChildren : '(No text - paragraph)'\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    ButtonGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent') \r\n\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)     \r\n\r\n        const { menu, menuTitle, responseValues, responseMobile, dialogContentUnstyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right, \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n      \r\n     \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)   \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)   \r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />     \r\n                            </Box>  \r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>   \r\n                                    <p>Paragraph don`t have any response values</p>   \r\n                                </Box>\r\n                            </Box>\r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >   \r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                        isContrastSelect={true} \r\n                                    />  \r\n                                    {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                                </Box> \r\n                                    \r\n                            </Box>\r\n\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                            </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                              \r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box> */}\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        let  imageBorderColor = getColorByPalette(theme, props.imageClassName.borderColor)\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} , \r\n            imageStyle: props.imageClassName ? {...props.imageClassName, ...{ \r\n                borderColor: imageBorderColor\r\n            }} : {} ,  \r\n            imageStabilization: {\r\n                maxWidth: '100%', \r\n                maxHeight: '100%',  \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    height: 'auto'\r\n                }, \r\n                // [theme.breakpoints.down('md')]: { \r\n                // }\r\n            },\r\n            mobileClass: {\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    textAlign: 'center', \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5,\r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n            }\r\n          })\r\n    }); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={`${classes.imageStyle} ${classes.imageStabilization}`}  alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    ButtonGroup, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { removeImage } = React.useContext(ImageContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit') \r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent') \r\n    const [imageBorderColorSelect, setImageBorderColorSelect] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderColorCustom, setImageBorderColorCustom] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n  \r\n    // eslint-disable-next-line\r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageName, setImageName] = React.useState(props.data.image.imageName || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n     \r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n \r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    const imageBorderTheme = isNoThemeColor(props.data.image.classes.borderColor)\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        if(imageBorderTheme) {  \r\n            setImageBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor, props.data.image.classes.borderColor ]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.bottom * 0.5}px`,  \r\n                        height: `${margin.bottom * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,   \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }, \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius,  \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n   \r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl,\r\n            imageName: imageName\r\n        })\r\n        if (imageBorderColorSelect === 'custom') { sentData.classes.borderColor = imageBorderColorCustom } \r\n        else { sentData.classes.borderColor = imageBorderColorSelect }\r\n\r\n\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) { \r\n            removeImage(imageName)\r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }\r\n     \r\n    \r\n    const handleImageUpload = async (e) => { \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n        \r\n        setIsLoading(false) \r\n    }\r\n\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Image Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />   \r\n                            </Box> \r\n\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>   \r\n                                        <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p> \r\n                                        <p>flexDirection: <b> column</b>; alignItems: <b>center</b> </p>  \r\n                                        <p>TextAlign:  <b>center</b> </p>     \r\n                                    </Box>\r\n                                </Box>\r\n                            </Tooltip> \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageUpload} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <InputChange\r\n                                                    id={null} \r\n                                                    fullWidth={true}\r\n                                                    type='text'\r\n                                                    size=\"small\" \r\n                                                    label=\"Image title\" \r\n                                                    variant='filled'\r\n                                                    value={imageTitle}\r\n                                                    setValue={setImageTitle}\r\n                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                /> \r\n                                                 \r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Top'\r\n                                                variant='filled'\r\n                                                value={imageMargin.top}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={imageMargin.bottom}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Left'\r\n                                                variant='filled'\r\n                                                value={imageMargin.left}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Right'\r\n                                                variant='filled'\r\n                                                value={imageMargin.right}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Typography variant={'caption'} display='block' align={\"center\"} color={'error'}>\r\n                                        !! set only width, height will set auto\r\n                                    </Typography>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Width'\r\n                                                variant='filled'\r\n                                                value={imageWidth}\r\n                                                setValue={setImageWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Height'\r\n                                                variant='filled'\r\n                                                value={imageHeight}\r\n                                                setValue={setImageHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} > \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={imageBorderColorSelect} \r\n                                                setColorSelect={setImageBorderColorSelect}\r\n                                                colorCustom={imageBorderColorCustom}\r\n                                                setColorCustom={setImageBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={imageBorderRadius}\r\n                                                setValue={setImageBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={imageBorderWidth}\r\n                                                setValue={setImageBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                             \r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                 \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                        isContrastSelect={true} \r\n                                    />  \r\n                                    {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            \r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            F = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                                 \r\n\r\n\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            \r\n                            <Box mt={5} />\r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                 */}\r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer } onClick={handleOpen}>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem } \r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n  \r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ListCreator from '../list/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n \r\n    console.log('dumb container work') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.classes.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.classes.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.classes.borderColor)\r\n\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n             myClassName: {...props.classes, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor \r\n            }} ,   \r\n            styleClass: { \r\n                [`@media (max-width: 960px)`]: { \r\n                    marginTop: props.classes.marginTop*0.8,\r\n                    marginBottom: props.classes.marginBottom*0.8, \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    marginTop: props.classes.marginTop*0.5,\r\n                    marginBottom: props.classes.marginBottom*0.5,  \r\n                },\r\n            },\r\n            noPadding : { \r\n                paddingTop: 0,  \r\n                paddingBottom: 0,\r\n                [`@media (max-width: 960px)`]: {  \r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                },\r\n            },\r\n            yesPadding : { \r\n                paddingTop: props.classes.paddingTop,  \r\n                paddingBottom: props.classes.paddingBottom,\r\n                [`@media (max-width: 960px)`]: {  \r\n                    paddingTop: props.classes.paddingTop*0.8,\r\n                    paddingBottom: props.classes.paddingBottom*0.8,\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    paddingTop: props.classes.paddingTop*0.5,\r\n                    paddingBottom: props.classes.paddingBottom*0.5,\r\n                },\r\n            }, \r\n        })\r\n    });\r\n    const classes = useStyles(); \r\n\r\n    const isPaperClassForContainer = props.settings.isPaper ? classes.noPadding : classes.yesPadding\r\n    const isPaperClassForPaper = props.settings.isPaper ? classes.yesPadding : classes.noPadding\r\n    \r\n    const renderItems = () => { \r\n        return (\r\n            modeDev ?\r\n            props.data.children.map((item) => {   \r\n                // eslint-disable-next-line\r\n                let orderFirst = props.data.children.indexOf(item) == 0 ? true : false\r\n                // eslint-disable-next-line\r\n                let orderLast = props.data.children.indexOf(item) == props.data.children.length - 1 ? true : false\r\n\r\n                switch(item.type) {  \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens} \r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )\r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )  \r\n                    default: break;\r\n                }  \r\n                return null\r\n            })\r\n            :\r\n            props.data.children.map((item) => {  \r\n                switch(item.type) { \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    default: break;\r\n                }  \r\n                return null\r\n            }) \r\n        )\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                > \r\n                    <Paper style={{paddingLeft: 15, paddingRight: 15}} className={isPaperClassForPaper}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={props.settings.innerContainer}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={props.settings.innerContainer}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                 { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\nimport ImageContext from '../../../context/imageContext/ImageContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    const {removeImage} = React.useContext(ImageContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n             \r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    zIndex: 25,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n\r\n            \r\n\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => { \r\n\r\n        let filtered = props.data.children.filter((item) => (item.id !== id))   \r\n        // save in firestore \r\n        props.reSaveContainer(props.data.id, filtered)   \r\n    }\r\n\r\n    const handleClose =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) {\r\n            let images = createArrayImages() \r\n            images.forEach( imageName => {\r\n                removeImage(imageName)\r\n            })\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    const swapChildrens = (direction, id) => {  \r\n\r\n        let newChildren = props.data.children.slice() \r\n        let activeIndex  \r\n        newChildren.map( (item) => { \r\n            if(item.id === id) {\r\n              activeIndex = newChildren.indexOf(item) \r\n            }\r\n            return 0 \r\n        }) \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newChildren.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex - 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex + 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex + 1 ] = movedItem  \r\n        } \r\n \r\n        props.reSaveContainer(props.data.id, newChildren)\r\n    }\r\n\r\n    const createArrayImages = () => {\r\n        let images = []\r\n        props.data.children.forEach( item => {\r\n            if(item.type === 'paragraphImage') {\r\n                images.push(item.image.imageName)\r\n            }\r\n        })\r\n        return images\r\n    }\r\n    createArrayImages()\r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleClose} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        handleClose={handleClose}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                        swapChildrens={swapChildrens}\r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, darken, fade } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n    \r\n    const useStyles = makeStyles( (theme) => { \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n          \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput, \r\n                    background: fade(color, 0.07), \r\n                }, \r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } ,\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('md')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 30),\r\n                }\r\n            }\r\n        } )\r\n    })\r\n \r\n    \r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className={`bulder-main-banner ${classes.styleClass}`}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={7} >\r\n                        <div className=\"bulder-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                {\r\n                                    titleSubIcon &&\r\n                                    <svg style={{fill: '#fff'}}>       \r\n                                        <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                    </svg>\r\n                                }\r\n                                \r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"bulder-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"bulder-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} > \r\n                        <div className=\"bulder-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'    \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const { removeImage } = React.useContext(ImageContext)\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n    const [iconName, setIconName] = React.useState(props.data.headingIcon.iconName || '')\r\n \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 40)\r\n    const tabletMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50)\r\n    const tabletMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, dialogContentUnstyle, \r\n            responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${tabletMarginTopComputed}px`,  \r\n                        height: `${tabletMarginTopComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px `,  \r\n                        height: `${mobileMarginTopComputed}px `,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`,  \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${tabletMarginBottomComputed}px`,  \r\n                        height: `${tabletMarginBottomComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px `,  \r\n                        height: `${mobileMarginBottomComputed}px `,\r\n                    }\r\n                } \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleImageUpload = async (e, imageType) => {  \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        if( imageType === 'mainImage')  { \r\n            removeImage(imageName)   \r\n        }\r\n        if( imageType === 'icon') {\r\n            removeImage(iconName)   \r\n        }\r\n \r\n          \r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        if( imageType === 'mainImage')  { \r\n            setImageName(generateImageName)\r\n            setImageUrl(downloadURL)  \r\n        }\r\n        if( imageType === 'icon') {\r\n            setIconName(generateImageName)\r\n            setIconUrl(downloadURL)\r\n        }\r\n          \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl,\r\n            iconName : iconName\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) { \r\n            removeImage(imageName) \r\n            removeImage(iconName) \r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Main Banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Main Banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                                <TabletMacIcon/>\r\n                                                <Box>   \r\n                                                    <p> \r\n                                                        MarginTop: <b>{tabletMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{tabletMarginBottomComputed}</b> \r\n                                                    </p>     \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button color='primary' variant={'contained'} className={classes.btnWithLabel} > \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            {\r\n                                                iconUrl &&\r\n                                                <Box ml={1}>\r\n                                                    <img src={iconUrl} alt='icon' width={35} />\r\n                                                </Box>\r\n                                            }\r\n                                            \r\n                                        </Box> \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Sub Heading'\r\n                                            variant='outlined'\r\n                                            value={subHeading}\r\n                                            setValue={setSubHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                         \r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >  \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Input Label\" \r\n                                                variant='outlined'\r\n                                                value={inputLabel}\r\n                                                setValue={setInputLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Button Label\" \r\n                                                variant='outlined'\r\n                                                value={buttonLabel}\r\n                                                setValue={setButtonLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Form Policy\" \r\n                                            variant='outlined'\r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />   \r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Form and SubHeading'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'>  \r\n                                            <Button color='primary' variant='contained' className={classes.btnWithLabel} > \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        {\r\n                                            imageUrl &&\r\n                                            <Box ml={1} maxWidth={300}>\r\n                                                <img src={imageUrl} alt='main' width={'100%'} />\r\n                                            </Box>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n  \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className={`${classes.styleClass} bulder-accordion heading`}>\r\n            <Container maxWidth={maxWidthContainer} className={classes.disableMobileGutters}>\r\n\r\n                {\r\n                    heading.length > 0 &&\r\n                    <h3> { heading } </h3> \r\n                }\r\n                \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"bulder-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"bulder-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemBody, setNewItemBody] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemBody)\r\n        setNewItemTitle('')\r\n        setNewItemBody('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} mt={3} mb={2}>\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new item</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item head\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item body\" \r\n                            variant=\"outlined\" \r\n                            value={newItemBody}\r\n                            onChange={(e) => { setNewItemBody(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Item\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter' \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n \r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\" \r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg')\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        \r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, dialogContentUnstyle, \r\n            containerWrapper, responseValues ,responseMobile , mobileTooltip \r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   } ,\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItemHead = (head, index) => { \r\n        const newItems = items.slice()\r\n        newItems[index].head = head \r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const handleUpdateItemBody = (body, index) => { \r\n        const newItems = items.slice() \r\n        newItems[index].body = body\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = (head, body) => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: head,\r\n            body: body\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const conf = window.confirm('Delete item?')\r\n        if(conf) {\r\n            const newItems = items.slice()\r\n            newItems.splice(index, 1) \r\n    \r\n            setItems(newItems)\r\n            setIsDisableBtn(false); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}> \r\n            <Tooltip  title={`accordion margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`accordion margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >   \r\n                <Box className={classes.btnDrawerStyle}> \r\n\r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Accordion Settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                             \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={2}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                                \r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label='Head'\r\n                                                            variant='outlined'\r\n                                                            value={item.head}\r\n                                                            setValue={handleUpdateItemHead}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />\r\n                                                        <Box mt={1} />\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label='Body'\r\n                                                            variant='outlined'\r\n                                                            value={item.body}\r\n                                                            setValue={handleUpdateItemBody}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        /> \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <AddItem addItem={addItem} />\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Accordion'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />\r\n                                    </Box>\r\n \r\n                                    <Box mt={5} />  \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                     \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box, darken, fade } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload  \r\n    let color = props.data.color || 'primary'\r\n    let colorFocusInput\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n \r\n        return ({\r\n            svg: {\r\n                fill: colorFocusInput\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput\r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n            },\r\n            button: {\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                color: '#fff',\r\n                 \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${color} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }, \r\n            styleClass: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),  \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),  \r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className={`bulder-contact ${classes.styleClass}`}> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`bulder-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"bulder-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, \r\n    ButtonGroup, makeStyles, Modal, DialogContent, Switch, \r\n    FormControlLabel, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) { \r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.mapFrame === null ? false : true)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.color])\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n        \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData)  \r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Contact Map margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Contact Map margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Contacts Map Settings  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p>  \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                         \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Location'\r\n                                            variant='outlined'\r\n                                            value={location}\r\n                                            setValue={setLocation}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Phone'\r\n                                            variant='outlined'  \r\n                                            value={phone}\r\n                                            setValue={setPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} > \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Comment Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputComment}\r\n                                            setValue={setInputComment}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >       \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                  \r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={true} \r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Map Frame\" \r\n                                                        variant='outlined'  \r\n                                                        value={mapFrame}\r\n                                                        setValue={setMapFrame}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />  \r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button and Inputs'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n  \r\n                                    <Box my={5} />\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, darken, fade } from '@material-ui/core'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext' \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext) \r\n      \r\n    const imageUrl = props.data.image\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    // let imageName = props.data.imageName\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    let colorButton = props.data.colorButton || '#f00'\r\n   \r\n    const useStyles = makeStyles((theme) => {   \r\n\r\n        colorButton = getColorByPalette(theme, colorButton) \r\n\r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(colorButton, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth={maxWidthContainer} >\r\n                <div className={`${classes.styleClass} bulder-about heading`}>\r\n                    <Grid container> \r\n                        <Grid item xs={12} md={6} >\r\n                            <div className=\"bulder-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"bulder-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers' \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n      \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorButton)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem,  dialogContentUnstyle, \r\n            containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip\r\n        } = commonClasses \r\n\r\n        \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave, \r\n            btnWithLabel: btnWithLabel,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n  \r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => { \r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf)  {\r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n           \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`about margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`about margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }  Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />   \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />  \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'right'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { darken, fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n  \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        colorMain = getColorByPalette(theme, colorMain) \r\n \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorMain, 0.5) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    paddingTop: \".4em\",\r\n                    paddingBottom: \".4em\",\r\n                    '&:hover' : {\r\n                        backgroundColor: colorMain , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorMain, 0.3) ,  \r\n                    }\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0),  \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            },\r\n            styleClass: {\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={`${classes.containerColored} ${classes.styleClass}`}> \r\n            <Container maxWidth={maxWidthContainer} > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorMain)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, dialogContentUnstyle,\r\n            btnDrawerItem, containerWrapper , responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Action Line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Action Line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Action Line \r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Heading Size\"\r\n                                                variant='outlined'\r\n                                                value={headingSize}\r\n                                                setValue={setHeadingSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>{ headingSize*0.65 }</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n \r\n                                    </Box>\r\n                                   \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                            <ColorSelecter\r\n                                                label={'Color for Block'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'top'}\r\n                                                noInherit={true}\r\n                                            />\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />   \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React , {useState} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box\r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isBotton = rows.length - visibleRows > 0 ? true : false  \r\n    const [isBottonClick, setIsBottonClick] = useState(false)\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        \r\n        mainColor = getColorByPalette(theme, mainColor)\r\n \r\n        return ({\r\n            table: {\r\n                minWidth: 200,\r\n            },\r\n            \r\n            tableCell: {\r\n                paddingTop: theme.spacing(2), \r\n                paddingBottom: theme.spacing(2),  \r\n                [theme.breakpoints.down('md')]: { \r\n                    paddingTop: theme.spacing(1), \r\n                    paddingBottom: theme.spacing(1), \r\n                },\r\n            },\r\n            tableButtonCell: { \r\n                maxWidth: 300,\r\n                width: 300,\r\n                [theme.breakpoints.down('md')]: {\r\n                    width: 'auto', \r\n                },\r\n            },\r\n            tableButton: { \r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                fontSize: 14, \r\n                lineHeight: 1.2, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    padding: theme.spacing(1), \r\n                },\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsBottonClick(!isBottonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(!isBottonClick)\r\n        return (\r\n            rows.map((row, index) => {\r\n                if(index < visibleRows)\r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n                return false\r\n            })\r\n        )\r\n        if(isBottonClick)\r\n        return (\r\n            rows.map((row, index) => { \r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n            })\r\n        )\r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true}  >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableCell}>\r\n                {row.price}\r\n            </TableCell> \r\n            <TableCell align=\"right\" className={`${classes.tableButtonCell} ${classes.tableCell}`}> \r\n                <Button \r\n                    variant='contained'   \r\n                    className={classes.tableButton}\r\n                    onClick={() => { handleOpenModal(row.name) }}\r\n                >\r\n                    { buttonText }\r\n                </Button>\r\n            </TableCell>\r\n        </StyledTableRow>\r\n    )\r\n    const renderBotton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isBottonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth={maxWidthContainer} className={`${classes.tableContainer} heading`} >\r\n            {\r\n                heading.length > 0 &&\r\n                <h3> { heading } </h3> \r\n            }\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={`${classes.tableHeader} ${classes.tableCell}` }\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            <TableCell align=\"right\" className={`${classes.tableHeader} ${classes.tableCell}` } ></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            renderRows()\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isBotton &&\r\n                renderBotton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemPrice, setNewItemPrice] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemPrice)\r\n        setNewItemTitle('')\r\n        setNewItemPrice('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new row</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item title\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item price\" \r\n                            variant=\"outlined\" \r\n                            value={newItemPrice}\r\n                            onChange={(e) => { setNewItemPrice(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Row\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useState} from 'react'\r\n\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nconst ChangeItem = (props) => {\r\n    const [name, setName] = useState(props.item.name)\r\n    const [price, setPrice] = useState(props.item.price)\r\n \r\n    const handleSave = () => { \r\n        props.handleRowChange(props.index, name, price)\r\n    }\r\n\r\n    return (\r\n        <Box display='flex' alignItems=\"center\" width=\"100%\">\r\n           \r\n            <Box mr={1} flexGrow={1}>\r\n                <TextField \r\n                    fullWidth\r\n                    size='small'\r\n                    type='text'\r\n                    label={`Table Row Name ${props.index + 1}`}\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    onChange={(e) => { \r\n                        setName(e.target.value)\r\n                    }}\r\n                    onBlur={handleSave}\r\n                />\r\n            </Box>\r\n            <Box >\r\n                <TextField \r\n                    fullWidth\r\n                    size='small'\r\n                    type='text'\r\n                    label={`Table Row Price ${props.index + 1}`}\r\n                    variant=\"outlined\"\r\n                    value={price}\r\n                    onChange={(e) => { \r\n                        setPrice(e.target.value)\r\n                    }}\r\n                    onBlur={handleSave}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeItem\r\n","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\"\r\nimport ChangeItem from \"./ChangeItem\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n \r\n    const [textButton,  setTextButton] = React.useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    const [rows, setRows] = React.useState(props.data.rows)\r\n    const [tableRow, setTableRow] = React.useState(props.data.tableRow)\r\n\r\n    const [visibleRows, setVisibleRows] = React.useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = React.useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = React.useState(props.data.visibleBottonTextClick || 'Show less') \r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper ,\r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle} = commonClasses   \r\n\r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,  \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeTable = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleTableHeadChange = (value, index) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChange = (index, name, price) => {\r\n        const newRows = rows.slice()\r\n\r\n        newRows[index].name = name\r\n        newRows[index].price = price\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false);  \r\n    }\r\n    const addRow = (title, body) => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: title, \r\n            price: body \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Table margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Table margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        \r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Text Button\"\r\n                                            variant='outlined'\r\n                                            value={textButton}\r\n                                            setValue={setTextButton}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <InputChange\r\n                                                            id={index} \r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item}\r\n                                                            setValue={handleTableHeadChange}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n  \r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Row' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n                                                        {/* <InputChange\r\n                                                            id={null}\r\n                                                            fullWidth={false}\r\n                                                            type='number'\r\n                                                            size=\"small\" \r\n                                                            label='Margin Top'\r\n                                                            variant='outlined'\r\n                                                            value={marginTop}\r\n                                                            setValue={setMarginTop}\r\n                                                            setIsDisableBtn={setIsDisableBtn}\r\n                                                            direction='row'\r\n                                                        />   */}\r\n                                                        <ChangeItem handleRowChange={handleRowChange} item={item} index={index} />\r\n\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n                                    \r\n                                    <AddItem addItem={addRow} />\r\n                                     \r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <ColorSelecter\r\n                                            label={'Color for Table'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label={`Quantity to show`}\r\n                                                variant='outlined'\r\n                                                value={visibleRows}\r\n                                                setValue={setVisibleRows}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label={`Text for botton`}\r\n                                                variant='outlined'\r\n                                                value={visibleBottonText}\r\n                                                setValue={setVisibleBottonText}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <InputChange\r\n                                            id={null}  \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label={`Text for botton clicked`}\r\n                                            variant='outlined'\r\n                                            value={visibleBottonTextClick}\r\n                                            setValue={setVisibleBottonTextClick}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                        \r\n                                    </Box>\r\n                                                \r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, makeStyles, Button, Box, Grid, fade, darken } from '@material-ui/core'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport '../../../assets/style/lineForm.scss' \r\n\r\nfunction DumbComponent(props) {  \r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('') \r\n   \r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone \r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n      \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    let color = props.data.color\r\n    let colorFocusInput\r\n  \r\n    const useStyles = makeStyles((theme) => {    \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n\r\n        return ({ \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper,  \r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            },\r\n            lineDecor: {\r\n                position: \"absolute\",\r\n                top: 8,\r\n                left: 8,\r\n                right: 8,\r\n                bottom: 8,\r\n                border: `1px solid ${fade(color, 0.25)}`,\r\n                borderRadius: 4,\r\n            },\r\n            input: {\r\n                width: '100%',\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: 'inherit',\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                height: 50,\r\n                paddingLeft: 45,\r\n                paddingRight: 25, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput\r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center' ,\r\n                    paddingLeft: 20,\r\n                    paddingRight: 20, \r\n                }\r\n            },\r\n            button: {\r\n                width: '100%',\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                height: 50,\r\n                textTransform: 'inherit', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \r\n                color: theme.palette.getContrastText(color),\r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: 0,  \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.getContrastText(theme.palette.background.paper),\r\n                    }\r\n                }, \r\n            }, \r\n            gridItem: {\r\n                paddingRight: theme.spacing(1),\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginBottom: 10,  \r\n                }\r\n            },\r\n            policy: {\r\n                height: \"100%\", \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                fontSize: 12,\r\n                lineHeight: 1.2,\r\n                fontWeight: 300, \r\n                [theme.breakpoints.down('md')]: {\r\n                    marginTop: 10, \r\n                    textAlign: 'center', \r\n                    justifyContent: 'center'\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName,  \r\n            place: 'line Form',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('') \r\n\r\n    }\r\n    return ( \r\n        <div className={classes.itemBackground}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className=\"line-form\"> \r\n                    <Box className={classes.lineDecor} ></Box>\r\n                    {\r\n                        heading.length > 0 &&\r\n                        <h5>\r\n                            {heading}\r\n                        </h5>\r\n                    }\r\n                    {\r\n                        paragraph.length > 0 &&\r\n                        <p>\r\n                            {paragraph}\r\n                        </p>\r\n                    } \r\n\r\n                    <form onSubmit={handleSubmit} style={{position: 'relative', zIndex: 5}}>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name={`name-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputName} \r\n                                    value={formName}\r\n                                    onChange={(e) => {setFormName(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"tel\" \r\n                                    name={`phone-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputPhone} \r\n                                    value={formPhone}\r\n                                    onChange={(e) => {setFormPhone(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4} lg={3} className={classes.gridItem}>\r\n                                <Button \r\n                                    type=\"submit\"\r\n                                    className={classes.button} \r\n                                >\r\n                                    <span>\r\n                                       { buttonText}\r\n                                    </span>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={3} >\r\n                                <span className={classes.policy}>\r\n                                    { policy }\r\n                                </span> \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                    </form>\r\n                </div> \r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, ButtonGroup, makeStyles, Modal, DialogContent, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n \r\n    const [heading, setHeading] = React.useState(props.data.heading || '')\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '') \r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom )\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if (colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.color])\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n     \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n         \r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, dialogContentUnstyle, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)  \r\n        newData.heading = heading \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone  \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy  \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Form line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Form line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Form Line Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Form line  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    \r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select> \r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                      \r\n                                    <Box mt={2} >   \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>  \r\n                                    <Box mt={2} >        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >      \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        />\r\n                                        \r\n                                    </Box>\r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }  \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState} from 'react'\r\n  \r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles, Typography, Container, Box, fade } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n\r\n    let history = useHistory();\r\n    \r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({  \r\n            swiper: {\r\n                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                    }\r\n                },  \r\n            },\r\n            activeSlide: {\r\n                cursor: 'pointer', \r\n                '&:hover': {\r\n                    '& $slideImg': {\r\n                        transform: \"scale(1.03)\"\r\n                    },\r\n                    '& $slideTitle': { \r\n                        backgroundColor: theme.palette.background.default\r\n                    },\r\n                }\r\n            }, \r\n            slide: {\r\n                position: 'relative',  \r\n                height: slideHeight,   \r\n                overflow: 'hidden',    \r\n            },\r\n            slideBox: {\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }, \r\n            slideImg: {\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n            },\r\n            slideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: '3vw', \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2), \r\n                borderBottom: `2px solid ${color}`,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 20\r\n                }\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 300, \r\n                    marginLeft: spaceBetween,\r\n                    marginRigth: spaceBetween,\r\n                    marginBottom: spaceBetween, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 0, \r\n                        marginRight: 0, \r\n                        maxWidth: '100%',   \r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n     \r\n  \r\n    React.useEffect(() => {   \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('swiper resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current.clientWidth\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n \r\n    const handleSlideClick = (slide) => {\r\n        if(slide.isButton) {\r\n            handleOpen(slide.targetButton)\r\n        }\r\n        if(slide.isUrl) {\r\n            history.push(`/${slide.url}`) \r\n        }\r\n    }\r\n\r\n    const renderSlide = (slide) => (\r\n        <SwiperSlide \r\n            key={slide.imageUrl} \r\n            ref={slideRef} \r\n            className={`${classes.slide} ${(slide.isButton || slide.isUrl) ? classes.activeSlide : '' } `}\r\n            onClick={() => { handleSlideClick(slide) }}\r\n        >\r\n            <Box className={classes.slideBox}>\r\n                <Box \r\n                    style={{backgroundImage: `url(${slide.imageUrl})`}}\r\n                    className={classes.slideImg}\r\n                />\r\n                {\r\n                    slide.title.length > 0 &&\r\n                    <Typography\r\n                        component='h6'\r\n                        className={classes.slideTitle}\r\n                    >\r\n                        {slide.title}\r\n                    </Typography>\r\n                }\r\n                \r\n            </Box>\r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,  \r\n    Typography, \r\n    makeStyles\r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newImageName, setNewImageName] = React.useState('')\r\n    const [newImageUrl, setNewImageUrl] = React.useState('')\r\n    const [newImageTitle, setNewImageTitle] = React.useState('')\r\n\r\n    const handleImageUpload = async (e) => { \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setNewImageUrl(downloadURL)\r\n        setNewImageName(generateImageName)   \r\n    }\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newImageUrl, newImageName, newImageTitle)\r\n        setNewImageName('')\r\n        setNewImageUrl('') \r\n        setNewImageTitle('') \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n            <Button color='primary' variant='contained' className={props.btnWithLabel}  >\r\n                <label htmlFor='image-input-label'>\r\n                    Set image\r\n                </label>\r\n                <input\r\n                    id=\"image-input-label\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {  handleImageUpload(e) }}\r\n                    style={{\r\n                    display: \"none\"\r\n                }}/>\r\n            </Button> \r\n            <Box ml={2} display='inline-block'>\r\n                <Typography variant='caption' > Image: { newImageName.replace(`-${props.id}`, '') }</Typography>\r\n            </Box>\r\n            <Box my={1}>\r\n                <TextField \r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Title'\r\n                    variant=\"outlined\"\r\n                    value={newImageTitle}\r\n                    onChange={(e) => { setNewImageTitle(e.target.value) }}\r\n                />\r\n                <Box my={1}>\r\n                    <Button\r\n                        disabled={newImageName !== '' ? false : true }\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent, \r\n    fade, \r\n    FormControlLabel, \r\n    Switch\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\nimport CategoryContext  from '../../../context/headerContext/CategoryContext'\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n    const { categories } = React.useContext(CategoryContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const [imageForDelete, setImageForDelete] = React.useState([])\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-block', \r\n                width: 250, \r\n                height: 250, \r\n                position: 'relative', \r\n                \"& img\": {\r\n                    width: '100%', \r\n                    height: '100%'\r\n                },\r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: 14, \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2)\r\n            }, \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        if(imageForDelete.length > 0) {\r\n            imageForDelete.forEach( name => {\r\n                removeImage(name)\r\n            })\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n        setImageForDelete([])\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  { \r\n            let imgArray = []\r\n            slides.forEach( slide => {\r\n                if(slide.imageName !== 'ImageExample') imgArray.push(slide.imageName)\r\n            })\r\n            if(imgArray.length > 0) {\r\n                imgArray.forEach( name => {\r\n                    removeImage(name)\r\n                })\r\n            }\r\n\r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideTitle = (title, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].title = title \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsUrl = (value, index) => { \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].isUrl = !value \r\n        newSlides[index].isButton = false \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeUrl = (value, index) => { \r\n        console.log(value)\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].url = value  \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsButton = (value, index) => { \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].isButton = !value \r\n        newSlides[index].isUrl = false\r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsButtonTarget = (value, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].targetButton = value \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false) \r\n    }\r\n\r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => {\r\n        const newImageForDelete = imageForDelete.slice()\r\n        const newSlides = slides.slice()\r\n        const deletedImageName = newSlides[index].imageName\r\n\r\n        if(deletedImageName !== 'imageExample') newImageForDelete.push(deletedImageName)\r\n\r\n        newSlides.splice(index, 1)\r\n        setSlides(newSlides)\r\n        setImageForDelete(newImageForDelete)\r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n    const addSlide = ( url, name, title ) => {\r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            imageUrl: url, \r\n            imageName: name, \r\n            title: title, \r\n            isLink: false, \r\n            url: \"\",\r\n            isButton: false, \r\n            targetButton: \"\"\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {  \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>\r\n                    {\r\n                        !item.isUrl &&\r\n                        <React.Fragment>\r\n                            <FormControlLabel\r\n                                control={\r\n                                        <Switch checked = { item.isButton }\r\n                                            onChange = { () => {handleChangeIsButton(item.isButton, index)} }\r\n                                            name={`checkedB-${index}`} \r\n                                            color = \"primary\"\r\n                                        />\r\n                                    }\r\n                                label=\"Set Modal Button\"\r\n                            /> \r\n                            {\r\n                                item.isButton &&  \r\n                                <Box my={1}>  \r\n                                    <InputChange\r\n                                        id={index}\r\n                                        fullWidth={true}\r\n                                        type='text'\r\n                                        size=\"small\"  \r\n                                        label=\"Target for Modal\"\r\n                                        variant='outlined'\r\n                                        value={item.targetButton}\r\n                                        setValue={handleChangeIsButtonTarget}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    />  \r\n                                </Box> \r\n                            }\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        !item.isButton &&\r\n                        <React.Fragment>\r\n                            <FormControlLabel\r\n                                control={\r\n                                        <Switch checked = { item.isUrl }\r\n                                            onChange = { () => {handleChangeIsUrl(item.isUrl, index)} }\r\n                                            name={`checkedB-${index}`} \r\n                                            color = \"primary\"\r\n                                        />\r\n                                    }\r\n                                label=\"Set Link\"\r\n                            /> \r\n                            {\r\n                                item.isUrl &&  \r\n                                <Box my={1}> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'    \r\n                                        // style={{width: '100%'}}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id={`url-${index}`}>Choice page</InputLabel>\r\n                                        <Select\r\n                                            labelId={`url-${index}`}\r\n                                            id=\"url-select\"\r\n                                            value={item.url}  \r\n                                            fullWidth\r\n                                            style={{maxWidth: '100%'}}\r\n                                            onChange={(e) => {setIsDisableBtn(false); handleChangeUrl(e.target.value, index) }}\r\n                                        >   \r\n                                            {\r\n                                                renderLinkList()\r\n                                            }\r\n                                             \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box> \r\n                            }\r\n                        </React.Fragment>\r\n                    }\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box>\r\n                        <img src={item.imageUrl} alt={item.imageName}/>\r\n                        <Box className={classes.dumbSlideTitle}>  \r\n                            <InputChange\r\n                                id={index}\r\n                                fullWidth={true}\r\n                                type='text'\r\n                                size=\"small\"  \r\n                                variant='outlined'\r\n                                value={item.title}\r\n                                setValue={handleSlideTitle}\r\n                                setIsDisableBtn={setIsDisableBtn} \r\n                            /> \r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n\r\n    const renderLinkList = () => {\r\n        let links = []\r\n        categories.forEach( item => { \r\n            links.push(item)\r\n            if(item.pages.length > 0) {\r\n                item.pages.forEach( innerItem => {\r\n                    let page = JSON.parse(JSON.stringify(innerItem))\r\n                    page.categorySlug = item.slug\r\n                    links.push(page)\r\n                })\r\n            }\r\n        })\r\n\r\n        return links.map( link => {\r\n            switch(link.type) {\r\n                case('category') : {\r\n                    return <MenuItem key={link.id} value={link.slug}>{link.title } - { link.slug}</MenuItem> \r\n                }\r\n                case('page'): {\r\n                    return <MenuItem key={link.id} value={`${link.categorySlug}/${link.slug}`}>{link.title } - {`${link.categorySlug}/${link.slug}`}</MenuItem>\r\n                }\r\n                default: break;\r\n            } \r\n            return false\r\n        }) \r\n    }\r\n      \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Swiper margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Swiper margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Swiper Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Swiper\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                     \r\n                                    <Box mb={2} display='flex'> \r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Slides Per View Desktop\"\r\n                                                variant='outlined'\r\n                                                value={slidesPerView}\r\n                                                setValue={setSlidesPerView}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Slides Per View Tablet\"\r\n                                                variant='outlined'\r\n                                                value={slidesPerViewTablet}\r\n                                                setValue={setSlidesPerViewTablet}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Slides Per View Mobile\"\r\n                                                variant='outlined'\r\n                                                value={slidesPerViewMobile}\r\n                                                setValue={setSlidesPerViewMobile}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />   \r\n                                        </Box>\r\n                                        \r\n                                    </Box>\r\n                                    <Box mb={2} display='flex'>\r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Space Between\"\r\n                                                variant='outlined'\r\n                                                value={spaceBetween}\r\n                                                setValue={setSpaceBetween}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            /> \r\n                                        </Box>\r\n                                        <Box>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Speed (ms)\"\r\n                                                variant='outlined'\r\n                                                value={speed}\r\n                                                setValue={setSpeed}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box my={2} display='flex'>\r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change Loop, Slides Per View, Space Between settings you need to reloading page\" >\r\n                                                <IconButton>\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'    \r\n                                                style={{minWidth: 200}}\r\n                                            >\r\n                                                <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"align-select-label\"\r\n                                                    id=\"align-select\"\r\n                                                    value={loop}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                >\r\n                                                    <MenuItem value={true}>True</MenuItem>\r\n                                                    <MenuItem value={false}>False</MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                style={{minWidth: 200}} \r\n                                            >\r\n                                                <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"align-select-label\"\r\n                                                    id=\"align-select\"\r\n                                                    value={freeMode}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                >\r\n                                                    <MenuItem value={true}>True</MenuItem>\r\n                                                    <MenuItem value={false}>False</MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                        <Box>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'    \r\n                                            >\r\n                                                <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"maxWidth-label\"\r\n                                                    id=\"maxWidth-style\"\r\n                                                    value={maxWidthContainer}\r\n                                                    style={{minWidth: 180}}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={false}>False</MenuItem>\r\n                                                    <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                    <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                    <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                    <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                    <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n\r\n                                     \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Arrows'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} btnWithLabel={classes.btnWithLabel} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Container, Grid, Box, Button, darken, fade } from '@material-ui/core'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading  \r\n    const paragraph = props.data.paragraph   \r\n     \r\n    const minHeight =  props.data.minHeight \r\n    const imageUrl =  props.data.imageUrl  \r\n \r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorButton = props.data.colorButton || '#f00'\r\n    let colorText = props.data.colorText || 'inherit'\r\n\r\n    const paddingVertical = props.data.paddingVertical  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n \r\n    const useStyles = makeStyles((theme) => {   \r\n        colorButton = getColorByPalette(theme, colorButton) \r\n        colorText = getColorByPalette(theme, colorText) \r\n\r\n             \r\n        return ({ \r\n            bannerBackground: {\r\n                backgroundColor: fade(theme.palette.primary.main, 0.3), \r\n                backgroundImage: `url(${imageUrl})`, \r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            bannerContent: {\r\n                display: 'flex',\r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                paddingTop: paddingVertical,\r\n                paddingBottom: paddingVertical,\r\n                minHeight: minHeight, \r\n                maxHeight: \"100vh\", \r\n                [theme.breakpoints.down('sm')]: { \r\n                    paddingTop: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20), \r\n                    paddingBottom: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20),\r\n                }\r\n            },\r\n            heading: {  \r\n                marginBottom: theme.spacing(3), \r\n                textAlign: 'center',  \r\n                color: colorText\r\n            },\r\n            paragraph: {  \r\n                marginTop: -10, \r\n                marginBottom: 20,  \r\n                lineHeight: 1.5, \r\n                fontWeight: 400, \r\n                textAlign: 'center',  \r\n                fontSize: 15 , \r\n                color: colorText,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: 0, \r\n                    lineHeight: 1.1\r\n                }\r\n            },\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: 14,  \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorButton, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorButton, 0.2) , \r\n                    }\r\n                }, \r\n            },\r\n             \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (  \r\n        <div className={classes.bannerBackground}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Box className={classes.bannerContent} > \r\n                    <Grid item xs={12} sm={6} className=\"info heading\">\r\n                        { heading.length > 0 && <h3 className={classes.heading}>{heading}</h3> }\r\n                        { paragraph.length > 0 && <p className={classes.paragraph} > {paragraph} </p> } \r\n                        {\r\n                                isButton && \r\n                                <Box display={'flex'} justifyContent='center'>\r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button>\r\n                                </Box> \r\n                            }\r\n                    </Grid> \r\n                </Box> \r\n            </Container>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) { \r\n    \r\n    const { removeImage } = React.useContext(ImageContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)  \r\n    const [minHeight, setMinHeight] = React.useState(props.data.minHeight)  \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.imageUrl)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [colorTextSelect,  setColorTextSelect] = React.useState(props.data.colorText || 'inherit')\r\n    const [colorTextCustom, setColorTextCustom] = React.useState(props.data.colorText || 'inherit') \r\n\r\n    const [paddingVertical, setPaddingVertical] = React.useState(props.data.paddingVertical || 80)\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 0)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    const paddingVerticalComputed = paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20)\r\n \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    \r\n    const colorButtonTheme = isNoThemeColor(props.data.colorButton)\r\n    const colorTextTheme = isNoThemeColor(props.data.colorText)\r\n\r\n    React.useEffect(() => {\r\n        if(colorButtonTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        if(colorTextTheme) {  \r\n            setColorTextSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.colorButton, props.data.colorText])  \r\n   \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel , \r\n             responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle} = commonClasses \r\n        \r\n        const { mtView, mbView, ptView, pbView  } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $ptView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $pbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.paragraph = paragraph   \r\n        newData.minHeight = minHeight   \r\n        newData.isButton = isButton   \r\n        newData.textButton = textButton   \r\n        newData.targetButton = targetButton     \r\n        newData.imageUrl = imageUrl   \r\n        newData.imageName = imageName\r\n        newData.paddingVertical = paddingVertical\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        if (colorTextSelect === 'custom') {\r\n            newData.colorText = colorTextCustom\r\n        } else {\r\n            newData.colorText = colorTextSelect\r\n        }\r\n        \r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) { \r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` banner padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` banner padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Banner Settings ' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                         { !isDisableBtn && \"Close to save - \" }  Settings Banner\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Min Height for block\"\r\n                                                variant='outlined'\r\n                                                value={minHeight}\r\n                                                setValue={setMinHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top/Bottom\"\r\n                                                variant='outlined'\r\n                                                value={paddingVertical}\r\n                                                setValue={setPaddingVertical}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />    \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        Padding Top/Bottom: <b>{paddingVerticalComputed }</b> ; MinHeight: <b>{minHeight}</b>\r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Text'}\r\n                                            colorSelect={colorTextSelect} \r\n                                            setColorSelect={setColorTextSelect}\r\n                                            colorCustom={colorTextCustom}\r\n                                            setColorCustom={setColorTextCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                   \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            /> \r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box> \r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'top'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n \r\n                                   \r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ?\r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                : \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState} from 'react'\r\n  \r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles, Typography, Container, Box, darken } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n\r\n    let history = useHistory(); \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n         \r\n        return ({  \r\n            swiper: {                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                    }\r\n                },  \r\n            },\r\n            \r\n            slide: { \r\n                boxSizing: 'border-box !important', \r\n                position: 'relative',   \r\n                height: slideHeight > 300 ? 300 : (slideHeight - 30) ,  \r\n                overflow: 'hidden',  \r\n                cursor: 'pointer',   \r\n                backgroundColor: theme.palette.background.paper,\r\n            },\r\n            slideBox: {\r\n                overflow: 'hidden', \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                maxWidth: '100%', \r\n                height: \"100%\",\r\n                padding: 15,\r\n                boxShadow: theme.shadows['10'], \r\n                borderRadius: theme.shape.borderRadius, \r\n                transition: `${theme.transitions.duration.standard}ms ${theme.transitions.easing.easeInOut}`,\r\n                '&:hover': { \r\n                    // backgroundColor: color, \r\n                    boxShadow: theme.shadows[\"2\"], \r\n                    '& $slideImg': {\r\n                        // width: 500, \r\n                        // height: 500, \r\n                        \r\n                        // backgroundColor: theme.palette.getContrastText(color), \r\n                        \"& svg\": { \r\n                            // fill: color\r\n                        }, \r\n                        \"&::after\": {\r\n                            transform: 'scale(10)'\r\n                        },\r\n                    },\r\n                    '& $slideTitle': {\r\n                        color: theme.palette.getContrastText(color)\r\n                    } \r\n                }\r\n\r\n            }, \r\n            slideImg: { \r\n                display: 'flex', \r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                position: 'relative', \r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: '50%',  \r\n                marginTop: 10, \r\n                marginBottom: 10, \r\n                // backgroundColor: color, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                \"&::after\": { \r\n                    position: 'absolute',\r\n                    zIndex: 3, \r\n                    top: -10, \r\n                    left: -10,  \r\n                    content: \"''\", \r\n                    width: 90, \r\n                    height: 90, \r\n                    borderRadius: '50%',  \r\n                    backgroundColor: color, \r\n                    transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                },\r\n                '& span': { \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                },\r\n                \"& svg\": {\r\n                    position: 'relative', \r\n                    zIndex: 10,  \r\n                    width: 60,\r\n                    height: 60,\r\n                    fill: theme.palette.getContrastText(color)\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: 40, \r\n                    height: 40,\r\n                    \"&::after\": {   \r\n                        width: 60, \r\n                        height: 60,  \r\n                    },\r\n                    \"& svg\": {  \r\n                        width: 30,\r\n                        height: 30, \r\n                    },\r\n                }\r\n                 \r\n            },\r\n            slideTitle: { \r\n                position: 'relative', \r\n                zIndex: 15, \r\n                fontSize: 18, \r\n                lineHeight: 1.1,  \r\n                textAlign: 'center', \r\n                padding: theme.spacing(1, 2),  \r\n                marginTop: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                width: \"100%\", \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16\r\n                }\r\n            },\r\n            slideBtn: {\r\n                backgroundColor: color, \r\n                color: theme.palette.getContrastText(color), \r\n                '&:hover': {\r\n                    backgroundColor: darken(color, 0.3), \r\n                }\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 200, \r\n                    marginLeft: spaceBetween,\r\n                    marginRight: spaceBetween,\r\n                    marginBottom: spaceBetween*2, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 10, \r\n                        marginRight: 10, \r\n                        marginBottom: 20, \r\n                        // maxWidth: '100%',   \r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n    \r\n     \r\n    React.useEffect(() => {  \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('blocks resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current.clientWidth\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n \r\n    const handleSlideClick = (slide) => { \r\n        history.push(`/${slide.url}`)  \r\n        // console.log(slide)\r\n    }\r\n\r\n    const renderSlide = (slide) => (\r\n        <SwiperSlide \r\n            key={slide.id} \r\n            ref={slideRef} \r\n            className={`${classes.slide}`}\r\n            onClick={() => { handleSlideClick(slide) }}\r\n        >\r\n            <Box className={classes.slideBox}> \r\n                <Box className={classes.slideImg}>\r\n                    <span dangerouslySetInnerHTML={{__html: slide.svg}}></span>\r\n                </Box> \r\n                <Typography\r\n                    component='h6'\r\n                    className={classes.slideTitle}\r\n                >\r\n                    {slide.title} \r\n                </Typography> \r\n            </Box>\r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,  \r\n    Typography, \r\n    FormControl, \r\n    InputLabel, \r\n    Select, \r\n    makeStyles\r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newSvg, setNewSvg] = React.useState('') \r\n    const [idActive, setIdActive] = React.useState('') \r\n \r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newSvg, idActive)\r\n        setNewSvg('') \r\n        setIdActive('')\r\n    }\r\n    const handleChangeUrl = (id) => {  \r\n\r\n        console.log(id)\r\n        setIdActive(id)\r\n        // let newSlides = slides.slice()\r\n \r\n        // let activeItem\r\n        // categories.forEach( item => {\r\n        //     if(item.id === id) activeItem = item\r\n        //     else {\r\n        //         if(item.pages.length > 0) {\r\n        //             item.pages.forEach(innerItem => {\r\n        //                 if(innerItem.id === id) activeItem = innerItem\r\n        //             })\r\n        //         }\r\n        //     }\r\n        // })\r\n \r\n        // console.log(activeItem)\r\n \r\n        // newSlides[index].name = activeItem.title\r\n        // newSlides[index].idActive = id\r\n        \r\n        // setSlides(newSlides) \r\n        // setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n             \r\n            \r\n            <Box my={1} maxWidth={300} >\r\n                <TextField \r\n                    fullWidth\r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Svg'\r\n                    variant=\"outlined\"\r\n                    value={newSvg}\r\n                    onChange={(e) => { setNewSvg(e.target.value) }}\r\n                />\r\n                <Box my={1}> \r\n                    <FormControl \r\n                        variant='filled' \r\n                        size='small'    \r\n                        // style={{width: '100%'}}\r\n                        fullWidth\r\n                    >\r\n                        <InputLabel id={`url-new`}>Choice page</InputLabel>\r\n                        <Select\r\n                            labelId={`url-new`}\r\n                            id=\"url-select\"\r\n                            value={idActive}  \r\n                            fullWidth\r\n                            style={{maxWidth: '100%'}}\r\n                            onChange={(e) => {   \r\n                                handleChangeUrl(e.target.value); \r\n                            }}\r\n                        >   \r\n                            {\r\n                                props.renderLinkList()\r\n                            }\r\n                                \r\n                        </Select>\r\n                    </FormControl>\r\n                </Box> \r\n                <Box my={1}>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,   \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport CategoryContext  from '../../../context/headerContext/CategoryContext'\r\n\r\nfunction StyledComponent(props) {\r\n  \r\n    const { categories } = React.useContext(CategoryContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n  \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264,  \r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-flex',\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                width: 250,   \r\n                position: 'relative'\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: { \r\n                fontSize: 14, \r\n                lineHeight: 1.1,  \r\n            }, \r\n            dumbSlideSvg: {\r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: 35, \r\n                padding: 10, \r\n                backgroundColor: theme.palette.text.disabled, \r\n                \"& svg\": {\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    fill: theme.palette.text.primary\r\n                }\r\n            },\r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n \r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true) \r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  {  \r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideSvg = (svg, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].svg = svg \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n     \r\n    const handleChangeUrl = (id, index) => {  \r\n        let newSlides = slides.slice()\r\n \r\n        let activeItem\r\n        categories.forEach( item => {\r\n            if(item.id === id) activeItem = item\r\n            else {\r\n                if(item.pages.length > 0) {\r\n                    item.pages.forEach(innerItem => {\r\n                        if(innerItem.id === id) {\r\n                            activeItem = innerItem\r\n                            activeItem.categorySlug = item.slug\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n \r\n        console.log(activeItem)\r\n\r\n        if(activeItem.type === 'category') newSlides[index].url = activeItem.slug\r\n        if(activeItem.type === 'page') newSlides[index].url = `${activeItem.categorySlug}/${activeItem.slug}`\r\n        newSlides[index].title = activeItem.title\r\n        newSlides[index].idActive = id\r\n        \r\n        console.log(newSlides)\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n      \r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => { \r\n        const newSlides = slides.slice() \r\n\r\n        newSlides.splice(index, 1)\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n    const addSlide = ( svg, idActive ) => {\r\n        let activeItem\r\n        categories.forEach( item => {\r\n            if(item.id === idActive) activeItem = item\r\n            else {\r\n                if(item.pages.length > 0) {\r\n                    item.pages.forEach(innerItem => {\r\n                        if(innerItem.id === idActive) {\r\n                            activeItem = innerItem\r\n                            activeItem.categorySlug = item.slug\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n  \r\n\r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            svg: svg,  \r\n            title: activeItem.title,   \r\n            slug: activeItem.slug, \r\n            categorySlug: activeItem.categorySlug || '/', \r\n            idActive: idActive, \r\n            inner: []\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {  \r\n            console.log(slides) \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>  \r\n                    <Box my={1}> \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'    \r\n                            // style={{width: '100%'}}\r\n                            fullWidth\r\n                        >\r\n                            <InputLabel id={`url-${index}`}>Choice page</InputLabel>\r\n                            <Select\r\n                                labelId={`url-${index}`}\r\n                                id=\"url-select\"\r\n                                value={item.idActive}  \r\n                                fullWidth\r\n                                style={{maxWidth: '100%'}}\r\n                                onChange={(e) => {  \r\n                                    setIsDisableBtn(false); \r\n                                    handleChangeUrl(e.target.value, index); \r\n                                }}\r\n                            >   \r\n                                {\r\n                                    renderLinkList()\r\n                                }\r\n                                    \r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box> \r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set svg as html\"\r\n                            variant='outlined'\r\n                            value={item.svg}\r\n                            setValue={handleSlideSvg}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n\r\n                    {/* view */}\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box> \r\n                        \r\n\r\n                        <Box className={classes.dumbSlideSvg}>  \r\n                            <span dangerouslySetInnerHTML={{__html: item.svg}}></span>\r\n                        </Box>\r\n                        <Box my={1} className={classes.dumbSlideTitle}>  \r\n                             { item.title }\r\n                        </Box>\r\n                        {\r\n                            item.isButton && \r\n                            <Button \r\n                                color={'default'}\r\n                                variant={'contained'}\r\n                            >\r\n                                {item.textButton}\r\n                            </Button> \r\n                        }\r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n\r\n    const renderLinkList = () => {\r\n        let links = []\r\n        categories.forEach( item => { \r\n            links.push(item)\r\n            if(item.pages.length > 0) {\r\n                item.pages.forEach( innerItem => {\r\n                    let page = JSON.parse(JSON.stringify(innerItem))\r\n                    page.categorySlug = item.slug\r\n                    links.push(page)\r\n                })\r\n            }\r\n        })\r\n\r\n        return links.map( link => {\r\n            switch(link.type) {\r\n                case('category') : {\r\n                    return <MenuItem key={link.id} value={link.id} >{link.title } - { link.slug}</MenuItem> \r\n                }\r\n                case('page'): {\r\n                    return <MenuItem key={link.id} value={link.id} >{link.title } - {`${link.categorySlug}/${link.slug}`}</MenuItem>\r\n                }\r\n                default: break;\r\n            } \r\n            return false\r\n        }) \r\n    }\r\n      \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Swiper margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Swiper margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Swiper Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Swiper\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                     \r\n                                    <Box mb={2} display='flex'> \r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Slides Per View Desktop\"\r\n                                                variant='outlined'\r\n                                                value={slidesPerView}\r\n                                                setValue={setSlidesPerView}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Slides Per View Tablet\"\r\n                                                variant='outlined'\r\n                                                value={slidesPerViewTablet}\r\n                                                setValue={setSlidesPerViewTablet}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Slides Per View Mobile\"\r\n                                                variant='outlined'\r\n                                                value={slidesPerViewMobile}\r\n                                                setValue={setSlidesPerViewMobile}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />   \r\n                                        </Box>\r\n                                        \r\n                                    </Box>\r\n                                    <Box mb={2} display='flex'>\r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Space Between\"\r\n                                                variant='outlined'\r\n                                                value={spaceBetween}\r\n                                                setValue={setSpaceBetween}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            /> \r\n                                        </Box>\r\n                                        <Box>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Speed (ms)\"\r\n                                                variant='outlined'\r\n                                                value={speed}\r\n                                                setValue={setSpeed}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box my={2} display='flex'>\r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change Loop, Slides Per View, Space Between settings you need to reloading page\" >\r\n                                                <IconButton>\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'    \r\n                                                style={{minWidth: 200}}\r\n                                            >\r\n                                                <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"align-select-label\"\r\n                                                    id=\"align-select\"\r\n                                                    value={loop}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                >\r\n                                                    <MenuItem value={true}>True</MenuItem>\r\n                                                    <MenuItem value={false}>False</MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                style={{minWidth: 200}} \r\n                                            >\r\n                                                <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"align-select-label\"\r\n                                                    id=\"align-select\"\r\n                                                    value={freeMode}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                >\r\n                                                    <MenuItem value={true}>True</MenuItem>\r\n                                                    <MenuItem value={false}>False</MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                        <Box>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'    \r\n                                            >\r\n                                                <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"maxWidth-label\"\r\n                                                    id=\"maxWidth-style\"\r\n                                                    value={maxWidthContainer}\r\n                                                    style={{minWidth: 180}}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={false}>False</MenuItem>\r\n                                                    <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                    <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                    <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                    <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                    <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n\r\n                                     \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Block'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} renderLinkList={renderLinkList} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '20px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                margin: '10px 0', \r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent, Divider } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\nimport FormLineElement from '../library/formLine/ElementCreator'  \r\nimport SwiperElement from '../library/swiper/ElementCreator'  \r\nimport BannerElement from '../library/banner/ElementCreator'  \r\nimport BlocksPagesElement from '../library/blocksPages/ElementCreator'   \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n  const FormLineLayout = layouts.formLine \r\n  const SwiperLayout = layouts.swiper \r\n  const BannerLayout = layouts.banner \r\n  const BlocksPagesLayout = layouts.blocksPages \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => { \r\n\r\n    const classesRef = StylesChangers()\r\n    const commonClasses = classesRef(theme)\r\n\r\n    const { menu, menuTitle, dialogContentUnstyle } = commonClasses \r\n\r\n    return ({ \r\n      dialogContentUnstyle: dialogContentUnstyle, \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 70,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38,  \r\n          opacity: 0, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 600, \r\n        left: \"calc(50% - 300px)\",\r\n      }},     \r\n      menuTitle: menuTitle,\r\n      tooltip: {\r\n        fontSize: 14\r\n      }, \r\n      boxMenuItem : { \r\n        display: 'inline-block',\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n      }\r\n\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    // newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n   \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container')  newCont = JSON.parse(JSON.stringify(ContainerLayout))\r\n    if(type === 'mainBanner') newCont = JSON.parse(JSON.stringify(MainBannerLayout))\r\n    if(type === 'accordion')  newCont = JSON.parse(JSON.stringify(AccordionLayout))\r\n    if(type === 'contactMap') newCont = JSON.parse(JSON.stringify(СontactMapLayout))\r\n    if(type === 'about')      newCont = JSON.parse(JSON.stringify(AboutLayout))\r\n    if(type === 'actionLine') newCont = JSON.parse(JSON.stringify(ActionLineLayout))\r\n    if(type === 'table')      newCont = JSON.parse(JSON.stringify(TableLayout))\r\n    if(type === 'formLine')   newCont = JSON.parse(JSON.stringify(FormLineLayout))\r\n    if(type === 'swiper')     newCont = JSON.parse(JSON.stringify(SwiperLayout))\r\n    if(type === 'banner')     newCont = JSON.parse(JSON.stringify(BannerLayout))\r\n    if(type === 'blocksPages')     newCont = JSON.parse(JSON.stringify(BlocksPagesLayout))\r\n  \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n\r\n    window.scrollTo({\r\n      top: window.innerHeight \r\n    })\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n        \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n    \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'formLine') { \r\n          return(\r\n              <FormLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'swiper') { \r\n          return(\r\n              <SwiperElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'banner') { \r\n          return(\r\n              <BannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'blocksPages') { \r\n          return(\r\n              <BlocksPagesElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <Box className={classes.btnContainer}> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <React.Fragment>\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Add Block for Page <OpenWithIcon/>\r\n                            </Typography> \r\n                            \r\n                            \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Container for heading, paragraph, image-paragraph, list' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                    Container\r\n                                </Button> \r\n                              </Tooltip> \r\n                            </Box> \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Paper cart with links. Has be slider' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('blocksPages') }}>\r\n                                    Blocks with Links\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With form\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block to start the page. Contain: text, form, image(desktop only)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                    Main Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                           \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Contain: location and phone view, contact form, map. Has two different displays, with and without a map' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                    Contacts with Map\r\n                                </Button>  \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Small contact form with optional heading and paragrapher' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('formLine') }}>\r\n                                    Add Form Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Accordion with heading on top' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                    Accordion\r\n                                </Button> \r\n                              </Tooltip>  \r\n                            </Box>\r\n                            \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Line for small text paragrapher with ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                    Colored Action Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Table with heading on top. Has ability to add \"Show More Botton \" on bottom' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                    Add Table \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With image\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block with heading, paragraph and image. Image on desktop - 50% vieport width. Image on mobile - 50% vieport width . Has the ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                    About\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Simple slider with square images. Has be blocks' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('swiper') }}>\r\n                                    Swiper\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Banner with background image, heading, paragraph and modal button (optional)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('banner') }}>\r\n                                    Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </React.Fragment>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/functions/ScrollToTop'  \r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n \r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    \r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n             \r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton, \r\n} from '@material-ui/core';  \r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPaletteForGradient} from '../functions/colorChanger/ColorCalculation'\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, \r\n    // handleOpen, \r\n    handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  // const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2  \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n   \r\n    // const currentColor = getColorByPalette(theme, modalSettings.colorButton)\r\n  \r\n    colorGradient1 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[0]\r\n    colorGradient2 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[1]\r\n    // colorGradient1 = lighten(currentColor, 0.2)\r\n    // colorGradient2 = darken(currentColor, 0.2) \r\n     \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        },\r\n        '&:hover': {\r\n          backgroundColor: \"#7979792b\", \r\n        },\r\n         \r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n\r\n  // const openModal = () => {\r\n  //   handleOpen('')\r\n  // }\r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <button type=\"button\" onClick={ openModal }>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\n\r\nconst  AlertComponent = () => { \r\n    \r\n    const { isShowAlert, closeAlert, alertText  } = React.useContext(SendFormContext)  \r\n\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        closeAlert() \r\n    }\r\n   \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={isShowAlert} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert  /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}