{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/functions/ScrollToTop.js","components/functions/ImageRemover.js","components/placeholders/LoadingProgress.js","styles/changers.js","components/header/headerHelpers/CategoriesChanger.js","components/library/colorPicker/ColorPicker.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/headerHelpers/RequestsChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/library/banner/DumbComponent.js","components/Login.js","components/Error.js","styles/inputs.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/list/DumbComponent.js","components/library/list/StyledComponent.js","components/library/list/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/DumbComponent.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/library/formLine/DumbComponent.js","components/library/formLine/StyledComponent.js","components/library/formLine/ElementCreator.js","components/library/swiper/DumbComponent.js","components/library/swiper/ElementCreator.js","components/library/banner/StyledComponent.js","components/library/banner/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","idArrayForDelete","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","clearArrayForDelete","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","name","storageRef","ref","imageRef","child","images","removeImage","removeImagesFromArray","SendFormContext","SendFormProvider","requests","modalSettings","isShowAlert","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","setTimeout","req","newList","slice","newReq","Object","assign","time","getCurrentDate","push","closeAlertFromTimeout","updateRequests","updateModalSettings","sendRequests","closeAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","StylesChangers","theme","menu","palette","background","paper","paddingLeft","paddingRight","paddingBottom","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","fontSize","fontWeight","borderBottom","divider","default","padding","marginBottom","cursor","btnSetting","deepOrange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","btnSave","bottom","paddingTop","opacity","btnWithLabel","spacing","btnDrawerStyle","easeIn","btnDrawerItem","secondary","containerWrapper","outline","outlineOffset","responseValues","margin","marginRight","responseTablets","border","success","fill","responseMobile","mobileTooltip","tabletTooltip","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","commonClasses","classesRef","maxWidth","listPages","marginTop","listStyle","titlePages","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","indexOf","length","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","dumbWrapper","Tooltip","title","placement","Button","onClick","size","variant","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","xs","onSubmit","e","preventDefault","newCategory","uuid","FormGroup","Box","mb","TextField","required","label","onChange","IconButton","fullWidth","index","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","ColorPicker","memo","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","save","contrastColor","getContrastText","primary","boxColor","flexGrow","borderRadius","shape","shortest","boxShadow","shadows","boxPicker","prevOpen","onChangeComplete","newColor","hex","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","colorSelect","setColorSelect","colorCustom","setColorCustom","uploadHandler","imageData","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","Divider","FormControlLabel","control","Switch","checked","FormControl","InputLabel","Select","labelId","MenuItem","newLogo","newModal","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","row","Number","newSettings","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","main","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","colorPreview","colorItem","flexWrap","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","innerIndex","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","my","content","indexPage","borderTop","px","edge","DumbComponent","modalBtnColor1","modalBtnColor2","widthMobile","headerHeight","setHeaderHeight","backgroundHeader","modalBtnColor","darken","header","fixedPadding","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","buttonModal","setResponsiveness","headHeight","document","querySelector","clientHeight","setMobileView","removeEventListener","addEventListener","mobileView","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","RequestsChanger","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","amber","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","String","CardActions","isCheck","handleOnceCheck","handleRemove","Checkbox","request","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","ml","newData","AdminHeader","buttonSettings","settingsContainer","wrapper","providerData","ModalChanger","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ElementCreator","Header","Footer","footer","footerHeading","paragraph","imageUrl","isButton","textButton","targetButton","colorText","paddingVertical","maxWidthContainer","bannerBackground","backgroundPosition","backgroundRepeat","backgroundSize","down","bannerContent","up","sm","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","handleChange","place","Avatar","loginWithEmail","res","err","autoComplete","autoFocus","Alert","severity","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","ContainerElement","libraryHeading","libraryParagraph","libraryParagraphImage","paragraphImage","libraryList","setPadding","setMargin","setDisplay","setFlexDirection","setBackgroundColor","shadow","setShadow","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","addHeading","a","newChildren","newItem","JSON","parse","stringify","reSaveContainer","mr","aria-haspopup","currentTarget","keepMounted","Boolean","tooltip","reSaveContainerStyleSettings","resposiveFontSize","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","outlineColor","focus","sentData","reSaveChildren","prop","confirm","removeItem","liClass","itemsStyle","mobileClass","items","setPaddingLeft","setItems","itemsPadding","setItemsPadding","itemsListStyle","setItemsListStyle","setNewItem","mobileMarginTopComputed","mobileMarginBottomComputed","swapItem","newItems","handleItemChange","splice","deleteItem","multiline","rowsMax","imageStyle","imageClassName","imageStabilization","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageAccordion","imagePreview","imageLabel","handleImageMargin","handleImageUpload","generateImageName","downloadURL","pt","pb","align","classForResp","renderItems","createArrayImages","forEach","isFirst","swapContainer","isLast","removeContainer","newArr","colorFocusInput","formPhone","setFormPhone","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","input","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","styleClass","md","xlinkHref","phone","placeholder","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","iconName","setIconName","setMarginTop","setMarginBottom","setMaxWidthContainer","tabletMarginTopComputed","tabletMarginBottomComputed","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","handleUpdateItem","colorMapOnload","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","fontFamily","link","boxForFlex","heightRegular","linksContainer","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","cols","rows","setLocation","setPhone","setInputComment","setMapFrame","setIsButton","imageList","setTextButton","setTargetButton","colorTheme","headingSize","colorMain","fade","containerColored","containerFlexed","setHeadingSize","CustomizedTables","mainColor","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isBotton","isBottonClick","setIsBottonClick","StyledTableRow","withStyles","TableRow","table","tableCell","tableButtonCell","tableButton","tableContainer","tableHeader","handleVisible","OnceRow","hover","TableCell","scope","price","TableContainer","Table","TableHead","TableBody","setRows","setTableRow","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","handleRowChange","newRows","newRow","handleTableHeadChange","lineDecor","gridItem","SwiperCore","use","Navigation","slideForView","setSlideForView","slideHeight","setSlideHeight","slideRef","useRef","swiper","slide","overflow","slideBox","slideImg","slideTitle","getWidthViewport","actualWidth","quantity","Math","floor","slideHeightCalc","current","clientWidth","spaceBetween","speed","slidesPerView","navigation","onSlideChange","renderSlide","setMinHeight","colorTextSelect","setColorTextSelect","colorTextCustom","setColorTextCustom","setPaddingVertical","paddingVerticalComputed","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","FormLineLayout","formLine","SwiperLayout","BannerLayout","banner","setData","btnContainer","boxMenuItem","fetchData","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","history","key","orderFirst","orderLast","RouterComponent","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","closeBtn","targetContainer","targetLabel","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.148a9676.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 959) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        idArrayForDelete: [],\r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n        \r\n        // imageList: [], \r\n    }\r\n    \r\n \r\n    \r\n\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n        // this.fetchListFromStorage()\r\n    } \r\n    // fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .then( () => {\r\n    //         this.setState({\r\n    //             imageList: imagesArray\r\n    //         })\r\n    //     })\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n        \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 700);\r\n        \r\n    // }\r\n\r\n    async updateCategories(data) { \r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {    \r\n        // const pageRef = firebase.db.collection(\"site1\").doc(slug)\r\n        // const doc = await pageRef.get();\r\n        \r\n        // let idArray = []\r\n\r\n        // if (!doc.exists) {\r\n        //     console.log('No such page!');  \r\n        // } else { \r\n        //     const items = doc.data().items\r\n        //     items.forEach(item => {\r\n        //         if(item.type === 'container') { \r\n        //             item.children.forEach( child => {\r\n        //                 if(child.type === 'paragraphImage') {\r\n        //                     idArray.push(child.id)\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //         else {  \r\n        //             idArray.push(item.id)\r\n        //         }\r\n        //     });\r\n        // }\r\n        // this.setState({\r\n        //     idArrayForDelete: idArray\r\n        // })\r\n\r\n        // await pageRef.delete()\r\n        // // .then( () => {\r\n        // //     setTimeout(() => {\r\n        // //         this.setState({\r\n        // //             idArrayForDelete: []\r\n        // //         })\r\n        // //     }, 1000);\r\n        // // })\r\n        // .then( () => {\r\n        //     this.state.imageList.forEach( imageName => {\r\n        //         idArray.forEach(id => {\r\n        //             if(imageName.includes(id)) this.removeImage(imageName)\r\n        //         })\r\n        //     })\r\n        // })\r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n    // async removeImage(name) { \r\n    //     if(name !== '') {\r\n    //         const storageRef = firebase.storage.ref();\r\n \r\n    //         const imageRef = storageRef.child(name)\r\n        \r\n    //         try {\r\n    //             await imageRef.delete().then(function() {\r\n    //                 console.log('File deleted successfully')\r\n    //             }).catch(function(error) {\r\n    //                 console.log(error) \r\n    //             }); \r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    idArrayForDelete: this.state.idArrayForDelete, \r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    clearArrayForDelete: () => {\r\n                        this.setState({\r\n                            idArrayForDelete: []\r\n                        })\r\n                    }, \r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    // state = {  \r\n    //     imageList: [], \r\n    // } \r\n\r\n    // async componentDidMount() { \r\n    //       this.fetchListFromStorage()\r\n    //     //   this.fetchListFromFirestore()\r\n    // }\r\n\r\n    // async fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     await listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n    //     this.setState({\r\n    //         imageList: imagesArray\r\n    //     }) \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 500);\r\n        \r\n    // }\r\n\r\n    // async addImageToList(newImage, oldName) {\r\n    //     const newList = this.state.imageList.slice()\r\n    //     let newItem\r\n    //     let isNew = true\r\n    //     let isNeedUpdate = newImage.name === oldName ? false : true \r\n    //     if(isNeedUpdate) { \r\n    //         for(let i = 0; i < newList.length; i++) {\r\n    //             if(newList[i].name === newImage.name) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity++ \r\n    //                 isNew = false\r\n    //             }\r\n    //             if(newList[i].name === oldName) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity--  \r\n    //                 if( newList[i].quantity === 0 ) { \r\n    //                     this.removeImage(oldName) \r\n    //                     newList.splice(i, 1)\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //         if(isNew) {\r\n    //             newItem = {\r\n    //                 name: newImage.name, \r\n    //                 url: newImage.url, \r\n    //                 quantity: 1\r\n    //             }\r\n    //             newList.push(newItem)\r\n    //         }\r\n    //     }\r\n    //     else { \r\n    //         console.log(newImage, oldName)\r\n    //     }\r\n         \r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })\r\n \r\n    //     console.log(this.state.imageList, oldName)\r\n\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    // async fetchListFromFirestore() {\r\n    //     const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n    //     const doc = await listRef.get();\r\n      \r\n    //     if (!doc.exists) {\r\n    //         console.log('No such page!');  \r\n\r\n    //     } else { \r\n    //         this.setState({\r\n    //             imageList: doc.data().list\r\n    //         }) \r\n    //     }\r\n    // }\r\n    // async uploadImage(imageData, oldName) { \r\n    //     const storageRef = await firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n    //     const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n    //     const newImage = {\r\n    //         url: downloadURL, \r\n    //         name: imageData.name, \r\n    //         quantity: 1\r\n    //     }\r\n    //     this.addImageToList(newImage, oldName)\r\n  \r\n    // }\r\n    // async updateList(newList) {\r\n    //     await firebase.db.collection(\"site1category\").doc(\"imageList\").update({\r\n    //         list: newList, \r\n    //     }).then(() => { \r\n    //         this.setState({\r\n    //             imageList: newList\r\n    //         })\r\n    //     })\r\n    // }\r\n \r\n    // removeImageFromStoreAndList(name) {\r\n    //     console.log(name)\r\n    //     const newList = this.state.imageList.slice()\r\n    //     newList.map( (item, index) => {\r\n    //         if(item.name === name) {\r\n    //             item.quantity--\r\n    //             if(item.quantity === 0) newList.splice(index, 1)\r\n    //         }\r\n    //     })\r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })  \r\n    //     this.removeImage(name)\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    async removeImage(name) { \r\n        if(name !== '') {\r\n            const storageRef = firebase.storage.ref();\r\n \r\n            const imageRef = storageRef.child(name)\r\n        \r\n            try {\r\n                await imageRef.delete().then(function() {\r\n                    console.log('File deleted successfully')\r\n                }).catch(function(error) {\r\n                    console.log(error) \r\n                }); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n    removeImagesFromArray(images) {\r\n        console.log(images)\r\n    }\r\n   \r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    // imageList: this.state.imageList, \r\n                    // nameList: this.state.nameList ,\r\n                    \r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    },\r\n                    removeImagesFromArray: (array) => {\r\n                        this.removeImagesFromArray(array)\r\n                    },\r\n                    // removeImageFromStoreAndList: (name) => {\r\n                    //     this.removeImageFromStoreAndList(name)\r\n                    // },\r\n                    // uploadImage: (data, name) => {\r\n                    //     this.uploadImage(data, name)\r\n                    // }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isShowAlert: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            }) \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout() {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isShowAlert: null\r\n            })\r\n        }, 7000);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isShowAlert: 'info'\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isShowAlert: 'success'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isShowAlert: 'error'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isShowAlert, \r\n                    modalSettings: this.state.modalSettings, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isShowAlert: null\r\n                        })\r\n\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React, { useEffect, useContext, memo } from 'react'\r\n\r\nimport ImageContext from '../../context/imageContext/ImageContext' \r\n\r\nconst ImageRemover = memo(({ idArrayForDelete, clearArrayForDelete }) => {\r\n\r\n    const { removeImagesFromArray } = useContext(ImageContext)\r\n\r\n    useEffect( () => { \r\n        if(idArrayForDelete !== []) removeImages()\r\n        \r\n        console.log('effect') \r\n        \r\n    }, [idArrayForDelete])\r\n\r\n    const removeImages = () => { \r\n        removeImagesFromArray(idArrayForDelete) \r\n    }\r\n\r\n    return null\r\n})\r\n\r\nexport default ImageRemover\r\n \r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            paddingBottom: 0,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        btnWithLabel: {\r\n            padding: 0, \r\n            '& label': {\r\n                padding: theme.spacing(1, 2), \r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            outlineOffset: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                // outlineColor: `${theme.palette.error.main}`,\r\n                // zIndex: 100, \r\n                 \r\n                // '& $mtView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $mbView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $btnDrawerStyle' : { \r\n                //     opacity: 1\r\n                // }\r\n            }\r\n        },\r\n        responseValues: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            padding: theme.spacing(1, 2),\r\n            margin: theme.spacing(1, 0), \r\n            '& p': {\r\n                margin: 0\r\n            },\r\n            '& svg': {\r\n                marginRight: 8, \r\n            }\r\n        }, \r\n        responseTablets: { \r\n            border: `1px solid ${theme.palette.success.dark}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.dark \r\n            }\r\n        },\r\n        responseMobile: { \r\n            border: `1px solid ${theme.palette.success.light}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.light \r\n            }\r\n        },\r\n        mobileTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.light\r\n        },\r\n        tabletTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.dark\r\n        }\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\nimport ImageContext from '../../../context/imageContext/ImageContext'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n    \r\n    const { removeImagesFromArray } = React.useContext(ImageContext)    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n    \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n       \r\n        return( { \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 350px)\",\r\n                maxWidth: 700,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,\r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid #eee`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) {  \r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => {  \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n          \r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        })  \r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n \r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    {\r\n                                                        item.slug === '/' ?\r\n                                                        <Tooltip title=\"You can't remove Home  Category\" placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}  \r\n                                                            > \r\n                                                                <InfoOutlined style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button> \r\n                                                        </Tooltip>\r\n                                                        :\r\n                                                        <Tooltip title='Delete Category' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}\r\n                                                                onClick={() => { deleteCategory(item.id) }}\r\n                                                            > \r\n                                                                <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState, useEffect } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n\r\n    const togglePicker = () => setIsOpen(prevOpen => !prevOpen);\r\n    const handleChange = (newColor) => setColor(newColor.hex);\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit')\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(initialColor === 'inherit' ) setColor('#000')\r\n    }, [initialColor])\r\n\r\n    const useStyles = makeStyles( theme => {\r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.shortest} ${theme.transitions.easing.easeInOut}ms`, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[4]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    initialColor === color ? \r\n                    <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch,\r\n    FormControl,\r\n    InputLabel, \r\n    Select, \r\n    MenuItem\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n\r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    React.useEffect(() => {\r\n        if(modal.color !== 'primary' && modal.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [modal])\r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n                \r\n                setIsDisableBtn(false)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Logo/Modal  changer  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Text for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalText}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalText(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={colorSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    colorSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {colorCustom}\r\n                                                        changeColor = {setColorCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'right'}\r\n                                                        noInherit={true} \r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n \r\n    React.useEffect(() => {\r\n        if( settings.classes.backgroundColor !== 'default' && \r\n            settings.classes.backgroundColor !== 'paper' && \r\n            settings.classes.backgroundColor !== 'primary' &&  \r\n            settings.classes.backgroundColor !== 'secondary' ) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n    }, [settings])\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                maxWidth: 400,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Style changer <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl    variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Background Color for Header</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={settingBackgroundSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setSettingBackgroundSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Theme Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Theme Secondary</MenuItem>\r\n                                                    <MenuItem value={'default'}>Theme BG default</MenuItem>\r\n                                                    <MenuItem value={'paper'}>Theme BG paper</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    settingBackgroundSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {settingBackgroundCustom}\r\n                                                        changeColor = {setSettingBackgroundCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'left'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box my={4} width={'100%'} clone={true} >\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                // color: \"textPrimary\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button\r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\nfunction DumbComponent() {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings} = React.useContext(CategoryContext)    \r\n  \r\n    const [headerHeight, setHeaderHeight] = useState(0)\r\n   \r\n    let backgroundHeader = settings.classes.backgroundColor\r\n    let colorHeader \r\n    let hoverActiveLinkColor\r\n\r\n\r\n    let modalBtnColor = modal.color\r\n    let modalBtnColor1 \r\n    let modalBtnColor2 \r\n\r\n    let widthMobile \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`]\r\n        if(modalBtnColor === 'primary') {\r\n            modalBtnColor1 = theme.palette.primary.main\r\n            modalBtnColor2 = theme.palette.primary.dark\r\n        }\r\n        if(modalBtnColor === 'secondary') {\r\n            modalBtnColor1 = theme.palette.secondary.main\r\n            modalBtnColor2 = theme.palette.secondary.dark\r\n        }\r\n        if(modalBtnColor !== 'primary' && modalBtnColor !== 'secondary' ) {\r\n            modalBtnColor1 = modal.color\r\n            modalBtnColor2 = darken(modal.color, 0.4) \r\n        } \r\n        if(backgroundHeader === 'primary') {\r\n            backgroundHeader = theme.palette.primary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.primary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.primary.main, 0.3)\r\n        }\r\n        if(backgroundHeader === 'secondary') {\r\n            backgroundHeader = theme.palette.secondary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.secondary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.secondary.main, 0.3)\r\n        }\r\n        \r\n        if( backgroundHeader !== 'default' && \r\n            backgroundHeader !== 'paper' && \r\n            backgroundHeader !== 'primary' && \r\n            backgroundHeader !== 'secondary' ) {  \r\n                colorHeader = theme.palette.getContrastText(backgroundHeader)\r\n                hoverActiveLinkColor = darken(backgroundHeader, 0.5) \r\n        }   \r\n        if(backgroundHeader === 'paper') { \r\n            backgroundHeader = theme.palette.background.paper\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.paper)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n        if(backgroundHeader === 'default') { \r\n            backgroundHeader = theme.palette.background.default\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.default)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n\r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                top: 0, \r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: colorHeader ,\r\n                // color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundImage: `linear-gradient(180deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`,  \r\n                color: theme.palette.getContrastText(modalBtnColor2), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': { \r\n                    color: theme.palette.getContrastText(modalBtnColor2) ,\r\n                    backgroundImage: `linear-gradient(200deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`, \r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal } = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  document.querySelector('#header').clientHeight\r\n            \r\n            console.log('resize header')\r\n            setHeaderHeight(headHeight + 5)\r\n            \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n        // eslint-disable-next-line\r\n    }, []);\r\n     \r\n    const [mobileView, setMobileView] = useState(false); \r\n\r\n    const openModal = () => {\r\n        handleOpen('')\r\n    }\r\n\r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button\r\n            onClick={openModal} \r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            }\r\n            <AppBar className={header}  id='header'>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({ \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {  \r\n\r\n        const newReq = localRequests.slice()\r\n        const filtered = newReq.filter(item => ( item.time !== id ))\r\n\r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false)\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,  \r\n    FormControl, \r\n    Select,\r\n    MenuItem, \r\n    InputLabel\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n     \r\n   \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Modal Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                    <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"color-select-label\"\r\n                                        id=\"color-select\"\r\n                                        value={colorSelect}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                    >\r\n                                        <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                        <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                        <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Box ml={1} >\r\n                                    {\r\n                                        colorSelect === 'custom' &&\r\n                                        <ColorPicker\r\n                                            initialColor = {colorCustom}\r\n                                            changeColor = {setColorCustom}\r\n                                            setIsDisableBtn = {setIsDisableBtn}\r\n                                            position = {'right'}\r\n                                        /> \r\n                                    }\r\n                                    \r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                             \r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, makeStyles, Tooltip} from '@material-ui/core'\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)  \r\n \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { \r\n                    isOpen && \r\n                    <Box className={classes.settingsContainer} >\r\n                        <Typography component='span' >\r\n                            hello, { user.providerData[0].email } \r\n                        </Typography>\r\n\r\n                        <Box display='flex'>\r\n                            <RequestsChanger/>  &nbsp;\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    \r\n                        <Box> \r\n                            <Button \r\n                                size='small'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={handleSignOut}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container, Switch , FormControlLabel } from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nfunction Footer() {\r\n\r\n    const { setThemeMode, themeMode } = React.useContext(CategoryContext)\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: theme.palette.primary.dark, \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    const checked = themeMode === 'dark' ? true : false\r\n\r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                <Typography \r\n                    variant='h6'\r\n                    className={classes.footerHeading} \r\n                > \r\n                    Footer\r\n                </Typography>\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n\r\n                <Box>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Dark Theme\"\r\n                    />\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Container, Grid, Box, Button, darken } from '@material-ui/core'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading  \r\n    const paragraph = props.data.paragraph   \r\n     \r\n    const minHeight =  props.data.minHeight \r\n    const imageUrl =  props.data.imageUrl  \r\n\r\n    // const isButton = true\r\n    // const textButton = \"Buy\"\r\n    // const targetButton = \"Image\"   \r\n    // let colorButton = 'primary'\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorButton = props.data.colorButton || '#f00'\r\n    let colorText = props.data.colorText || 'inherit'\r\n\r\n    const paddingVertical = props.data.paddingVertical  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorButton === 'primary')  colorButton = theme.palette.primary.main\r\n        if(colorButton === 'secondary') colorButton = theme.palette.secondary.main   \r\n        if(colorText === 'primary')  colorText = theme.palette.primary.main\r\n        if(colorText === 'secondary') colorText = theme.palette.secondary.main   \r\n        return ({ \r\n            bannerBackground: {\r\n                backgroundImage: `url(${imageUrl})`, \r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            bannerContent: {\r\n                display: 'flex',\r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                paddingTop: paddingVertical,\r\n                paddingBottom: paddingVertical,\r\n                minHeight: minHeight, \r\n                maxHeight: \"100vh\", \r\n                [theme.breakpoints.down('sm')]: { \r\n                    paddingTop: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20), \r\n                    paddingBottom: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20),\r\n                }\r\n            },\r\n            heading: {  \r\n                marginBottom: theme.spacing(3), \r\n                textAlign: 'center',  \r\n                color: colorText\r\n            },\r\n            paragraph: {  \r\n                marginBottom: 20,  \r\n                lineHeight: 1.5, \r\n                fontWeight: 400, \r\n                textAlign: 'center',  \r\n                fontSize: 15 , \r\n                color: colorText,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: 0\r\n                }\r\n            },\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: 14,  \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n             \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (  \r\n        <div className={classes.bannerBackground}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Box className={classes.bannerContent} > \r\n                    <Grid item xs={12} sm={6} className=\"info heading\">\r\n                        { heading.length > 0 && <h3 className={classes.heading}>{heading}</h3> }\r\n                        { paragraph.length > 0 && <p className={classes.paragraph} > {paragraph} </p> } \r\n                        {\r\n                                isButton && \r\n                                <Box display={'flex'} justifyContent='center'>\r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button>\r\n                                </Box> \r\n                            }\r\n                    </Grid> \r\n                </Box> \r\n            </Container>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport Dumb from '../components/library/banner/DumbComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const disableCheck = () => {\r\n        if(name !== '' && password !== '') setIsDisableBtn(false)\r\n        else setIsDisableBtn(true)\r\n    }\r\n\r\n    const handleChange = (value, place) => {\r\n        switch(place) {\r\n            case ('name') : { \r\n                setName(value)\r\n                break;\r\n            }\r\n            case ('password'): {\r\n                setPassword(value)\r\n                break;\r\n            }\r\n            default: break;\r\n        } \r\n        disableCheck()\r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        setIsDisableBtn(true)\r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>  \r\n            {/* <Dumb/> */}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Вход\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"text\"\r\n                            label=\"User\"\r\n                            name=\"user\"\r\n                            autoComplete='true'\r\n                            autoFocus\r\n                            value={name}\r\n                            onChange={  (e)=>{handleChange(e.target.value, \"name\")} }\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\" \r\n                            value={password}\r\n                            onChange={  (e)=>{handleChange(e.target.value, \"password\")} }\r\n                        />\r\n                        {\r\n                            error && \r\n                            <Alert severity=\"error\">{error.message}</Alert>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            size='medium'\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={isDisableBtn} \r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport uuid from 'react-uuid' \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu, Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select, Typography, IconButton, \r\n    Modal, DialogContent, \r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n    const libraryList = layouts.list\r\n\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip  } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem  } = commonStyle \r\n \r\n\r\n        return ({   \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                width: 600, \r\n            } },\r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip,\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.handleClose()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = props.data.children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraphImage)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            case 'list' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryList)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n   \r\n        props.handleClose()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n        props.handleClose()\r\n    } \r\n     \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} >  \r\n                <Modal \r\n                    open={props.open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={props.handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Container Settings<OpenWithIcon/>\r\n                                </Typography>\r\n                    <FormGroup > \r\n                        <Typography  variant={'h6'} gutterBottom  >\r\n                            Add item from libs\r\n                        </Typography>\r\n                        <Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button \r\n                                        aria-controls=\"heading-menu\" \r\n                                        aria-haspopup=\"true\" \r\n                                        onClick={handleHeadingMenuClick}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Heading\r\n                                    </Button>\r\n                                </Box>\r\n                                \r\n                                <Menu\r\n                                    id=\"heading-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleHeadingMenuClose}\r\n                                >\r\n                                    <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                    <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                    <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                    <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                    <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                    <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                </Menu>\r\n\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraph');}}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Paragraph\r\n                                    </Button>\r\n                                </Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        Paragraph-Image\r\n                                    </Button>\r\n                                </Box> \r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('list', 'list');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        List\r\n                                    </Button>\r\n                                </Box> \r\n                        </Box>\r\n\r\n                    </FormGroup>\r\n\r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Settings \r\n                    </Typography>\r\n                    <FormGroup row>\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                            <Select\r\n                                labelId=\"dis-gutters-label\"\r\n                                id=\"dis-gutters-style\"\r\n                                value={settingGutter}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        \r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                            <Select\r\n                                labelId=\"fixed-label\"\r\n                                id=\"fixed-style\"\r\n                                value={settingFixed}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>  \r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup row> \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                            <Select\r\n                                labelId=\"maxWidth-label\"\r\n                                id=\"maxWidth-style\"\r\n                                value={settingMaxWidth}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-container-label\"\r\n                                id=\"inner-container-style\"\r\n                                value={settingInnerContainer}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup row> \r\n                            \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-paper-label\"\r\n                                id=\"inner-paper-style\"\r\n                                value={settingIsPaper}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    \r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Styles \r\n                    </Typography>\r\n                    <React.Fragment>\r\n                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                <TabletMacIcon/>\r\n                                <Box>   \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.8 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.8 }</b> \r\n                                    </p>     \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>  \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.5 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.5 }</b> \r\n                                    </p>        \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n                        {/* display */}\r\n                        <Box className={classes.inputGroup}>\r\n\r\n                            <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                <IconButton>\r\n                                    <InfoOutlined/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"display-style-label\"\r\n                                        id=\"display-style\"\r\n                                        value={display}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'block'}>Block</MenuItem>  \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                                {\r\n                                    display === 'flex' &&\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"direction-style-label\"\r\n                                            id=\"direction-style\"\r\n                                            value={flexDirection}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={'row'}>Row</MenuItem>  \r\n                                            <MenuItem value={'column'}>Column</MenuItem>  \r\n                                            <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                            <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>   \r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* margin */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Margin Top\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={margin.top}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                />\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Margin Bottom\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={margin.bottom}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* padding */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Padding Top\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={padding.top}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                />\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Padding Bottom\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={padding.bottom}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                />\r\n                            </Box>\r\n                            \r\n\r\n                        </Box>\r\n                        \r\n                        {/* bg-color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                            <Box className={classes.inputNumber} >\r\n                                <Typography  component={'p'} gutterBottom  >\r\n                                    Background  -  { backgroundColor }\r\n                                </Typography> \r\n                                <ColorPicker \r\n                                    initialColor={backgroundColor} \r\n                                    changeColor={setBackgroundColor} \r\n                                    setIsDisableBtn={setIsDisableBtn}\r\n                                    position={'left'}\r\n                                /> \r\n                            </Box>\r\n                            <Box className={classes.inputNumber} >\r\n                                <Typography  component={'p'} gutterBottom  >\r\n                                    Color  -  { color }\r\n                                </Typography> \r\n                                <ColorPicker \r\n                                    initialColor={color} \r\n                                    changeColor={setColor} \r\n                                    setIsDisableBtn={setIsDisableBtn}\r\n                                    position={'right'}\r\n                                /> \r\n                            </Box>\r\n                                \r\n                        </Box>\r\n                        \r\n                        {/* color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                <Select\r\n                                    labelId=\"shadow-style-label\"\r\n                                    id=\"shadow-style\"\r\n                                    value={shadow}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                    0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                    <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                    0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                    <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                    0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                </Select>\r\n                            </FormControl> \r\n                            \r\n                        </Box>\r\n                            \r\n                        {/* border */}\r\n                        <Box className={classes.inputGroup}> \r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Border Color  -  { borderColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={borderColor} \r\n                                        changeColor={setBorderColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box> \r\n                                <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Border Radius\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={borderRadius}\r\n                                        onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                />\r\n\r\n                            </Box>\r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                            <TextField \r\n                                className={classes.inputNumber}\r\n                                type='number'\r\n                                label=\"Border Width\" \r\n                                variant=\"filled\" \r\n                                size='small'  \r\n                                value={borderWidth}\r\n                                onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                            />\r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                <Select\r\n                                    labelId=\"border-style-label\"\r\n                                    id=\"border-style\"\r\n                                    value={borderStyle}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                        </Box>\r\n\r\n                        <Box  className={classes.btnSave}>\r\n                            <Button\r\n                                disabled={isDisableBtn}\r\n                            \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size={'medium'} \r\n                                onClick={reSaveClassesSettings}\r\n                            >\r\n                                Save\r\n                            </Button> \r\n                        </Box>\r\n                        \r\n                    </React.Fragment> \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                </Modal> \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n                marginTop: props.className.marginTop*0.8,\r\n                marginBottom: props.className.marginBottom*0.8\r\n            },\r\n            [theme.breakpoints.down('sm')]: {\r\n                fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.6 : 20,\r\n                lineHeight : 1.2, \r\n                marginTop: props.className.marginTop*0.5, \r\n                marginBottom: props.className.marginBottom*0.5, \r\n                textAlign: 'center'\r\n            },\r\n        },\r\n        // mobileClass: {\r\n        //     [theme.breakpoints.down('sm')]: {\r\n        //         marginTop: props.className.marginTop > 30 ? props.className.marginTop * 0.6 : 15,\r\n        //         marginBottom: props.className.marginBottom > 30 ? props.className.marginBottom * 0.6 : 15,\r\n        //         paddingLeft: props.className.paddingLeft > 30 ? props.className.paddingLeft * 0.6 : 15\r\n        //     } \r\n        // }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle, responseValues, responseTablets, responseMobile, mobileTooltip, tabletTooltip } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${margin.top * 0.8}px`,  \r\n                        height: `${margin.top * 0.8}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${margin.bottom * 0.8}px`,\r\n                        height: `${margin.bottom * 0.8 }px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${margin.bottom * 0.5}px`,\r\n                        height: `${margin.bottom * 0.5 }px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, то на мобильных устройствах шрифт будет меньше и выравнивание будет по центру  \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n                                <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                        <TabletMacIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.8 }</b>; MarginBottom: <b>{margin.bottom * 0.8 }</b> </p>   \r\n                                                    <p>FontSize: <b>{ fontSize * 0.8 }</b> </p>   \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                        <PhoneIphoneIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p>  \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.6 : 20 }</b>  LineHeight: <b>{1.2} </b> </p>   \r\n                                                    <p>TextAlign:  <b>center</b> </p>\r\n  \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography>\r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb list') \r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,  \r\n        liClass: props.data.itemsStyle,\r\n        mobileClass: {\r\n            [theme.breakpoints.down('sm')]: {\r\n                marginTop: props.className.marginTop === 0 ? 0 : (props.className.marginTop > 30 ? props.className.marginTop*0.6 : 15), \r\n                marginBottom: props.className.marginBottom === 0 ? 0 : (props.className.marginBottom > 30 ? props.className.marginBottom*0.6 : 15),  \r\n                paddingLeft: props.className.paddingLeft === 0 ? 0 : (props.className.paddingLeft > 30 ? props.className.paddingLeft*0.6 : 15)\r\n            } \r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n           <ul className={`${classes.myClassName} ${classes.mobileClass}`}>\r\n                {\r\n                    props.data.items.map( (item, index) => (\r\n                        <li key={index} className={classes.liClass}>\r\n                            {item}\r\n                        </li>\r\n                    ))        \r\n                }\r\n           </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    ButtonGroup, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n  \r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';   \r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled list work')\r\n\r\n    const [paddingLeft, setPaddingLeft] = React.useState( props.data.classes.paddingLeft || 15 )\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    }) \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit') \r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [items, setItems] = React.useState(props.data.items || [])\r\n    const [itemsPadding, setItemsPadding] = React.useState(props.data.itemsStyle.paddingBottom || [])\r\n    const [itemsListStyle, setItemsListStyle] = React.useState(props.data.itemsStyle.listStyle || 'decimal')\r\n    const [newItem, setNewItem] = React.useState('') \r\n\r\n    const mobileMarginTopComputed = margin.top === 0 ? 0 : (margin.top > 30 ? margin.top*0.6 : 15)\r\n    const mobileMarginBottomComputed = margin.bottom === 0 ? 0 : (margin.bottom > 30 ? margin.bottom*0.6 : 15)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues, responseMobile, mobileTooltip  } = commonClasses \r\n        const { mtView, mbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({ \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }   \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n            movingPageBtn: {  \r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = {  \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        paddingLeft: paddingLeft, \r\n        color: color, \r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight \r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.itemsStyle = {\r\n            paddingBottom: itemsPadding, \r\n            listStyle: itemsListStyle\r\n        }\r\n        sentData.items = items\r\n \r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleItemChange = (index, value) => {\r\n        let newItems = items.slice()\r\n        newItems[index] = value\r\n        setItems(newItems)\r\n        setIsDisableBtn(false)\r\n    }\r\n    const swapItem = (direction, index) => {\r\n        let newItems = items.slice() \r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex - 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex + 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const deleteItem = (index) => {  \r\n        let newItems = items.slice()\r\n        newItems.splice(index, 1)\r\n         \r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const handleAddItem = () => {\r\n        let newItems = items.slice()\r\n        \r\n        newItems.push(newItem)\r\n \r\n        setItems(newItems)\r\n        \r\n        setNewItem('') \r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                List Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>\r\n                                        <p>\r\n                                            MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                            MarginBottom: <b>{mobileMarginBottomComputed}</b> \r\n                                        </p> \r\n                                        <p>PaddingLeft:  <b>{paddingLeft === 0 ? 0 : (paddingLeft > 30 ? paddingLeft*0.6 : 15)}</b></p>\r\n                                    </Box>\r\n                                </Box> \r\n                            </Tooltip> \r\n                               \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box> \r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={paddingLeft}\r\n                                        onChange={ (e) => { setPaddingLeft(e.target.value) } }     \r\n                                    /> \r\n                                </Box>\r\n                                 \r\n            \r\n                            </Box>\r\n                           \r\n                                     \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup} mt={2}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl> \r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    /> \r\n                                     <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Item Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={itemsPadding}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setItemsPadding(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">List Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={itemsListStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setItemsListStyle((e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={'circle'}>Circle</MenuItem>\r\n                                            <MenuItem value={'disc'}>Disc</MenuItem>\r\n                                            <MenuItem value={'square'}>Square</MenuItem>\r\n                                            <MenuItem value={'decimal'}>Numbers</MenuItem>\r\n                                            <MenuItem value={'lower-alpha'}>lower-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-alpha'}>upper-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-roman'}>upper-roman</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n\r\n                            {/* items */}\r\n                            <Box className={classes.inputGroup} mt={3}>  \r\n                                {\r\n                                    items.map( (item, index) => {\r\n                                        return (\r\n                                            <Box key={index} display={'flex'} p={1} > \r\n                                                <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='text'\r\n                                                    label={`Item ${index+1}`} \r\n                                                    variant=\"outlined\" \r\n                                                    size='small'  \r\n                                                    value={item}\r\n                                                    onChange={ (e) => {handleItemChange(index, e.target.value)} }     \r\n                                                /> \r\n                                                <ButtonGroup \r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingPageBtn}\r\n                                                    >  \r\n                                                        {\r\n                                                            items.indexOf(item) !== 0 &&\r\n                                                            <Tooltip title='Get Up' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('up', index) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                        {\r\n                                                            items.indexOf(item) !== items.length - 1 &&\r\n                                                            <Tooltip title='Get Down' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('down', index) }} \r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                            \r\n                                                        <Tooltip title='Delete Item' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"secondary\"\r\n                                                                disableElevation={true} \r\n                                                                onClick={() => { deleteItem(index) }}\r\n                                                            > \r\n                                                                <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup> \r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                } \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='text'\r\n                                    label={`New Item`} \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    value={newItem}\r\n                                    onChange={ (e) => {setNewItem(e.target.value)} }     \r\n                                />\r\n                                <Box my={1}>\r\n                                    <Button \r\n                                        onClick={handleAddItem}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        disabled={newItem.length > 0 ? false : true}\r\n                                    >\r\n                                        Add new item\r\n                                    </Button>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                               \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}   \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete List\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes}  \r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,  \r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle, responseValues, responseMobile } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n     \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>   \r\n                                    <p>Paragraph don`t have any response values</p>   \r\n                                </Box>\r\n                            </Box>\r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Background   -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box> \r\n                                      \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border Color  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                     \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) { \r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {},\r\n        imageStabilization: {\r\n            maxWidth: '100%', \r\n            maxHeight: '100%',  \r\n            [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                height: 'auto'\r\n            }, \r\n            // [theme.breakpoints.down('md')]: { \r\n            // }\r\n        },\r\n        mobileClass: {\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                textAlign: 'center', \r\n                marginTop: props.className.marginTop*0.5, \r\n                marginBottom: props.className.marginBottom*0.5,\r\n                '& span': {\r\n                    marginTop: theme.spacing(1)\r\n                }\r\n            }, \r\n            [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                '& span': {\r\n                    marginTop: theme.spacing(1)\r\n                }\r\n            }, \r\n        }\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={`${classes.imageStyle} ${classes.imageStabilization}`}  alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { removeImage } = React.useContext(ImageContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageName, setImageName] = React.useState(props.data.image.imageName || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues, responseMobile, mobileTooltip  } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n\r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.bottom * 0.5}px`,  \r\n                        height: `${margin.bottom * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,   \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }, \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n   \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl,\r\n            imageName: imageName\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) { \r\n            removeImage(imageName)\r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    // const handleImageSetting = (event) => {    \r\n    //     uploadHandler(event.target.files[0])\r\n    //     setIsLoading(true)\r\n    // }\r\n    \r\n    const handleImageUpload = async (e) => { \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n        \r\n        setIsLoading(false) \r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box> \r\n\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>   \r\n                                        <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p> \r\n                                        <p>flexDirection: <b> column</b>; alignItems: <b>center</b> </p>  \r\n                                        <p>TextAlign:  <b>center</b> </p>     \r\n                                    </Box>\r\n                                </Box>\r\n                            </Tooltip> \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageUpload} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Typography variant={'caption'} display='block' align={\"center\"} color={'error'}>\r\n                                        !! set only width, height will set auto\r\n                                    </Typography>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Border  -  { imageBorderColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={imageBorderColor} \r\n                                                changeColor={setImageBorderColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Background  -  { backgroundColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={backgroundColor} \r\n                                        changeColor={setBackgroundColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'left'}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Color  -  { color }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={color} \r\n                                        changeColor={setColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>   \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ListCreator from '../list/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n\r\n    console.log('dumb container work')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,   \r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: { \r\n                marginTop: props.classes.marginTop*0.8,\r\n                marginBottom: props.classes.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                marginTop: props.classes.marginTop*0.5,\r\n                marginBottom: props.classes.marginBottom*0.5\r\n            },\r\n        }\r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n    const classForResp = classes.resposiveFontSize \r\n \r\n    const renderItems = () => ( \r\n        modeDev ?\r\n        props.data.children.map((item) => {   \r\n            switch(item.type) { \r\n                case 'heading' :  \r\n                    return ( \r\n                        <HeadingCreator \r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    ) \r\n                case 'paragraph' :  \r\n                    return (\r\n                        <ParagraphCreator\r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    ) \r\n                case 'paragraphImage' :  \r\n                    return (\r\n                        <ParagraphImageCreator\r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    )\r\n                case 'list' :  \r\n                    return (\r\n                        <ListCreator\r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    )  \r\n                default: break;\r\n            }  \r\n            return null\r\n        })\r\n        :\r\n        props.data.children.map((item) => {  \r\n            switch(item.type) { \r\n                case 'heading' :  \r\n                    return ( \r\n                        <HeadingCreator \r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                case 'paragraph' :  \r\n                    return (\r\n                        <ParagraphCreator\r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                case 'paragraphImage' :  \r\n                    return (\r\n                        <ParagraphImageCreator\r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                case 'list' :  \r\n                    return (\r\n                        <ListCreator\r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                default: break;\r\n            }  \r\n            return null\r\n        })\r\n        \r\n    )\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classForResp}`}\r\n                > \r\n                    <Paper style={{padding: '0 15px'}}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classForResp}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                 { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\nimport ImageContext from '../../../context/imageContext/ImageContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    const {removeImage} = React.useContext(ImageContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n             \r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    zIndex: 25,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n\r\n            \r\n\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => { \r\n\r\n        let filtered = props.data.children.filter((item) => (item.id !== id))   \r\n        // save in firestore \r\n        props.reSaveContainer(props.data.id, filtered)   \r\n    }\r\n\r\n    const handleClose =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) {\r\n            let images = createArrayImages() \r\n            images.forEach( imageName => {\r\n                removeImage(imageName)\r\n            })\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n    const createArrayImages = () => {\r\n        let images = []\r\n        props.data.children.forEach( item => {\r\n            if(item.type === 'paragraphImage') {\r\n                images.push(item.image.imageName)\r\n            }\r\n        })\r\n        return images\r\n    }\r\n    createArrayImages()\r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleClose} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        handleClose={handleClose}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, darken } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n    \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        if(color === 'primary') { \r\n            color = theme.palette.primary.main\r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n        if(color === 'secondary') {\r\n            color = theme.palette.secondary.main \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n        if(color === 'custom') { \r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none', \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } ,\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('md')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50),\r\n                    textAlign: 'auto'\r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 30),\r\n                }\r\n            }\r\n        } )\r\n    })\r\n \r\n    \r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className={`bulder-main-banner ${classes.styleClass}`}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"bulder-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                {\r\n                                    titleSubIcon &&\r\n                                    <svg style={{fill: '#fff'}}>       \r\n                                        <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                    </svg>\r\n                                }\r\n                                \r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"bulder-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"bulder-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} className=\"col-lg-5\"> \r\n                        <div className=\"bulder-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'    \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const { removeImage } = React.useContext(ImageContext)\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n    const [iconName, setIconName] = React.useState(props.data.headingIcon.iconName || '')\r\n \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 40)\r\n    const tabletMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50)\r\n    const tabletMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        } \r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel,  \r\n            responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${tabletMarginTopComputed}px`,  \r\n                        height: `${tabletMarginTopComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px `,  \r\n                        height: `${mobileMarginTopComputed}px `,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`,  \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${tabletMarginBottomComputed}px`,  \r\n                        height: `${tabletMarginBottomComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px `,  \r\n                        height: `${mobileMarginBottomComputed}px `,\r\n                    }\r\n                } \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleImageUpload = async (e, imageType) => {  \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        if( imageType === 'mainImage')  { \r\n            removeImage(imageName)   \r\n        }\r\n        if( imageType === 'icon') {\r\n            removeImage(iconName)   \r\n        }\r\n \r\n          \r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        if( imageType === 'mainImage')  { \r\n            setImageName(generateImageName)\r\n            setImageUrl(downloadURL)  \r\n        }\r\n        if( imageType === 'icon') {\r\n            setIconName(generateImageName)\r\n            setIconUrl(downloadURL)\r\n        }\r\n          \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl,\r\n            iconName : iconName\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) { \r\n            removeImage(imageName) \r\n            removeImage(iconName) \r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Main Banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Main Banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                                <TabletMacIcon/>\r\n                                                <Box>   \r\n                                                    <p> \r\n                                                        MarginTop: <b>{tabletMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{tabletMarginBottomComputed}</b> \r\n                                                    </p>     \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button color='primary' variant={'contained'} className={classes.btnWithLabel} > \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            {\r\n                                                iconUrl &&\r\n                                                <Box ml={1}>\r\n                                                    <img src={iconUrl} alt='icon' width={35} />\r\n                                                </Box>\r\n                                            }\r\n                                            \r\n                                        </Box> \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Sub Heading\" \r\n                                            variant=\"outlined\" \r\n                                            size='small'  \r\n                                            value={subHeading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Input Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={inputLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setInputLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Button Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={buttonLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setButtonLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                        <TextField   \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Form Policy\" \r\n                                            size='small'  \r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                /> \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'>  \r\n                                            <Button color='primary' variant='contained' className={classes.btnWithLabel} > \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        {\r\n                                            imageUrl &&\r\n                                            <Box ml={1} maxWidth={300}>\r\n                                                <img src={imageUrl} alt='main' width={'100%'} />\r\n                                            </Box>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        if(color === 'primary')  color = theme.palette.primary.main\r\n        if(color === 'secondary') color = theme.palette.secondary.main \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className={`${classes.styleClass} bulder-accordion heading`}>\r\n            <Container maxWidth={maxWidthContainer} className={classes.disableMobileGutters}>\r\n\r\n                {\r\n                    heading.length > 0 &&\r\n                    <h3> { heading } </h3> \r\n                }\r\n                \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"bulder-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"bulder-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n \r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg')\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, \r\n            containerWrapper, responseValues ,responseMobile , mobileTooltip \r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   } ,\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItem = (index, value, place) => { \r\n        const newItems = items.slice()\r\n        newItems[index][place] = value\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = () => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: \"heading\",\r\n            body: \"body\"\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newItems = items.slice()\r\n        newItems.splice(index, 1) \r\n \r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}> \r\n            <Tooltip  title={`accordion margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`accordion margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >   \r\n                <Box className={classes.btnDrawerStyle}> \r\n\r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Accordion Settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={3}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n\r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Head\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.head}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'head') } }     \r\n                                                            /> \r\n                                                        </Box>\r\n                                                        \r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Body\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.body}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'body') } }     \r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <Box my={2}>\r\n                                            <Button \r\n                                                variant='contained' \r\n                                                color='primary'\r\n                                                onClick={addItem}\r\n                                            >\r\n                                                Add item\r\n                                            </Button>\r\n                                        </Box>\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                />   \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box, darken } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload  \r\n    let color = props.data.color || 'primary'\r\n    let colorFocusInput\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n        if(color === 'primary') { \r\n            color = theme.palette.primary.main\r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n        if(color === 'secondary') {\r\n            color = theme.palette.secondary.main \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n        if(color === 'custom') { \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n        return ({\r\n            svg: {\r\n                fill: theme.palette.secondary.main\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                color: '#fff',\r\n                 \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${color} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }, \r\n            styleClass: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),  \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),  \r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className={`bulder-contact ${classes.styleClass}`}> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`bulder-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"bulder-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, \r\n    ButtonGroup, makeStyles, Modal, DialogContent, Switch, \r\n    FormControlLabel, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.mapFrame === null ? false : true)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.color])\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n        \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Contact Map margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Contact Map margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Contacts Map Settings  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p>  \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                         \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Location\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={location}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setLocation(e.target.value) } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Phone\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={phone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Comment Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\" \r\n                                            value={inputComment}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputComment(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                    <TextField  \r\n                                                        multiline\r\n                                                        fullWidth\r\n                                                        type='text'\r\n                                                        label=\"Map Frame\" \r\n                                                        variant=\"outlined\"  \r\n                                                        value={mapFrame}\r\n                                                        onChange={ (e) => { setIsDisableBtn(false);  setMapFrame(e.target.value)  } }     \r\n                                                    />\r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                    noInherit={true}\r\n                                                />  \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n  \r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, darken } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const { imageList } = React.useContext(ImageContext)\r\n      \r\n    const imageUrl = props.data.image\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    let imageName = props.data.imageName\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    let colorButton = props.data.colorButton || '#f00'\r\n \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorButton === 'primary')  colorButton = theme.palette.primary.main\r\n        if(colorButton === 'secondary') colorButton = theme.palette.secondary.main  \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth={maxWidthContainer} >\r\n                <div className={`${classes.styleClass} bulder-about heading`}>\r\n                    <Grid container> \r\n                        <Grid item xs={12} md={6} >\r\n                            <div className=\"bulder-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"bulder-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers' \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n      \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(props.data.colorButton !== 'primary' && props.data.colorButton !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, \r\n            containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip\r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave, \r\n            btnWithLabel: btnWithLabel,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n  \r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf)  {\r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n           \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`about margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`about margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                            <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                            <Select\r\n                                                                labelId=\"color-select-label\"\r\n                                                                id=\"color-select\"\r\n                                                                value={colorSelect}\r\n                                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                            >\r\n                                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        <Box ml={1} >\r\n                                                            {\r\n                                                                colorSelect === 'custom' &&\r\n                                                                <ColorPicker\r\n                                                                    initialColor = {colorCustom}\r\n                                                                    changeColor = {setColorCustom}\r\n                                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                                    position = {'right'}\r\n                                                                    noInherit={true}\r\n                                                                />  \r\n                                                            }\r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { darken, fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n  \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorMain === 'primary')  colorMain = theme.palette.primary.main\r\n        if(colorMain === 'secondary') colorMain = theme.palette.secondary.main  \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain,\r\n                border: `1px solid ${colorMain}`, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorMain, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    paddingTop: \".4em\",\r\n                    paddingBottom: \".4em\",\r\n                    '&:hover' : {\r\n                        backgroundColor: colorMain , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0),  \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            },\r\n            styleClass: {\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={`${classes.containerColored} ${classes.styleClass}`}> \r\n            <Container maxWidth={maxWidthContainer} > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(props.data.colorMain !== 'primary' && props.data.colorMain !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, \r\n            btnDrawerItem, containerWrapper , responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Action Line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Action Line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Action Line\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Heading Size\"\r\n                                                variant=\"outlined\"\r\n                                                value={headingSize}\r\n                                                onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setHeadingSize(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>{ headingSize*0.65 }</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                   \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Block</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'top'}\r\n                                                    noInherit={true}\r\n                                                />  \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React , {useState} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box\r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isBotton = rows.length - visibleRows > 0 ? true : false  \r\n    const [isBottonClick, setIsBottonClick] = useState(false)\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        if(mainColor === 'primary')  mainColor = theme.palette.primary.main\r\n        if(mainColor === 'secondary') mainColor = theme.palette.secondary.main  \r\n        return ({\r\n            table: {\r\n                minWidth: 200,\r\n            },\r\n            \r\n            tableCell: {\r\n                paddingTop: theme.spacing(2), \r\n                paddingBottom: theme.spacing(2),  \r\n                [theme.breakpoints.down('md')]: { \r\n                    paddingTop: theme.spacing(1), \r\n                    paddingBottom: theme.spacing(1), \r\n                },\r\n            },\r\n            tableButtonCell: { \r\n                maxWidth: 300,\r\n                width: 300,\r\n                [theme.breakpoints.down('md')]: {\r\n                    width: 'auto', \r\n                },\r\n            },\r\n            tableButton: { \r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                fontSize: 14, \r\n                lineHeight: 1.2, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    padding: theme.spacing(1), \r\n                },\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsBottonClick(!isBottonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(!isBottonClick)\r\n        return (\r\n            rows.map((row, index) => {\r\n                if(index < visibleRows)\r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n                return false\r\n            })\r\n        )\r\n        if(isBottonClick)\r\n        return (\r\n            rows.map((row, index) => { \r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n            })\r\n        )\r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true}  >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableCell}>\r\n                {row.price}\r\n            </TableCell> \r\n            <TableCell align=\"right\" className={`${classes.tableButtonCell} ${classes.tableCell}`}> \r\n                <Button \r\n                    variant='contained'   \r\n                    className={classes.tableButton}\r\n                    onClick={() => { handleOpenModal(row.name) }}\r\n                >\r\n                    { buttonText }\r\n                </Button>\r\n            </TableCell>\r\n        </StyledTableRow>\r\n    )\r\n    const renderBotton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isBottonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth={maxWidthContainer} className={`${classes.tableContainer} heading`} >\r\n            {\r\n                heading.length > 0 &&\r\n                <h3> { heading } </h3> \r\n            }\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={`${classes.tableHeader} ${classes.tableCell}` }\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            <TableCell align=\"right\" className={`${classes.tableHeader} ${classes.tableCell}` } ></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            renderRows()\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isBotton &&\r\n                renderBotton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n \r\n    const [textButton,  setTextButton] = React.useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    const [rows, setRows] = React.useState(props.data.rows)\r\n    const [tableRow, setTableRow] = React.useState(props.data.tableRow)\r\n\r\n    const [visibleRows, setVisibleRows] = React.useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = React.useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = React.useState(props.data.visibleBottonTextClick || 'Show less') \r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n     \r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper ,\r\n            responseValues ,responseMobile , mobileTooltip} = commonClasses \r\n\r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,  \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeTable = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleTableHeadChange = (index, value) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChange = (index, place, value) => {\r\n        const newRows = rows.slice()\r\n        newRows[index][place] = value\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addRow = () => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: \"Table Row\", \r\n            price: 100 \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Table margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Table margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        \r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Text Button\"\r\n                                            variant=\"outlined\"\r\n                                            value={textButton}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setTextButton(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <TextField \r\n                                                            fullWidth\r\n                                                            type='text'\r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant=\"outlined\"\r\n                                                            value={item}\r\n                                                            onChange={(e) => {\r\n                                                            setIsDisableBtn(false);\r\n                                                            handleTableHeadChange(index, e.target.value)\r\n                                                        }}/>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n\r\n                                                            <Box mr={0.5}>\r\n                                                                <Typography variant='caption'>\r\n                                                                    Row {index + 1}\r\n                                                                </Typography>\r\n                                                            </Box>\r\n\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                        <Box mr={1} flexGrow={1}>\r\n                                                            <TextField \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label={`Table Row Name ${index + 1}`}\r\n                                                                variant=\"outlined\"\r\n                                                                value={item.name}\r\n                                                                onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    handleRowChange(index, 'name', e.target.value)\r\n                                                                }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                        <Box >\r\n                                                            <TextField \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label={`Table Row Price ${index + 1}`}\r\n                                                                variant=\"outlined\"\r\n                                                                value={item.price}\r\n                                                                onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    handleRowChange(index, 'price', e.target.value)\r\n                                                                }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Button\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        onClick={addRow}\r\n                                    >\r\n                                        Add Row\r\n                                    </Button>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <Box  display=\"flex\" >\r\n                                            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Color for Table</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={colorSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box ml={1} >\r\n                                                {\r\n                                                    colorSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {colorCustom}\r\n                                                        changeColor = {setColorCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        noInherit={true}\r\n                                                        position = {'right'}\r\n                                                    />  \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='number'\r\n                                                label={`Quantity to show`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleRows}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleRows(Number(e.target.value))\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='text'\r\n                                                label={`Text for botton`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleBottonText}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleBottonText(e.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <TextField  \r\n                                            type='text'\r\n                                            label={`Text for botton clicked`}\r\n                                            variant=\"outlined\"\r\n                                            value={visibleBottonTextClick}\r\n                                            onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setVisibleBottonTextClick(e.target.value)\r\n                                            }}\r\n                                        />\r\n                                    </Box>\r\n                                                \r\n                                    \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, makeStyles, Button, Box, Grid, fade, darken } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/lineForm.scss' \r\n\r\nfunction DumbComponent(props) { \r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('') \r\n   \r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone \r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n      \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    let color = props.data.color\r\n    let colorFocusInput\r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        if(color === 'primary') { \r\n            color = theme.palette.primary.main\r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n        if(color === 'secondary') {\r\n            color = theme.palette.secondary.main \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n        if(color === 'custom') { \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n\r\n        return ({ \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper,  \r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            },\r\n            lineDecor: {\r\n                position: \"absolute\",\r\n                top: 8,\r\n                left: 8,\r\n                right: 8,\r\n                bottom: 8,\r\n                border: `1px solid ${fade(color, 0.25)}`,\r\n                borderRadius: 4,\r\n            },\r\n            input: {\r\n                width: '100%',\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: 'inherit',\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                height: 50,\r\n                paddingLeft: 45,\r\n                paddingRight: 25, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center' ,\r\n                    paddingLeft: 20,\r\n                    paddingRight: 20, \r\n                }\r\n            },\r\n            button: {\r\n                width: '100%',\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                height: 50,\r\n                textTransform: 'inherit', \r\n                \r\n                color: theme.palette.getContrastText(color),\r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: 0,  \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.getContrastText(theme.palette.background.paper),\r\n                    }\r\n                }, \r\n            }, \r\n            gridItem: {\r\n                paddingRight: theme.spacing(1),\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginBottom: 10,  \r\n                }\r\n            },\r\n            policy: {\r\n                height: \"100%\", \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                fontSize: 12,\r\n                lineHeight: 1.2,\r\n                fontWeight: 300, \r\n                [theme.breakpoints.down('md')]: {\r\n                    marginTop: 10, \r\n                    textAlign: 'center', \r\n                    justifyContent: 'center'\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName,  \r\n            place: 'line Form',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('') \r\n\r\n    }\r\n    return ( \r\n        <div className={classes.itemBackground}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className=\"line-form\"> \r\n                    <Box className={classes.lineDecor} ></Box>\r\n                    {\r\n                        heading.length > 0 &&\r\n                        <h5>\r\n                            {heading}\r\n                        </h5>\r\n                    }\r\n                    {\r\n                        paragraph.length > 0 &&\r\n                        <p>\r\n                            {paragraph}\r\n                        </p>\r\n                    } \r\n\r\n                    <form onSubmit={handleSubmit} style={{position: 'relative', zIndex: 5}}>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name={`name-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputName} \r\n                                    value={formName}\r\n                                    onChange={(e) => {setFormName(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"tel\" \r\n                                    name={`phone-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputPhone} \r\n                                    value={formPhone}\r\n                                    onChange={(e) => {setFormPhone(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4} lg={3} className={classes.gridItem}>\r\n                                <Button \r\n                                    type=\"submit\"\r\n                                    className={classes.button} \r\n                                >\r\n                                    <span>\r\n                                       { buttonText}\r\n                                    </span>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={3} >\r\n                                <span className={classes.policy}>\r\n                                    { policy }\r\n                                </span> \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                    </form>\r\n                </div> \r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, ButtonGroup, makeStyles, Modal, DialogContent, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n \r\n    const [heading, setHeading] = React.useState(props.data.heading || '')\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '') \r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.color])\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n     \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)  \r\n        newData.heading = heading \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone  \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy  \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Form line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Form line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Form Line Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Settings Form line  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    \r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select> \r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                      \r\n                                    <Box mt={2} >   \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                    noInherit={true}\r\n                                                />  \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }  \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Typography, Container, Box, fade } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\n// import '../../../assets/style/swiperCustom.scss';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\n// import 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nSwiperCore.use([Navigation]);\r\n\r\n// import ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    // const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = \"props.data.heading \"\r\n\r\n    // const heading = props.data.heading \r\n     \r\n    // let colorMain = props.data.colorMain || '#f00' \r\n    // const openModal = () => {\r\n    //     handleOpen(targetButton)\r\n    // }\r\n    const slideWidth = 300 \r\n    const spaceBetween = 30\r\n\r\n    const [slideForView, setSlideForView] = React.useState(1)\r\n    // const [slideWidth, setSlideWidth] = React.useState(500)\r\n    const [slideHeight, setSlideHeight] = React.useState(slideWidth)\r\n\r\n    const slideRef = React.useRef(null);\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        // if(colorMain === 'primary')  colorMain = theme.palette.primary.main\r\n        // if(colorMain === 'secondary') colorMain = theme.palette.secondary.main   \r\n        return ({ \r\n            heading: {  \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center',  \r\n            },\r\n            swiper: {\r\n                marginTop: 50, \r\n                marginBottom: 50, \r\n                '& .swiper-button-prev': {\r\n                    color: theme.palette.secondary.main, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: theme.palette.secondary.main, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                    }\r\n                },\r\n                '& .swiper-pagination': { \r\n\r\n                },\r\n                '& .swiper-pagination-bullet': {\r\n                    // width: 12, \r\n                    // height: 12\r\n                },\r\n                '& .swiper-pagination-bullet-active': {\r\n                    backgroundColor: theme.palette.secondary.main\r\n                }, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& .swiper-button-prev': {\r\n                        display: 'none !important'\r\n                    },\r\n                    '& .swiper-button-next': {\r\n                        display: 'none'\r\n                    }\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                     \r\n                }\r\n            },\r\n            slide: {\r\n                position: 'relative',  \r\n                height: slideHeight,  \r\n                width: slideWidth, \r\n                overflow: 'hidden',   \r\n            },\r\n            slideBox: {\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }, \r\n            slideImg: {\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover'\r\n            },\r\n            slideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: 14, \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2)\r\n            }\r\n             \r\n        })\r\n    });\r\n\r\n\r\n    const classes  = useStyles();\r\n \r\n    React.useEffect(() => {  \r\n        const getWidthViewport = () => {  \r\n            let actualWidth = window.innerWidth\r\n            let quantity = Math.floor(actualWidth/slideWidth)\r\n            if(quantity !== 0) setSlideForView(quantity)\r\n            else setSlideForView(1)\r\n \r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current.clientWidth\r\n                    setSlideHeight(slideHeightCalc)\r\n                    // if(actualWidth > slideWidth ) {\r\n                    //     setSlideHeight(slideHeightCalc)\r\n                    // }\r\n                    // else {\r\n                    //     setSlideHeight(300)\r\n                    //     setSlideWidth(300)\r\n                    // } \r\n                }, 300)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n        window.removeEventListener('resize', getWidthViewport )\r\n        window.addEventListener(\"resize\", () => getWidthViewport())\r\n        // eslint-disable-next-line\r\n    }, []);\r\n \r\n    const items = [1, 2, 3, 4 ,5 , 6, 7, 8, 9]\r\n\r\n    const renderSlide = (slide) => (\r\n        <SwiperSlide key={slide} ref={slideRef} className={`${classes.slide} js-slide-height-computed `}>\r\n            <Box className={classes.slideBox}>\r\n                <Box \r\n                    style={{backgroundImage: `url(https://c8.alamy.com/comp/2A27D1R/square-format-view-of-empty-ocean-and-sky-landscape-with-expressive-clouds-2A27D1R.jpg)`}}\r\n                    className={classes.slideImg}\r\n                />\r\n                <Typography\r\n                    component='h6'\r\n                    className={classes.slideTitle}\r\n                >\r\n                    Slide Title \"fade\", \"cube\", \"coverflow\" or \"flip\" - {slide}  Slide Title \"fade\", \"cube\", \"coverflow\" or \"flip\"\r\n                </Typography>\r\n            </Box>\r\n        </SwiperSlide>\r\n    )\r\n    return ( \r\n        <Container className={`${classes.swiper} heading`}>\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            <Swiper\r\n                // loop={false} \r\n                // autoplay={}\r\n                // freeMode={true} \r\n                // \"fade\", \"cube\", \"coverflow\" or \"flip\"\r\n\r\n                height={slideHeight}\r\n                spaceBetween={spaceBetween}\r\n                speed={200}\r\n                slidesPerView={slideForView}\r\n \r\n                navigation \r\n                // pagination={{ clickable: true }}\r\n                // scrollbar={{ draggable: true }}\r\n \r\n                onSlideChange={() => console.log('slide change')}\r\n                // onSwiper={(swiper) => console.log(swiper)}\r\n            >\r\n                {\r\n                    items.map( slide => {\r\n                        return renderSlide(slide)\r\n                    } )\r\n                }\r\n            </Swiper>\r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {/* {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                : */}\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            {/* }  */}\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react' \r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n    \r\n    const { removeImage } = React.useContext(ImageContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)  \r\n    const [minHeight, setMinHeight] = React.useState(props.data.minHeight)  \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [colorTextSelect,  setColorTextSelect] = React.useState(props.data.colorText || 'inherit')\r\n    const [colorTextCustom, setColorTextCustom] = React.useState(props.data.colorText || 'inherit') \r\n\r\n    const [paddingVertical, setPaddingVertical] = React.useState(props.data.paddingVertical || 80)\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 0)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    const paddingVerticalComputed = paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20)\r\n\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    React.useEffect(() => {\r\n        if(props.data.colorButton !== 'primary' && props.data.colorButton !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n        if(props.data.colorText !== 'primary' && props.data.colorText !== 'secondary' ) {  \r\n            setColorTextSelect('custom')\r\n        }\r\n    }, [props.data.colorButton, props.data.colorText ]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel , \r\n             responseValues ,responseMobile , mobileTooltip} = commonClasses \r\n        \r\n        const { mtView, mbView, ptView, pbView  } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $ptView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $pbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.paragraph = paragraph   \r\n        newData.minHeight = minHeight   \r\n        newData.isButton = isButton   \r\n        newData.textButton = textButton   \r\n        newData.targetButton = targetButton   \r\n        newData.imageUrl = imageUrl   \r\n        newData.imageName = imageName\r\n        newData.paddingVertical = paddingVertical\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) { \r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` banner padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` banner padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Example Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Banner\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Min Height for block\"\r\n                                                variant=\"outlined\"\r\n                                                value={minHeight}\r\n                                                onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setMinHeight(e.target.value)\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Padding Top/Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={paddingVertical}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setPaddingVertical(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        Padding Top/Bottom: <b>{paddingVerticalComputed }</b> ; MinHeight: <b>{minHeight}</b>\r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Text</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorTextSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorTextSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorTextSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorTextCustom}\r\n                                                    changeColor = {setColorTextCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'top'}\r\n                                                    noInherit={false}\r\n                                                />  \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n                                   \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box> \r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                            <InputLabel id=\"color-select-label\">Color for Botton</InputLabel>\r\n                                                            <Select\r\n                                                                labelId=\"color-select-label\"\r\n                                                                id=\"color-select\"\r\n                                                                value={colorSelect}\r\n                                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                            >\r\n                                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        <Box ml={1} >\r\n                                                            {\r\n                                                                colorSelect === 'custom' &&\r\n                                                                <ColorPicker\r\n                                                                    initialColor = {colorCustom}\r\n                                                                    changeColor = {setColorCustom}\r\n                                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                                    position = {'top'}\r\n                                                                    noInherit={true}\r\n                                                                />  \r\n                                                            }\r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n \r\n                                   \r\n   \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ?\r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                : \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent, Divider } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\nimport FormLineElement from '../library/formLine/ElementCreator'  \r\nimport SwiperElement from '../library/swiper/ElementCreator'  \r\nimport BannerElement from '../library/banner/ElementCreator'  \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n  const FormLineLayout = layouts.formLine \r\n  const SwiperLayout = layouts.swiper \r\n  const BannerLayout = layouts.banner \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => {\r\n    const classesRef = StylesChangers()\r\n  const commonClasses = classesRef(theme)\r\n\r\n  const { menu, menuTitle } = commonClasses \r\n    return ({ \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 80,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 600, \r\n        left: \"calc(50% - 300px)\",\r\n      }},     \r\n      menuTitle: menuTitle,\r\n      tooltip: {\r\n        fontSize: 14\r\n      }, \r\n      boxMenuItem : { \r\n        display: 'inline-block',\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n      }\r\n\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    // newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n   \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container') newCont = Object.assign({}, ContainerLayout) \r\n    if(type === 'mainBanner') newCont = Object.assign({}, MainBannerLayout) \r\n    if(type === 'accordion') newCont = Object.assign({}, AccordionLayout) \r\n    if(type === 'contactMap') newCont = Object.assign({}, СontactMapLayout) \r\n    if(type === 'about') newCont = Object.assign({}, AboutLayout) \r\n    if(type === 'actionLine') newCont = Object.assign({}, ActionLineLayout) \r\n    if(type === 'table') newCont = Object.assign({}, TableLayout) \r\n    if(type === 'formLine') newCont = Object.assign({}, FormLineLayout) \r\n    if(type === 'swiper') newCont = Object.assign({}, SwiperLayout) \r\n    if(type === 'banner') newCont = Object.assign({}, BannerLayout) \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n        \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n    \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'formLine') { \r\n          return(\r\n              <FormLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'swiper') { \r\n          return(\r\n              <SwiperElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'banner') { \r\n          return(\r\n              <BannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <React.Fragment> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <Box className={classes.btnContainer}  >\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Add Block for Page <OpenWithIcon/>\r\n                            </Typography> \r\n                            \r\n                            \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Container for heading, paragraph, image-paragraph, list' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                    Container\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With form\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block to start the page. Contain: text, form, image(desktop only)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                    Main Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                           \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Contain: location and phone view, contact form, map. Has two different displays, with and without a map' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                    Contacts with Map\r\n                                </Button>  \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Small contact form with optional heading and paragrapher' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('formLine') }}>\r\n                                    Add Form Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Accordion with heading on top' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                    Accordion\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip title='Line for small text paragrapher with ability to add a button modal  ' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                    Colored Action Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Table with heading on top. Has ability to add \"Show More Botton \" on bottom' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                    Add Table \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With image\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block with heading, paragraph and image. Image on desktop - 50% vieport width. Image on mobile - 50% vieport width . Has the ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                    About\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Simple slider with square images' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('swiper') }}>\r\n                                    Swiper\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Banner with background image, heading, paragraph and modal button (optional)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('banner') }}>\r\n                                    Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </Box>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/functions/ScrollToTop' \r\nimport ImageRemover from '../components/functions/ImageRemover' \r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n \r\n    const {categories, idArrayForDelete, clearArrayForDelete } = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    \r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            {/* <ImageRemover\r\n                idArrayForDelete={idArrayForDelete}\r\n                clearArrayForDelete={clearArrayForDelete}\r\n            /> */}\r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton\r\n} from '@material-ui/core'; \r\nimport { darken } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, \r\n    // handleOpen, \r\n    handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2  \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n\r\n    if(colorButton === 'primary') {\r\n        colorGradient1 = theme.palette.primary.main\r\n        colorGradient2 = theme.palette.primary.dark\r\n    }\r\n    if(colorButton === 'secondary') {\r\n        colorGradient1 = theme.palette.secondary.main\r\n        colorGradient2 = theme.palette.secondary.dark\r\n    }\r\n    if(colorButton !== 'primary' && colorButton !== 'secondary' ) {\r\n      if(modalSettings.colorButton) {\r\n        colorGradient1 = modalSettings.colorButton\r\n        colorGradient2 = darken(modalSettings.colorButton, 0.4)\r\n      } \r\n    } \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        }\r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n\r\n  // const openModal = () => {\r\n  //   handleOpen('')\r\n  // }\r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <button type=\"button\" onClick={ openModal }>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nconst  AlertComponent = (props) => {\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        props.closeAlert()\r\n    }\r\n\r\n    const alertText = () => {\r\n        if(props.severity === 'success') return \"Your request was accepted successfully\"\r\n        if(props.severity === 'info') return \"Your request is being processed\"\r\n        if(props.severity === 'error') return \"An error has occurred :(\"\r\n        if(props.severity === 'warning') return \"Warning!\"\r\n    }\r\n      \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={props.severity} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText() }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert, closeAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert severity={isShowAlert} closeAlert={closeAlert} /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}