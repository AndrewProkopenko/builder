{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/ScrollToTop.js","components/placeholders/LoadingProgress.js","styles/changers.js","components/header/headerHelpers/CategoriesChanger.js","components/library/colorPicker/ColorPicker.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/headerHelpers/RequestsChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/library/table/DumbComponent.js","components/Login.js","components/Error.js","styles/inputs.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","imageList","name","url","quantity","nameList","fetchListFromStorage","fetchListFromFirestore","listRef","ref","imagesArray","listAll","res","items","forEach","itemRef","push","fullPath","imageData","storageRef","put","on","snapshot","message","getDownloadURL","answerUrl","child","removeImage","SendFormContext","SendFormProvider","requests","modalSettings","isShowAlert","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","setTimeout","req","newList","slice","newReq","Object","assign","time","getCurrentDate","closeAlertFromTimeout","updateRequests","updateModalSettings","sendRequests","closeAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","StylesChangers","theme","menu","palette","background","paper","paddingLeft","paddingRight","paddingBottom","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","fontSize","fontWeight","borderBottom","divider","default","padding","marginBottom","cursor","btnSetting","deepOrange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","btnSave","bottom","paddingTop","opacity","btnDrawerStyle","easeIn","btnDrawerItem","secondary","containerWrapper","outline","outlineColor","main","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","commonClasses","classesRef","maxWidth","listPages","marginTop","listStyle","titlePages","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","indexOf","length","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","dumbWrapper","Tooltip","title","placement","Button","onClick","size","variant","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","spacing","xs","onSubmit","e","preventDefault","newCategory","uuid","FormGroup","Box","mb","TextField","required","label","onChange","IconButton","fullWidth","index","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","ColorPicker","memo","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","save","contrastColor","getContrastText","primary","boxColor","flexGrow","marginRight","border","borderRadius","shape","shortest","boxShadow","shadows","boxPicker","prevOpen","onChangeComplete","newColor","hex","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","colorSelect","setColorSelect","colorCustom","setColorCustom","uploadHandler","htmlFor","event","files","src","alt","Divider","margin","FormControlLabel","control","Switch","checked","FormControl","InputLabel","Select","labelId","MenuItem","newLogo","newModal","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","row","Number","newSettings","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","colorPreview","colorItem","flexWrap","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","innerIndex","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","my","content","indexPage","borderTop","px","edge","DumbComponent","modalBtnColor1","modalBtnColor2","widthMobile","headerHeight","setHeaderHeight","backgroundHeader","modalBtnColor","darken","header","fixedPadding","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","buttonModal","setResponsiveness","headHeight","document","querySelector","clientHeight","setMobileView","removeEventListener","addEventListener","mobileView","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","RequestsChanger","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","amber","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","String","CardActions","isCheck","handleOnceCheck","handleRemove","Checkbox","request","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","ml","newData","AdminHeader","buttonSettings","settingsContainer","wrapper","providerData","ModalChanger","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ElementCreator","Header","Footer","fill","footer","footerHeading","CustomizedTables","mainColor","rows","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isBotton","isBottonClick","setIsBottonClick","StyledTableRow","withStyles","TableRow","table","tableNameCell","tablePriceCell","tableButtonCell","tableButton","tableContainer","down","tableHeader","handleVisible","OnceRow","hover","TableCell","scope","align","price","TableContainer","Table","TableHead","TableBody","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","Avatar","loginWithEmail","err","autoComplete","autoFocus","Alert","severity","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","setPadding","setMargin","setDisplay","setFlexDirection","setBackgroundColor","shadow","setShadow","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","setChildren","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","toggleDrawer","addHeading","a","newChildren","newItem","reSaveContainer","pt","pb","mr","aria-haspopup","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","resposiveFontSize","sm","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","focus","sentData","reSaveChildren","prop","removeItem","imageStyle","multiline","rowsMax","imageClassName","mobileClass","imageUrl","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageAccordion","imagePreview","imageLabel","handleImageMargin","classForResp","confirm","isFirst","swapContainer","isLast","removeContainer","newArr","colorFocusInput","formPhone","setFormPhone","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","input","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","md","xlinkHref","phone","place","placeholder","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","handleImageUpload","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","setItems","handleUpdateItem","newItems","swapItem","splice","colorMapOnload","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","fontFamily","link","boxForFlex","heightRegular","linksContainer","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","cols","setLocation","setPhone","setInputComment","setMapFrame","isButton","setIsButton","textButton","targetButton","setTextButton","setTargetButton","colorTheme","headingSize","colorMain","fade","containerColored","containerFlexed","setHeadingSize","setRows","setTableRow","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","handleRowChange","newRows","newRow","handleTableHeadChange","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","setData","btnContainer","fetchData","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","history","m","key","orderFirst","orderLast","RouterComponent","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","closeBtn","targetContainer","targetLabel","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.64d6e8f5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 959) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n      \r\n    } \r\n\r\n    async updateCategories(data) {\r\n        console.log('firebase update')\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {   \r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    state = { \r\n        imageList: [ \r\n            {\r\n                name: 'name' , \r\n                url: 'url', \r\n                quantity: 2, \r\n\r\n            }\r\n        ],\r\n        nameList: []\r\n    } \r\n\r\n    async componentDidMount() { \r\n          this.fetchListFromStorage()\r\n          this.fetchListFromFirestore()\r\n    }\r\n\r\n    async fetchListFromStorage() {\r\n        const listRef = firebase.storage.ref(); \r\n        \r\n        let imagesArray = []\r\n\r\n        await listRef.listAll().then(function(res) {\r\n            res.items.forEach(function(itemRef) { \r\n                imagesArray.push(itemRef.fullPath) \r\n            });\r\n          }).catch(function(error) {\r\n              console.log(error) \r\n          });\r\n          this.setState({\r\n            imageList: imagesArray\r\n          }) \r\n    }\r\n\r\n    async fetchListFromFirestore() {\r\n        const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n        const doc = await listRef.get();\r\n      \r\n        if (!doc.exists) {\r\n            console.log('No such page!');  \r\n\r\n        } else { \r\n            this.setState({\r\n                nameList: doc.data().list\r\n            }) \r\n        }\r\n    }\r\n    async uploadImage(imageData) {\r\n        let answerUrl\r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log(\"image uploaded\")\r\n            // console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => { \r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                answerUrl = url \r\n              })\r\n          }\r\n        )\r\n        return answerUrl\r\n    }\r\n\r\n    removeImage(name) { \r\n        const storageRef = firebase.storage.ref();\r\n \r\n        const imageRef = storageRef.child(name)\r\n     \r\n        imageRef.delete().then(function() {\r\n            console.log('File deleted successfully')\r\n        }).catch(function(error) {\r\n            console.log(error) \r\n        }); \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    imageList: this.state.imageList, \r\n                    nameList: this.state.nameList ,\r\n                    // updateImageNameList: (name) => {\r\n                    //     let newList = this.state.nameList.slice()\r\n                    //     let isUnic = true\r\n                    //     newList.map((item) => {\r\n                    //         if( item === name ) isUnic = false\r\n                    //     })\r\n                    //     if(isUnic) newList.push(name)\r\n\r\n                    //     this.setState({\r\n                    //         nameList: newList\r\n                    //     }) \r\n                    //     firebase.db.collection(\"site1category\").doc('imageList').update({\r\n                    //         list: newList\r\n                    //     })\r\n                    // },\r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isShowAlert: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            }) \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout() {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isShowAlert: null\r\n            })\r\n        }, 7000);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isShowAlert: 'info'\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isShowAlert: 'success'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isShowAlert: 'error'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isShowAlert, \r\n                    modalSettings: this.state.modalSettings, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isShowAlert: null\r\n                        })\r\n\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            paddingBottom: 0,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                 \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            }\r\n        },\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n    \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n       \r\n        return( { \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 350px)\",\r\n                maxWidth: 700,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,\r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid #eee`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) { \r\n                console.log(newPage)\r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => { \r\n        console.log('update')\r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n         \r\n        console.log(activeIndex)\r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        }) \r\n        console.log(newCategories)\r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    <Tooltip title='Delete Category' placement='top'>\r\n                                                        <Button\r\n                                                            variant='contained'\r\n                                                            color=\"default\"\r\n                                                            disableElevation={true}\r\n                                                            className={classes.deleteBtn}\r\n                                                            onClick={() => { deleteCategory(item.id) }}\r\n                                                        > \r\n                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n\r\n    const togglePicker = () => setIsOpen(prevOpen => !prevOpen);\r\n    const handleChange = (newColor) => setColor(newColor.hex);\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit')\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles( theme => {\r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.shortest} ${theme.transitions.easing.easeInOut}ms`, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[4]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    initialColor === color ? \r\n                    <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch,\r\n    FormControl,\r\n    InputLabel, \r\n    Select, \r\n    MenuItem\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n\r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    React.useEffect(() => {\r\n        if(modal.color !== 'primary' && modal.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [modal])\r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Logo/Modal  changer  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Text for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalText}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalText(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={colorSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    colorSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {colorCustom}\r\n                                                        changeColor = {setColorCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'right'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n \r\n    React.useEffect(() => {\r\n        if( settings.classes.backgroundColor !== 'default' && \r\n            settings.classes.backgroundColor !== 'paper' && \r\n            settings.classes.backgroundColor !== 'primary' &&  \r\n            settings.classes.backgroundColor !== 'secondary' ) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n    }, [settings])\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                maxWidth: 400,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Style changer <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl    variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Background Color for Header</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={settingBackgroundSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setSettingBackgroundSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Theme Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Theme Secondary</MenuItem>\r\n                                                    <MenuItem value={'default'}>Theme BG default</MenuItem>\r\n                                                    <MenuItem value={'paper'}>Theme BG paper</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    settingBackgroundSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {settingBackgroundCustom}\r\n                                                        changeColor = {setSettingBackgroundCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'left'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box  my={4} width={'100%'} clone={true}>\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                // color: \"textPrimary\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button\r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\nfunction DumbComponent() {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings} = React.useContext(CategoryContext)    \r\n  \r\n    const [headerHeight, setHeaderHeight] = useState(0)\r\n   \r\n    let backgroundHeader = settings.classes.backgroundColor\r\n    let colorHeader \r\n    let hoverActiveLinkColor\r\n\r\n\r\n    let modalBtnColor = modal.color\r\n    let modalBtnColor1 \r\n    let modalBtnColor2 \r\n\r\n    let widthMobile \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`]\r\n        if(modalBtnColor === 'primary') {\r\n            modalBtnColor1 = theme.palette.primary.main\r\n            modalBtnColor2 = theme.palette.primary.dark\r\n        }\r\n        if(modalBtnColor === 'secondary') {\r\n            modalBtnColor1 = theme.palette.secondary.main\r\n            modalBtnColor2 = theme.palette.secondary.dark\r\n        }\r\n        if(modalBtnColor !== 'primary' && modalBtnColor !== 'secondary' ) {\r\n            modalBtnColor1 = modal.color\r\n            modalBtnColor2 = darken(modal.color, 0.4) \r\n        } \r\n        if(backgroundHeader === 'primary') {\r\n            backgroundHeader = theme.palette.primary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.primary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.primary.main, 0.3)\r\n        }\r\n        if(backgroundHeader === 'secondary') {\r\n            backgroundHeader = theme.palette.secondary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.secondary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.secondary.main, 0.3)\r\n        }\r\n        \r\n        if( backgroundHeader !== 'default' && \r\n            backgroundHeader !== 'paper' && \r\n            backgroundHeader !== 'primary' && \r\n            backgroundHeader !== 'secondary' ) {  \r\n                colorHeader = theme.palette.getContrastText(backgroundHeader)\r\n                hoverActiveLinkColor = darken(backgroundHeader, 0.3) \r\n        }   \r\n        if(backgroundHeader === 'paper') { \r\n            backgroundHeader = theme.palette.background.paper\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.paper)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n        if(backgroundHeader === 'default') { \r\n            backgroundHeader = theme.palette.background.default\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.default)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n\r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                top: 0, \r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: colorHeader ,\r\n                // color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundImage: `linear-gradient(180deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`,  \r\n                color: theme.palette.getContrastText(modalBtnColor2), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': { \r\n                    color: theme.palette.getContrastText(modalBtnColor2) ,\r\n                    backgroundImage: `linear-gradient(200deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`, \r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal } = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  document.querySelector('#header').clientHeight\r\n            \r\n            // console.log(headHeight)\r\n            setHeaderHeight(headHeight + 5)\r\n            \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n        // eslint-disable-next-line\r\n    }, []);\r\n     \r\n    const [mobileView, setMobileView] = useState(false); \r\n\r\n    const openModal = () => {\r\n        handleOpen('')\r\n    }\r\n\r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button\r\n            onClick={openModal}\r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            }\r\n            <AppBar className={header}  id='header'>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({ \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {  \r\n\r\n        const newReq = localRequests.slice()\r\n        const filtered = newReq.filter(item => ( item.time !== id ))\r\n\r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false)\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,  \r\n    FormControl, \r\n    Select,\r\n    MenuItem, \r\n    InputLabel\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n     \r\n   \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                    <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"color-select-label\"\r\n                                        id=\"color-select\"\r\n                                        value={colorSelect}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                    >\r\n                                        <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                        <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                        <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Box ml={1} >\r\n                                    {\r\n                                        colorSelect === 'custom' &&\r\n                                        <ColorPicker\r\n                                            initialColor = {colorCustom}\r\n                                            changeColor = {setColorCustom}\r\n                                            setIsDisableBtn = {setIsDisableBtn}\r\n                                            position = {'right'}\r\n                                        /> \r\n                                    }\r\n                                    \r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                             \r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, makeStyles, Tooltip} from '@material-ui/core'\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)  \r\n \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { \r\n                    isOpen && \r\n                    <Box className={classes.settingsContainer} >\r\n                        <Typography component='span' >\r\n                            hello, { user.providerData[0].email } \r\n                        </Typography>\r\n\r\n                        <Box display='flex'>\r\n                            <RequestsChanger/>  &nbsp;\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    \r\n                        <Box> \r\n                            <Button \r\n                                size='small'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={handleSignOut}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container, Switch , FormControlLabel } from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nfunction Footer() {\r\n\r\n    const { setThemeMode, themeMode } = React.useContext(CategoryContext)\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: theme.palette.primary.dark, \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    const checked = themeMode === 'dark' ? true : false\r\n\r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                <Typography \r\n                    variant='h6'\r\n                    className={classes.footerHeading} \r\n                > \r\n                    Footer\r\n                </Typography>\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n\r\n                <Box>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Dark Theme\"\r\n                    />\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React , {useState} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box\r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isBotton = rows.length - visibleRows > 0 ? true : false  \r\n    const [isBottonClick, setIsBottonClick] = useState(false)\r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            // display: 'flex', \r\n            // width: \"100%\",  \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        if(mainColor === 'primary')  mainColor = theme.palette.primary.main\r\n        if(mainColor === 'secondary') mainColor = theme.palette.secondary.main  \r\n        return ({\r\n            table: {\r\n                minWidth: 200,\r\n            },\r\n            tableNameCell: {\r\n                flexGrow: 2\r\n            },\r\n            tablePriceCell: {\r\n                flexGrow: 2\r\n            },\r\n            tableButtonCell: {\r\n                maxWidth: 300,\r\n                width: 300,\r\n            },\r\n            tableButton: {\r\n                // maxWidth: 120,\r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: 50, \r\n                marginBottom: 50, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    marginTop: 30, \r\n                    marginBottom: 30, \r\n\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsBottonClick(!isBottonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(!isBottonClick)\r\n        return (\r\n            rows.map((row, index) => {\r\n                if(index < visibleRows)\r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n                return false\r\n            })\r\n        )\r\n        if(isBottonClick)\r\n        return (\r\n            rows.map((row, index) => { \r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n            })\r\n        )\r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true} >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableNameCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tablePriceCell}>{row.price}</TableCell> \r\n            <TableCell align=\"right\" className={classes.tableButtonCell}> \r\n                <Button \r\n                    variant='contained'   \r\n                    className={classes.tableButton}\r\n                    onClick={() => { handleOpenModal(row.name) }}\r\n                >\r\n                    { buttonText }\r\n                </Button>\r\n            </TableCell>\r\n        </StyledTableRow>\r\n    )\r\n    const renderBotton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isBottonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth='lg' className={`${classes.tableContainer} heading`} >\r\n            <h3>{heading}</h3>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={classes.tableHeader}\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            <TableCell align=\"right\" className={classes.tableHeader} ></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            renderRows()\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isBotton &&\r\n                renderBotton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport Dumb from '../components/library/table/DumbComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const hendlerSubmit = (e) => {\r\n        e.preventDefault() \r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment> \r\n            <Dumb/>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Вход\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={hendlerSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"text\"\r\n                            label=\"User\"\r\n                            name=\"user\"\r\n                            autoComplete='true'\r\n                            autoFocus\r\n                            value={name}\r\n                            onChange={ (e)=>{setName(e.target.value)} }\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\" \r\n                            value={password}\r\n                            onChange={(e)=>{setPassword(e.target.value)}}\r\n                        />\r\n                        {\r\n                            error && \r\n                            <Alert severity=\"error\">{error.message}</Alert>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport uuid from 'react-uuid' \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select, Typography, IconButton\r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem } = commonStyle \r\n\r\n        return ({   \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.toggleDrawer()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid() \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        setChildren(newChildren) \r\n\r\n        props.toggleDrawer()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n        props.toggleDrawer()\r\n    } \r\n     \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} > \r\n                 \r\n                {/*  DrawerContainer */}\r\n                    <Drawer anchor={'left'} open={props.open} onClose={props.toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                               \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph');}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-paper-label\"\r\n                                            id=\"inner-paper-style\"\r\n                                            value={settingIsPaper}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                            \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Background  -  { backgroundColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={backgroundColor} \r\n                                                changeColor={setBackgroundColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Color  -  { color }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={color} \r\n                                                changeColor={setColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'right'}\r\n                                            /> \r\n                                        </Box>\r\n                                          \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <Box className={classes.inputNumber} >\r\n                                                <Typography  component={'p'} gutterBottom  >\r\n                                                    Border Color  -  { borderColor }\r\n                                                </Typography> \r\n                                                <ColorPicker \r\n                                                    initialColor={borderColor} \r\n                                                    changeColor={setBorderColor} \r\n                                                    setIsDisableBtn={setIsDisableBtn}\r\n                                                    position={'right'}\r\n                                                /> \r\n                                            </Box> \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n                marginTop: props.className.marginTop*0.8,\r\n                marginBottom: props.className.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                fontSize: props.className.fontSize*0.6,\r\n                lineHeight : 1.2, \r\n                marginTop: props.className.marginTop*0.5, \r\n                marginBottom: props.className.marginBottom*0.5, \r\n                textAlign: 'center'\r\n            },\r\n        }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, то на мобильных устройствах шрифт будет меньше и выравнивание будет по центру  \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography>\r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n     \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Background   -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box> \r\n                                      \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border Color  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                     \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {},\r\n        mobileClass: {\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }, \r\n        }\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={classes.imageStyle} alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n\r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName,\r\n    // }} \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImageUrl(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageSetting} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Border  -  { imageBorderColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={imageBorderColor} \r\n                                                changeColor={setImageBorderColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Background  -  { backgroundColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={backgroundColor} \r\n                                        changeColor={setBackgroundColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'left'}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Color  -  { color }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={color} \r\n                                        changeColor={setColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>   \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n\r\n    console.log('dumb container work')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: { \r\n                marginTop: props.classes.marginTop*0.8,\r\n                marginBottom: props.classes.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                marginTop: props.classes.marginTop*0.45,\r\n                marginBottom: props.classes.marginBottom*0.45\r\n            },\r\n        }\r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n    const classForResp = classes.resposiveFontSize \r\n \r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classForResp}`}\r\n                > \r\n                    <Paper style={{padding: '0 15px'}}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classForResp}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        // let slicedChild = props.data.children.slice()\r\n        // slicedChild.forEach((item) => {\r\n        //     if(item.id === id) {\r\n        //         for( let key in item) { \r\n        //             item[key] = data[key]\r\n        //         } \r\n        //     }\r\n        // })  \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => {\r\n        let conf = window.confirm(\"Delete ?\");\r\n \r\n        if(conf) { \r\n            let filtered = props.data.children.filter((item) => (item.id !== id))  \r\n            // setChildren(filtered) \r\n  \r\n            // save in firestore \r\n            props.reSaveContainer(props.data.id, filtered)  \r\n        }\r\n    }\r\n\r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={toggleDrawer} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        toggleDrawer={toggleDrawer}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        if(color === 'primary') { \r\n            color = theme.palette.primary.main\r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n        if(color === 'secondary') {\r\n            color = theme.palette.secondary.main \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n        if(color === 'custom') { \r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                '&:hover' : {\r\n                    background: 'none', \r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } \r\n        } )\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                <svg style={{fill: '#fff'}}>       \r\n                                    <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                </svg>\r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';  \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e, imageType) => { \r\n        const imageData = e.target.files[0]\r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => {  \r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                  if(imageType === 'icon') setIconUrl(url)\r\n\r\n                  if(imageType === 'mainImage') setImageUrl(url) \r\n              })\r\n          }\r\n        ) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button> \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <img src={iconUrl} alt='icon' width={35} />\r\n                                            \r\n                                        </Box> \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Sub Heading\" \r\n                                            variant=\"outlined\" \r\n                                            size='small'  \r\n                                            value={subHeading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Input Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={inputLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setInputLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Button Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={buttonLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setButtonLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                        <TextField   \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Form Policy\" \r\n                                            size='small'  \r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                /> \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'> \r\n                                            <Button color='primary' variant='contained'> \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            <img src={imageUrl} alt='main' width={'100%'} />\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        if(color === 'primary')  color = theme.palette.primary.main\r\n        if(color === 'secondary') color = theme.palette.secondary.main \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className=\"mac-accordion heading\">\r\n            <Container maxWidth={'lg'} className={classes.disableMobileGutters}>\r\n\r\n                <h3> { heading } </h3> \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"mac-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"mac-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n \r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        \r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItem = (index, value, place) => { \r\n        const newItems = items.slice()\r\n        newItems[index][place] = value\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = () => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: \"heading\",\r\n            body: \"body\"\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newItems = items.slice()\r\n        newItems.splice(index, 1) \r\n \r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки аккордиона  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={3}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n\r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Head\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.head}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'head') } }     \r\n                                                            /> \r\n                                                        </Box>\r\n                                                        \r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Body\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.body}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'body') } }     \r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <Box my={2}>\r\n                                            <Button \r\n                                                variant='contained' \r\n                                                color='primary'\r\n                                                onClick={addItem}\r\n                                            >\r\n                                                Add item\r\n                                            </Button>\r\n                                        </Box>\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                />   \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n        return ({\r\n            svg: {\r\n                fill: theme.palette.secondary.main\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${theme.palette.primary.main}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: theme.palette.secondary.light\r\n                }\r\n            },\r\n            button: {\r\n                backgroundColor: theme.palette.primary.main ,\r\n                border: `2px solid ${theme.palette.primary.main}`, \r\n                color: '#fff',\r\n                '&:hover' : {\r\n                    background: 'none',\r\n                    '&>span': { \r\n                        color: theme.palette.primary.main\r\n                    }\r\n                }\r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${theme.palette.primary.main} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth='lg'>\r\n                <div className=\"ln-contact\"> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`ln-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"ln-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Switch, FormControlLabel\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.mapFrame === null ? false : true)\r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 250px )',\r\n                maxWidth: 500,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки контактов  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Location\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={location}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setLocation(e.target.value) } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Phone\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={phone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Comment Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\" \r\n                                            value={inputComment}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputComment(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                    <TextField  \r\n                                                        multiline\r\n                                                        fullWidth\r\n                                                        type='text'\r\n                                                        label=\"Map Frame\" \r\n                                                        variant=\"outlined\"  \r\n                                                        value={mapFrame}\r\n                                                        onChange={ (e) => { setIsDisableBtn(false);  setMapFrame(e.target.value)  } }     \r\n                                                    />\r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n  \r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const imageUrl = props.data.image\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    let colorButton = props.data.colorButton || '#f00'\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorButton === 'primary')  colorButton = theme.palette.primary.main\r\n        if(colorButton === 'secondary') colorButton = theme.palette.secondary.main  \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                '&:hover' : { \r\n                    background: 'none',\r\n                    color: theme.palette.text.primary\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400\r\n                }, \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth=\"lg\" >\r\n                <div className=\"electro-about heading\">\r\n                    <Grid container> \r\n                        <Grid item md={6} >\r\n                            <div className=\"electro-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"electro-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(props.data.colorButton !== 'primary' && props.data.colorButton !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async(e) => {\r\n        const imageData = e.target.files[0]\r\n        const storageRef = firebase\r\n            .storage\r\n            .ref(`${imageData.name}`)\r\n            .put(imageData)\r\n        storageRef.on('state-changed', snapshot => {\r\n            console.log(snapshot)\r\n        }, error => {\r\n            console.log(error.message)\r\n        }, () => {\r\n            storageRef\r\n                .snapshot\r\n                .ref\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    setImageUrl(url)\r\n                })\r\n        })\r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                            <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                            <Select\r\n                                                                labelId=\"color-select-label\"\r\n                                                                id=\"color-select\"\r\n                                                                value={colorSelect}\r\n                                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                            >\r\n                                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        <Box ml={1} >\r\n                                                            {\r\n                                                                colorSelect === 'custom' &&\r\n                                                                <ColorPicker\r\n                                                                    initialColor = {colorCustom}\r\n                                                                    changeColor = {setColorCustom}\r\n                                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                                    position = {'right'}\r\n                                                                />  \r\n                                                            }\r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained'>\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            <img src={imageUrl} alt='main' width={'100%'}/>\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorMain === 'primary')  colorMain = theme.palette.primary.main\r\n        if(colorMain === 'secondary') colorMain = theme.palette.secondary.main  \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain,\r\n                border: `1px solid ${colorMain}`, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n                '&:hover' : { \r\n                    background: 'none',\r\n                    color: theme.palette.text.primary\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0), \r\n                margin: theme.spacing(6, 0), \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.containerColored}> \r\n            <Container maxWidth=\"lg\" > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(props.data.colorMain !== 'primary' && props.data.colorMain !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Action Line\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='number'\r\n                                            label=\"Heading Size\"\r\n                                            variant=\"outlined\"\r\n                                            value={headingSize}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeadingSize(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Block</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'top'}\r\n                                                    noInherit={true}\r\n                                                />  \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n \r\n    const [textButton,  setTextButton] = React.useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    const [rows, setRows] = React.useState(props.data.rows)\r\n    const [tableRow, setTableRow] = React.useState(props.data.tableRow)\r\n\r\n    const [visibleRows, setVisibleRows] = React.useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = React.useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = React.useState(props.data.visibleBottonTextClick || 'Show less')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n     \r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeTable = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleTableHeadChange = (index, value) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChange = (index, place, value) => {\r\n        const newRows = rows.slice()\r\n        newRows[index][place] = value\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addRow = () => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: \"Table Row\", \r\n            price: 100 \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Text Button\"\r\n                                            variant=\"outlined\"\r\n                                            value={textButton}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setTextButton(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <TextField \r\n                                                            fullWidth\r\n                                                            type='text'\r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant=\"outlined\"\r\n                                                            value={item}\r\n                                                            onChange={(e) => {\r\n                                                            setIsDisableBtn(false);\r\n                                                            handleTableHeadChange(index, e.target.value)\r\n                                                        }}/>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n\r\n                                                            <Box mr={0.5}>\r\n                                                                <Typography variant='caption'>\r\n                                                                    Row {index + 1}\r\n                                                                </Typography>\r\n                                                            </Box>\r\n\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                        <Box mr={1} flexGrow={1}>\r\n                                                            <TextField \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label={`Table Row Name ${index + 1}`}\r\n                                                                variant=\"outlined\"\r\n                                                                value={item.name}\r\n                                                                onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    handleRowChange(index, 'name', e.target.value)\r\n                                                                }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                        <Box >\r\n                                                            <TextField \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label={`Table Row Price ${index + 1}`}\r\n                                                                variant=\"outlined\"\r\n                                                                value={item.price}\r\n                                                                onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    handleRowChange(index, 'price', e.target.value)\r\n                                                                }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Button\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        onClick={addRow}\r\n                                    >\r\n                                        Add Row\r\n                                    </Button>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <Box  display=\"flex\" >\r\n                                            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Color for Table</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={colorSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box ml={1} >\r\n                                                {\r\n                                                    colorSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {colorCustom}\r\n                                                        changeColor = {setColorCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        noInherit={true}\r\n                                                        position = {'right'}\r\n                                                    />  \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='number'\r\n                                                label={`Quantity to show`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleRows}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleRows(Number(e.target.value))\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='text'\r\n                                                label={`Text for botton`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleBottonText}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleBottonText(e.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <TextField  \r\n                                            type='text'\r\n                                            label={`Text for botton clicked`}\r\n                                            variant=\"outlined\"\r\n                                            value={visibleBottonTextClick}\r\n                                            onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setVisibleBottonTextClick(e.target.value)\r\n                                            }}\r\n                                        />\r\n                                    </Box>\r\n                                                \r\n                                    \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent  } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext'\r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => {\r\n    const classesRef = StylesChangers()\r\n  const commonClasses = classesRef(theme)\r\n\r\n  const { menu, menuTitle } = commonClasses \r\n    return ({ \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 80,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 400, \r\n        left: \"calc(50% - 200px)\",\r\n      }},     \r\n      menuTitle: menuTitle\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n  \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container') newCont = Object.assign({}, ContainerLayout) \r\n    if(type === 'mainBanner') newCont = Object.assign({}, MainBannerLayout) \r\n    if(type === 'accordion') newCont = Object.assign({}, AccordionLayout) \r\n    if(type === 'contactMap') newCont = Object.assign({}, СontactMapLayout) \r\n    if(type === 'about') newCont = Object.assign({}, AboutLayout) \r\n    if(type === 'actionLine') newCont = Object.assign({}, ActionLineLayout) \r\n    if(type === 'table') newCont = Object.assign({}, TableLayout) \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n      \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <React.Fragment> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <Box className={classes.btnContainer}  >\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                          <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Действия для страницы  <OpenWithIcon/>\r\n                            </Typography> \r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                  Add new container\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                  Add Main Banner\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                  Add Accordion\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                  Add Contacts with Map\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                  Add About\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                  Add Colored Action Line \r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                  Add Table \r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </Box>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/ScrollToTop' \r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    \r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton\r\n} from '@material-ui/core'; \r\nimport { darken } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, \r\n    // handleOpen, \r\n    handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2  \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n\r\n    if(colorButton === 'primary') {\r\n        colorGradient1 = theme.palette.primary.main\r\n        colorGradient2 = theme.palette.primary.dark\r\n    }\r\n    if(colorButton === 'secondary') {\r\n        colorGradient1 = theme.palette.secondary.main\r\n        colorGradient2 = theme.palette.secondary.dark\r\n    }\r\n    if(colorButton !== 'primary' && colorButton !== 'secondary' ) {\r\n      if(modalSettings.colorButton) {\r\n        colorGradient1 = modalSettings.colorButton\r\n        colorGradient2 = darken(modalSettings.colorButton, 0.4)\r\n      } \r\n    } \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        }\r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n\r\n  // const openModal = () => {\r\n  //   handleOpen('')\r\n  // }\r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <button type=\"button\" onClick={ openModal }>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nconst  AlertComponent = (props) => {\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        props.closeAlert()\r\n    }\r\n\r\n    const alertText = () => {\r\n        if(props.severity === 'success') return \"Your request was accepted successfully\"\r\n        if(props.severity === 'info') return \"Your request is being processed\"\r\n        if(props.severity === 'error') return \"An error has occurred :(\"\r\n        if(props.severity === 'warning') return \"Warning!\"\r\n    }\r\n      \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={props.severity} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText() }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert, closeAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert severity={isShowAlert} closeAlert={closeAlert} /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}