{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/functions/ScrollToTop.js","components/placeholders/LoadingProgress.js","styles/changers.js","components/header/headerHelpers/category/AddCategory.js","components/header/headerHelpers/category/AddPage.js","components/header/headerHelpers/category/ChangeCategory.js","components/header/headerHelpers/category/ChangePage.js","components/header/headerHelpers/CategoriesChanger.js","components/library/colorPicker/ColorPicker.js","components/library/colorPicker/ColorSelecter.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/headerHelpers/RequestsChanger.js","assets/icons/half-moon.svg","assets/icons/sun.svg","components/header/dumb/ThemeSwitcher.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/library/colorPicker/ColorCalculation.js","components/header/dumb/DumbComponent.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/Login.js","components/Error.js","styles/inputs.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/list/DumbComponent.js","components/library/list/StyledComponent.js","components/library/list/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/AddItem.js","components/library/accordion/ChangeItem.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/DumbComponent.js","components/library/table/AddItem.js","components/library/table/ChangeItem.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/library/formLine/DumbComponent.js","components/library/formLine/StyledComponent.js","components/library/formLine/ElementCreator.js","components/library/swiper/DumbComponent.js","components/library/swiper/AddItem.js","components/library/swiper/StyledComponent.js","components/library/swiper/ElementCreator.js","components/library/banner/DumbComponent.js","components/library/banner/StyledComponent.js","components/library/banner/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","idArrayForDelete","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","clearArrayForDelete","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","name","storageRef","ref","imageRef","child","images","removeImage","removeImagesFromArray","SendFormContext","SendFormProvider","requests","modalSettings","isShowAlert","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","setTimeout","req","newList","slice","newReq","Object","assign","time","getCurrentDate","push","closeAlertFromTimeout","updateRequests","updateModalSettings","sendRequests","closeAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","StylesChangers","theme","menu","palette","background","paper","paddingLeft","paddingRight","paddingBottom","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","fontSize","fontWeight","borderBottom","divider","default","padding","marginBottom","cursor","btnSetting","deepOrange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","btnSave","bottom","paddingTop","opacity","btnWithLabel","spacing","btnDrawerStyle","easeIn","btnDrawerItem","secondary","containerWrapper","outline","outlineOffset","responseValues","margin","marginRight","responseTablets","border","success","fill","responseMobile","mobileTooltip","tabletTooltip","AddCategory","useState","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","onSubmit","e","preventDefault","addCategory","FormGroup","Box","mb","TextField","required","fullWidth","label","variant","onChange","style","Tooltip","title","placement","IconButton","Button","type","AddPage","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","addPage","id","Typography","gutterBottom","size","ChangeCategory","setValue","disabled","onClick","handleUpdateCategory","ml","itemPages","handleUpdatePage","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","localCategories","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","commonClasses","classesRef","maxWidth","listPages","marginTop","listStyle","titlePages","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","pageBox","pageBoxLi","fade","newTitle","newSlug","newCategories","newPage","JSON","parse","stringify","uuid","pages","categoryId","pageId","swapCategory","direction","activeIndex","indexOf","length","movedItem","placeItem","swapPage","activeCategory","dumbWrapper","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","component","Grid","container","xs","newCategory","index","disableElevation","confirm","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","Accordion","AccordionSummary","expandIcon","aria-controls","p","indexPages","ChangePage","mt","startIcon","ColorPicker","memo","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","isDisableSaveIcon","setIsDisableSaveIcon","contrastColor","getContrastText","primary","boxColor","flexGrow","borderRadius","shape","shortest","boxShadow","shadows","boxPicker","iconButton","iconButtonDisabled","prevOpen","onChangeComplete","newColor","hex","ColorSelecter","colorSelect","setColorSelect","colorCustom","setColorCustom","block","main","warning","info","colorCustomText","FormControl","InputLabel","Select","labelId","MenuItem","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","modalTarget","setModalTarget","uploadHandler","imageData","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","Divider","FormControlLabel","control","Switch","checked","mr","newLogo","newModal","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","row","Number","newSettings","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","lightError","setLightError","darkError","setDarkError","lightWarning","setLightWarning","darkWarning","setDarkWarning","lightInfo","setLightInfo","darkInfo","setDarkInfo","lightSuccess","setLightSuccess","darkSuccess","setDarkSuccess","colorPreview","colorItem","flexWrap","RequestsChanger","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","amber","my","newData","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","innerIndex","String","CardActions","isCheck","handleOnceCheck","handleRemove","Checkbox","request","ThemeSwitcher","ThemeCustomSwitch","withStyles","switchBase","transform","darkThemeIcon","thumb","lightThemeIcon","backgroundSize","backgroundPosition","track","create","focusVisible","focusVisibleClassName","disableRipple","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerHeader","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","handleSignOut","content","indexPage","borderTop","px","edge","iconColor","getColorByPalette","getColorByPaletteForGradient","getColorByPaletteReverse","DumbComponent","iconMobileDrawerColor","widthMobile","mobileView","setMobileView","backgroundHeader","modalBtnColor1","modalBtnColor2","headerRef","useRef","topHeaderRef","darken","header","fixedPadding","topHeader","lighten","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","buttonModal","linkModal","setResponsiveness","setScrollHeader","headerTop","pageYOffset","current","classList","add","remove","err","addEventListener","removeEventListener","openModal","logout","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ModalChanger","ElementCreator","Header","Footer","contrastFooter","backgroundFooter","footer","down","buttonToTop","handleClickToTop","Login","setName","setPassword","setError","isRedirect","setIsRedirect","isSubmit","setIsSubmit","avatar","form","submitBtn","forgotTitle","handleChange","place","Avatar","CircularProgress","loginWithEmail","res","autoComplete","autoFocus","Alert","severity","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","libraryList","setPadding","setMargin","setDisplay","setFlexDirection","setBackgroundColor","shadow","setShadow","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","addHeading","a","newChildren","newItem","reSaveContainer","aria-haspopup","currentTarget","keepMounted","Boolean","tooltip","reSaveContainerStyleSettings","resposiveFontSize","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","outlineColor","swapHeading","swapChildrens","focus","sentData","reSaveChildren","prop","isFirst","isLast","removeItem","liClass","itemsStyle","mobileClass","items","setPaddingLeft","setItems","itemsPadding","setItemsPadding","itemsListStyle","setItemsListStyle","setNewItem","mobileMarginTopComputed","mobileMarginBottomComputed","swapItem","newItems","swapList","handleItemChange","splice","deleteItem","swapParagraph","multiline","rowsMax","imageStyle","imageClassName","imageStabilization","sm","imageUrl","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageAccordion","imagePreview","imageLabel","handleImageMargin","handleImageUpload","generateImageName","downloadURL","pt","pb","align","styleClass","noPadding","yesPadding","noPaper","isPaperClassForContainer","isPaperClassForPaper","renderItems","orderFirst","orderLast","createArrayImages","forEach","swapContainer","removeContainer","newArr","colorFocusInput","formPhone","setFormPhone","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","maxWidthContainer","input","up","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","md","xlinkHref","phone","placeholder","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","iconName","setIconName","setMarginTop","setMarginBottom","setMaxWidthContainer","tabletMarginTopComputed","tabletMarginBottomComputed","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","AddItem","newItemTitle","setNewItemTitle","newItemBody","setNewItemBody","addItem","ChangeItem","setHead","setBody","handleUpdateItem","itemLayout","colorMapOnload","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","fontFamily","link","boxForFlex","heightRegular","linksContainer","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","cols","rows","setLocation","setPhone","setInputComment","setMapFrame","isButton","setIsButton","textButton","targetButton","setTextButton","setTargetButton","colorTheme","headingSize","colorMain","containerColored","containerFlexed","setHeadingSize","CustomizedTables","mainColor","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isBotton","isBottonClick","setIsBottonClick","StyledTableRow","TableRow","table","tableCell","tableButtonCell","tableButton","tableContainer","tableHeader","handleVisible","OnceRow","hover","TableCell","scope","price","TableContainer","Table","TableHead","TableBody","newItemPrice","setNewItemPrice","setPrice","handleRowChange","setRows","setTableRow","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","newRows","newRow","handleTableHeadChange","rowLayout","lineDecor","gridItem","SwiperCore","use","Navigation","slidesForView","slidesPerView","slidesForViewTablet","slidesPerViewTablet","slidesForViewMobile","slidesPerViewMobile","spaceBetween","speed","loop","freeMode","slides","slideHeight","setSlideHeight","slideRef","swiper","slide","overflow","slideBox","slideImg","backgroundRepeat","slideTitle","actualWidth","getWidthViewport","slideHeightCalc","clientWidth","600","960","navigation","onSlideChange","renderSlide","newImageName","setNewImageName","newImageUrl","setNewImageUrl","newImageTitle","setNewImageTitle","addSlide","replace","setSlidesPerView","setSlidesPerViewTablet","setSlidesPerViewMobile","setSpaceBetween","setSpeed","setLoop","setFreeMode","setSlides","imageForDelete","setImageForDelete","dumbSlide","dumbSlideButtons","dumbSlideTitle","swipeSlide","newSlides","newImageForDelete","deletedImageName","removeSlide","colorText","paddingVertical","bannerBackground","bannerContent","setMinHeight","colorTextSelect","setColorTextSelect","colorTextCustom","setColorTextCustom","setPaddingVertical","paddingVerticalComputed","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","FormLineLayout","formLine","SwiperLayout","BannerLayout","banner","setData","btnContainer","boxMenuItem","fetchData","document","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","innerHeight","history","key","RouterComponent","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","closeBtn","targetContainer","targetLabel","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1c1c1398.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 600) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        idArrayForDelete: [],\r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n        \r\n        // imageList: [], \r\n    }\r\n    \r\n \r\n    \r\n\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n        // this.fetchListFromStorage()\r\n    } \r\n    // fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .then( () => {\r\n    //         this.setState({\r\n    //             imageList: imagesArray\r\n    //         })\r\n    //     })\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n        \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 700);\r\n        \r\n    // }\r\n\r\n    async updateCategories(data) { \r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {    \r\n        // const pageRef = firebase.db.collection(\"site1\").doc(slug)\r\n        // const doc = await pageRef.get();\r\n        \r\n        // let idArray = []\r\n\r\n        // if (!doc.exists) {\r\n        //     console.log('No such page!');  \r\n        // } else { \r\n        //     const items = doc.data().items\r\n        //     items.forEach(item => {\r\n        //         if(item.type === 'container') { \r\n        //             item.children.forEach( child => {\r\n        //                 if(child.type === 'paragraphImage') {\r\n        //                     idArray.push(child.id)\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //         else {  \r\n        //             idArray.push(item.id)\r\n        //         }\r\n        //     });\r\n        // }\r\n        // this.setState({\r\n        //     idArrayForDelete: idArray\r\n        // })\r\n\r\n        // await pageRef.delete()\r\n        // // .then( () => {\r\n        // //     setTimeout(() => {\r\n        // //         this.setState({\r\n        // //             idArrayForDelete: []\r\n        // //         })\r\n        // //     }, 1000);\r\n        // // })\r\n        // .then( () => {\r\n        //     this.state.imageList.forEach( imageName => {\r\n        //         idArray.forEach(id => {\r\n        //             if(imageName.includes(id)) this.removeImage(imageName)\r\n        //         })\r\n        //     })\r\n        // })\r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n    // async removeImage(name) { \r\n    //     if(name !== '') {\r\n    //         const storageRef = firebase.storage.ref();\r\n \r\n    //         const imageRef = storageRef.child(name)\r\n        \r\n    //         try {\r\n    //             await imageRef.delete().then(function() {\r\n    //                 console.log('File deleted successfully')\r\n    //             }).catch(function(error) {\r\n    //                 console.log(error) \r\n    //             }); \r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    idArrayForDelete: this.state.idArrayForDelete, \r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    clearArrayForDelete: () => {\r\n                        this.setState({\r\n                            idArrayForDelete: []\r\n                        })\r\n                    }, \r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    // state = {  \r\n    //     imageList: [], \r\n    // } \r\n\r\n    // async componentDidMount() { \r\n    //       this.fetchListFromStorage()\r\n    //     //   this.fetchListFromFirestore()\r\n    // }\r\n\r\n    // async fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     await listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n    //     this.setState({\r\n    //         imageList: imagesArray\r\n    //     }) \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 500);\r\n        \r\n    // }\r\n\r\n    // async addImageToList(newImage, oldName) {\r\n    //     const newList = this.state.imageList.slice()\r\n    //     let newItem\r\n    //     let isNew = true\r\n    //     let isNeedUpdate = newImage.name === oldName ? false : true \r\n    //     if(isNeedUpdate) { \r\n    //         for(let i = 0; i < newList.length; i++) {\r\n    //             if(newList[i].name === newImage.name) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity++ \r\n    //                 isNew = false\r\n    //             }\r\n    //             if(newList[i].name === oldName) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity--  \r\n    //                 if( newList[i].quantity === 0 ) { \r\n    //                     this.removeImage(oldName) \r\n    //                     newList.splice(i, 1)\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //         if(isNew) {\r\n    //             newItem = {\r\n    //                 name: newImage.name, \r\n    //                 url: newImage.url, \r\n    //                 quantity: 1\r\n    //             }\r\n    //             newList.push(newItem)\r\n    //         }\r\n    //     }\r\n    //     else { \r\n    //         console.log(newImage, oldName)\r\n    //     }\r\n         \r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })\r\n \r\n    //     console.log(this.state.imageList, oldName)\r\n\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    // async fetchListFromFirestore() {\r\n    //     const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n    //     const doc = await listRef.get();\r\n      \r\n    //     if (!doc.exists) {\r\n    //         console.log('No such page!');  \r\n\r\n    //     } else { \r\n    //         this.setState({\r\n    //             imageList: doc.data().list\r\n    //         }) \r\n    //     }\r\n    // }\r\n    // async uploadImage(imageData, oldName) { \r\n    //     const storageRef = await firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n    //     const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n    //     const newImage = {\r\n    //         url: downloadURL, \r\n    //         name: imageData.name, \r\n    //         quantity: 1\r\n    //     }\r\n    //     this.addImageToList(newImage, oldName)\r\n  \r\n    // }\r\n    // async updateList(newList) {\r\n    //     await firebase.db.collection(\"site1category\").doc(\"imageList\").update({\r\n    //         list: newList, \r\n    //     }).then(() => { \r\n    //         this.setState({\r\n    //             imageList: newList\r\n    //         })\r\n    //     })\r\n    // }\r\n \r\n    // removeImageFromStoreAndList(name) {\r\n    //     console.log(name)\r\n    //     const newList = this.state.imageList.slice()\r\n    //     newList.map( (item, index) => {\r\n    //         if(item.name === name) {\r\n    //             item.quantity--\r\n    //             if(item.quantity === 0) newList.splice(index, 1)\r\n    //         }\r\n    //     })\r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })  \r\n    //     this.removeImage(name)\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    async removeImage(name) { \r\n        if(name !== '') {\r\n            const storageRef = firebase.storage.ref();\r\n \r\n            const imageRef = storageRef.child(name)\r\n        \r\n            try {\r\n                await imageRef.delete().then(function() {\r\n                    console.log('File deleted successfully')\r\n                }).catch(function(error) {\r\n                    console.log(error) \r\n                }); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n    removeImagesFromArray(images) {\r\n        console.log(images)\r\n    }\r\n   \r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    // imageList: this.state.imageList, \r\n                    // nameList: this.state.nameList ,\r\n                    \r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    },\r\n                    removeImagesFromArray: (array) => {\r\n                        this.removeImagesFromArray(array)\r\n                    },\r\n                    // removeImageFromStoreAndList: (name) => {\r\n                    //     this.removeImageFromStoreAndList(name)\r\n                    // },\r\n                    // uploadImage: (data, name) => {\r\n                    //     this.uploadImage(data, name)\r\n                    // }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isShowAlert: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            })  \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout() {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isShowAlert: null\r\n            })\r\n        }, 7000);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isShowAlert: 'info'\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isShowAlert: 'success'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isShowAlert: 'error'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isShowAlert, \r\n                    modalSettings: this.state.modalSettings, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isShowAlert: null\r\n                        })\r\n\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            paddingBottom: 0,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        btnWithLabel: {\r\n            padding: 0, \r\n            '& label': {\r\n                padding: theme.spacing(1, 2), \r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            outlineOffset: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                // outlineColor: `${theme.palette.error.main}`,\r\n                // zIndex: 100, \r\n                 \r\n                // '& $mtView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $mbView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $btnDrawerStyle' : { \r\n                //     opacity: 1\r\n                // }\r\n            }\r\n        },\r\n        responseValues: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            padding: theme.spacing(1, 2),\r\n            margin: theme.spacing(1, 0), \r\n            '& p': {\r\n                margin: 0\r\n            },\r\n            '& svg': {\r\n                marginRight: 8, \r\n            }\r\n        }, \r\n        responseTablets: { \r\n            border: `1px solid ${theme.palette.success.dark}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.dark \r\n            }\r\n        },\r\n        responseMobile: { \r\n            border: `1px solid ${theme.palette.success.light}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.light \r\n            }\r\n        },\r\n        mobileTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.light\r\n        },\r\n        tabletTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.dark\r\n        }\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n\r\nconst AddCategory = (props) => {\r\n\r\n    \r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.addCategory(newCategoryTitle, newCategorySlug)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <Box mb={1}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label=\"Category title\" \r\n                        variant=\"outlined\" \r\n                        value={newCategoryTitle}\r\n                        onChange={(e) => { setNewCategoryTitle(e.target.value) }}\r\n                    />\r\n                </Box>\r\n                <Box mb={1} style={{position: 'relative'}}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label=\"Category slug\" \r\n                        variant=\"outlined\" \r\n                        value={newCategorySlug}\r\n                        onChange={(e) => { setNewCategorySlug( e.target.value)}}\r\n                            \r\n                    />\r\n                    <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                        <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                            <InfoOutlined color={'secondary'}/>\r\n                        </IconButton>\r\n                    </Tooltip> \r\n                </Box>\r\n                <Box mb={1}>\r\n                    <Button \r\n                        type='submit'\r\n                        color={'primary'} \r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                    >\r\n                        Add New Category\r\n                    </Button> \r\n                </Box>\r\n            </FormGroup>\r\n\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton,\r\n    Typography, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\nconst AddPage = (props) => {\r\n     \r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addPage(newPageTitle, newPageSlug, props.id)\r\n        setNewPageTitle('')\r\n        setNewPageSlug('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box display='flex' justifyContent={'flex-end'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new page</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New page title\" \r\n                            variant=\"outlined\" \r\n                            value={newPageTitle}\r\n                            onChange={(e) => { setNewPageTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New page slug\" \r\n                            variant=\"outlined\" \r\n                            value={newPageSlug}\r\n                            onChange={(e) => { setNewPageSlug(e.target.value)}}\r\n                            \r\n                        />\r\n                        <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                            <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                <InfoOutlined size={10} color={'secondary'}/>\r\n                            </IconButton>\r\n                        </Tooltip> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Page\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddPage\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n\r\n    const [value, setValue] = useState(props.item.title)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdateCategory(value, props.item.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.item.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Category ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.item.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField  \r\n                    required\r\n                    type='text' \r\n                    label=\"Category title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue(e.target.value)}}\r\n                />     \r\n                <TextField \r\n                    type='text' \r\n                    label=\"Category slug (read only)\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.item.slug} \r\n                    disabled={true} \r\n                />  \r\n            </Box> \r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n\r\n    const [value, setValue] = useState(props.itemPages.title)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdatePage(value, props.item.id, props.itemPages.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.itemPages.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Page ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.itemPages.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField \r\n                    required\r\n                    type='text' \r\n                    label=\"Page title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue( e.target.value )}}\r\n                />     \r\n                <TextField  \r\n                    type='text' \r\n                    label=\"Page slug\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.itemPages.slug} \r\n                    disabled={true}\r\n                />  \r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport AddCategory from './category/AddCategory'\r\nimport AddPage from './category/AddPage'\r\nimport ChangeCategory from './category/ChangeCategory'\r\nimport ChangePage from './category/ChangePage'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid,\r\n    fade,  \r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n\r\n    console.log('CategoriesChanger')\r\n     \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    \r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n       \r\n        return( { \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,\r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid ${theme.palette.divider}`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }, \r\n            pageBox: {\r\n                display: 'flex',  \r\n                justifyContent: 'space-between', \r\n                alignItems: 'center', \r\n                marginBottom: theme.spacing(2), \r\n            }, \r\n            pageBoxLi: {\r\n                padding: 5, \r\n                border: `1px solid ${fade(theme.palette.success.light, 0.3)}`\r\n\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (newTitle, newSlug) => {\r\n        let newList = categories.slice() \r\n        let newCategory = JSON.parse(JSON.stringify(categoryLayout)); \r\n\r\n        newCategory.id = uuid()\r\n        newCategory.title = newTitle\r\n        newCategory.slug = newSlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList) \r\n    }\r\n    const addPage = (newTitle, newSlug, id) => {  \r\n        \r\n        let newCategories = categories.slice()\r\n        \r\n        let newPage = JSON.parse(JSON.stringify(pageLayout));  \r\n        newPage.id = uuid()\r\n        newPage.title = newTitle\r\n        newPage.slug = newSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) {  \r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n    } \r\n     \r\n    const handleUpdateCategory = (value, id) => {  \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n          \r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        })  \r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        const conf = window.confirm('Delete category?')\r\n        if(conf) {\r\n            let filtered = categories.filter((item) => (item.id !== id))  \r\n            const deleted = categories.filter( (item) => (item.id === id))\r\n            let arrayOfPagesForDelete = [] \r\n\r\n            arrayOfPagesForDelete.push(deleted[0].slug)\r\n            if(deleted[0].pages.length > 0) {\r\n                deleted[0].pages.map((item) => {\r\n                    arrayOfPagesForDelete.push(item.slug)\r\n                    return 0\r\n                })\r\n            }\r\n\r\n            setCategories(filtered)  \r\n            deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        }  \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        const conf = window.confirm('Delete page?')\r\n            if(conf) {\r\n            categories.map( category => {\r\n                if(category.id === categoryId) {  \r\n                    let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                    category.pages = filtered\r\n                }\r\n                return 0 \r\n            }) \r\n            setCategories(categories)  \r\n\r\n            deletePageFromFirebase(slug)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <AddCategory addCategory={addCategory} />\r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    {\r\n                                                        item.slug === '/' ?\r\n                                                        <Tooltip title=\"You can't remove Home Category\" placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}  \r\n                                                            > \r\n                                                                <InfoOutlined style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button> \r\n                                                        </Tooltip>\r\n                                                        :\r\n                                                        <Tooltip title='Delete Category' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}\r\n                                                                onClick={() => { deleteCategory(item.id) }}\r\n                                                            > \r\n                                                                <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            \r\n                                                            <ChangeCategory item={item} handleUpdateCategory={handleUpdateCategory}  />\r\n\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages}  className={classes.pageBoxLi}  >\r\n                                                                            <Box className={classes.pageBox}  >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            \r\n                                                                            <ChangePage handleUpdatePage={handleUpdatePage} item={item} itemPages={itemPages} /> \r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n\r\n                                                                    <AddPage addPage={addPage} id={item.id} />    \r\n                                                                 \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState, useEffect } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n    const [isDisableSaveIcon, setIsDisableSaveIcon] = useState(true); \r\n \r\n\r\n    const togglePicker = () => {\r\n        setIsOpen(prevOpen => !prevOpen)\r\n        setColor(initialColor)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const handleChange = (newColor) => {\r\n        setColor(newColor.hex)\r\n        setIsDisableSaveIcon(false)\r\n    }\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit') \r\n        setIsDisableSaveIcon(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(initialColor === 'inherit' ) setColor('#0000')\r\n    }, [initialColor])\r\n\r\n    const useStyles = makeStyles( theme => { \r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'warning' && \r\n            color !== 'error' && \r\n            color !== 'info' && \r\n            color !== 'success' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.shortest} ${theme.transitions.easing.easeInOut}ms`, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[4]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }, \r\n            iconButton: {\r\n                padding: theme.spacing(1)\r\n            }, \r\n            iconButtonDisabled: {\r\n                opacity: 0\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    isDisableSaveIcon ? \r\n                    <IconButton disabled={true} className={`${classes.iconButton} ${classes.iconButtonDisabled}`} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save}  color={'primary'} className={classes.iconButton} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react'\r\n\r\nimport { ColorPicker } from './ColorPicker'\r\n\r\nimport { FormControl, InputLabel, Select , MenuItem, Box, makeStyles } from '@material-ui/core'\r\n\r\nfunction ColorSelecter({label, colorSelect, setColorSelect, colorCustom , setColorCustom, setIsDisableBtn, position, noInherit }) {\r\n    \r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        block: {\r\n            position: 'absolute', \r\n            top: 'calc(50% - 12px)', \r\n            right: 7, \r\n            height: 24, \r\n            width: 24\r\n        },\r\n        primary: {\r\n            backgroundColor: theme.palette.primary.main\r\n        },\r\n        secondary: {\r\n            backgroundColor: theme.palette.secondary.main\r\n        },\r\n        warning: {\r\n            backgroundColor: theme.palette.warning.main\r\n        },\r\n        error: {\r\n            backgroundColor: theme.palette.error.main\r\n        },\r\n        info: {\r\n            backgroundColor: theme.palette.info.main\r\n        },\r\n        success: {\r\n            backgroundColor: theme.palette.success.main\r\n        } \r\n    }))\r\n    const { block, primary , secondary , warning , error , info, success } = useStyles()\r\n    const colorCustomText = (colorCustom !== 'primary' && colorCustom !== 'secondary' &&  colorCustom !== 'warning' &&\r\n                            colorCustom !== 'error' && colorCustom !== 'info' && colorCustom !== 'success' ) ? ` - ${colorCustom}` : \" \"\r\n    return (\r\n        <Box display=\"flex\" alignItems='center'>\r\n            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                <InputLabel id=\"color-select-label\">{label}</InputLabel>\r\n                <Select\r\n                    labelId=\"color-select-label\"\r\n                    id=\"color-select\"\r\n                    value={colorSelect}\r\n                    onChange={(e) => { setIsDisableBtn(false); setColorSelect(e.target.value) }} \r\n                >\r\n                    <MenuItem style={{position: 'relative'}} value={'primary'}>\r\n                        Primary\r\n                        <Box className={`${block} ${primary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'secondary'}>\r\n                        Secondary \r\n                        <Box className={`${block} ${secondary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'warning'}>\r\n                        Warning\r\n                        <Box className={`${block} ${warning}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'error'}>\r\n                        Error\r\n                        <Box className={`${block} ${error}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'info'}>\r\n                        Info\r\n                        <Box className={`${block} ${info}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'success'}>\r\n                        Success\r\n                        <Box className={`${block} ${success}`} />\r\n                    </MenuItem>\r\n                    <MenuItem value={'custom'}>\r\n                        Custom  {colorCustomText}\r\n                    </MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <Box ml={1} >\r\n                {\r\n                    colorSelect === 'custom' &&\r\n                    <ColorPicker\r\n                        initialColor = {colorCustom}\r\n                        changeColor = {setColorCustom}\r\n                        setIsDisableBtn = {setIsDisableBtn}\r\n                        position = {position}\r\n                        noInherit={noInherit}\r\n                    />  \r\n                }\r\n                \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ColorSelecter\r\n","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport ColorSelecter from '../../library/colorPicker/ColorSelecter'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch, \r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n  \r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n    const [modalTarget, setModalTarget] = React.useState(modal.target || 'buy') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    React.useEffect(() => {\r\n        if(\r\n            modal.color !== 'primary' && \r\n            modal.color !== 'secondary' &&\r\n            modal.color !== 'warning' &&\r\n            modal.color !== 'error' &&\r\n            modal.color !== 'info' &&\r\n            modal.color !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [modal])\r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnWithLabel } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,  \r\n            btnWithLabel: {...btnWithLabel, ...{\r\n                '& label': {\r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    padding: theme.spacing(1, 2)\r\n                }\r\n            }},\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText, \r\n            target: modalTarget\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n                \r\n                setIsDisableBtn(false)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Logo/Modal  changer  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained' \r\n                                        className={classes.btnWithLabel}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> <ImageIcon color=\"action\" /> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    /> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <Box mr={1} display='inline'>\r\n                                                    <TextField\r\n                                                        type='text'\r\n                                                        label=\"Text for Button\"\r\n                                                        variant=\"outlined\"\r\n                                                        value={modalText}\r\n                                                        onChange={(e) => {\r\n                                                        setIsDisableBtn(false);\r\n                                                        setModalText(e.target.value)\r\n                                                    }}/>  \r\n                                                </Box> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Target for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalTarget}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalTarget(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <ColorSelecter\r\n                                                label={'Color for Button'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={true}\r\n                                            /> \r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n\r\n    React.useEffect(() => {\r\n        if( \r\n            settings.classes.backgroundColor !== 'default' && \r\n            settings.classes.backgroundColor !== 'paper' && \r\n            settings.classes.backgroundColor !== 'primary' &&  \r\n            settings.classes.backgroundColor !== 'secondary' &&\r\n            settings.classes.backgroundColor !== 'warning' &&\r\n            settings.classes.backgroundColor !== 'error' &&\r\n            settings.classes.backgroundColor !== 'info' &&\r\n            settings.classes.backgroundColor !== 'success'  \r\n        ) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n    }, [settings])\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                maxWidth: 400,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Style changer <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl    variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Background Color for Header</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={settingBackgroundSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setSettingBackgroundSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Theme Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Theme Secondary</MenuItem> \r\n                                                    <MenuItem value={'warning'}>Theme Warning</MenuItem>\r\n                                                    <MenuItem value={'error'}>Theme Error</MenuItem>\r\n                                                    <MenuItem value={'info'}>Theme Info</MenuItem>\r\n                                                    <MenuItem value={'success'}>Theme Success</MenuItem>\r\n                                                    <MenuItem value={'default'}>Theme BG default</MenuItem>\r\n                                                    <MenuItem value={'paper'}>Theme BG paper</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    settingBackgroundSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {settingBackgroundCustom}\r\n                                                        changeColor = {setSettingBackgroundCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'left'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n    const [lightError, setLightError] = React.useState(themeLight.palette.error.main) \r\n    const [darkError, setDarkError] = React.useState(themeDark.palette.error.main) \r\n\r\n    const [lightWarning, setLightWarning] = React.useState(themeLight.palette.warning.main) \r\n    const [darkWarning, setDarkWarning] = React.useState(themeDark.palette.warning.main) \r\n\r\n    const [lightInfo, setLightInfo] = React.useState(themeLight.palette.info.main) \r\n    const [darkInfo, setDarkInfo] = React.useState(themeDark.palette.info.main) \r\n\r\n    const [lightSuccess, setLightSuccess] = React.useState(themeLight.palette.success.main) \r\n    const [darkSuccess, setDarkSuccess] = React.useState(themeDark.palette.success.main) \r\n \r\n    // text.primary\r\n    // text.secondary\r\n    // text.disabled\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        console.log(theme.palette.success)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    const handleSave = () => {  \r\n \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                },\r\n                error: {\r\n                    main: lightError\r\n                },\r\n                warning: {\r\n                    main: lightWarning\r\n                },\r\n                info: {\r\n                    main: lightInfo\r\n                },\r\n                success: {\r\n                    main: lightSuccess\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                },\r\n                error: {\r\n                    main: darkError\r\n                },\r\n                warning: {\r\n                    main: darkWarning\r\n                },\r\n                info: {\r\n                    main: darkInfo\r\n                },\r\n                success: {\r\n                    main: darkSuccess\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={2}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Warning - { lightWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightWarning}\r\n                                        changeColor = {setLightWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Error - { lightError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightError}\r\n                                        changeColor = {setLightError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Info - { lightInfo }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightInfo}\r\n                                        changeColor = {setLightInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Success - { lightSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSuccess}\r\n                                        changeColor = {setLightSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Warning- { darkWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkWarning}\r\n                                        changeColor = {setDarkWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Error - { darkError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkError}\r\n                                        changeColor = {setDarkError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Info - { darkInfo}\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkInfo}\r\n                                        changeColor = {setDarkInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Succwss - { darkSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSuccess}\r\n                                        changeColor = {setDarkSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n  \r\nimport ColorSelecter from '../../library/colorPicker/ColorSelecter'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,   \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n     \r\n    React.useEffect(() => {\r\n        if(\r\n            modalSettings.colorButton !== 'primary' && \r\n            modalSettings.colorButton !== 'secondary' &&\r\n            modalSettings.colorButton !== 'warning' &&\r\n            modalSettings.colorButton !== 'error' &&\r\n            modalSettings.colorButton !== 'info' &&\r\n            modalSettings.colorButton !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [modalSettings.colorButton])\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Modal Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <ColorSelecter\r\n                                    label={'Color for Button'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={true}\r\n                                /> \r\n                            </Box>\r\n                            \r\n                             \r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({ \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {  \r\n\r\n        const newReq = localRequests.slice()\r\n        const filtered = newReq.filter(item => ( item.time !== id ))\r\n\r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false)\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","export default __webpack_public_path__ + \"static/media/half-moon.4946e6c2.svg\";","export default __webpack_public_path__ + \"static/media/sun.b7c92f87.svg\";","import React from 'react'\r\n\r\nimport {  \r\n    FormControlLabel, \r\n    Switch,\r\n    withStyles\r\n} from \"@material-ui/core\"; \r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\n \r\nimport darkThemeIcon from '../../../assets/icons/half-moon.svg'\r\nimport lightThemeIcon from '../../../assets/icons/sun.svg' \r\n\r\nfunction ThemeSwitcher() {\r\n\r\n    const { setThemeMode, themeMode} = React.useContext(CategoryContext)    \r\n  \r\n    const checked = themeMode === 'dark' ? true : false\r\n    \r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    const ThemeCustomSwitch = withStyles((theme) => ({\r\n        root: {\r\n          width: 60,\r\n          height: 28,\r\n          padding: 0, \r\n          marginRight: 5\r\n        },\r\n        switchBase: {\r\n          padding: 1,  \r\n          '&$checked': {\r\n            transform: 'translateX(32px)',\r\n            color: '#27536b',\r\n            '& + $track': {\r\n              backgroundColor: '#27536b',\r\n              opacity: 1,\r\n              border: 'none',\r\n            },\r\n            '&  $thumb': { \r\n              opacity: 1,\r\n              border: 'none',\r\n              backgroundImage: `url(${darkThemeIcon})`\r\n            },\r\n          },\r\n          '&$focusVisible $thumb': {\r\n            color: '#52d869', \r\n          },\r\n        },\r\n        thumb: {\r\n          width: 26,\r\n          height: 26,\r\n          backgroundImage: `url(${lightThemeIcon})`,\r\n          backgroundSize: '28px',\r\n          backgroundPosition: 'center',  \r\n        },\r\n        track: {\r\n          borderRadius: 28 / 2,\r\n          border: `1px solid #a3d4ff`,\r\n          backgroundColor: '#a3d4ff',\r\n          opacity: 1,\r\n          transition: theme.transitions.create(['background-color', 'border']),\r\n        },\r\n        checked: {},\r\n        focusVisible: {},\r\n      }))(({ classes, ...props }) => {\r\n        return (\r\n          <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n              root: classes.root,\r\n              switchBase: classes.switchBase,\r\n              thumb: classes.thumb,\r\n              track: classes.track,\r\n              checked: classes.checked,\r\n            }}\r\n            {...props}\r\n          />\r\n        );\r\n      });\r\n    return ( \r\n        <FormControlLabel\r\n            control={<ThemeCustomSwitch checked={checked} onChange={handleChange} name=\"checkedB\" />}\r\n            label={checked ? 'Night Mode' : 'Light Mode'}\r\n        /> \r\n    ) \r\n}\r\n\r\nexport default ThemeSwitcher\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n    Button\r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            drawerHeader: {\r\n                margin: theme.spacing(1, 2), \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between', \r\n                '& .log-button': {\r\n                    minWidth: 100\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset, drawerHeader } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box className={drawerHeader}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        {\r\n                            props.user ? \r\n                            <Button \r\n                                size='medium'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={ () => { props.handleSignOut(); handleDrawerClose()  } }\r\n                                className={'log-button'}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                            :\r\n                            <NavLink to='/login' onClick={handleDrawerClose}>\r\n                                <Button  \r\n                                    color='primary' \r\n                                    variant=\"contained\"\r\n                                    size='medium'\r\n                                    className={'log-button'} \r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </NavLink>\r\n                        }\r\n                        \r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box my={3} width={'100%'} clone={true} >\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                    \r\n                    <Box px={3}>\r\n                        <Box my={2} width={'100%'} clone={true} >\r\n                            <ThemeSwitcher/>\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                color: \"default\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon style={{color: props.iconColor}} />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","export const getColorByPalette = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.primary.main \r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.error.main \r\n        } \r\n        case ('info') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.success.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.default\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        default: return color\r\n    } \r\n}\r\nexport const getColorByPaletteForGradient = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return [theme.palette.primary.main, theme.palette.primary.dark] \r\n        } \r\n        case ('secondary') : {\r\n            return [theme.palette.secondary.main, theme.palette.secondary.dark] \r\n        } \r\n        case ('warning') : {\r\n            return [theme.palette.warning.main, theme.palette.warning.dark] \r\n        } \r\n        case ('error') : {\r\n            return [theme.palette.error.main, theme.palette.error.dark] \r\n        } \r\n        case ('info') : {\r\n            return [theme.palette.info.main, theme.palette.info.dark] \r\n        } \r\n        case ('success') : {\r\n            return  [theme.palette.success.main, theme.palette.success.dark]\r\n        } \r\n        default: return [color, color]\r\n    } \r\n}\r\nexport const getColorByPaletteReverse = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('info') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.info.main\r\n        } \r\n        default: return color\r\n    } \r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button, \r\n} from \"@material-ui/core\"; \r\nimport { darken, lighten } from '@material-ui/core/styles';\r\n\r\n\r\nimport {getColorByPaletteForGradient, getColorByPalette } from '../../library/colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent() { \r\n\r\n    console.log('dumb header')\r\n\r\n    const { user } = React.useContext(ModeContext)\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings, themeMode} = React.useContext(CategoryContext)    \r\n  \r\n    const checked = themeMode === 'dark' ? true : false\r\n \r\n\r\n    const [mobileView, setMobileView] = useState(true); \r\n   \r\n    let backgroundHeader = settings.classes.backgroundColor\r\n    let colorHeader \r\n    let hoverActiveLinkColor\r\n    let iconMobileDrawerColor\r\n  \r\n    let modalBtnColor1 = modal.color\r\n    let modalBtnColor2 = modal.color\r\n\r\n    let widthMobile \r\n    \r\n    \r\n    const headerRef = React.useRef(null);\r\n    const topHeaderRef = React.useRef(null);\r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`] \r\n        modalBtnColor1= getColorByPaletteForGradient(theme, modal.color)[0]\r\n        modalBtnColor2= getColorByPaletteForGradient(theme, modal.color)[1] \r\n        backgroundHeader = getColorByPalette(theme, backgroundHeader) \r\n        iconMobileDrawerColor = theme.palette.getContrastText(backgroundHeader)\r\n\r\n        if(backgroundHeader === 'primary') {\r\n            backgroundHeader = theme.palette.primary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.primary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.primary.main, 0.3)\r\n        }\r\n        if(backgroundHeader === 'secondary') {\r\n            backgroundHeader = theme.palette.secondary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.secondary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.secondary.main, 0.3)\r\n        } \r\n        if( \r\n            backgroundHeader !== 'default' && \r\n            backgroundHeader !== 'paper' && \r\n            backgroundHeader !== 'primary' && \r\n            backgroundHeader !== 'secondary' &&\r\n            backgroundHeader !== 'warning' &&\r\n            backgroundHeader !== 'error' &&\r\n            backgroundHeader !== 'info' &&\r\n            backgroundHeader !== 'success' \r\n        ) {  \r\n                colorHeader = theme.palette.getContrastText(backgroundHeader)\r\n                hoverActiveLinkColor = darken(backgroundHeader, 0.5) \r\n        }   \r\n        if(backgroundHeader === 'paper') { \r\n            backgroundHeader = theme.palette.background.paper\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.paper)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n        if(backgroundHeader === 'default') { \r\n            backgroundHeader = theme.palette.background.default\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.default)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n  \r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `, \r\n               \r\n                top: 0,  \r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n                '&.sticky' : {\r\n                    transform: \"translateY(-41px)\",\r\n                    [`@media (max-width: ${widthMobile}px)`]: {\r\n                        transform: \"translateY(0px)\",\r\n                    }\r\n                }\r\n            },\r\n            fixedPadding: { \r\n                minHeight: 100 + settings.classes.paddingY*2 , \r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    minHeight: 80 + settings.classes.paddingY , \r\n                },\r\n            },\r\n            topHeader: {   \r\n                height: '100%', \r\n                paddingTop: 5, \r\n                paddingBottom: 5,  \r\n                backgroundColor:  checked ? darken(backgroundHeader , 0.7) : lighten(backgroundHeader, 0.85), \r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `, \r\n                color: theme.palette.text.primary, \r\n                '&.sticky' : {\r\n                    // transform: 'scaleY(0)',\r\n                    // transformOrigin: 'top', \r\n                    height: 0, \r\n                    opacity: 0\r\n                }\r\n            },\r\n            logoMain: { \r\n                fontWeight: 700,\r\n                fontSize: 22,\r\n                color: colorHeader , \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundImage: `linear-gradient(180deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`,  \r\n                color: theme.palette.getContrastText(modalBtnColor2), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': { \r\n                    color: theme.palette.getContrastText(modalBtnColor2) ,\r\n                    backgroundImage: `linear-gradient(200deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`, \r\n                }\r\n            }, \r\n            linkModal: {  \r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(0.5, 1.2),\r\n                '&:hover': { \r\n                    backgroundColor: modalBtnColor1, \r\n                    color: theme.palette.getContrastText(modalBtnColor1), \r\n                    cursor: 'pointer'\r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal, linkModal, topHeader} = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {  \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        const setScrollHeader = () => { \r\n            if(!mobileView) {\r\n                const headerTop =  window.pageYOffset\r\n                try {\r\n                    if( headerTop > 1 ) {\r\n                        headerRef.current.classList.add('sticky')\r\n                    } else {\r\n                        headerRef.current.classList.remove('sticky')\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.log(err)\r\n                } \r\n            }\r\n        } \r\n        setResponsiveness(); \r\n        setScrollHeader();\r\n\r\n        window.addEventListener(\"resize\", setResponsiveness);\r\n        window.addEventListener(\"scroll\", setScrollHeader);\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', setResponsiveness) \r\n            window.removeEventListener('scroll', setScrollHeader) \r\n        }\r\n        // eslint-disable-next-line \r\n    }, []);\r\n     \r\n\r\n    const openModal = (target) => { \r\n        handleOpen(target) \r\n    }\r\n\r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n  \r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button\r\n            onClick={() => { openModal(modal.target) }} \r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n    const topHeaderModalBtn = () => ( \r\n        <Button\r\n            onClick={() => { openModal(modal.target) }} \r\n            className={linkModal}\r\n            size='small' \r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n                 \r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            } \r\n            <AppBar className={header} ref={headerRef}  id='header'>\r\n                    { \r\n                        !mobileView &&\r\n                        <Box className={topHeader} ref={topHeaderRef} >\r\n                            <Container \r\n                                disableGutters={settings.disableGutters}\r\n                                fixed={settings.fixed} \r\n                                maxWidth={settings.maxWidth}  \r\n                            > \r\n                                <Box display='flex' alignItems='center' justifyContent='space-between'>\r\n                                    {  modal.isModal ? topHeaderModalBtn() : ( <span></span> ) }\r\n                                    <Box display='flex' alignItems='center' >\r\n                                        \r\n                                        <ThemeSwitcher/>\r\n                                        \r\n                                        {\r\n                                            user ?\r\n                                            <Button \r\n                                                size='small'\r\n                                                color='secondary' \r\n                                                variant={'contained'} \r\n                                                onClick={handleSignOut}\r\n                                            >\r\n                                                Sign Out\r\n                                            </Button>\r\n                                            :\r\n                                            <NavLink to='/login'>\r\n                                                <Button \r\n                                                    color='default' \r\n                                                    variant=\"outlined\"\r\n                                                    size='small'\r\n                                                >\r\n                                                    Login\r\n                                                </Button>\r\n                                            </NavLink>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n                                </Box>\r\n                            </Container>\r\n                        </Box>\r\n                    }\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop   \r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            iconColor={iconMobileDrawerColor}  \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                            user={user}\r\n                            handleSignOut={handleSignOut}\r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\n\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: open ? 1 : 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 10, \r\n            top: 5, \r\n            width: 60, \r\n            height: 60,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            textAlign: 'center' ,\r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.headerContainer}>\r\n  \r\n            <div>   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >   \r\n                    open <br/>\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <RequestsChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { makeStyles, Box, Typography, Container, IconButton, Tooltip } from '@material-ui/core'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nimport { getColorByPalette } from '../../components/library/colorPicker/ColorCalculation'\r\n\r\nfunction Footer() {\r\n\r\n    const { logo, settings } = React.useContext(CategoryContext)\r\n\r\n    let backgroundFooter = settings.classes.backgroundColor\r\n    let contrastFooter\r\n     \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        backgroundFooter = getColorByPalette(theme, backgroundFooter) \r\n        contrastFooter = theme.palette.getContrastText(backgroundFooter)\r\n\r\n        return({ \r\n            footer: {\r\n                backgroundColor: backgroundFooter, \r\n                padding: theme.spacing(3, 0)\r\n            }, \r\n            logoMain: { \r\n                color: contrastFooter,\r\n                fontWeight: 700,\r\n                fontSize: 25, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                color: contrastFooter,\r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 70, \r\n                height: 50, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: 45, \r\n                    height: 30, \r\n                },\r\n            },  \r\n            buttonToTop: {\r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.primary.dark\r\n                }\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n \r\n    const createLogo = () => (\r\n        <NavLink to={'/'} style={{textDecoration: 'none', display: 'inline-block'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={classes.logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={classes.logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={classes.logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n    const buttonToTop = () => (\r\n        <Tooltip title='To Top' placement='top' >\r\n            <IconButton \r\n                className={classes.buttonToTop}  \r\n                onClick={handleClickToTop}\r\n            >\r\n                <KeyboardArrowUpIcon style={{fill: contrastFooter}}/>\r\n            </IconButton>\r\n        </Tooltip>\r\n    )\r\n    const handleClickToTop = () => {\r\n        window.scrollTo({\r\n            top: 0, \r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n\r\n                <Box display='flex' alignItems=\"center\" justifyContent='space-between'>\r\n                    { createLogo() }\r\n                    { buttonToTop() }\r\n                </Box>\r\n                \r\n \r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\nimport ModeContext from '../context/modeContext/ModeContext' \r\n \r\nimport { Avatar, Button, TextField, Box, Container, CircularProgress, Typography, Tooltip } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab'; \r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n    const { user } = React.useContext(ModeContext) \r\n \r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    const [isSubmit, setIsSubmit] = React.useState(false)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        if(user) setIsRedirect(true)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          marginBottom: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: isSubmit ? theme.palette.info.main : theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', // Fix IE 11 issue.\r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submitBtn: {  \r\n            minHeight: 55\r\n        },\r\n        forgotTitle: {\r\n            textAlign: 'center'\r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n    const disableCheck = () => {\r\n        console.log(name, password)\r\n        if(name !== '' && password !== '') setIsDisableBtn(false)\r\n        else setIsDisableBtn(true) \r\n        setError(null)\r\n    }\r\n\r\n    const handleChange = (value, place) => {\r\n        switch(place) {\r\n            case ('name') : { \r\n                setName(value)\r\n                break;\r\n            }\r\n            case ('password'): {\r\n                setPassword(value)\r\n                break;\r\n            }\r\n            default: break;\r\n        } \r\n        disableCheck()\r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        setIsLoading(true)\r\n        setIsDisableBtn(true)\r\n        setIsSubmit(true)\r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n            setIsSubmit(false)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n            setIsSubmit(false)\r\n            setIsLoading(false)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>  \r\n            {/* <Dumb/> */}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        { isSubmit ? <CircularProgress size={25} color={'#fff'}  /> : <LockOutlinedIcon /> }\r\n                    </Avatar> \r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                id=\"text\"\r\n                                label=\"User\"\r\n                                name=\"user\"\r\n                                autoComplete='true'\r\n                                autoFocus\r\n                                value={name}\r\n                                onChange={  (e)=>{handleChange(e.target.value, \"name\")} }\r\n                            />\r\n                        </Box>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\" \r\n                                value={password}\r\n                                onChange={  (e)=>{handleChange(e.target.value, \"password\")} }\r\n                            />\r\n                        </Box>\r\n                        {\r\n                            error && \r\n                            <Box mb={2} >\r\n                                <Alert severity=\"error\">{error.message}</Alert>\r\n                            </Box>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            size='medium'\r\n                            color=\"primary\"\r\n                            className={classes.submitBtn}\r\n                            disabled={isDisableBtn} \r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                        \r\n                    <Box mt={2} >\r\n                        <Tooltip title=\"It's your problem\" placement='top'>\r\n                            <Typography variant='caption' className={classes.forgotTitle}>\r\n                                Forgot Password? \r\n                            </Typography>\r\n                        </Tooltip>\r\n                    </Box>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5, \r\n            display: 'flex', \r\n            alignItems: 'center'\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport uuid from 'react-uuid' \r\nimport ColorSelecter from '../colorPicker/ColorSelecter' \r\nimport {ColorPicker} from '../colorPicker/ColorPicker' \r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu, Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select, Typography, IconButton, \r\n    Modal, DialogContent, \r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n    const libraryList = layouts.list\r\n\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    // const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    // const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    // const [colorBackgroundSelect,  setColorBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n    // const [colorBackgroundCustom, setColorBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n\r\n    // const [colorBorderSelect,  setColorBorderSelect] = React.useState(props.data.classes.borderColor || 'inherit')\r\n    // const [colorBorderCustom, setColorBorderCustom] = React.useState(props.data.classes.borderColor || 'inherit')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0)\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  0)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip  } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem  } = commonStyle \r\n \r\n\r\n        return ({   \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                width: 600, \r\n            } },\r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip,\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection  \r\n    }  \r\n     \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.handleClose()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = props.data.children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = JSON.parse(JSON.stringify(libraryHeading)); \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraph)); \r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraphImage)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            case 'list' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryList)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n   \r\n        props.handleClose()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n        props.handleClose()\r\n    } \r\n    \r\n    \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} >  \r\n                <Modal \r\n                    open={props.open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={props.handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Container Settings<OpenWithIcon/>\r\n                                </Typography>\r\n                    <FormGroup > \r\n                        <Typography  variant={'h6'} gutterBottom  >\r\n                            Add item from libs\r\n                        </Typography>\r\n                        <Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button \r\n                                        aria-controls=\"heading-menu\" \r\n                                        aria-haspopup=\"true\" \r\n                                        onClick={handleHeadingMenuClick}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Heading\r\n                                    </Button>\r\n                                </Box>\r\n                                \r\n                                <Menu\r\n                                    id=\"heading-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleHeadingMenuClose}\r\n                                >\r\n                                    <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                    <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                    <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                    <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                    <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                    <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                </Menu>\r\n\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraph');}}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Paragraph\r\n                                    </Button>\r\n                                </Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        Paragraph-Image\r\n                                    </Button>\r\n                                </Box> \r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('list', 'list');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        List\r\n                                    </Button>\r\n                                </Box> \r\n                        </Box>\r\n\r\n                    </FormGroup>\r\n\r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Settings \r\n                    </Typography>\r\n                    <FormGroup row>\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                            <Select\r\n                                labelId=\"dis-gutters-label\"\r\n                                id=\"dis-gutters-style\"\r\n                                value={settingGutter}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        \r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                            <Select\r\n                                labelId=\"fixed-label\"\r\n                                id=\"fixed-style\"\r\n                                value={settingFixed}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>  \r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup row> \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                            <Select\r\n                                labelId=\"maxWidth-label\"\r\n                                id=\"maxWidth-style\"\r\n                                value={settingMaxWidth}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-container-label\"\r\n                                id=\"inner-container-style\"\r\n                                value={settingInnerContainer}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup row> \r\n                            \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-paper-label\"\r\n                                id=\"inner-paper-style\"\r\n                                value={settingIsPaper}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    \r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Styles \r\n                    </Typography>\r\n                    <React.Fragment>\r\n                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                <TabletMacIcon/>\r\n                                <Box>   \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.8 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.8 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.8 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.8 }</b> \r\n                                    </p>     \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>  \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.5 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.5 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.5 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.5 }</b> \r\n                                    </p>        \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n                        {/* display */}\r\n                        <Box className={classes.inputGroup}>\r\n\r\n                            <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                <IconButton>\r\n                                    <InfoOutlined/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"display-style-label\"\r\n                                        id=\"display-style\"\r\n                                        value={display}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'block'}>Block</MenuItem>  \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                                {\r\n                                    display === 'flex' &&\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"direction-style-label\"\r\n                                            id=\"direction-style\"\r\n                                            value={flexDirection}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={'row'}>Row</MenuItem>  \r\n                                            <MenuItem value={'column'}>Column</MenuItem>  \r\n                                            <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                            <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>   \r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* margin */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Margin Top\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={margin.top}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                />\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Margin Bottom\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={margin.bottom}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* padding */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Padding Top\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={padding.top}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                />\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Padding Bottom\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={padding.bottom}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                />\r\n                            </Box>\r\n                            \r\n\r\n                        </Box>\r\n                        \r\n                        {/* bg-color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                            <Box className={classes.inputNumber} >\r\n                                <Typography  component={'p'} gutterBottom  >\r\n                                    Background  -  { backgroundColor }\r\n                                </Typography> \r\n                                \r\n                                <ColorPicker \r\n                                    initialColor={backgroundColor} \r\n                                    changeColor={setBackgroundColor} \r\n                                    setIsDisableBtn={setIsDisableBtn}\r\n                                    position={'left'}\r\n                                /> \r\n                            </Box>\r\n                            <Box className={classes.inputNumber} >\r\n                                <Typography  component={'p'} gutterBottom  >\r\n                                    Color  -  { color }\r\n                                </Typography> \r\n                                <ColorPicker \r\n                                    initialColor={color} \r\n                                    changeColor={setColor} \r\n                                    setIsDisableBtn={setIsDisableBtn}\r\n                                    position={'right'}\r\n                                /> \r\n                            </Box>\r\n                                \r\n                        </Box>\r\n                        \r\n                        {/* color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                <Select\r\n                                    labelId=\"shadow-style-label\"\r\n                                    id=\"shadow-style\"\r\n                                    value={shadow}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                    0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                    <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                    0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                    <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                    0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                </Select>\r\n                            </FormControl> \r\n                            \r\n                        </Box>\r\n                            \r\n                        {/* border */}\r\n                        <Box className={classes.inputGroup}> \r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Border Color  -  { borderColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={borderColor} \r\n                                        changeColor={setBorderColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box> \r\n                                <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Border Radius\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={borderRadius}\r\n                                        onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                />\r\n\r\n                            </Box>\r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                            <TextField \r\n                                className={classes.inputNumber}\r\n                                type='number'\r\n                                label=\"Border Width\" \r\n                                variant=\"filled\" \r\n                                size='small'  \r\n                                value={borderWidth}\r\n                                onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                            />\r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                <Select\r\n                                    labelId=\"border-style-label\"\r\n                                    id=\"border-style\"\r\n                                    value={borderStyle}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                        </Box>\r\n\r\n                        <Box  className={classes.btnSave}>\r\n                            <Button\r\n                                disabled={isDisableBtn}\r\n                            \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size={'medium'} \r\n                                onClick={reSaveClassesSettings}\r\n                            >\r\n                                Save\r\n                            </Button> \r\n                        </Box>\r\n                        \r\n                    </React.Fragment> \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                </Modal> \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n                marginTop: props.className.marginTop*0.8,\r\n                marginBottom: props.className.marginBottom*0.8\r\n            },\r\n            [theme.breakpoints.down('sm')]: {\r\n                fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.6 : 20,\r\n                lineHeight : 1.2, \r\n                marginTop: props.className.marginTop*0.5, \r\n                marginBottom: props.className.marginBottom*0.5, \r\n                textAlign: 'center'\r\n            },\r\n        },\r\n        // mobileClass: {\r\n        //     [theme.breakpoints.down('sm')]: {\r\n        //         marginTop: props.className.marginTop > 30 ? props.className.marginTop * 0.6 : 15,\r\n        //         marginBottom: props.className.marginBottom > 30 ? props.className.marginBottom * 0.6 : 15,\r\n        //         paddingLeft: props.className.paddingLeft > 30 ? props.className.paddingLeft * 0.6 : 15\r\n        //     } \r\n        // }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren.length > 0) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n        else {\r\n            return `(No text - ${props.data.variant})`\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent,\r\n    ButtonGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle, responseValues, responseTablets, responseMobile, mobileTooltip, tabletTooltip } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${margin.top * 0.8}px`,  \r\n                        height: `${margin.top * 0.8}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${margin.bottom * 0.8}px`,\r\n                        height: `${margin.bottom * 0.8 }px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${margin.bottom * 0.5}px`,\r\n                        height: `${margin.bottom * 0.5 }px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    const swapHeading = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, то на мобильных устройствах шрифт будет меньше и выравнивание будет по центру  \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n                                <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                        <TabletMacIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.8 }</b>; MarginBottom: <b>{margin.bottom * 0.8 }</b> </p>   \r\n                                                    <p>FontSize: <b>{ fontSize * 0.8 }</b> </p>   \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                        <PhoneIphoneIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p>  \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.6 : 20 }</b>  LineHeight: <b>{1.2} </b> </p>   \r\n                                                    <p>TextAlign:  <b>center</b> </p>\r\n  \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography>\r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                        \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb list') \r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,  \r\n        liClass: props.data.itemsStyle,\r\n        mobileClass: {\r\n            [theme.breakpoints.down('sm')]: {\r\n                marginTop: props.className.marginTop === 0 ? 0 : (props.className.marginTop > 30 ? props.className.marginTop*0.6 : 15), \r\n                marginBottom: props.className.marginBottom === 0 ? 0 : (props.className.marginBottom > 30 ? props.className.marginBottom*0.6 : 15),  \r\n                paddingLeft: props.className.paddingLeft === 0 ? 0 : (props.className.paddingLeft > 30 ? props.className.paddingLeft*0.6 : 15)\r\n            } \r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n           <ul className={`${classes.myClassName} ${classes.mobileClass}`}>\r\n                {\r\n                    props.data.items.map( (item, index) => (\r\n                        <li key={index} className={classes.liClass}>\r\n                            {item}\r\n                        </li>\r\n                    ))        \r\n                }\r\n                {\r\n                    props.data.items.length === 0 &&\r\n                    <li className={classes.liClass} >No items</li>\r\n                }\r\n           </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    ButtonGroup, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n  \r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';   \r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled list work')\r\n\r\n    const [paddingLeft, setPaddingLeft] = React.useState( props.data.classes.paddingLeft || 15 )\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    }) \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit') \r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [items, setItems] = React.useState(props.data.items || [])\r\n    const [itemsPadding, setItemsPadding] = React.useState(props.data.itemsStyle.paddingBottom || [])\r\n    const [itemsListStyle, setItemsListStyle] = React.useState(props.data.itemsStyle.listStyle || 'decimal')\r\n    const [newItem, setNewItem] = React.useState('') \r\n\r\n    const mobileMarginTopComputed = margin.top === 0 ? 0 : (margin.top > 30 ? margin.top*0.6 : 15)\r\n    const mobileMarginBottomComputed = margin.bottom === 0 ? 0 : (margin.bottom > 30 ? margin.bottom*0.6 : 15)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues, responseMobile, mobileTooltip  } = commonClasses \r\n        const { mtView, mbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({ \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }   \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n            movingPageBtn: {  \r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = {  \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        paddingLeft: paddingLeft, \r\n        color: color, \r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight \r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.itemsStyle = {\r\n            paddingBottom: itemsPadding, \r\n            listStyle: itemsListStyle\r\n        }\r\n        sentData.items = items\r\n \r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleItemChange = (index, value) => {\r\n        let newItems = items.slice()\r\n        newItems[index] = value\r\n        setItems(newItems)\r\n        setIsDisableBtn(false)\r\n    }\r\n    const swapItem = (direction, index) => {\r\n        let newItems = items.slice() \r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex - 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex + 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const deleteItem = (index) => {  \r\n        let newItems = items.slice()\r\n        newItems.splice(index, 1)\r\n         \r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleAddItem = () => {\r\n        let newItems = items.slice()\r\n        \r\n        newItems.push(newItem)\r\n \r\n        setItems(newItems)\r\n        \r\n        setNewItem('') \r\n        setIsDisableBtn(false)\r\n    } \r\n    const swapList = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                List Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>\r\n                                        <p>\r\n                                            MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                            MarginBottom: <b>{mobileMarginBottomComputed}</b> \r\n                                        </p> \r\n                                        <p>PaddingLeft:  <b>{paddingLeft === 0 ? 0 : (paddingLeft > 30 ? paddingLeft*0.6 : 15)}</b></p>\r\n                                    </Box>\r\n                                </Box> \r\n                            </Tooltip> \r\n                               \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box> \r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={paddingLeft}\r\n                                        onChange={ (e) => { setPaddingLeft(e.target.value) } }     \r\n                                    /> \r\n                                </Box>\r\n                                 \r\n            \r\n                            </Box>\r\n                           \r\n                                     \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup} mt={2}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl> \r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    /> \r\n                                     <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Item Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={itemsPadding}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setItemsPadding(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">List Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={itemsListStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setItemsListStyle((e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={'circle'}>Circle</MenuItem>\r\n                                            <MenuItem value={'disc'}>Disc</MenuItem>\r\n                                            <MenuItem value={'square'}>Square</MenuItem>\r\n                                            <MenuItem value={'decimal'}>Numbers</MenuItem>\r\n                                            <MenuItem value={'lower-alpha'}>lower-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-alpha'}>upper-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-roman'}>upper-roman</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n\r\n                            {/* items */}\r\n                            <Box className={classes.inputGroup} mt={3}>  \r\n                                {\r\n                                    items.map( (item, index) => {\r\n                                        return (\r\n                                            <Box key={index} display={'flex'} p={1} > \r\n                                                <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='text'\r\n                                                    label={`Item ${index+1}`} \r\n                                                    variant=\"outlined\" \r\n                                                    size='small'  \r\n                                                    value={item}\r\n                                                    onChange={ (e) => {handleItemChange(index, e.target.value)} }     \r\n                                                /> \r\n                                                <ButtonGroup \r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingPageBtn}\r\n                                                    >  \r\n                                                        {\r\n                                                            items.indexOf(item) !== 0 &&\r\n                                                            <Tooltip title='Get Up' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('up', index) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                        {\r\n                                                            items.indexOf(item) !== items.length - 1 &&\r\n                                                            <Tooltip title='Get Down' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('down', index) }} \r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                            \r\n                                                        <Tooltip title='Delete Item' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"secondary\"\r\n                                                                disableElevation={true} \r\n                                                                onClick={() => { deleteItem(index) }}\r\n                                                            > \r\n                                                                <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup> \r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                } \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='text'\r\n                                    label={`New Item`} \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    value={newItem}\r\n                                    onChange={ (e) => {setNewItem(e.target.value)} }     \r\n                                />\r\n                                <Box my={1}>\r\n                                    <Button \r\n                                        onClick={handleAddItem}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        disabled={newItem.length > 0 ? false : true}\r\n                                    >\r\n                                        Add new item\r\n                                    </Button>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` list margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` list margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                               \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}   \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                            \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete List\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes}  \r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,  \r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren.length !== 0 ? props.textChildren : '(No text - paragraph)'\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    ButtonGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle, responseValues, responseMobile } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n     \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>   \r\n                                    <p>Paragraph don`t have any response values</p>   \r\n                                </Box>\r\n                            </Box>\r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Background   -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box> \r\n                                      \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border Color  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                     \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) { \r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {},\r\n        imageStabilization: {\r\n            maxWidth: '100%', \r\n            maxHeight: '100%',  \r\n            [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                height: 'auto'\r\n            }, \r\n            // [theme.breakpoints.down('md')]: { \r\n            // }\r\n        },\r\n        mobileClass: {\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                textAlign: 'center', \r\n                marginTop: props.className.marginTop*0.5, \r\n                marginBottom: props.className.marginBottom*0.5,\r\n                '& span': {\r\n                    marginTop: theme.spacing(1)\r\n                }\r\n            }, \r\n            [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                '& span': {\r\n                    marginTop: theme.spacing(1)\r\n                }\r\n            }, \r\n        }\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={`${classes.imageStyle} ${classes.imageStabilization}`}  alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    ButtonGroup, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { removeImage } = React.useContext(ImageContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageName, setImageName] = React.useState(props.data.image.imageName || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues, responseMobile, mobileTooltip  } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n\r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.bottom * 0.5}px`,  \r\n                        height: `${margin.bottom * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,   \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }, \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n   \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl,\r\n            imageName: imageName\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) { \r\n            removeImage(imageName)\r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    // const handleImageSetting = (event) => {    \r\n    //     uploadHandler(event.target.files[0])\r\n    //     setIsLoading(true)\r\n    // }\r\n    \r\n    const handleImageUpload = async (e) => { \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n        \r\n        setIsLoading(false) \r\n    }\r\n\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box> \r\n\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>   \r\n                                        <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p> \r\n                                        <p>flexDirection: <b> column</b>; alignItems: <b>center</b> </p>  \r\n                                        <p>TextAlign:  <b>center</b> </p>     \r\n                                    </Box>\r\n                                </Box>\r\n                            </Tooltip> \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageUpload} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Typography variant={'caption'} display='block' align={\"center\"} color={'error'}>\r\n                                        !! set only width, height will set auto\r\n                                    </Typography>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Border  -  { imageBorderColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={imageBorderColor} \r\n                                                changeColor={setImageBorderColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Background  -  { backgroundColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={backgroundColor} \r\n                                        changeColor={setBackgroundColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'left'}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Color  -  { color }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={color} \r\n                                        changeColor={setColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>   \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer } onClick={handleInputFocus}>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            // onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ListCreator from '../list/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n \r\n    console.log('dumb container work')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,   \r\n        styleClass: { \r\n            [`@media (max-width: 960px)`]: { \r\n                marginTop: props.classes.marginTop*0.8,\r\n                marginBottom: props.classes.marginBottom*0.8, \r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                marginTop: props.classes.marginTop*0.5,\r\n                marginBottom: props.classes.marginBottom*0.5,  \r\n            },\r\n        },\r\n        noPadding : { \r\n            paddingTop: 0,  \r\n            paddingBottom: 0,\r\n            [`@media (max-width: 960px)`]: {  \r\n                paddingTop: 0,\r\n                paddingBottom: 0,\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                paddingTop: 0,\r\n                paddingBottom: 0,\r\n            },\r\n        },\r\n        yesPadding : { \r\n            paddingTop: props.classes.paddingTop,  \r\n            paddingBottom: props.classes.paddingBottom,\r\n            [`@media (max-width: 960px)`]: {  \r\n                paddingTop: props.classes.paddingTop*0.8,\r\n                paddingBottom: props.classes.paddingBottom*0.8,\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                paddingTop: props.classes.paddingTop*0.5,\r\n                paddingBottom: props.classes.paddingBottom*0.5,\r\n            },\r\n        },\r\n        noPaper: {\r\n\r\n        }\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const isPaperClassForContainer = props.settings.isPaper ? classes.noPadding : classes.yesPadding\r\n    const isPaperClassForPaper = props.settings.isPaper ? classes.yesPadding : classes.noPadding\r\n   \r\n \r\n      \r\n\r\n    const renderItems = () => { \r\n        return (\r\n            modeDev ?\r\n            props.data.children.map((item) => {   \r\n                // eslint-disable-next-line\r\n                let orderFirst = props.data.children.indexOf(item) == 0 ? true : false\r\n                // eslint-disable-next-line\r\n                let orderLast = props.data.children.indexOf(item) == props.data.children.length - 1 ? true : false\r\n\r\n                switch(item.type) { \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens} \r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )\r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )  \r\n                    default: break;\r\n                }  \r\n                return null\r\n            })\r\n            :\r\n            props.data.children.map((item) => {  \r\n                switch(item.type) { \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    default: break;\r\n                }  \r\n                return null\r\n            }) \r\n        )\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                > \r\n                    <Paper style={{paddingLeft: 15, paddingRight: 15}} className={isPaperClassForPaper}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                 { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\nimport ImageContext from '../../../context/imageContext/ImageContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    const {removeImage} = React.useContext(ImageContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n             \r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    zIndex: 25,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n\r\n            \r\n\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => { \r\n\r\n        let filtered = props.data.children.filter((item) => (item.id !== id))   \r\n        // save in firestore \r\n        props.reSaveContainer(props.data.id, filtered)   \r\n    }\r\n\r\n    const handleClose =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) {\r\n            let images = createArrayImages() \r\n            images.forEach( imageName => {\r\n                removeImage(imageName)\r\n            })\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    const swapChildrens = (direction, id) => {  \r\n\r\n        let newChildren = props.data.children.slice() \r\n        let activeIndex  \r\n        newChildren.map( (item) => { \r\n            if(item.id === id) {\r\n              activeIndex = newChildren.indexOf(item) \r\n            }\r\n            return 0 \r\n        }) \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newChildren.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex - 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex + 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex + 1 ] = movedItem  \r\n        } \r\n \r\n        props.reSaveContainer(props.data.id, newChildren)\r\n    }\r\n\r\n    const createArrayImages = () => {\r\n        let images = []\r\n        props.data.children.forEach( item => {\r\n            if(item.type === 'paragraphImage') {\r\n                images.push(item.image.imageName)\r\n            }\r\n        })\r\n        return images\r\n    }\r\n    createArrayImages()\r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleClose} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        handleClose={handleClose}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                        swapChildrens={swapChildrens}\r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, darken } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n    \r\n    const useStyles = makeStyles( (theme) => { \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n          \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none', \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } ,\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('md')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 30),\r\n                }\r\n            }\r\n        } )\r\n    })\r\n \r\n    \r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className={`bulder-main-banner ${classes.styleClass}`}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={7} >\r\n                        <div className=\"bulder-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                {\r\n                                    titleSubIcon &&\r\n                                    <svg style={{fill: '#fff'}}>       \r\n                                        <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                    </svg>\r\n                                }\r\n                                \r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"bulder-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"bulder-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} > \r\n                        <div className=\"bulder-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'    \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const { removeImage } = React.useContext(ImageContext)\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n    const [iconName, setIconName] = React.useState(props.data.headingIcon.iconName || '')\r\n \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 40)\r\n    const tabletMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50)\r\n    const tabletMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.color !== 'primary' && \r\n            props.data.color !== 'secondary' &&\r\n            props.data.color !== 'warning' &&\r\n            props.data.color !== 'error' &&\r\n            props.data.color !== 'info' &&\r\n            props.data.color !== 'success' \r\n         ) {  \r\n            setColorSelect('custom')\r\n        } \r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel,  \r\n            responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${tabletMarginTopComputed}px`,  \r\n                        height: `${tabletMarginTopComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px `,  \r\n                        height: `${mobileMarginTopComputed}px `,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`,  \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${tabletMarginBottomComputed}px`,  \r\n                        height: `${tabletMarginBottomComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px `,  \r\n                        height: `${mobileMarginBottomComputed}px `,\r\n                    }\r\n                } \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleImageUpload = async (e, imageType) => {  \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        if( imageType === 'mainImage')  { \r\n            removeImage(imageName)   \r\n        }\r\n        if( imageType === 'icon') {\r\n            removeImage(iconName)   \r\n        }\r\n \r\n          \r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        if( imageType === 'mainImage')  { \r\n            setImageName(generateImageName)\r\n            setImageUrl(downloadURL)  \r\n        }\r\n        if( imageType === 'icon') {\r\n            setIconName(generateImageName)\r\n            setIconUrl(downloadURL)\r\n        }\r\n          \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl,\r\n            iconName : iconName\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) { \r\n            removeImage(imageName) \r\n            removeImage(iconName) \r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Main Banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Main Banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                                <TabletMacIcon/>\r\n                                                <Box>   \r\n                                                    <p> \r\n                                                        MarginTop: <b>{tabletMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{tabletMarginBottomComputed}</b> \r\n                                                    </p>     \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button color='primary' variant={'contained'} className={classes.btnWithLabel} > \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            {\r\n                                                iconUrl &&\r\n                                                <Box ml={1}>\r\n                                                    <img src={iconUrl} alt='icon' width={35} />\r\n                                                </Box>\r\n                                            }\r\n                                            \r\n                                        </Box> \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Sub Heading\" \r\n                                            variant=\"outlined\" \r\n                                            size='small'  \r\n                                            value={subHeading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Input Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={inputLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setInputLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Button Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={buttonLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setButtonLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                        <TextField   \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Form Policy\" \r\n                                            size='small'  \r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Form and SubHeading'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'>  \r\n                                            <Button color='primary' variant='contained' className={classes.btnWithLabel} > \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        {\r\n                                            imageUrl &&\r\n                                            <Box ml={1} maxWidth={300}>\r\n                                                <img src={imageUrl} alt='main' width={'100%'} />\r\n                                            </Box>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n  \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className={`${classes.styleClass} bulder-accordion heading`}>\r\n            <Container maxWidth={maxWidthContainer} className={classes.disableMobileGutters}>\r\n\r\n                {\r\n                    heading.length > 0 &&\r\n                    <h3> { heading } </h3> \r\n                }\r\n                \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"bulder-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"bulder-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemBody, setNewItemBody] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemBody)\r\n        setNewItemTitle('')\r\n        setNewItemBody('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} mt={3} mb={2}>\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new item</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item head\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item body\" \r\n                            variant=\"outlined\" \r\n                            value={newItemBody}\r\n                            onChange={(e) => { setNewItemBody(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Item\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useState} from 'react'\r\n \r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nconst ChangeItem = (props) => {\r\n    const [head, setHead] = useState(props.item.head)\r\n    const [body, setBody] = useState(props.item.body)\r\n \r\n    const handleSave = () => { \r\n        props.handleUpdateItem(props.index, head, body)\r\n    }\r\n\r\n    return (\r\n        <Box display='flex' alignItems=\"center\" width=\"100%\">\r\n            {\r\n                (head !== props.item.head || body !== props.item.body) && \r\n                <Box mr={1}>\r\n                    <Tooltip title={`Save item`} placement='top'>\r\n                        <IconButton onClick={handleSave} color={'primary'} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                </Box>\r\n            }\r\n            <Box width=\"100%\">\r\n                <Box mt={1} >\r\n                    <TextField  \r\n                        fullWidth\r\n                        size='small'\r\n                        type='text'\r\n                        label=\"Head\" \r\n                        variant=\"outlined\"  \r\n                        value={head}\r\n                        onChange={ (e) => {  setHead(e.target.value) } }     \r\n                    /> \r\n                </Box>\r\n                \r\n                <Box mt={2}  >\r\n                    <TextField  \r\n                        fullWidth\r\n                        size='small'\r\n                        type='text'\r\n                        label=\"Body\" \r\n                        variant=\"outlined\"  \r\n                        value={body}\r\n                        onChange={ (e) => {  setBody(e.target.value) } }     \r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n \r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\"\r\nimport ChangeItem from \"./ChangeItem\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg')\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.color !== 'primary' && \r\n            props.data.color !== 'secondary' &&\r\n            props.data.color !== 'warning' &&\r\n            props.data.color !== 'error' &&\r\n            props.data.color !== 'info' &&\r\n            props.data.color !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, \r\n            containerWrapper, responseValues ,responseMobile , mobileTooltip \r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   } ,\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItem = (index, head, body) => { \r\n        const newItems = items.slice()\r\n        newItems[index].head = head\r\n        newItems[index].body = body\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = (head, body) => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: head,\r\n            body: body\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newItems = items.slice()\r\n        newItems.splice(index, 1) \r\n \r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}> \r\n            <Tooltip  title={`accordion margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`accordion margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >   \r\n                <Box className={classes.btnDrawerStyle}> \r\n\r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Accordion Settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={2}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n                                                        <ChangeItem index={index} item={item} handleUpdateItem={handleUpdateItem} /> \r\n                                                        \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <AddItem addItem={addItem} />\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Accordion'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box, darken } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\nimport {getColorByPalette, getColorByPaletteReverse} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload  \r\n    let color = props.data.color || 'primary'\r\n    let colorFocusInput\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n \r\n        return ({\r\n            svg: {\r\n                fill: colorFocusInput\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                color: '#fff',\r\n                 \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${color} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }, \r\n            styleClass: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),  \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),  \r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className={`bulder-contact ${classes.styleClass}`}> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`bulder-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"bulder-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, \r\n    ButtonGroup, makeStyles, Modal, DialogContent, Switch, \r\n    FormControlLabel, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) { \r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.mapFrame === null ? false : true)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.color !== 'primary' && \r\n            props.data.color !== 'secondary' &&\r\n            props.data.color !== 'warning' &&\r\n            props.data.color !== 'error' &&\r\n            props.data.color !== 'info' &&\r\n            props.data.color !== 'success' \r\n         ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.color])\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n        \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Contact Map margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Contact Map margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Contacts Map Settings  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p>  \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                         \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Location\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={location}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setLocation(e.target.value) } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Phone\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={phone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Comment Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\" \r\n                                            value={inputComment}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputComment(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                    <TextField  \r\n                                                        multiline\r\n                                                        fullWidth\r\n                                                        type='text'\r\n                                                        label=\"Map Frame\" \r\n                                                        variant=\"outlined\"  \r\n                                                        value={mapFrame}\r\n                                                        onChange={ (e) => { setIsDisableBtn(false);  setMapFrame(e.target.value)  } }     \r\n                                                    />\r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button and Inputs'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n  \r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, darken } from '@material-ui/core'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext' \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext) \r\n      \r\n    const imageUrl = props.data.image\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    // let imageName = props.data.imageName\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    let colorButton = props.data.colorButton || '#f00'\r\n   \r\n    const useStyles = makeStyles((theme) => {   \r\n\r\n        colorButton = getColorByPalette(theme, colorButton) \r\n\r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth={maxWidthContainer} >\r\n                <div className={`${classes.styleClass} bulder-about heading`}>\r\n                    <Grid container> \r\n                        <Grid item xs={12} md={6} >\r\n                            <div className=\"bulder-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"bulder-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers' \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n      \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.colorButton !== 'primary' && \r\n            props.data.colorButton !== 'secondary' &&\r\n            props.data.colorButton !== 'warning' &&\r\n            props.data.colorButton !== 'error' &&\r\n            props.data.colorButton !== 'info' &&\r\n            props.data.colorButton !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, \r\n            containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip\r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave, \r\n            btnWithLabel: btnWithLabel,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n  \r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf)  {\r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n           \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`about margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`about margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'right'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { darken, fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n  \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        colorMain = getColorByPalette(theme, colorMain) \r\n \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain,\r\n                border: `1px solid ${colorMain}`, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorMain, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    paddingTop: \".4em\",\r\n                    paddingBottom: \".4em\",\r\n                    '&:hover' : {\r\n                        backgroundColor: colorMain , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0),  \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            },\r\n            styleClass: {\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={`${classes.containerColored} ${classes.styleClass}`}> \r\n            <Container maxWidth={maxWidthContainer} > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.colorMain !== 'primary' && \r\n            props.data.colorMain !== 'secondary' &&\r\n            props.data.colorMain !== 'warning' &&\r\n            props.data.colorMain !== 'error' &&\r\n            props.data.colorMain !== 'info' &&\r\n            props.data.colorMain !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, \r\n            btnDrawerItem, containerWrapper , responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Action Line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Action Line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Action Line\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Heading Size\"\r\n                                                variant=\"outlined\"\r\n                                                value={headingSize}\r\n                                                onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setHeadingSize(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>{ headingSize*0.65 }</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                   \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                            <ColorSelecter\r\n                                                label={'Color for Block'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'top'}\r\n                                                noInherit={true}\r\n                                            />\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React , {useState} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box\r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isBotton = rows.length - visibleRows > 0 ? true : false  \r\n    const [isBottonClick, setIsBottonClick] = useState(false)\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        \r\n        mainColor = getColorByPalette(theme, mainColor)\r\n \r\n        return ({\r\n            table: {\r\n                minWidth: 200,\r\n            },\r\n            \r\n            tableCell: {\r\n                paddingTop: theme.spacing(2), \r\n                paddingBottom: theme.spacing(2),  \r\n                [theme.breakpoints.down('md')]: { \r\n                    paddingTop: theme.spacing(1), \r\n                    paddingBottom: theme.spacing(1), \r\n                },\r\n            },\r\n            tableButtonCell: { \r\n                maxWidth: 300,\r\n                width: 300,\r\n                [theme.breakpoints.down('md')]: {\r\n                    width: 'auto', \r\n                },\r\n            },\r\n            tableButton: { \r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                fontSize: 14, \r\n                lineHeight: 1.2, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    padding: theme.spacing(1), \r\n                },\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsBottonClick(!isBottonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(!isBottonClick)\r\n        return (\r\n            rows.map((row, index) => {\r\n                if(index < visibleRows)\r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n                return false\r\n            })\r\n        )\r\n        if(isBottonClick)\r\n        return (\r\n            rows.map((row, index) => { \r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n            })\r\n        )\r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true}  >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableCell}>\r\n                {row.price}\r\n            </TableCell> \r\n            <TableCell align=\"right\" className={`${classes.tableButtonCell} ${classes.tableCell}`}> \r\n                <Button \r\n                    variant='contained'   \r\n                    className={classes.tableButton}\r\n                    onClick={() => { handleOpenModal(row.name) }}\r\n                >\r\n                    { buttonText }\r\n                </Button>\r\n            </TableCell>\r\n        </StyledTableRow>\r\n    )\r\n    const renderBotton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isBottonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth={maxWidthContainer} className={`${classes.tableContainer} heading`} >\r\n            {\r\n                heading.length > 0 &&\r\n                <h3> { heading } </h3> \r\n            }\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={`${classes.tableHeader} ${classes.tableCell}` }\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            <TableCell align=\"right\" className={`${classes.tableHeader} ${classes.tableCell}` } ></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            renderRows()\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isBotton &&\r\n                renderBotton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemPrice, setNewItemPrice] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemPrice)\r\n        setNewItemTitle('')\r\n        setNewItemPrice('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new row</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item title\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item price\" \r\n                            variant=\"outlined\" \r\n                            value={newItemPrice}\r\n                            onChange={(e) => { setNewItemPrice(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Row\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useState} from 'react'\r\n\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nconst ChangeItem = (props) => {\r\n    const [name, setName] = useState(props.item.name)\r\n    const [price, setPrice] = useState(props.item.price)\r\n \r\n    const handleSave = () => { \r\n        props.handleRowChange(props.index, name, price)\r\n    }\r\n\r\n    return (\r\n        <Box display='flex' alignItems=\"center\" width=\"100%\">\r\n            {\r\n                (name !== props.item.name || price !== props.item.price) && \r\n                <Box mr={1}>\r\n                    <Tooltip title={`Save row`} placement='top'>\r\n                        <IconButton onClick={handleSave} color={'primary'} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                </Box>\r\n            }\r\n            <Box mr={1} flexGrow={1}>\r\n                <TextField \r\n                    fullWidth\r\n                    size='small'\r\n                    type='text'\r\n                    label={`Table Row Name ${props.index + 1}`}\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    onChange={(e) => { \r\n                        setName(e.target.value)\r\n                    }}\r\n                />\r\n            </Box>\r\n            <Box >\r\n                <TextField \r\n                    fullWidth\r\n                    size='small'\r\n                    type='text'\r\n                    label={`Table Row Price ${props.index + 1}`}\r\n                    variant=\"outlined\"\r\n                    value={price}\r\n                    onChange={(e) => { \r\n                        setPrice(e.target.value)\r\n                    }}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeItem\r\n","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\"\r\nimport ChangeItem from \"./ChangeItem\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n \r\n    const [textButton,  setTextButton] = React.useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    const [rows, setRows] = React.useState(props.data.rows)\r\n    const [tableRow, setTableRow] = React.useState(props.data.tableRow)\r\n\r\n    const [visibleRows, setVisibleRows] = React.useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = React.useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = React.useState(props.data.visibleBottonTextClick || 'Show less') \r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n     \r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.color !== 'primary' && \r\n            props.data.color !== 'secondary' &&\r\n            props.data.color !== 'warning' &&\r\n            props.data.color !== 'error' &&\r\n            props.data.color !== 'info' &&\r\n            props.data.color !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper ,\r\n            responseValues ,responseMobile , mobileTooltip} = commonClasses \r\n\r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,  \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeTable = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleTableHeadChange = (index, value) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChange = (index, name, price) => {\r\n        const newRows = rows.slice()\r\n\r\n        newRows[index].name = name\r\n        newRows[index].price = price\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addRow = (title, body) => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: title, \r\n            price: body \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Table margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Table margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        \r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            size='small'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <TextField \r\n                                            fullWidth\r\n                                            size='small'\r\n                                            type='text'\r\n                                            label=\"Text Button\"\r\n                                            variant=\"outlined\"\r\n                                            value={textButton}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setTextButton(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <TextField \r\n                                                            fullWidth\r\n                                                            type='text'\r\n                                                            size='small'\r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant=\"outlined\"\r\n                                                            value={item}\r\n                                                            onChange={(e) => {\r\n                                                            setIsDisableBtn(false);\r\n                                                            handleTableHeadChange(index, e.target.value)\r\n                                                        }}/>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n  \r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                                \r\n                                                        <ChangeItem handleRowChange={handleRowChange} item={item} index={index} />\r\n\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n                                    \r\n                                    <AddItem addItem={addRow} />\r\n                                     \r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <ColorSelecter\r\n                                            label={'Color for Table'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='number'\r\n                                                label={`Quantity to show`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleRows}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleRows(Number(e.target.value))\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='text'\r\n                                                label={`Text for botton`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleBottonText}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleBottonText(e.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <TextField  \r\n                                            type='text'\r\n                                            label={`Text for botton clicked`}\r\n                                            variant=\"outlined\"\r\n                                            value={visibleBottonTextClick}\r\n                                            onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setVisibleBottonTextClick(e.target.value)\r\n                                            }}\r\n                                        />\r\n                                    </Box>\r\n                                                \r\n                                    \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, makeStyles, Button, Box, Grid, fade, darken } from '@material-ui/core'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../colorPicker/ColorCalculation'\r\n\r\nimport '../../../assets/style/lineForm.scss' \r\n\r\nfunction DumbComponent(props) {  \r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('') \r\n   \r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone \r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n      \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    let color = props.data.color\r\n    let colorFocusInput\r\n  \r\n    const useStyles = makeStyles((theme) => {    \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n\r\n        return ({ \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper,  \r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            },\r\n            lineDecor: {\r\n                position: \"absolute\",\r\n                top: 8,\r\n                left: 8,\r\n                right: 8,\r\n                bottom: 8,\r\n                border: `1px solid ${fade(color, 0.25)}`,\r\n                borderRadius: 4,\r\n            },\r\n            input: {\r\n                width: '100%',\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: 'inherit',\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                height: 50,\r\n                paddingLeft: 45,\r\n                paddingRight: 25, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center' ,\r\n                    paddingLeft: 20,\r\n                    paddingRight: 20, \r\n                }\r\n            },\r\n            button: {\r\n                width: '100%',\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                height: 50,\r\n                textTransform: 'inherit', \r\n                \r\n                color: theme.palette.getContrastText(color),\r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: 0,  \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.getContrastText(theme.palette.background.paper),\r\n                    }\r\n                }, \r\n            }, \r\n            gridItem: {\r\n                paddingRight: theme.spacing(1),\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginBottom: 10,  \r\n                }\r\n            },\r\n            policy: {\r\n                height: \"100%\", \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                fontSize: 12,\r\n                lineHeight: 1.2,\r\n                fontWeight: 300, \r\n                [theme.breakpoints.down('md')]: {\r\n                    marginTop: 10, \r\n                    textAlign: 'center', \r\n                    justifyContent: 'center'\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName,  \r\n            place: 'line Form',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('') \r\n\r\n    }\r\n    return ( \r\n        <div className={classes.itemBackground}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className=\"line-form\"> \r\n                    <Box className={classes.lineDecor} ></Box>\r\n                    {\r\n                        heading.length > 0 &&\r\n                        <h5>\r\n                            {heading}\r\n                        </h5>\r\n                    }\r\n                    {\r\n                        paragraph.length > 0 &&\r\n                        <p>\r\n                            {paragraph}\r\n                        </p>\r\n                    } \r\n\r\n                    <form onSubmit={handleSubmit} style={{position: 'relative', zIndex: 5}}>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name={`name-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputName} \r\n                                    value={formName}\r\n                                    onChange={(e) => {setFormName(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"tel\" \r\n                                    name={`phone-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputPhone} \r\n                                    value={formPhone}\r\n                                    onChange={(e) => {setFormPhone(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4} lg={3} className={classes.gridItem}>\r\n                                <Button \r\n                                    type=\"submit\"\r\n                                    className={classes.button} \r\n                                >\r\n                                    <span>\r\n                                       { buttonText}\r\n                                    </span>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={3} >\r\n                                <span className={classes.policy}>\r\n                                    { policy }\r\n                                </span> \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                    </form>\r\n                </div> \r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, ButtonGroup, makeStyles, Modal, DialogContent, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n \r\n    const [heading, setHeading] = React.useState(props.data.heading || '')\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '') \r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom )\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    React.useEffect(() => {\r\n        if ( \r\n            props.data.color !== 'primary' && \r\n            props.data.color !== 'secondary' &&\r\n            props.data.color !== 'warning' &&\r\n            props.data.color !== 'error' &&\r\n            props.data.color !== 'info' &&\r\n            props.data.color !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.color])\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n     \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)  \r\n        newData.heading = heading \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone  \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy  \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Form line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Form line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Form Line Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Settings Form line  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    \r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select> \r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                      \r\n                                    <Box mt={2} >   \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        />\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }  \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Typography, Container, Box, fade } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n   \r\n    console.log(props.data)\r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForView = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({  \r\n            swiper: {\r\n                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                    }\r\n                }, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& .swiper-button-prev': {\r\n                        display: 'none !important'\r\n                    },\r\n                    '& .swiper-button-next': {\r\n                        display: 'none'\r\n                    }\r\n                }, \r\n            },\r\n            slide: {\r\n                position: 'relative',  \r\n                height: slideHeight,   \r\n                overflow: 'hidden',   \r\n            },\r\n            slideBox: {\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }, \r\n            slideImg: {\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover'\r\n            },\r\n            slideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: 14, \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2), \r\n                borderBottom: `2px solid ${color}`\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n        })\r\n    });\r\n \r\n\r\n    const classes  = useStyles();\r\n\r\n    \r\n    let actualWidth = window.innerWidth\r\n \r\n    React.useEffect(() => {  \r\n        const getWidthViewport = () => {  \r\n            console.log('swiper resize') \r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current.clientWidth\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 100)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [actualWidth]);\r\n \r\n    \r\n\r\n    const renderSlide = (slide) => (\r\n        <SwiperSlide key={slide.imageUrl} ref={slideRef} className={`${classes.slide}`}>\r\n            <Box className={classes.slideBox}>\r\n                <Box \r\n                    style={{backgroundImage: `url(${slide.imageUrl})`}}\r\n                    className={classes.slideImg}\r\n                />\r\n                {\r\n                    slide.title.length > 0 &&\r\n                    <Typography\r\n                        component='h6'\r\n                        className={classes.slideTitle}\r\n                    >\r\n                        {slide.title}\r\n                    </Typography>\r\n                }\r\n                \r\n            </Box>\r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n                \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForView,\r\n                        },\r\n                    }}\r\n    \r\n                    navigation  \r\n    \r\n                    onSlideChange={() => console.log('slide change')} \r\n                >\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n    makeStyles\r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newImageName, setNewImageName] = React.useState('')\r\n    const [newImageUrl, setNewImageUrl] = React.useState('')\r\n    const [newImageTitle, setNewImageTitle] = React.useState('')\r\n\r\n    const handleImageUpload = async (e) => { \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setNewImageUrl(downloadURL)\r\n        setNewImageName(generateImageName)   \r\n    }\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newImageUrl, newImageName, newImageTitle)\r\n        setNewImageName('')\r\n        setNewImageUrl('') \r\n        setNewImageTitle('') \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n            <Button color='primary' variant='contained' className={props.btnWithLabel}  >\r\n                <label htmlFor='image-input-label'>\r\n                    Set image\r\n                </label>\r\n                <input\r\n                    id=\"image-input-label\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {  handleImageUpload(e) }}\r\n                    style={{\r\n                    display: \"none\"\r\n                }}/>\r\n            </Button>\r\n            <Typography variant='caption' > Image: { newImageName.replace(`-${props.id}`, '') }</Typography>\r\n            <Box my={1}>\r\n                <TextField \r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Title'\r\n                    variant=\"outlined\"\r\n                    value={newImageTitle}\r\n                    onChange={(e) => { setNewImageTitle(e.target.value) }}\r\n                />\r\n                <Box my={1}>\r\n                    <Button\r\n                        disabled={newImageName !== '' ? false : true }\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent, \r\n    fade\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem'\r\nimport ChangeItem from './ChangeItem'\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n      \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || true)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || [false]) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const [imageForDelete, setImageForDelete] = React.useState([])\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.color !== 'primary' && \r\n            props.data.color !== 'secondary' &&\r\n            props.data.color !== 'warning' &&\r\n            props.data.color !== 'error' &&\r\n            props.data.color !== 'info' &&\r\n            props.data.color !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave, \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            dumbSlide: {\r\n                display: 'inline-block', \r\n                width: 250, \r\n                height: 250, \r\n                position: 'relative', \r\n                margin: theme.spacing(1), \r\n                \"& img\": {\r\n                    width: '100%', \r\n                    height: '100%'\r\n                },\r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            }, \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: 14, \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2)\r\n            }, \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        if(imageForDelete.length > 0) {\r\n            imageForDelete.forEach( name => {\r\n                removeImage(name)\r\n            })\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n        setImageForDelete([])\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleSlideTitle = (index, title) => {\r\n\r\n    }\r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = slides.slice()\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => {\r\n        const newImageForDelete = imageForDelete.slice()\r\n        const newSlides = slides.slice()\r\n        const deletedImageName = newSlides[index].imageName\r\n\r\n        if(deletedImageName !== 'imageExample') newImageForDelete.push(deletedImageName)\r\n\r\n        newSlides.splice(index, 1)\r\n        setSlides(newSlides)\r\n        setImageForDelete(newImageForDelete)\r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n    const addSlide = ( url, name, title ) => {\r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            imageUrl: url, \r\n            imageName: name, \r\n            title: title \r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n      \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Swiper Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Swiper\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <TextField \r\n                                            type='number'\r\n                                            size='small'\r\n                                            label=\"Margin Top\"\r\n                                            variant=\"outlined\"\r\n                                            value={marginTop}\r\n                                            onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setMarginTop(Number(e.target.value))\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <TextField \r\n                                            type='number'\r\n                                            size='small'\r\n                                            label=\"Margin Bottom\"\r\n                                            variant=\"outlined\"\r\n                                            value={marginBottom}\r\n                                            onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setMarginBottom(Number(e.target.value))\r\n                                        }}/>\r\n                                    </Box>\r\n                                     \r\n                                    <Box mb={2} display='flex'> \r\n                                        <Box mr={1}>\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size=\"small\"\r\n                                                label=\"Slides Per View\"\r\n                                                variant=\"outlined\"\r\n                                                value={slidesPerView}\r\n                                                onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setSlidesPerView(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size=\"small\"\r\n                                                label=\"Slides Per View Tablet\"\r\n                                                variant=\"outlined\"\r\n                                                value={slidesPerViewTablet}\r\n                                                onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setSlidesPerViewTablet(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size=\"small\"\r\n                                                label=\"Slides Per View Mobile\"\r\n                                                variant=\"outlined\"\r\n                                                value={slidesPerViewMobile}\r\n                                                onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setSlidesPerViewMobile(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        \r\n                                    </Box>\r\n                                    <Box mb={2} display='flex'>\r\n                                        <Box mr={1}>\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size=\"small\"\r\n                                                label=\"Space Between\"\r\n                                                variant=\"outlined\"\r\n                                                value={spaceBetween}\r\n                                                onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setSpaceBetween(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box>\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size=\"small\"\r\n                                                label=\"Speed (ms)\"\r\n                                                variant=\"outlined\"\r\n                                                value={speed}\r\n                                                onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setSpeed(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box my={2} display='flex'>\r\n                                        <Box mr={1}> \r\n                                            <Tooltip title=\"After change Loop settings you need to reloading page\" >\r\n                                                <IconButton>\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'    \r\n                                                style={{minWidth: 200}}\r\n                                            >\r\n                                                <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"align-select-label\"\r\n                                                    id=\"align-select\"\r\n                                                    value={loop}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                >\r\n                                                    <MenuItem value={true}>True</MenuItem>\r\n                                                    <MenuItem value={false}>False</MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                style={{minWidth: 200}} \r\n                                            >\r\n                                                <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"align-select-label\"\r\n                                                    id=\"align-select\"\r\n                                                    value={freeMode}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                >\r\n                                                    <MenuItem value={true}>True</MenuItem>\r\n                                                    <MenuItem value={false}>False</MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                        <Box>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'    \r\n                                            >\r\n                                                <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"maxWidth-label\"\r\n                                                    id=\"maxWidth-style\"\r\n                                                    value={maxWidthContainer}\r\n                                                    style={{minWidth: 180}}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={false}>False</MenuItem>\r\n                                                    <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                    <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                    <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                    <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                    <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n\r\n                                     \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Arrows'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slides.map((item, index) => (\r\n                                            <Box key={index} className={classes.dumbSlide}>\r\n                                                <Box className={classes.dumbSlideButtons}>\r\n                                                    <ButtonGroup\r\n                                                    orientation=\"horizontal\"\r\n                                                    color=\"primary\"\r\n                                                    aria-label=\"horizontal contained primary button group\"\r\n                                                    variant=\"contained\"\r\n                                                >   \r\n                                                    { \r\n                                                        index !== 0  && \r\n                                                        <Tooltip title='Get Left' placement='top'>\r\n                                                            <Button\r\n                                                                onClick={() => {  swipeSlide('up', index) }}\r\n                                                                size='medium'\r\n                                                                variant='contained' \r\n                                                            >\r\n                                                                <KeyboardArrowLeftIcon\r\n                                                                    style={{\r\n                                                                    color: '#fff'\r\n                                                                }}\r\n                                                                    fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                    {\r\n                                                        index !== slides.length - 1 && \r\n                                                        <Tooltip title='Get Right' placement='top'>\r\n                                                            <Button\r\n                                                                onClick={() => { swipeSlide('down', index) }}\r\n                                                                size='medium'\r\n                                                                variant='contained'\r\n                                                            >\r\n                                                                <KeyboardArrowRightIcon\r\n                                                                    style={{\r\n                                                                    color: '#fff'\r\n                                                                }}\r\n                                                                    fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                    <Tooltip title='Remove slide' placement='top'>\r\n                                                        <Button\r\n                                                            onClick={() => { removeSlide(index) }}\r\n                                                            size='medium'\r\n                                                            color='secondary'\r\n                                                            variant='contained'\r\n                                                        >\r\n                                                            <DeleteOutline\r\n                                                                style={{\r\n                                                                color: '#fff'\r\n                                                            }}\r\n                                                                fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n                                                    \r\n                                                </ButtonGroup>\r\n                                                </Box>\r\n                                                <img src={item.imageUrl} alt={item.imageName}/>\r\n                                                <Box className={classes.dumbSlideTitle}>\r\n                                                    <TextField \r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        variant=\"outlined\"\r\n                                                        value={item.title}\r\n                                                        onChange={(e) => {\r\n                                                            setIsDisableBtn(false);\r\n                                                            handleSlideTitle(e.target.value)\r\n                                                        }}\r\n                                                    />\r\n                                                </Box>\r\n                                            </Box>\r\n                                        ))\r\n                                    }\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} btnWithLabel={classes.btnWithLabel} />\r\n                                    \r\n   \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Container, Grid, Box, Button, darken, fade } from '@material-ui/core'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading  \r\n    const paragraph = props.data.paragraph   \r\n     \r\n    const minHeight =  props.data.minHeight \r\n    const imageUrl =  props.data.imageUrl  \r\n \r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorButton = props.data.colorButton || '#f00'\r\n    let colorText = props.data.colorText || 'inherit'\r\n\r\n    const paddingVertical = props.data.paddingVertical  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n \r\n    const useStyles = makeStyles((theme) => {   \r\n        colorButton = getColorByPalette(theme, colorButton) \r\n        colorText = getColorByPalette(theme, colorText) \r\n\r\n             \r\n        return ({ \r\n            bannerBackground: {\r\n                backgroundColor: fade(theme.palette.primary.main, 0.3), \r\n                backgroundImage: `url(${imageUrl})`, \r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            bannerContent: {\r\n                display: 'flex',\r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                paddingTop: paddingVertical,\r\n                paddingBottom: paddingVertical,\r\n                minHeight: minHeight, \r\n                maxHeight: \"100vh\", \r\n                [theme.breakpoints.down('sm')]: { \r\n                    paddingTop: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20), \r\n                    paddingBottom: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20),\r\n                }\r\n            },\r\n            heading: {  \r\n                marginBottom: theme.spacing(3), \r\n                textAlign: 'center',  \r\n                color: colorText\r\n            },\r\n            paragraph: {  \r\n                marginTop: -10, \r\n                marginBottom: 20,  \r\n                lineHeight: 1.5, \r\n                fontWeight: 400, \r\n                textAlign: 'center',  \r\n                fontSize: 15 , \r\n                color: colorText,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: 0, \r\n                    lineHeight: 1.1\r\n                }\r\n            },\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: 14,  \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n             \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (  \r\n        <div className={classes.bannerBackground}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Box className={classes.bannerContent} > \r\n                    <Grid item xs={12} sm={6} className=\"info heading\">\r\n                        { heading.length > 0 && <h3 className={classes.heading}>{heading}</h3> }\r\n                        { paragraph.length > 0 && <p className={classes.paragraph} > {paragraph} </p> } \r\n                        {\r\n                                isButton && \r\n                                <Box display={'flex'} justifyContent='center'>\r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button>\r\n                                </Box> \r\n                            }\r\n                    </Grid> \r\n                </Box> \r\n            </Container>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) { \r\n    \r\n    const { removeImage } = React.useContext(ImageContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)  \r\n    const [minHeight, setMinHeight] = React.useState(props.data.minHeight)  \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [colorTextSelect,  setColorTextSelect] = React.useState(props.data.colorText || 'inherit')\r\n    const [colorTextCustom, setColorTextCustom] = React.useState(props.data.colorText || 'inherit') \r\n\r\n    const [paddingVertical, setPaddingVertical] = React.useState(props.data.paddingVertical || 80)\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 0)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    const paddingVerticalComputed = paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20)\r\n \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.colorButton !== 'primary' && \r\n            props.data.colorButton !== 'secondary' &&\r\n            props.data.colorButton !== 'warning' &&\r\n            props.data.colorButton !== 'error' &&\r\n            props.data.colorButton !== 'info' &&\r\n            props.data.colorButton !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n         \r\n    }, [props.data.colorButton])  \r\n    React.useEffect(() => { \r\n        if( \r\n            props.data.colorText !== 'primary' && \r\n            props.data.colorText !== 'secondary' &&\r\n            props.data.colorText !== 'warning' &&\r\n            props.data.colorText !== 'error' &&\r\n            props.data.colorText !== 'info' &&\r\n            props.data.colorText !== 'success' \r\n         ) {  \r\n            setColorTextSelect('custom')\r\n        }\r\n    }, [props.data.colorText ]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel , \r\n             responseValues ,responseMobile , mobileTooltip} = commonClasses \r\n        \r\n        const { mtView, mbView, ptView, pbView  } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $ptView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $pbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.paragraph = paragraph   \r\n        newData.minHeight = minHeight   \r\n        newData.isButton = isButton   \r\n        newData.textButton = textButton   \r\n        newData.targetButton = targetButton     \r\n        newData.image = imageUrl   \r\n        newData.imageName = imageName\r\n        newData.paddingVertical = paddingVertical\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        if (colorTextSelect === 'custom') {\r\n            newData.colorText = colorTextCustom\r\n        } else {\r\n            newData.colorText = colorTextSelect\r\n        }\r\n        \r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) { \r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` banner padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` banner padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Banner Settings ' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Banner\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Min Height for block\"\r\n                                                variant=\"outlined\"\r\n                                                value={minHeight}\r\n                                                onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setMinHeight(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Padding Top/Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={paddingVertical}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setPaddingVertical(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        Padding Top/Bottom: <b>{paddingVerticalComputed }</b> ; MinHeight: <b>{minHeight}</b>\r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Text'}\r\n                                            colorSelect={colorTextSelect} \r\n                                            setColorSelect={setColorTextSelect}\r\n                                            colorCustom={colorTextCustom}\r\n                                            setColorCustom={setColorTextCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                   \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box> \r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'top'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n \r\n                                   \r\n   \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ?\r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                : \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent, Divider } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\nimport FormLineElement from '../library/formLine/ElementCreator'  \r\nimport SwiperElement from '../library/swiper/ElementCreator'  \r\nimport BannerElement from '../library/banner/ElementCreator'  \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n  const FormLineLayout = layouts.formLine \r\n  const SwiperLayout = layouts.swiper \r\n  const BannerLayout = layouts.banner \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => {\r\n    const classesRef = StylesChangers()\r\n    const commonClasses = classesRef(theme)\r\n\r\n    const { menu, menuTitle } = commonClasses \r\n\r\n    return ({ \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 10,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38,  \r\n          opacity: 0, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 600, \r\n        left: \"calc(50% - 300px)\",\r\n      }},     \r\n      menuTitle: menuTitle,\r\n      tooltip: {\r\n        fontSize: 14\r\n      }, \r\n      boxMenuItem : { \r\n        display: 'inline-block',\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n      }\r\n\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    // newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n   \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container')  newCont = JSON.parse(JSON.stringify(ContainerLayout))\r\n    if(type === 'mainBanner') newCont = JSON.parse(JSON.stringify(MainBannerLayout))\r\n    if(type === 'accordion')  newCont = JSON.parse(JSON.stringify(AccordionLayout))\r\n    if(type === 'contactMap') newCont = JSON.parse(JSON.stringify(СontactMapLayout))\r\n    if(type === 'about')      newCont = JSON.parse(JSON.stringify(AboutLayout))\r\n    if(type === 'actionLine') newCont = JSON.parse(JSON.stringify(ActionLineLayout))\r\n    if(type === 'table')      newCont = JSON.parse(JSON.stringify(TableLayout))\r\n    if(type === 'formLine')   newCont = JSON.parse(JSON.stringify(FormLineLayout))\r\n    if(type === 'swiper')     newCont = JSON.parse(JSON.stringify(SwiperLayout))\r\n    if(type === 'banner')     newCont = JSON.parse(JSON.stringify(BannerLayout))\r\n  \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n\r\n    window.scrollTo({\r\n      top: window.innerHeight \r\n    })\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n        \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n    \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'formLine') { \r\n          return(\r\n              <FormLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'swiper') { \r\n          return(\r\n              <SwiperElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'banner') { \r\n          return(\r\n              <BannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <Box className={classes.btnContainer}> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <React.Fragment>\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Add Block for Page <OpenWithIcon/>\r\n                            </Typography> \r\n                            \r\n                            \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Container for heading, paragraph, image-paragraph, list' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                    Container\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With form\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block to start the page. Contain: text, form, image(desktop only)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                    Main Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                           \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Contain: location and phone view, contact form, map. Has two different displays, with and without a map' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                    Contacts with Map\r\n                                </Button>  \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Small contact form with optional heading and paragrapher' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('formLine') }}>\r\n                                    Add Form Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Accordion with heading on top' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                    Accordion\r\n                                </Button> \r\n                              </Tooltip>  \r\n                            </Box>\r\n                            \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Line for small text paragrapher with ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                    Colored Action Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Table with heading on top. Has ability to add \"Show More Botton \" on bottom' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                    Add Table \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With image\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block with heading, paragraph and image. Image on desktop - 50% vieport width. Image on mobile - 50% vieport width . Has the ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                    About\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Simple slider with square images' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('swiper') }}>\r\n                                    Swiper\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Banner with background image, heading, paragraph and modal button (optional)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('banner') }}>\r\n                                    Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </React.Fragment>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/functions/ScrollToTop'  \r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n \r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    \r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n             \r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton\r\n} from '@material-ui/core';  \r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPaletteForGradient} from '../library/colorPicker/ColorCalculation'\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, \r\n    // handleOpen, \r\n    handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  // const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2  \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n   \r\n    // const currentColor = getColorByPalette(theme, modalSettings.colorButton)\r\n  \r\n    colorGradient1 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[0]\r\n    colorGradient2 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[1]\r\n    // colorGradient1 = lighten(currentColor, 0.2)\r\n    // colorGradient2 = darken(currentColor, 0.2) \r\n     \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        }\r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n\r\n  // const openModal = () => {\r\n  //   handleOpen('')\r\n  // }\r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <button type=\"button\" onClick={ openModal }>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nconst  AlertComponent = (props) => {\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        props.closeAlert()\r\n    }\r\n\r\n    const alertText = () => {\r\n        if(props.severity === 'success') return \"Your request was accepted successfully\"\r\n        if(props.severity === 'info') return \"Your request is being processed\"\r\n        if(props.severity === 'error') return \"An error has occurred :(\"\r\n        if(props.severity === 'warning') return \"Warning!\" \r\n    }\r\n      \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={props.severity} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText() }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert, closeAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert severity={isShowAlert} closeAlert={closeAlert} /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}