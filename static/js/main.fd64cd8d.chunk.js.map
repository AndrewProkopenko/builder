{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","components/ScrollToTop.js","components/placeholders/LoadingProgress.js","components/header/headerHelpers/CategoriesChanger.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/Login.js","components/Error.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/StyledComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","console","log","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","setState","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","categories","logo","image","mainText","subText","settings","themeDark","themeLight","themeMode","categoryRef","collection","doc","get","exists","data","list","headerSettings","theme","update","slug","delete","array","map","item","deletePage","dark","light","mode","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","open","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","handleClose","listPages","marginTop","paddingLeft","listStyle","marginBottom","titlePages","fontSize","fontWeight","borderBottom","menu","palette","background","paper","padding","paddingBottom","maxWidth","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","cursor","btnSetting","orange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","dumbWrapper","opacity","btnSave","bottom","paddingTop","accordionContainer","accordionHeader","paddingRight","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","slice","indexOf","length","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","Tooltip","title","placement","Button","onClick","size","variant","color","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","spacing","xs","onSubmit","e","preventDefault","newList","newCategory","Object","assign","uuid","push","FormGroup","Box","mb","TextField","required","label","onChange","target","IconButton","fullWidth","index","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","LogoChanger","setMainText","setSubText","setImage","amber","uploadHandler","imageData","storageRef","ref","name","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","boxShadow","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackground","settingsItem","marginRight","flexGrow","row","FormControl","InputLabel","Select","labelId","MenuItem","Number","ThemeChanger","setMode","default","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","primary","main","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","secondary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","deepOrange","colorPreview","borderRadius","flexWrap","mr","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","text","textDecoration","easeIn","menuButtonInnerLi","shortest","toolbar","listUnstyle","margin","Toolbar","clone","exact","to","pl","List","disablePadding","Paper","innerItem","innerIndex","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","fixedPadding","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","mx","my","content","borderTop","edge","DumbComponent","widthMobile","headerHeight","setHeaderHeight","header","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","setResponsiveness","headHeight","document","querySelector","clientHeight","innerWidth","setMobileView","removeEventListener","addEventListener","mobileView","createLogo","Fragment","AppBar","Container","AdminHeader","isOpen","setIsOpen","buttonSettings","settingsContainer","wrapper","providerData","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","marginLeft","ElementCreator","Header","Footer","subHeading","fill","footer","footerHeading","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","Avatar","loginWithEmail","res","err","autoComplete","autoFocus","Alert","severity","Error","myClassName","resposiveFontSize","sm","classeForResp","isResponsiveFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setPadding","setMargin","setColor","setBackgroundColor","setTextAlign","setFontSize","setFontWeight","setLineHeight","responseFont","setIsResponsiveFont","textInDumb","setTextInDumb","inputNumber","inputGroup","border","divider","tooltip","dumbItemContainer","outline","shadows","outlineColor","mtView","mbView","ptView","pbView","dumbItem","dumbItemDelete","showInput","dataNew","handlePadding","newPadding","handleMargin","newMargin","focus","FormControlLabel","control","Switch","checked","triangle","colors","onChangeComplete","newColor","hex","sentData","reSaveChildren","aria-haspopup","prop","removeItem","imageStyle","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","setDisplay","imageAccordion","imagePreview","multiline","rowsMax","imageClassName","imageUrl","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageLabel","handleImageMargin","px","pt","pb","ml","innerContainer","ContainerElement","libraryHeading","heading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","setFlexDirection","shadow","setShadow","setChildren","settingInnerContainer","setSettingInnerContainer","anchorEl","setAnchorEl","propsSettings","btnDrawerStyle","btnDrawerItem","containerWrapper","toggleDrawer","handleHeadingMenuClose","addHeading","a","newChildren","newItem","reSaveContainer","slicedChild","forEach","key","confirm","swapContainer","removeContainer","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","titleMain","titleSubText","headingIcon","inputLabel","buttonLabel","policy","input","md","viewBox","d","placeholder","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","location","useTheme","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","setData","items","setItems","isUpdate","setIsUpdate","isHideSettings","setIsHideSettings","transform","action","active","btnContainer","fetchData","metaTitle","pageRef","set","childrenContainer","newData","keys","elem","addContainer","newItems","newCont","history","m","CircularProgress","thickness","RouterComponent","basename","path","render","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd64cd8d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth()\r\n        console.log(\"constructor\")\r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) { \r\n                // console.log(user)\r\n                this.setState({\r\n                    isLogin: true,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight, \r\n                themeMode: doc.data().themeMode, \r\n            }) \r\n        } \r\n        \r\n      \r\n    }\r\n    createThemeMode(theme) {  \r\n        console.log(theme)\r\n        // const newTheme = {\r\n        //     palette: {\r\n        //         type: '',\r\n        //         background: { \r\n        //             default: '',\r\n        //             paper: ''\r\n        //         },\r\n        //         primary: {\r\n        //             main: ''\r\n        //         },\r\n        //         secondary: {\r\n        //             main: ''\r\n        //         }\r\n        //     }\r\n        // }\r\n        // if(theme.palette.type === 'dark' ) { \r\n        //     newTheme.palette.type = theme.palette.type\r\n        //     newTheme.palette.background.default = theme.palette.backgroundDark.default\r\n        //     newTheme.palette.background.paper = theme.palette.backgroundDark.paper\r\n        //     newTheme.palette.primary.main = theme.palette.primaryDark.main\r\n        //     newTheme.palette.secondary.main = theme.palette.secondaryDark.main\r\n        // }\r\n        // if(theme.palette.type === 'light' ) { \r\n        //     newTheme.palette.type = theme.palette.type\r\n        //     newTheme.palette.background.default = theme.palette.backgroundLight.default\r\n        //     newTheme.palette.background.paper = theme.palette.backgroundLight.paper\r\n        //     newTheme.palette.primary.main = theme.palette.primaryLight.main\r\n        //     newTheme.palette.secondary.main = theme.palette.secondaryLight.main\r\n        // }\r\n        this.setState({\r\n           theme: theme \r\n        })\r\n    }\r\n\r\n    async updateCategories(data) {\r\n        console.log('firebase update')\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {   \r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light, mode) {     \r\n        // const exampleTheme = { \r\n        //     palette: {\r\n        //         type: 'dark',\r\n        //         backgroundLight: {\r\n        //             paper: '#fff',\r\n        //             default: '#f2f2f2', \r\n        //         },\r\n        //         backgroundDark: {\r\n        //             paper: '#424242',\r\n        //             default: '#363636', \r\n        //         }, \r\n        //         primaryLight: {\r\n        //             main: '#1fa67a',\r\n        //         },\r\n        //         primaryDark: {\r\n        //             main: '#142E6F' ,\r\n        //         },\r\n        //         secondaryLight: {\r\n        //             main:  '#db4453' ,\r\n        //         }, \r\n        //         secondaryDark: {\r\n        //             main:  '#db4453' ,\r\n        //         }, \r\n        //     }\r\n            \r\n        // } \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light,\r\n            themeMode: mode\r\n        })  \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeMode: mode\r\n        })  \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    updateTheme: (dark, light, mode) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light,\r\n                            themeMode: mode\r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light, mode)\r\n                    },\r\n                    updateLogo: (data) => { \r\n                        this.setState({\r\n                            logo: data\r\n                        })\r\n                        this.updateLogo(data) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n\r\n    // async componentDidMount() {\r\n    //     await firebase.auth.onAuthStateChanged( async (user) => {\r\n    //         if(user) {  \r\n    //             const layoutsRef = firebase.db.collection(\"library\").doc('layouts')\r\n    //             const doc = await layoutsRef.get();\r\n                \r\n    //             if (!doc.exists) {\r\n    //                 console.log('No such document!'); \r\n    //             } \r\n    //             else {\r\n    //                 console.log('Layouts:', doc.data());\r\n                    \r\n    //                 this.setState({\r\n    //                     layouts: doc.data()\r\n    //                 })\r\n    //             }\r\n    //         }\r\n    //         else { \r\n    //             console.log('no user') \r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n\r\nimport { orange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n// import DumbComponent from './DumbComponent'\r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() {\r\n    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        listPages : {\r\n            marginTop: 20, \r\n            paddingLeft: 25, \r\n            '&>li' : { \r\n                listStyle: 'none',\r\n                marginBottom: 5\r\n            }\r\n        },\r\n        titlePages: {\r\n            fontSize: 14, \r\n            fontWeight: 600, \r\n            borderBottom: `1px solid #eee`,\r\n            marginBottom: 12\r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 350px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 700,  \r\n            width: 700,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // left: 2,\r\n            backgroundColor: orange[700], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: orange[900], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        },\r\n        accordionHeader: {\r\n            paddingRight: 30, \r\n            paddingLeft: 25,     \r\n        },\r\n        deleteBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 5, \r\n            right: 5, \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25,\r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 0, \r\n            left: -5,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        },\r\n        deletePageBtn: {  \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingPageBtn: { \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) { \r\n                console.log(newPage)\r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => { \r\n        console.log('update')\r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n         \r\n        console.log(activeIndex)\r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        }) \r\n        console.log(newCategories)\r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать список категорий  <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    <Tooltip title='Delete Category' placement='top'>\r\n                                                        <Button\r\n                                                            variant='contained'\r\n                                                            color=\"default\"\r\n                                                            disableElevation={true}\r\n                                                            className={classes.deleteBtn}\r\n                                                            onClick={() => { deleteCategory(item.id) }}\r\n                                                        > \r\n                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        <Tooltip title='Get Up' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('up', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                            >  \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                            </Button>\r\n                                                        </Tooltip> \r\n                                                        <Tooltip title='Get Down' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('down', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                        >  \r\n                                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                        </Button>\r\n                                                                                    </Tooltip> \r\n                                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                        >     \r\n                                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, updateLogo } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // right: 2,\r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        }, \r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        updateLogo(newLogo)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать логотип  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='outlined'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n                                    <img\r\n                                        width={100}\r\n                                        src={logo.image}\r\n                                        alt='logo'\r\n                                    /> \r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\nimport { TwitterPicker } from 'react-color';\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackground, setSettingBackground] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: { \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        }, \r\n        settingsItem: {\r\n            width: '100%',\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1, \r\n        },\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition,\r\n                backgroundColor: settingBackground,\r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Изменить настройки  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {/* <Box \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[   'transparent', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setSettingBackground(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  */}\r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormGroup\r\n} from '@material-ui/core' \r\n\r\nimport { deepOrange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction ThemeChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { themeMode, themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mode, setMode] = React.useState(themeMode)\r\n\r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 450px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 900,  \r\n            width: 900,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n         \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        \r\n        colorPreview: { \r\n            width: '100%',\r\n            height: 8,  \r\n            borderRadius: 3, \r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme,  mode)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Отредактировать тему  <OpenWithIcon/>\r\n                            </Typography>\r\n                               \r\n                            <FormGroup row>\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    // className={classes.settingsItem}\r\n                                >\r\n                                    <InputLabel id=\"fixed-style-label\">Mode</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"fixed-label\"\r\n                                        id=\"fixed-style\"\r\n                                        value={mode}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setMode(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'dark'}>Dark</MenuItem>\r\n                                        <MenuItem value={'light'}>Light</MenuItem> \r\n                                    </Select>\r\n                                </FormControl>    \r\n                            </FormGroup>  \r\n                            \r\n                            <Box display='flex' flexWrap='nowrap'  mt={2}>\r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightBackgroundDefault}\r\n                                        label='Light Background Default'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightBackgroundDefault(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightBackgroundDefault}}></Box>\r\n                                </Box> \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightBackgroundPaper}\r\n                                        label='Light Background Paper'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightBackgroundPaper(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightBackgroundPaper}}></Box>\r\n                                </Box>  \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightPrimary}\r\n                                        label='Light Primary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightPrimary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightPrimary}}></Box>\r\n                                </Box>  \r\n                                <Box> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightSecondary}\r\n                                        label='Light Secondary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightSecondary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightSecondary}}></Box>\r\n                                </Box>  \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={3}>\r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkBackgroundDefault}\r\n                                        label='Dark Background Default'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkBackgroundDefault(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkBackgroundDefault}}></Box>\r\n                                </Box> \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkBackgroundPaper}\r\n                                        label='Dark Background Paper'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkBackgroundPaper(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkBackgroundPaper}}></Box>\r\n                                </Box>  \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkPrimary}\r\n                                        label='Dark Primary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkPrimary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkPrimary}}></Box>\r\n                                </Box>  \r\n                                <Box> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkSecondary}\r\n                                        label='Dark Secondary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkSecondary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkSecondary}}></Box>\r\n                                </Box>  \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`,\r\n\r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n            },\r\n             \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , listUnstyle  } = useStyles();\r\n  \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n            {props.logo}  \r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={menuLink} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles,\r\n    Button,\r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset , fixedPadding} = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar disableGutters={true} style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  >\r\n                        <Button \r\n                            variant='outlined'\r\n                            color='default'\r\n                            onClick={handleDrawerClose}\r\n                        >\r\n                            <ArrowRightAltIcon/>\r\n                        </Button>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion classes={{root: accordionReset}} key={index} >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( page => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={index} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                color: \"textPrimary\", \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n} from \"@material-ui/core\"; \r\nfunction DumbComponent() {\r\n\r\n    const {categories, logo, settings} = React.useContext(CategoryContext)    \r\n  \r\n   const [headerHeight, setHeaderHeight] = useState(0)\r\n\r\n  \r\n\r\n    let widthMobile \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`]\r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: theme.palette.background.paper, \r\n\r\n                position: settings.classes.position,  \r\n                // paddingTop: settings.classes.paddingY,  \r\n                // paddingBottom: settings.classes.paddingY,  \r\n                // backgroundColor: settings.classes.backgroundColor, \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                top: 0, \r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n               \r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub,  fixedPadding} = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  document.querySelector('#header').clientHeight\r\n            \r\n            setHeaderHeight(headHeight)\r\n            \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n       \r\n    }, []);\r\n     \r\n    const [mobileView, setMobileView] = useState(false); \r\n      \r\n\r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n   \r\n    \r\n  \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            }\r\n            <AppBar className={header}  id='header'>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop logo={createLogo}  categories={categories} settings={settings}/> \r\n                        : \r\n                        <Mobile logo={createLogo}  categories={categories}  /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, Switch, FormControlLabel , makeStyles, Tooltip} from '@material-ui/core'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\n// import ThemeContext from '../../context/themeContext/ThemeContext'  \r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext) \r\n    // const {themeMode, setThemeMode} = React.useContext(ThemeContext) \r\n\r\n    \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { isOpen && \r\n                <Box className={classes.settingsContainer} >\r\n                    <Typography component='span' >\r\n                        hello, { user.providerData[0].email } \r\n                    </Typography>\r\n                  \r\n                    <Box>\r\n                       \r\n                        <Button \r\n                            size='small'\r\n                            color='secondary' \r\n                            variant={'contained'} \r\n                            onClick={handleSignOut}\r\n                        >\r\n                            Sign Out\r\n                        </Button>\r\n                    </Box>\r\n                </Box>}\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container } from '@material-ui/core'\r\n\r\nfunction Footer() {\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: theme.palette.primary.dark, \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                <Typography \r\n                    variant='h6'\r\n                    className={classes.footerHeading}\r\n\r\n                > \r\n                    Footer\r\n                </Typography>\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n\r\n    const hendlerSubmit = (e) => {\r\n        e.preventDefault() \r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n    \r\n            {/* Redirect при авторизации */}\r\n            { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n     \r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Вход\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={hendlerSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"text\"\r\n                        label=\"User\"\r\n                        name=\"user\"\r\n                        autoComplete='true'\r\n                        autoFocus\r\n                        value={name}\r\n                        onChange={ (e)=>{setName(e.target.value)} }\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={(e)=>{setPassword(e.target.value)}}\r\n                    />\r\n                    {\r\n                        error && \r\n                        <Alert severity=\"error\">{error.message}</Alert>\r\n                    }\r\n                \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                \r\n                </form>\r\n            </div>\r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                fontSize: props.className.fontSize*0.6, \r\n            },\r\n        }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.isResponsiveFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        }, \r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }  ,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50,  \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        showInput: {\r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, шрифт будет меньше размером на мобильных устройствах. \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}\r\n                                isResponsiveFont={isResponsiveFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n     \r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                },\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }  ,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            // height: '100%'\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 100, \r\n            height: 100, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {}\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={classes.imageStyle} alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  '0px')\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            marginTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        }, \r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },  \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 105, \r\n            height: 105, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        },\r\n        imageLabel: {\r\n            position: 'absolute',\r\n            zIndex: 10, \r\n            top: 0, \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0, \r\n            width: \"100%\", \r\n            maxWidth: \"100%\", \r\n            height: \"100%\", \r\n            maxHeight: \"100%\", \r\n            cursor: 'pointer'\r\n        }\r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName,\r\n    }} \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImageUrl(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageSetting} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={dataNew.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='color'\r\n                                                label=\"Border Color\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderColor}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderColor(e.target.value)} }     \r\n                                        />\r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Background  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        color={backgroundColor}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setBackgroundColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box> \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Color  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        color={color}\r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                imageClassName={imageClassName}\r\n                                imageUrl={imageUrl}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Container  \r\n                maxWidth={props.settings.maxWidth} \r\n                fixed={props.settings.fixed} \r\n                disableGutters={props.settings.disableGutters} \r\n                className={classes.myClassName}\r\n            > \r\n                {  \r\n                    props.settings.innerContainer && \r\n                    <Container\r\n                        maxWidth={'lg'}\r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                    >\r\n                        { \r\n                            modeDev && \r\n                            props.data.children.map((item) => {   \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                        {   !modeDev &&\r\n                            props.data.children.map((item) => {  \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                    </Container>\r\n                }\r\n                {  \r\n                    !props.settings.innerContainer && \r\n                    <React.Fragment>\r\n                        { \r\n                            modeDev && \r\n                            props.data.children.map((item) => {   \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                        {   !modeDev &&\r\n                            props.data.children.map((item) => {  \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                    </React.Fragment>\r\n                }\r\n                \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport uuid from 'react-uuid' \r\nimport { TwitterPicker } from 'react-color';\r\n \r\nimport DumbComponent from './DumbComponent' \r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select,  Container, Typography, ButtonGroup, IconButton\r\n} from '@material-ui/core'\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n  \r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false)\r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n          console.log(theme , 'container')\r\n        return ( {  \r\n            btnDrawerStyle : {\r\n                backgroundColor: theme.palette.error.dark, \r\n                position: 'absolute',  \r\n                top: 0, \r\n                left: 0, \r\n                zIndex: 1030,   \r\n                minWidth: 50, \r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n            }, \r\n            btnDrawerItem: { \r\n                backgroundColor: theme.palette.error.dark, \r\n                '&:hover': { \r\n                    backgroundColor: theme.palette.secondary.dark,   \r\n                }, \r\n            },\r\n            containerWrapper: {\r\n                position: 'relative', \r\n                outline: \"1px solid #ffffff00\", \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle': {\r\n                        opacity: 1\r\n                    }\r\n                },   \r\n               \r\n            },\r\n            mtView: {  \r\n                position: 'absolute', \r\n                top: `-${margin.top}px`, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#fff7003d',\r\n                height: `${margin.top}px`, \r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            mbView: {  \r\n                position: 'absolute', \r\n                bottom: `-${margin.bottom}px`, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#fff7003d',\r\n                height: `${margin.bottom}px`, \r\n                opacity: 0,\r\n                transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n            }, \r\n            ptView: {  \r\n                position: 'absolute', \r\n                top: 0, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#400e575e',\r\n                height: `${padding.top}px`, \r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            pbView: {  \r\n                position: 'absolute', \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#400e575e',\r\n                height: `${padding.bottom}px`, \r\n                opacity: 0,\r\n                transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            settingsItem: {\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1\r\n            },\r\n            inputNumber: {\r\n                flexGrow: 1, \r\n                margin: 5, \r\n                width: \"100%\", \r\n                maxWidth: '50%'\r\n            }, \r\n            inputGroup: {\r\n                border: \"1px solid #f5f5f5\", \r\n                padding: 3, \r\n                inputNumber: { \r\n                    maxWidth: \"100%\"\r\n    \r\n                }\r\n            },\r\n            btnSave: { \r\n                position: 'sticky', \r\n                zIndex: theme.zIndex.tooltip,\r\n                bottom: 0, \r\n                left: 20, \r\n                right: 0,\r\n                height: 80, \r\n                backgroundColor: theme.palette.background.paper, \r\n                \r\n                '&>button': {\r\n                    marginTop: 20, \r\n                    marginBottom: 30, \r\n                    opacity: 1,  \r\n                    paddingLeft: 40, \r\n                    paddingRight: 40\r\n                }\r\n            }\r\n            \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n     \r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n\r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        toggleDrawer()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid() \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        setChildren(newChildren) \r\n \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n    } \r\n    \r\n    const reSaveChildren = async (id, data) => {   \r\n        let slicedChild = children.slice()\r\n        slicedChild.forEach((item) => {\r\n            if(item.id === id) {\r\n                for( let key in item) { \r\n                    item[key] = data[key]\r\n                } \r\n            }\r\n        })  \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, slicedChild)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => {\r\n        let conf = window.confirm(\"Delete ?\");\r\n \r\n        if(conf) { \r\n            let filtered = children.filter((item) => (item.id !== id))  \r\n            setChildren(filtered) \r\n  \r\n            // save in firestore \r\n            props.reSaveContainer(props.data.id, filtered)  \r\n        }\r\n    }\r\n\r\n    const removeContainer = () => { \r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const swapContainer = (direction, id) => { \r\n        props.swapContainer(direction, id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Container \r\n            maxWidth={propsSettings.maxWidth} \r\n            fixed={propsSettings.fixed} \r\n            disableGutters={true}\r\n            className={classes.containerWrapper} \r\n        >    \r\n            <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip> \r\n\r\n            <Box style={{position: 'relative'}} > \r\n                {/*  DrawerContainer */}\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    \r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"secondary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\"\r\n                    > \r\n                        <Tooltip title='Container Settings' placement='right'>\r\n                            <Button  \r\n                                onClick={toggleDrawer} \r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >   \r\n                                <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title='Get Up' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('up', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >  \r\n                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                            </Button>\r\n                        </Tooltip> \r\n                        <Tooltip title='Get Down' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('down', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >     \r\n                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip> \r\n \r\n                    </ButtonGroup>\r\n                </Box>\r\n                     \r\n                    <Drawer anchor={'left'} open={open} onClose={toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                                <FormGroup> \r\n                                    <Typography   variant={'h6'} gutterBottom  >\r\n                                        Container actions \r\n                                    </Typography>\r\n                                   <Box mb={2}>  \r\n                                        <Button\r\n                                            onClick={removeContainer}\r\n                                            variant='outlined'\r\n                                            color=\"secondary\"  \r\n                                        >\r\n                                            Remove Container\r\n                                        </Button> \r\n                                   </Box>\r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph'); toggleDrawer()}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage'); toggleDrawer()}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography  component={'h6'} gutterBottom  >\r\n                                                Background  \r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setBackgroundColor(newColor.hex) \r\n                                                }}\r\n\r\n                                            /> \r\n                                        </Box> \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography component={'h6'} gutterBottom  >\r\n                                                Color text\r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setColor(newColor.hex) \r\n                                                }} \r\n                                            /> \r\n                                        </Box> \r\n                                      \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='color'\r\n                                                    label=\"Border Color\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderColor}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                            />\r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n                <DumbComponent\r\n                    reSaveChildren={reSaveChildren}\r\n                    removeItem={removeItem}\r\n                    data={props.data} \r\n                    classes={myClassName}\r\n                    settings={propsSettings}\r\n                />  \r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed\r\n    }\r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev && \r\n                <StyledComponent   \r\n                    data={props.data} \r\n                    reSaveContainer={props.reSaveContainer}\r\n                    reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                    removeContainer={props.removeContainer}    \r\n                    swapContainer={props.swapContainer}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev &&  \r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles } from '@material-ui/core'\r\n\r\nimport '../../../assets/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    // const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        input: { \r\n            border: `2px solid ${theme.palette.primary.main}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            color: theme.palette.text.primary\r\n        },\r\n        button: {\r\n            border: `2px solid ${theme.palette.primary.main} !important`, \r\n            backgroundColor: theme.palette.primary.main, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n            '&:hover' : {\r\n                background: 'none',\r\n                color: theme.palette.primary.light\r\n            }\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n    return (\r\n        <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>\r\n                                <svg viewBox=\"0 0 511.987 511.987\" > \r\n                                    <g><path d=\"m207.993 123.993c-13.233 0-24-10.767-24-24s10.767-24 24-24 24 10.767 24 24-10.766 24-24 24z\"/><path d=\"m511.477 439.169-39-259.997c-3.4-22.702-22.532-39.18-45.493-39.18h-148.555c13.072-24.73 12.843-53.822-.828-78.611-13.822-25.065-38.887-40.523-67.054-41.352-1.686-.049-3.418-.049-5.115 0-28.161.828-53.226 16.287-67.048 41.352-13.665 24.779-13.899 53.858-.826 78.611h-52.555c-22.961 0-42.093 16.478-45.493 39.176l-39 260.001c-1.987 13.256 1.89 26.684 10.637 36.84 8.748 10.157 21.452 15.982 34.856 15.982h419.98c13.404 0 26.108-5.825 34.856-15.982 8.748-10.154 12.625-23.582 10.638-36.84zm-345.07-362.334c8.423-15.273 22.99-24.319 39.962-24.818.536-.016 1.08-.023 1.625-.023s1.089.008 1.619.023c16.978.499 31.545 9.545 39.968 24.818 8.798 15.954 8.554 34.79-.651 50.392l-40.936 68.92-40.924-68.9c-9.217-15.606-9.465-34.452-.663-50.412zm310.186 378.294c-1.564 1.816-5.023 4.864-10.609 4.864h-289.876c.747-7.5 4.218-18.771 17.343-25.973 7.747-4.251 10.581-13.977 6.33-21.724s-13.979-10.581-21.725-6.33c-16.945 9.298-28.116 23.897-32.305 42.216-.979 4.279-1.452 8.29-1.643 11.811h-98.105c-5.586 0-9.045-3.048-10.609-4.864-1.564-1.817-4.065-5.689-3.237-11.212l39-260.003c1.035-6.907 6.858-11.92 13.847-11.92h71.425l31.046 52.271c4.348 7.343 12.018 11.727 20.519 11.727s16.171-4.384 20.506-11.707l31.059-52.291h167.426c6.988 0 12.812 5.013 13.847 11.923l39 259.999c.826 5.523-1.674 9.396-3.239 11.213z\"/><path d=\"m277.053 220.814c-8.385-2.797-17.444 1.737-20.238 10.119-2.795 8.383 1.736 17.444 10.119 20.238.164.055 16.56 5.917 21.881 21.881 2.234 6.705 8.478 10.945 15.177 10.945 1.677 0 3.384-.266 5.062-.826 8.383-2.794 12.914-11.855 10.119-20.238-10.411-31.23-40.83-41.689-42.12-42.119z\"/><path d=\"m290.621 321.587c-8.334-2.941-17.473 1.43-20.413 9.763-9.03 25.585-39.982 36.575-40.632 36.801-8.349 2.815-12.854 11.855-10.064 20.22 2.234 6.705 8.478 10.945 15.177 10.945 1.677 0 3.384-.266 5.062-.826 1.883-.627 46.287-15.841 60.634-56.49 2.94-8.333-1.431-17.472-9.764-20.413z\"/></g>\r\n                                </svg> \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form onSubmit={(e) => { e.preventDefault() }}>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid md={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n    return (\r\n        <div>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation='wave'\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='text'  \r\n                  height={50}\r\n                  width='100%'\r\n                  animation='wave'\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper\r\n        },\r\n        breadcrumbLink: {\r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography color=\"textDisabled\">\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            {/* <Link color=\"inherit\" href=\"/getting-started/installation/\" onClick={handleClick}>\r\n                                Core\r\n                            </Link>\r\n                            <Typography color=\"textPrimary\">Breadcrumb</Typography> */}\r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, CircularProgress, Tooltip , Container } from \"@material-ui/core\"; \r\n \r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext'\r\n\r\nfunction SinglePage(props) {\r\n\r\n    const location = useLocation()\r\n    const theme = useTheme(); \r\n\r\n    const pageSlug = props.slugForUpdate\r\n\r\n    const { modeDev } = React.useContext(ModeContext)\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const ContainerLayout = layouts.container \r\n    const MainBannerLayout = layouts.mainBanner \r\n  \r\n    const [data, setData] = React.useState({})\r\n    const [items, setItems] = React.useState([])\r\n  \r\n    const [isUpdate, setIsUpdate] = React.useState(true)\r\n\r\n    const [isHideSettings, setIsHideSettings] = React.useState(true)\r\n    //  title\r\n    //  slug\r\n    //  id\r\n    const useStyles = makeStyles((theme) => ({ \r\n      \r\n      btnSetting: {\r\n          opacity: isHideSettings ? '0.15' : '1',\r\n          position: 'absolute', \r\n          zIndex: 1030, \r\n          top: 2, \r\n          left: 45,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      } ,\r\n      settingsContainer: {\r\n        opacity : isHideSettings ? 0 : 1, \r\n        transform : isHideSettings ? 'scaleX(0)' : 'scaleX(1)', \r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        borderBottom: `${theme.palette.action.active} 1px solid` , \r\n      },\r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      }\r\n  \r\n  }))\r\n  \r\n  const classes = useStyles();\r\n    React.useEffect( () => { \r\n      setIsLoading(true)\r\n      fetchData()\r\n      document.title = props.metaTitle\r\n    }, [location])\r\n  \r\n    const fetchData = async () => {  \r\n       \r\n      const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n      const doc = await pageRef.get();\r\n      \r\n      if (!doc.exists) {\r\n        console.log('No such page!'); \r\n\r\n        // задать шаблон страницы\r\n        let newPage = Object.assign({}, pageLayout) \r\n        newPage.id = uuid()\r\n        newPage.slug = pageSlug\r\n        newPage.items = []\r\n\r\n        await pageRef.set(newPage)\r\n\r\n        setData(newPage)  \r\n        setItems(newPage.items || []) \r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n\r\n      } else { \r\n        setData(doc.data())  \r\n        setItems(doc.data().items)  \r\n        \r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }\r\n   \r\n    }  \r\n    \r\n    const reSaveContainer = async (id, childrenContainer) => {  \r\n   \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem].children = childrenContainer \r\n        }\r\n        return 0 \r\n      })\r\n   \r\n      setData(newData)\r\n      setItems(newData.items)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }).then( () => {\r\n          if(childrenContainer.length === 0) {\r\n            removeContainer(id)\r\n          }\r\n      })\r\n    } \r\n    const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n      let newData = Object.assign({}, data)\r\n        \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n          newData.items[elem].classes = classes \r\n          newData.items[elem].disableGutters = settings.disableGutters \r\n          newData.items[elem].fixed = settings.fixed \r\n          newData.items[elem].maxWidth = settings.maxWidth \r\n          newData.items[elem].innerContainer = settings.innerContainer \r\n        }\r\n        return 0 \r\n      }) \r\n  \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    } \r\n   \r\n    const addContainer = async (type) => {   \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n  \r\n      let newCont\r\n      if(type === 'container') newCont = Object.assign({}, ContainerLayout) \r\n      if(type === 'mainBanner') newCont = Object.assign({}, MainBannerLayout) \r\n\r\n      newCont.id = uuid()\r\n   \r\n      newItems.push(newCont) \r\n   \r\n      newData.items = newItems\r\n          \r\n      setData(newData)\r\n      setItems(newItems)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      });  \r\n    }\r\n  \r\n    const removeContainer = async (id) => {  \r\n      let newData = Object.assign({}, data)\r\n      const filtered = items.filter((item) => (item.id !== id))  \r\n  \r\n      newData.items = filtered\r\n          \r\n      setData(newData)\r\n      setItems(filtered) \r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: filtered\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }); \r\n    }\r\n  \r\n    const swapContainer = async (direction, id) => { \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n      let activeIndex   \r\n   \r\n      newItems.map( (item) => { \r\n        if(item.id === id) {\r\n          activeIndex = newItems.indexOf(item) \r\n        }\r\n        return 0 \r\n      }) \r\n   \r\n      if(direction === 'up' && activeIndex === 0) return  \r\n      if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n      \r\n      if(direction === 'up') { \r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex - 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex - 1 ] = movedItem  \r\n      }\r\n      if(direction === 'down') {\r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex + 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex + 1 ] = movedItem  \r\n      }\r\n  \r\n      newData.items = newItems\r\n         \r\n      setItems(newItems)\r\n      setData(newData)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n   \r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    }\r\n  \r\n    function renderContainers () {   \r\n      if(items.length > 0) {\r\n        return Object.keys(items).map( (key) => {  \r\n          if(items[key].type === 'container') {\r\n            return ( \r\n                <ContainerElement \r\n                  key={items[key].id} \r\n                  data={items[key]} \r\n                  reSaveContainer={reSaveContainer}\r\n                  reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                  removeContainer={removeContainer}\r\n                  swapContainer={swapContainer}\r\n                /> \r\n            ) \r\n          }\r\n          if(items[key].type === 'mainBanner') { \r\n            return(\r\n                <MainBannerElement\r\n                  key={items[key].id} \r\n                  data={items[key]} \r\n                />\r\n            )\r\n          }\r\n          \r\n       })\r\n      }\r\n      else {\r\n        return ( \r\n          <SkeletonPage/> \r\n        ) \r\n      }\r\n      \r\n    } \r\n\r\n    return (\r\n        <React.Fragment> \r\n\r\n          <Breadcrumbs \r\n            breadcrumbs={props.breadcrumbs}\r\n            history={props.history}\r\n          />\r\n\r\n          { \r\n            modeDev &&  \r\n            <Box className={classes.btnContainer}  >\r\n               \r\n              <Tooltip title='Page Settings' placement='bottom'>\r\n                  <Button  \r\n                      onClick={() => { setIsHideSettings(!isHideSettings) }} \r\n                      size='medium'\r\n                      variant='contained'\r\n                      color={'primary'}\r\n                      className={classes.btnSetting}\r\n                  >   \r\n                      <span>Page</span>\r\n                      <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                  </Button>\r\n              </Tooltip>  \r\n              {\r\n                // !isHideSettings && \r\n                <Container className={classes.settingsContainer} px={3}  > \r\n                  \r\n                  <Box m={1} pl={'55px'}>\r\n                    <Typography color={theme.palette.action.active} variant=\"h6\" >\r\n                      Page actions\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box display=\"flex\" alignItems='center' mx={1} minWidth={22} >\r\n                    {\r\n                      isUpdate &&\r\n                      <CircularProgress size={22} thickness={5} /> \r\n                    } \r\n                  </Box>\r\n\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                        Add new container\r\n                    </Button> \r\n                  </Box>\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                        Add Main Banner\r\n                    </Button> \r\n                  </Box>\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                        More settings\r\n                    </Button> \r\n                  </Box> \r\n            </Container>\r\n              }\r\n            </Box>\r\n          }\r\n  \r\n          \r\n\r\n          { \r\n            renderContainers()  \r\n          } \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/ScrollToTop'\r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n\r\n// import Home from '../components/Home'\r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n  \r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            {\r\n                isLoading && \r\n                <LoadingProgress/>\r\n            }\r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                    <Switch>\r\n                        { \r\n                            categories.map( category => {\r\n                                const breadcrumbs = [\r\n                                    {\r\n                                        title: category.title,\r\n                                        slug: category.slug\r\n                                    } \r\n                                ]\r\n                                return (\r\n                                    <Route \r\n                                        key={category.id}\r\n                                        exact\r\n                                        path={`/${category.slug}`}\r\n                                        render={\r\n                                            (props) => {\r\n                                                if(category.slug === '/') { \r\n                                                    return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                }\r\n                                                //if === concacts => return contacts .... \r\n                                                return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        }\r\n                                    />  \r\n                                ) \r\n                            })\r\n                        }\r\n                        { \r\n                            categories.map( category => (\r\n                                category.pages.length > 0 &&\r\n                                category.pages.map( page => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        }, \r\n                                        {\r\n                                            title: page.title,\r\n                                            slug: `${category.slug}/${page.slug}`\r\n                                        }\r\n                                    ]\r\n                                    return(\r\n                                        <Route \r\n                                            key={page.id}\r\n                                            exact\r\n                                            path={`/${category.slug}/${page.slug}`}\r\n                                            render = {\r\n                                                (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        />\r\n                                        )\r\n                                })\r\n                            ))\r\n                        }\r\n         \r\n                        <Route path='/login' render={ () => <Login/> } />\r\n\r\n                        <Route path='*' render={ () => <Error/> } />\r\n                         \r\n                    </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n   \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    if(themeMode === 'light') { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \n// import ThemeProvider from './context/themeContext/ThemeProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n// import theme from './theme/theme.js'\nimport './assets/style.scss'\n\n\n\n\n\n  \nconst App = () => {   \n\n  return (\n      // <ThemeProvider>\n       \n\n      <CategoryProvider>\n       <LibraryProvider>\n          <ModeProvider> \n              <LoadingProvider>\n                  <div className=\"App\">  \n                    <ThemeComponent/> \n                  </div>\n              </LoadingProvider> \n          </ModeProvider>\n        </LibraryProvider> \n        </CategoryProvider> \n\n      // </ThemeProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}