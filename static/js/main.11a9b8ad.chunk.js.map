{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/categoryContext/CategoryContext.js","context/categoryContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","components/placeholders/LoadingProgress.js","components/header/DumbComponent.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/header/AdminHeader.js","components/Home.js","components/Login.js","components/Error.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/StyledComponent.js","components/library/container/ElementCreator.js","components/placeholders/SkeletonPage.js","components/pages/SinglePage.js","Router/RouterComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","console","log","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","setState","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","categories","categoryRef","collection","doc","get","exists","data","list","update","slug","delete","array","map","item","deletePage","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","a","layoutsRef","LoadingProgress","classes","makeStyles","root","position","zIndex","top","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","theme","header","palette","primary","main","logo","fontWeight","color","textAlign","menuButton","size","marginLeft","paddingBottom","borderBottom","toolbar","display","justifyContent","drawerContainer","maxWidth","minWidth","mobileLink","alignItems","textDecoration","minHeight","padding","accordionReset","paddingLeft","marginTop","marginBottom","background","boxShadow","DumbComponent","useEffect","setResponsiveness","window","innerWidth","prevState","mobileView","addEventListener","useState","drawerOpen","useContext","femmecubatorLogo","Typography","variant","component","AppBar","Container","disableGutters","fixed","handleDrawerClose","Toolbar","style","Drawer","anchor","open","onClose","Box","mx","my","Button","onClick","index","pages","length","Accordion","AccordionSummary","content","expandIcon","MenuItem","exact","to","title","page","borderTop","IconButton","edge","displayMobile","clone","innerItem","innerIndex","StyledComponent","pageLayout","categoryLayout","category","localCategories","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","handleClose","listPages","listStyle","titlePages","fontSize","menu","maxHeight","overflowY","menuTitle","cursor","btnSetting","opacity","orange","transition","transitions","easing","easeInOut","duration","shorter","dumbWrapper","btnSave","bottom","paddingTop","accordionContainer","accordionHeader","paddingRight","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","slice","indexOf","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","Tooltip","placement","Modal","aria-labelledby","DialogContent","handle","cancel","Grid","container","spacing","xs","onSubmit","e","preventDefault","newList","newCategory","Object","assign","uuid","push","FormGroup","mb","TextField","required","label","onChange","target","fullWidth","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","ElementCreator","Fragment","Header","AdminHeader","px","py","providerData","logout","Home","lg","viewBox","d","name","placeholder","href","paper","flexDirection","avatar","margin","secondary","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","Avatar","loginWithEmail","res","err","autoComplete","autoFocus","Alert","severity","message","Error","myClassName","classeForResp","isResponsiveFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setPadding","marginRight","setMargin","setColor","setBackgroundColor","setTextAlign","setFontSize","setFontWeight","lineHeight","setLineHeight","responseFont","setIsResponsiveFont","text","textInDumb","setTextInDumb","inputNumber","flexGrow","inputGroup","border","tooltip","dumbItemContainer","outline","easeIn","shadows","outlineColor","light","dumbItem","dumbItemDelete","showInput","dataNew","handlePadding","newPadding","Number","handleMargin","newMargin","focus","FormControlLabel","control","Switch","checked","triangle","colors","onChangeComplete","newColor","hex","FormControl","InputLabel","Select","labelId","sentData","reSaveChildren","event","aria-haspopup","prop","removeItem","imageStyle","image","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","borderRadius","setBorderRadius","setDisplay","imageAccordion","imagePreview","multiline","rowsMax","row","imageClassName","imageUrl","src","alt","titleImg","url","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageLabel","handleImageMargin","uploadHandler","imageData","storageRef","ref","put","on","snapshot","getDownloadURL","pt","pb","htmlFor","files","ml","settings","innerContainer","ContainerElement","libraryHeading","heading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","setFlexDirection","shadow","setShadow","setChildren","settingGutter","setSettingGutter","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","settingInnerContainer","setSettingInnerContainer","anchorEl","setAnchorEl","propsSettings","btnDrawerStyle","containerWrapper","mtView","shortest","mbView","settingsItem","toggleDrawer","handleHeadingMenuClose","addHeading","newChildren","newItem","reSaveContainer","slicedChild","forEach","key","confirm","swapContainer","removeContainer","mr","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","SkeletonPage","Skeleton","animation","SinglePage","location","useLocation","pageSlug","slugForUpdate","setData","items","setItems","isUpdate","setIsUpdate","fetchData","pageRef","set","childrenContainer","newData","keys","elem","addContainer","newItems","newCont","ContainerLayout","flexWrap","indigo","m","CircularProgress","thickness","RouterComponent","basename","path","render","App","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11a9b8ad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth()\r\n        console.log(\"constructor\")\r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) { \r\n                console.log(user)\r\n                this.setState({\r\n                    isLogin: true,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [] \r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n          } else { \r\n            this.setState({\r\n                categories: doc.data().list\r\n            })\r\n          } \r\n    }\r\n\r\n    async updateCategories(data) {\r\n        console.log('firebase update')\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {   \r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( async (user) => {\r\n            if(user) {  \r\n                const layoutsRef = firebase.db.collection(\"library\").doc('layouts')\r\n                const doc = await layoutsRef.get();\r\n                \r\n                if (!doc.exists) {\r\n                    console.log('No such document!'); \r\n                } \r\n                else {\r\n                    console.log('Layouts:', doc.data());\r\n                    \r\n                    this.setState({\r\n                        layouts: doc.data()\r\n                    })\r\n                }\r\n            }\r\n            else { \r\n                console.log('no user') \r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{\r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1000, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React, {useState, useEffect} from 'react'\r\nimport CategoryContext from '../../context/categoryContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"../../assets/header.scss\"\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    makeStyles,\r\n    Button,\r\n    IconButton,\r\n    Drawer, \r\n    MenuItem,\r\n    Container, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion\r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst widthMobile = 992\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n      position: 'static' ,\r\n      backgroundColor: theme.palette.primary.main, \r\n      [`@media (max-width: ${widthMobile}px)`]: {\r\n          // paddingLeft: 0,\r\n      }, \r\n    },\r\n    logo: { \r\n      fontWeight: 600,\r\n      color: \"#FFFEFE\",\r\n      textAlign: \"left\",\r\n    },\r\n    menuButton: { \r\n      position: 'relative', \r\n      fontWeight: 700,\r\n      size: \"18px\",\r\n      marginLeft: \"38px\",\r\n      '&>.active': {\r\n          paddingBottom: 3,\r\n          borderBottom: '2px solid #ffffff52'\r\n      }\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    drawerContainer: { \r\n        width: '50vw', \r\n        maxWidth: 450, \r\n        minWidth: 260\r\n    }, \r\n    mobileLink: { \r\n        display: 'flex',\r\n        alignItems: 'center', \r\n        color: 'inherit', \r\n        textDecoration: 'none', \r\n        height: '100%', \r\n        minHeight: 48,\r\n        width: '100%', \r\n        padding: '6px 16px', \r\n        '&.active' : {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: '#fff'\r\n        }\r\n    },  \r\n    accordionReset: {\r\n        paddingLeft: 0,\r\n        marginTop: ' 0 !important', \r\n        marginBottom: '0 !important',\r\n        minHeight: 'auto !important', \r\n        background : 'none', \r\n        boxShadow: 'none'\r\n    }\r\n}));\r\n\r\nfunction DumbComponent() {\r\n\r\n    useEffect(() => { \r\n        const setResponsiveness = () => {\r\n            return window.innerWidth < widthMobile\r\n            ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n            : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n        }; \r\n        setResponsiveness(); \r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n    }, []);\r\n\r\n    const { toolbar, header, logo , menuButton, drawerContainer, mobileLink , accordionReset} = useStyles();\r\n    const [state, setState] = useState({\r\n        mobileView: false,\r\n        drawerOpen: false,\r\n    }); \r\n    \r\n    const {categories} = React.useContext(CategoryContext)    \r\n    \r\n    const { mobileView, drawerOpen } = state;\r\n\r\n    const femmecubatorLogo = (\r\n        <Typography variant=\"h6\" component=\"h1\" className={logo}>\r\n            LogoText\r\n        </Typography>\r\n    );\r\n\r\n    const displayDesktop = () => {\r\n        return (\r\n          <Toolbar className={toolbar}>\r\n            {femmecubatorLogo}\r\n    \r\n            <Box display='flex' clone={true}>\r\n                <ul >\r\n                {\r\n                    categories.map( (item, index) => { \r\n                    return (\r\n                        <li key={index} className={menuButton}>\r\n                            {\r\n                                item.slug === '/' &&\r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                >\r\n                                    {item.title} \r\n                                </NavLink>\r\n                                \r\n                            }\r\n                           {\r\n                                item.slug !== '/' &&\r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                >\r\n                                    {item.title} \r\n                                </NavLink>\r\n                           }\r\n                            <ul >\r\n                            {\r\n                                item.pages.map( (innerItem, innerIndex) => (\r\n                                <li key={innerIndex}>\r\n                                    <NavLink exact to={`/${item.slug}/${innerItem.slug}`} >\r\n                                        {innerItem.title}\r\n                                    </NavLink>\r\n                                </li>\r\n                                ))\r\n                            }\r\n                            </ul>\r\n                        </li>\r\n                    );\r\n                    })\r\n                }\r\n                </ul>\r\n            </Box>\r\n          </Toolbar>\r\n        );\r\n    };\r\n    \r\n    const displayMobile = () => {\r\n        const handleDrawerOpen = () => setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n        const handleDrawerClose = () => setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n        return (\r\n            <Toolbar disableGutters={true} style={{justifyContent: 'space-between'}}>\r\n            \r\n\r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  >\r\n                        <Button \r\n                            variant='outlined'\r\n                            color='default'\r\n                            onClick={handleDrawerClose}\r\n                        >\r\n                            <ArrowRightAltIcon/>\r\n                        </Button>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion classes={{root: accordionReset}} key={index} >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( page => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={index} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>{femmecubatorLogo}</div>\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                color: \"inherit\",\r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <AppBar className={header}>\r\n            <Container\r\n                disableGutters={true}\r\n                fixed={false} \r\n                maxWidth={'lg'} \r\n                className='link-in-header' \r\n            > \r\n                {mobileView ? displayMobile() : displayDesktop()}\r\n            </Container>\r\n        </AppBar> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\nimport CategoryContext from '../../context/categoryContext/CategoryContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext'\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n\r\nimport { orange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\nimport DumbComponent from './DumbComponent'\r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyledComponent() {\r\n    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        listPages : {\r\n            marginTop: 20, \r\n            paddingLeft: 25, \r\n            '&>li' : { \r\n                listStyle: 'none',\r\n                marginBottom: 5\r\n            }\r\n        },\r\n        titlePages: {\r\n            fontSize: 14, \r\n            fontWeight: 600, \r\n            borderBottom: `1px solid #eee`,\r\n            marginBottom: 12\r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 350px)\",\r\n            top: 50, \r\n            backgroundColor: '#fff',\r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 700,  \r\n            width: 700,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 10, \r\n            top: 2, \r\n            left: 2,\r\n            backgroundColor: orange[700], \r\n            minWidth: 80, \r\n            minHeight: 60, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms opacity`, \r\n            '&:hover': {\r\n                backgroundColor: orange[900], \r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            position: 'relative', \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: '#fff'\r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        },\r\n        accordionHeader: {\r\n            paddingRight: 30, \r\n            paddingLeft: 25,     \r\n        },\r\n        deleteBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 5, \r\n            right: 5, \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25,\r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 0, \r\n            left: -5,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        },\r\n        deletePageBtn: {  \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingPageBtn: { \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) { \r\n                console.log(newPage)\r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => { \r\n        console.log('update')\r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n         \r\n        console.log(activeIndex)\r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        }) \r\n        console.log(newCategories)\r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Header Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >  \r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать список категорий  <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        localCategories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    <Tooltip title='Delete Category' placement='top'>\r\n                                                        <Button\r\n                                                            variant='contained'\r\n                                                            color=\"default\"\r\n                                                            disableElevation={true}\r\n                                                            className={classes.deleteBtn}\r\n                                                            onClick={() => { deleteCategory(item.id) }}\r\n                                                        > \r\n                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        <Tooltip title='Get Up' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('up', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                            >  \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                            </Button>\r\n                                                        </Tooltip> \r\n                                                        <Tooltip title='Get Down' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('down', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                        >  \r\n                                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                        </Button>\r\n                                                                                    </Tooltip> \r\n                                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                        >     \r\n                                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>\r\n\r\n            <DumbComponent data={categories} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => { \r\n   \r\n\r\n    return (  \r\n        <HeaderCreator />  \r\n    );\r\n  }\r\n\r\nexport default Header","import { Button, Typography, Box } from '@material-ui/core'\r\nimport React from 'react' \r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)\r\n \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box px={3} py={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                <Typography component='span' >\r\n                    hello, { user.providerData[0].email } \r\n                </Typography>\r\n                <span>\r\n                    (theme setting , css for body, ....)\r\n                </span>\r\n                <Button \r\n                    size='small'\r\n                    color='secondary' \r\n                    variant='outlined' \r\n                    onClick={handleSignOut}\r\n                >\r\n                    Sign Out\r\n                </Button>\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport { Box, Button, Container, Grid, Typography } from '@material-ui/core'\r\n \r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\nimport '../assets/main-banner.scss'\r\n\r\nimport firebase from '../firebase/firebase'\r\nimport layout from '../data/library.json'\r\n\r\nfunction Home() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n\r\n    const handleClick = () => {\r\n        // firebase.db.collection(\"library\").doc('layouts').set(layout)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n         <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container>\r\n                    <Grid item lg={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                Ремонт Macbook <br className=\"d-lg-none\" />\r\n                                в Санкт-Петербурге \r\n                            </h1>\r\n                            <h5>\r\n                                <svg viewBox=\"0 0 511.987 511.987\" > \r\n                                    <g><path d=\"m207.993 123.993c-13.233 0-24-10.767-24-24s10.767-24 24-24 24 10.767 24 24-10.766 24-24 24z\"/><path d=\"m511.477 439.169-39-259.997c-3.4-22.702-22.532-39.18-45.493-39.18h-148.555c13.072-24.73 12.843-53.822-.828-78.611-13.822-25.065-38.887-40.523-67.054-41.352-1.686-.049-3.418-.049-5.115 0-28.161.828-53.226 16.287-67.048 41.352-13.665 24.779-13.899 53.858-.826 78.611h-52.555c-22.961 0-42.093 16.478-45.493 39.176l-39 260.001c-1.987 13.256 1.89 26.684 10.637 36.84 8.748 10.157 21.452 15.982 34.856 15.982h419.98c13.404 0 26.108-5.825 34.856-15.982 8.748-10.154 12.625-23.582 10.638-36.84zm-345.07-362.334c8.423-15.273 22.99-24.319 39.962-24.818.536-.016 1.08-.023 1.625-.023s1.089.008 1.619.023c16.978.499 31.545 9.545 39.968 24.818 8.798 15.954 8.554 34.79-.651 50.392l-40.936 68.92-40.924-68.9c-9.217-15.606-9.465-34.452-.663-50.412zm310.186 378.294c-1.564 1.816-5.023 4.864-10.609 4.864h-289.876c.747-7.5 4.218-18.771 17.343-25.973 7.747-4.251 10.581-13.977 6.33-21.724s-13.979-10.581-21.725-6.33c-16.945 9.298-28.116 23.897-32.305 42.216-.979 4.279-1.452 8.29-1.643 11.811h-98.105c-5.586 0-9.045-3.048-10.609-4.864-1.564-1.817-4.065-5.689-3.237-11.212l39-260.003c1.035-6.907 6.858-11.92 13.847-11.92h71.425l31.046 52.271c4.348 7.343 12.018 11.727 20.519 11.727s16.171-4.384 20.506-11.707l31.059-52.291h167.426c6.988 0 12.812 5.013 13.847 11.923l39 259.999c.826 5.523-1.674 9.396-3.239 11.213z\"/><path d=\"m277.053 220.814c-8.385-2.797-17.444 1.737-20.238 10.119-2.795 8.383 1.736 17.444 10.119 20.238.164.055 16.56 5.917 21.881 21.881 2.234 6.705 8.478 10.945 15.177 10.945 1.677 0 3.384-.266 5.062-.826 8.383-2.794 12.914-11.855 10.119-20.238-10.411-31.23-40.83-41.689-42.12-42.119z\"/><path d=\"m290.621 321.587c-8.334-2.941-17.473 1.43-20.413 9.763-9.03 25.585-39.982 36.575-40.632 36.801-8.349 2.815-12.854 11.855-10.064 20.22 2.234 6.705 8.478 10.945 15.177 10.945 1.677 0 3.384-.266 5.062-.826 1.883-.627 46.287-15.841 60.634-56.49 2.94-8.333-1.431-17.472-9.764-20.413z\"/></g>\r\n                                </svg> \r\n                                <span>\r\n                                    С Бесплатным выездом к вам\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                Ноутбуки Apple устроены сложнее, чем устройства других брендов, поэтому их ремонтом должны заниматься специально обученные люди. Наш штат сотрудникам специализируется на МакБуках разных моделей. Ремонтирует их, заменяет SSD-диски и память, а также проводит чистку с заменой термопасты.\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input type=\"tel\" name=\"phone\" required placeholder=\"Ваш телефон\" />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <button type=\"submit\">\r\n                                                Вызвать мастера\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                Нажимая кнопку \"Вызвать мастера\" Вы соглашаетесь на обработку Ваших персональных данных\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid lg={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{backgroundImage: 'url(https://andrewprokopenko.github.io/mac_repair/assets/img/mb-image.png)'}} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n\r\n        <Container>\r\n            <Box mt={5}>\r\n                <Typography variant='h3'>\r\n                    Home\r\n                </Typography>\r\n\r\n                <Box mt={3}>\r\n                    <Button href='/login'>\r\n                        Login\r\n                    </Button>\r\n                </Box>\r\n                \r\n\r\n                <Box mt={3}>\r\n                    <Button onClick={handleClick}>\r\n                        Click\r\n                    </Button>\r\n                </Box>\r\n                \r\n            </Box>\r\n        </Container>\r\n    \r\n        </React.Fragment>\r\n        )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n\r\n    const hendlerSubmit = (e) => {\r\n        e.preventDefault() \r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n    \r\n            {/* Redirect при авторизации */}\r\n            { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n     \r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Вход\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={hendlerSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"text\"\r\n                        label=\"User\"\r\n                        name=\"user\"\r\n                        autoComplete='true'\r\n                        autoFocus\r\n                        value={name}\r\n                        onChange={ (e)=>{setName(e.target.value)} }\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={(e)=>{setPassword(e.target.value)}}\r\n                    />\r\n                    {\r\n                        error && \r\n                        <Alert severity=\"error\">{error.message}</Alert>\r\n                    }\r\n                \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                \r\n                </form>\r\n            </div>\r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className \r\n      }));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.isResponsiveFont ? 'resposive-font-size' : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: \"1px solid #f5f5f5\", \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        }, \r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: '#fff', \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }\r\n            }, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: '#fff',\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: '#fff',\r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        showInput: {\r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, шрифт будет меньше размером на мобильных устройствах. \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}\r\n                                isResponsiveFont={isResponsiveFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <IconButton \r\n                            className={ classes.dumbItemDelete}\r\n                            size=\"small\"\r\n                            aria-label=\"delete\"\r\n                            onClick={removeItem}\r\n                        >\r\n                            <DeleteOutline/>\r\n                        </IconButton>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n     \r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: \"1px solid #f5f5f5\", \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: '#fff', \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '.1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }\r\n            }, \r\n        },\r\n       \r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            // height: '100%'\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: '#fff',\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: '#fff',\r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 100, \r\n            height: 100, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <IconButton \r\n                            className={ classes.dumbItemDelete}\r\n                            size=\"small\"\r\n                            aria-label=\"delete\"\r\n                            onClick={removeItem}\r\n                        >\r\n                            <DeleteOutline/>\r\n                        </IconButton>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {}\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={classes.imageStyle} alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  '0px')\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: \"1px solid #f5f5f5\", \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            marginTop: 10, \r\n            backgroundColor: '#fff', \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n            }, \r\n        }, \r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: '#fff',\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },  \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: '#fff',\r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 105, \r\n            height: 105, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        },\r\n        imageLabel: {\r\n            position: 'absolute',\r\n            zIndex: 10, \r\n            top: 0, \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0, \r\n            width: \"100%\", \r\n            maxWidth: \"100%\", \r\n            height: \"100%\", \r\n            maxHeight: \"100%\", \r\n            cursor: 'pointer'\r\n        }\r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName,\r\n    }} \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImageUrl(url) \r\n              })\r\n          }\r\n        )\r\n      }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageSetting} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={dataNew.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='color'\r\n                                                label=\"Border Color\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderColor}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderColor(e.target.value)} }     \r\n                                        />\r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Background  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        color={backgroundColor}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setBackgroundColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box> \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Color  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        color={color}\r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                imageClassName={imageClassName}\r\n                                imageUrl={imageUrl}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <IconButton \r\n                            className={ classes.dumbItemDelete}\r\n                            size=\"small\"\r\n                            aria-label=\"delete\"\r\n                            onClick={removeItem}\r\n                        >\r\n                            <DeleteOutline/>\r\n                        </IconButton>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Container  \r\n                maxWidth={props.settings.maxWidth} \r\n                fixed={props.settings.fixed} \r\n                disableGutters={props.settings.disableGutters} \r\n                className={classes.myClassName}\r\n            > \r\n                {  \r\n                    props.settings.innerContainer && \r\n                    <Container\r\n                        maxWidth={'lg'}\r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                    >\r\n                        { \r\n                            modeDev && \r\n                            props.data.children.map((item) => {   \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                        {   !modeDev &&\r\n                            props.data.children.map((item) => {  \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                    </Container>\r\n                }\r\n                {  \r\n                    !props.settings.innerContainer && \r\n                    <React.Fragment>\r\n                        { \r\n                            modeDev && \r\n                            props.data.children.map((item) => {   \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                        {   !modeDev &&\r\n                            props.data.children.map((item) => {  \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                    </React.Fragment>\r\n                }\r\n                \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport uuid from 'react-uuid' \r\nimport { TwitterPicker } from 'react-color';\r\n \r\nimport DumbComponent from './DumbComponent' \r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select,  Container, Typography, ButtonGroup, IconButton\r\n} from '@material-ui/core'\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n  \r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false)\r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n         \r\n        console.log(theme)\r\n        return ( {  \r\n            btnDrawerStyle : {\r\n                position: 'absolute', \r\n                top: 0, \r\n                left: 0, \r\n                zIndex: 10,   \r\n                minWidth: 50, \r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n            }, \r\n            containerWrapper: {\r\n                position: 'relative', \r\n                outline: \"1px solid #ffffff00\", \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle': {\r\n                        opacity: 1\r\n                    }\r\n                },   \r\n               \r\n            },\r\n            mtView: {  \r\n                position: 'absolute', \r\n                top: `-${margin.top}px`, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#fff7003d',\r\n                height: `${margin.top}px`, \r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            mbView: {  \r\n                position: 'absolute', \r\n                bottom: `-${margin.bottom}px`, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#fff7003d',\r\n                height: `${margin.bottom}px`, \r\n                opacity: 0,\r\n                transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            settingsItem: {\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1\r\n            },\r\n            inputNumber: {\r\n                flexGrow: 1, \r\n                margin: 5, \r\n                width: \"100%\", \r\n                maxWidth: '50%'\r\n            }, \r\n            inputGroup: {\r\n                border: \"1px solid #f5f5f5\", \r\n                padding: 3, \r\n                inputNumber: { \r\n                    maxWidth: \"100%\"\r\n    \r\n                }\r\n            },\r\n            btnSave: { \r\n                position: 'sticky', \r\n                zIndex: theme.zIndex.tooltip,\r\n                bottom: 0, \r\n                left: 20, \r\n                right: 0,\r\n                height: 80, \r\n                backgroundColor: '#fff', \r\n                \r\n                '&>button': {\r\n                    marginTop: 20, \r\n                    marginBottom: 30, \r\n                    opacity: 1,  \r\n                    paddingLeft: 40, \r\n                    paddingRight: 40\r\n                }\r\n            }\r\n            \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n     \r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n\r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :  \r\n                console.log('paragraph')\r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :  \r\n                console.log('paragraphImage')\r\n                newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid() \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        setChildren(newChildren) \r\n \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n    } \r\n    \r\n    const reSaveChildren = async (id, data) => {   \r\n        let slicedChild = children.slice()\r\n        slicedChild.forEach((item) => {\r\n            if(item.id === id) {\r\n                for( let key in item) { \r\n                    item[key] = data[key]\r\n                } \r\n            }\r\n        }) \r\n        // console.log(slicedChild)\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, slicedChild)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => {\r\n        let conf = window.confirm(\"Delete ?\");\r\n \r\n        if(conf) {\r\n            \r\n            let filtered = children.filter((item) => (item.id !== id))  \r\n            setChildren(filtered) \r\n            \r\n            // save in firestore\r\n            props.reSaveContainer(props.data.id, filtered) \r\n        }\r\n    }\r\n\r\n    const removeContainer = () => { \r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const swapContainer = (direction, id) => { \r\n        props.swapContainer(direction, id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Container \r\n            maxWidth={propsSettings.maxWidth} \r\n            fixed={propsSettings.fixed} \r\n            disableGutters={true}\r\n            className={classes.containerWrapper} \r\n        >    \r\n            <div className={classes.mtView}></div>\r\n            <div className={classes.mbView}></div>\r\n            <Box style={{position: 'relative'}} > \r\n                {/*  DrawerContainer */}\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    \r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\"\r\n                    > \r\n                        <Tooltip title='Container Settings' placement='right'>\r\n                            <Button  \r\n                                onClick={toggleDrawer} \r\n                                size='medium'\r\n                                variant='contained'\r\n                                color='primary'\r\n                                \r\n                            >  \r\n                                <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title='Get Up' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('up', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                color='primary' \r\n                            >  \r\n                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                            </Button>\r\n                        </Tooltip> \r\n                        <Tooltip title='Get Down' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('down', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                color='primary' \r\n                            >     \r\n                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip> \r\n \r\n                    </ButtonGroup>\r\n                </Box>\r\n                     \r\n                    <Drawer anchor={'left'} open={open} onClose={toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                                <FormGroup> \r\n                                    <Typography   variant={'h6'} gutterBottom  >\r\n                                        Container actions \r\n                                    </Typography>\r\n                                   <Box mb={2}> \r\n                                        {/* <Button\r\n                                            // onClick={addContainer}\r\n                                            variant='outlined'\r\n                                            color=\"primary\" \r\n                                            disabled={true}\r\n                                            \r\n                                        >\r\n                                            Add Container\r\n                                        </Button>   */}\r\n                                        <Button\r\n                                            onClick={removeContainer}\r\n                                            variant='outlined'\r\n                                            color=\"secondary\" \r\n                                            // disabled={true}\r\n                                        >\r\n                                            Remove Container\r\n                                        </Button> \r\n                                   </Box>\r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='outlined'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph')}}\r\n                                                    variant='outlined'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage')}}\r\n                                                    variant='outlined'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                             <Typography  component={'h6'} gutterBottom  >\r\n                                                Background  \r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setBackgroundColor(newColor.hex) \r\n                                                }}\r\n\r\n                                            /> \r\n                                        </Box> \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography component={'h6'} gutterBottom  >\r\n                                                Color text\r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setColor(newColor.hex) \r\n                                                }} \r\n                                            /> \r\n                                        </Box> \r\n                                      \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='color'\r\n                                                    label=\"Border Color\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderColor}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                            />\r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n                <DumbComponent\r\n                    reSaveChildren={reSaveChildren}\r\n                    removeItem={removeItem}\r\n                    data={props.data} \r\n                    classes={myClassName}\r\n                    settings={propsSettings}\r\n                />  \r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed\r\n    }\r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev && \r\n                <StyledComponent   \r\n                    data={props.data} \r\n                    reSaveContainer={props.reSaveContainer}\r\n                    reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                    removeContainer={props.removeContainer}    \r\n                    swapContainer={props.swapContainer}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev &&  \r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation='wave'\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='text'  \r\n                  height={50}\r\n                  width='100%'\r\n                  animation='wave'\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react' \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, CircularProgress } from \"@material-ui/core\"; \r\n\r\nimport { indigo } from '@material-ui/core/colors'\r\n  \r\nimport ContainerElement from '../library/container/ElementCreator' \r\nimport ContainerLayout from '../library/container/containerLayout.json' \r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext'\r\n\r\nfunction SinglePage(props) {\r\n\r\n    const location = useLocation()\r\n\r\n    const pageSlug = props.slugForUpdate\r\n\r\n    const { modeDev } = React.useContext(ModeContext)\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n  \r\n    const [data, setData] = React.useState({})\r\n    const [items, setItems] = React.useState([])\r\n  \r\n    const [isUpdate, setIsUpdate] = React.useState(true)\r\n    //  title\r\n    //  slug\r\n    //  id\r\n  \r\n    React.useEffect( () => { \r\n      setIsLoading(true)\r\n      fetchData()\r\n    }, [location])\r\n  \r\n    const fetchData = async () => {  \r\n       \r\n      const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n      const doc = await pageRef.get();\r\n      \r\n      if (!doc.exists) {\r\n        console.log('No such page!'); \r\n\r\n        // задать шаблон страницы\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.slug = pageSlug\r\n\r\n        await pageRef.set(newPage)\r\n\r\n        setData(newPage)  \r\n        setItems(newPage.items) \r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n\r\n      } else { \r\n        setData(doc.data())  \r\n        setItems(doc.data().items)  \r\n        \r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }\r\n   \r\n    }  \r\n    \r\n    const reSaveContainer = async (id, childrenContainer) => { \r\n   \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem].children = childrenContainer \r\n        }\r\n        return 0 \r\n      })\r\n   \r\n      setData(newData)\r\n      setItems(newData.items)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    } \r\n    const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n      let newData = Object.assign({}, data)\r\n        \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n          newData.items[elem].classes = classes \r\n          newData.items[elem].disableGutters = settings.disableGutters \r\n          newData.items[elem].fixed = settings.fixed \r\n          newData.items[elem].maxWidth = settings.maxWidth \r\n          newData.items[elem].innerContainer = settings.innerContainer \r\n        }\r\n        return 0 \r\n      }) \r\n  \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    } \r\n   \r\n    const addContainer = async () => {   \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n  \r\n      let newCont = Object.assign({}, ContainerLayout) \r\n      newCont.id = uuid()\r\n   \r\n      newItems.push(newCont) \r\n   \r\n      newData.items = newItems\r\n          \r\n      setData(newData)\r\n      setItems(newItems)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      });  \r\n    }\r\n  \r\n    const removeContainer = async (id) => {  \r\n      let newData = Object.assign({}, data)\r\n      const filtered = items.filter((item) => (item.id !== id))  \r\n  \r\n      newData.items = filtered\r\n          \r\n      setData(newData)\r\n      setItems(filtered) \r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: filtered\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }); \r\n    }\r\n  \r\n    const swapContainer = async (direction, id) => { \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n      let activeIndex   \r\n   \r\n      newItems.map( (item) => { \r\n        if(item.id === id) {\r\n          activeIndex = newItems.indexOf(item) \r\n        }\r\n        return 0 \r\n      }) \r\n   \r\n      if(direction === 'up' && activeIndex === 0) return  \r\n      if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n      \r\n      if(direction === 'up') { \r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex - 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex - 1 ] = movedItem  \r\n      }\r\n      if(direction === 'down') {\r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex + 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex + 1 ] = movedItem  \r\n      }\r\n  \r\n      newData.items = newItems\r\n         \r\n      setItems(newItems)\r\n      setData(newData)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n   \r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    }\r\n  \r\n    function renderContainers () {   \r\n      if(items.length > 0) {\r\n        return Object.keys(items).map( (key) => { \r\n          return ( \r\n           <ContainerElement \r\n             key={items[key].id} \r\n             data={items[key]} \r\n             reSaveContainer={reSaveContainer}\r\n             reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n             removeContainer={removeContainer}\r\n             swapContainer={swapContainer}\r\n           /> \r\n         ) \r\n       })\r\n      }\r\n      else {\r\n        return ( \r\n          <SkeletonPage/> \r\n        ) \r\n      }\r\n      \r\n    } \r\n\r\n    return (\r\n        <React.Fragment> \r\n          { \r\n            modeDev &&  \r\n            <Box px={3} display='flex' flexWrap='wrap' style={{backgroundColor: indigo[50] }}> \r\n                  \r\n                  <Box m={1}>\r\n                    <Typography variant=\"h6\" >\r\n                      Page actions\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box display=\"flex\" alignItems='center' mx={1} minWidth={22} >\r\n                    {\r\n                      isUpdate &&\r\n                      <CircularProgress size={22} thickness={5} /> \r\n                    } \r\n                  </Box>\r\n\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'contained'} onClick={addContainer}>\r\n                        Add new container\r\n                    </Button> \r\n                  </Box>\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                        More settings\r\n                    </Button> \r\n                  </Box> \r\n            </Box>\r\n          }\r\n           \r\n          { \r\n            renderContainers()  \r\n          } \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header'\r\nimport AdminHeader from '../components/header/AdminHeader'\r\n\r\nimport Home from '../components/Home'\r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/categoryContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext) \r\n\r\n    return (\r\n        <Router basename=\"builder\"> \r\n            {\r\n                isLoading && \r\n                <LoadingProgress/>\r\n            }\r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                    \r\n                    <AdminHeader/>\r\n                    <Header/>\r\n\r\n                    <Switch>\r\n                        { \r\n                            categories.map( category => \r\n                                <Route \r\n                                    key={category.id}\r\n                                    exact\r\n                                    path={`/${category.slug}`}\r\n                                    render={\r\n                                        (props) => {\r\n                                            if(category.slug === '/') { \r\n                                                return <Home/>\r\n                                            }\r\n                                            //if === concacts => return contacts .... \r\n                                            return <SinglePage {...props} slugForUpdate={category.slug} />\r\n                                        }\r\n                                    }\r\n                                /> \r\n                            )\r\n                        }\r\n                        { \r\n                            categories.map( category => (\r\n                                category.pages.length > 0 &&\r\n                                category.pages.map( page => \r\n                                    <Route \r\n                                        key={page.id}\r\n                                        exact\r\n                                        path={`/${category.slug}/${page.slug}`}\r\n                                        render = {\r\n                                            (props) => <SinglePage {...props} slugForUpdate={page.slug} />\r\n                                        }\r\n                                    />\r\n                                )\r\n                            ))\r\n                        }\r\n         \r\n                        <Route path='/login' render={ () => <Login/> } />\r\n\r\n                        <Route path='*' render={ () => <Error/> } />\r\n                         \r\n                    </Switch> \r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from \"react\" \n\nimport CssBaseline from '@material-ui/core/CssBaseline'; \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/categoryContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider'\n \nimport RouterComponent from './Router/RouterComponent' \n  \nclass App extends React.Component {  \n  \n render() {\n    return (\n      <ModeProvider> \n        <CategoryProvider>\n          <LoadingProvider>\n            <LibraryProvider>\n              <div className=\"App\">  \n                <CssBaseline/>     \n                <RouterComponent/> \n              </div>\n            </LibraryProvider> \n          </LoadingProvider> \n        </CategoryProvider> \n      </ModeProvider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}