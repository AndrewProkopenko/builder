{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/themeContext/ThemeContext.js","context/themeContext/ThemeProvider.js","components/ScrollToTop.js","components/placeholders/LoadingProgress.js","components/header/headerHelpers/CategoriesChanger.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/DumbComponent.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/Login.js","components/Error.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/StyledComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","console","log","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","setState","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","categories","logo","image","mainText","subText","settings","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ThemeContext","ThemeProvider","themeMode","storageMode","localStorage","getItem","setThemeMode","setItem","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","open","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","handleClose","theme","listPages","marginTop","paddingLeft","listStyle","marginBottom","titlePages","fontSize","fontWeight","borderBottom","menu","palette","background","paper","padding","paddingBottom","maxWidth","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","cursor","btnSetting","orange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","dumbWrapper","opacity","btnSave","bottom","paddingTop","accordionContainer","accordionHeader","paddingRight","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","slice","indexOf","length","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","Tooltip","title","placement","Button","onClick","size","variant","color","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","spacing","xs","onSubmit","e","preventDefault","newList","newCategory","Object","assign","uuid","push","FormGroup","Box","mb","TextField","required","label","onChange","target","IconButton","fullWidth","index","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","LogoChanger","setMainText","setSubText","setImage","amber","uploadHandler","imageData","storageRef","ref","name","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","boxShadow","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingsItem","marginRight","flexGrow","row","FormControl","InputLabel","Select","labelId","MenuItem","DumbComponent","widthMobile","headerHeight","setHeaderHeight","setResponsiveness","headHeight","document","querySelector","clientHeight","innerWidth","prevState","mobileView","removeEventListener","addEventListener","breakpoints","values","md","header","primary","main","fixedPadding","logoMain","textAlign","whiteSpace","lineHeight","logoSub","margin","logoImage","menuButton","marginLeft","toolbar","drawerContainer","mobileLink","textDecoration","accordionReset","drawerOpen","femmecubatorLogo","to","Fragment","AppBar","Container","handleDrawerClose","Toolbar","Drawer","anchor","mx","my","content","exact","borderTop","edge","displayMobile","clone","innerItem","innerIndex","AdminHeader","isOpen","setIsOpen","buttonSettings","settingsContainer","default","wrapper","providerData","FormControlLabel","control","Switch","checked","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","dark","secondary","btnSettingsItem","ElementCreator","Header","Footer","subHeading","fill","footer","footerHeading","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","Avatar","loginWithEmail","res","err","autoComplete","autoFocus","Alert","severity","Error","myClassName","resposiveFontSize","sm","classeForResp","isResponsiveFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setPadding","setMargin","setColor","setBackgroundColor","setTextAlign","setFontSize","setFontWeight","setLineHeight","responseFont","setIsResponsiveFont","text","textInDumb","setTextInDumb","inputNumber","inputGroup","border","divider","tooltip","dumbItemContainer","outline","easeIn","shadows","outlineColor","light","mtView","shortest","mbView","ptView","pbView","dumbItem","dumbItemDelete","showInput","dataNew","handlePadding","newPadding","Number","handleMargin","newMargin","focus","triangle","colors","onChangeComplete","newColor","hex","sentData","reSaveChildren","aria-haspopup","prop","removeItem","imageStyle","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","borderRadius","setBorderRadius","setDisplay","imageAccordion","imagePreview","multiline","rowsMax","imageClassName","imageUrl","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageLabel","handleImageMargin","px","pt","pb","ml","innerContainer","ContainerElement","libraryHeading","heading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","setFlexDirection","shadow","setShadow","setChildren","settingInnerContainer","setSettingInnerContainer","anchorEl","setAnchorEl","propsSettings","btnDrawerStyle","btnDrawerItem","containerWrapper","toggleDrawer","handleHeadingMenuClose","addHeading","a","newChildren","newItem","reSaveContainer","slicedChild","forEach","key","confirm","swapContainer","removeContainer","mr","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","titleMain","titleSubText","headingIcon","inputLabel","buttonLabel","policy","input","button","viewBox","d","placeholder","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","location","useTheme","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","setData","items","setItems","isUpdate","setIsUpdate","isHideSettings","setIsHideSettings","transform","flexWrap","action","active","btnContainer","fetchData","metaTitle","pageRef","set","childrenContainer","newData","keys","elem","addContainer","newItems","newCont","m","pl","CircularProgress","thickness","history","RouterComponent","basename","path","render","ThemeComponent","createMuiTheme","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"49KAIeA,EAFKC,IAAMC,gB,kCCApBC,EAAiB,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,6CA0CI,M,WArCX,aAAe,oBACX,IAAMC,EAAeC,IAASC,cAAcT,GAC5CU,KAAKC,GAAKJ,EAAYK,YACtBF,KAAKG,QAAUN,EAAYM,UAC3BH,KAAKI,KAAOP,EAAYO,OACxBC,QAAQC,IAAI,e,iLAGRC,EAAW,IAAIT,IAASM,KAAKI,mBACjCV,IAASM,OAAOK,gBAAgBF,GAAUG,MAAK,SAASC,OAMnDC,OAAM,SAASC,O,kLAWAC,EAAOC,G,iFACrBf,KAAKI,KAAKY,+BAA+BF,EAAOC,G,uLAErCD,EAAOC,G,0FACjBf,KAAKI,KAAKa,2BAA2BH,EAAOC,I,2QAG5Cf,KAAKI,KAAKc,W,8GCxCJC,E,4MAEjBC,MAAQ,CACJC,SAAS,EACTC,KAAM,M,kEAGW,IAAD,OAChBxB,EAASM,KAAKmB,oBAAoB,SAACD,GAC5BA,EAEC,EAAKE,SAAS,CACVH,SAAS,EACTC,KAAMA,KAIVjB,QAAQC,IAAI,WACZ,EAAKkB,SAAS,CACVH,SAAS,EACTC,KAAM,a,+BAOlB,OACI,cAAC,EAAYG,SAAb,CACIC,MAAO,CACHC,QAAS3B,KAAKoB,MAAMC,QACpBC,KAAMtB,KAAKoB,MAAME,MAHzB,SAMKtB,KAAK4B,MAAMC,e,GAlCczC,IAAM0C,WCFjCC,EAFS3C,IAAMC,gBCIT2C,E,4MAEjBZ,MAAQ,CACJa,WAAY,GACZC,KAAM,CACFC,MAAO,GACPC,SAAU,GACVC,QAAS,IAEbC,SAAU,I,2LAIJC,EAAczC,EAASG,GAAGuC,WAAW,iBAAiBC,IAAI,gB,SAC9CF,EAAYG,M,QAAxBD,E,QACGE,OAGL3C,KAAKwB,SAAS,CACVS,WAAYQ,EAAIG,OAAOC,KACvBX,KAAMO,EAAIG,OAAOV,KACjBI,SAAUG,EAAIG,OAAOE,iBALzBzC,QAAQC,IAAI,uB,sLAUGsC,G,wEACnBvC,QAAQC,IAAI,mB,SACNR,EAASG,GAAGuC,WAAW,iBAAiBC,IAAI,gBAAgBM,OAAO,CACrEF,KAAMD,I,4KAIGI,G,iFACPlD,EAASG,GAAGuC,WAAW,SAASC,IAAIO,GAAMC,S,uIAGrCC,GAAQ,IAAD,OAClBA,EAAMC,KAAK,SAAAC,GAEP,OADA,EAAKC,WAAWD,GACT,O,0EAIElB,G,iFACPpC,EAASG,GAAGuC,WAAW,iBAAiBC,IAAI,gBAAgBM,OAAO,CACrEb,KAAMA,I,gLAGOI,G,iFACXxC,EAASG,GAAGuC,WAAW,iBAAiBC,IAAI,gBAAgBM,OAAO,CACrED,eAAgBR,I,iIAId,IAAD,OACL,OACI,cAAC,EAAgBb,SAAjB,CACIC,MAAO,CACHO,WAAYjC,KAAKoB,MAAMa,WACvBC,KAAMlC,KAAKoB,MAAMc,KACjBI,SAAUtC,KAAKoB,MAAMkB,SACrBgB,WAAY,SAACV,GACT,EAAKpB,SAAS,CACVU,KAAMU,IAEV,EAAKU,WAAWV,IAEpBW,eAAgB,SAACX,GACb,EAAKpB,SAAS,CACVc,SAAUM,IAEd,EAAKW,eAAeX,IAExBY,cAAe,SAACZ,GACZ,EAAKpB,SAAS,CACVS,WAAYW,IAEhB,EAAKa,iBAAiBb,IAE1Bc,uBAAwB,SAACV,GACrB,EAAKK,WAAWL,IAEpBW,2BAA4B,SAACT,GACzB,EAAKU,eAAeV,KA3BhC,SA+BKlD,KAAK4B,MAAMC,e,GAxFkBzC,IAAM0C,WCFrC+B,EAFQzE,IAAMC,gBCGRyE,E,4MAEjB1C,MAAQ,CACJ2C,WAAW,G,uDAGL,IAAD,OACL,OACI,cAAC,EAAetC,SAAhB,CACIC,MAAO,CACHqC,UAAW/D,KAAKoB,MAAM2C,UACtBC,aAAc,SAACtC,GACX,EAAKF,SAAS,CACVuC,UAAWrC,MAL3B,SAUK1B,KAAK4B,MAAMC,e,GAlBiBzC,IAAM0C,WCDpCmC,EAFQ7E,IAAMC,gB,SCMR6E,E,4MAEjB9C,MAAQ,CACJ+C,QAASC,G,uDA2BT,OACI,cAAC,EAAe3C,SAAhB,CACIC,MAAO,CACHyC,QAASnE,KAAKoB,MAAM+C,SAF5B,SAKKnE,KAAK4B,MAAMC,e,GApCiBzC,IAAM0C,WCJpCuC,EAFMjF,IAAMC,gBCINiF,E,4MAEjBlD,MAAQ,CACJmD,UAAW,S,kEAIX,IAAMC,EAAeC,aAAaC,QAAQ,wBAC1CrE,QAAQC,IAAIkE,GACM,QAAfA,EACCxE,KAAKwB,SAAS,CACV+C,UAAW,SAIfvE,KAAKwB,SAAS,CACV+C,UAAW,Y,+BAKb,IAAD,OACL,OACI,cAAC,EAAa9C,SAAd,CACIC,MAAO,CACH6C,UAAWvE,KAAKoB,MAAMmD,UACtBI,aAAc,WACVF,aAAaG,QAAQ,uBAAiD,UAAzB,EAAKxD,MAAMmD,UAAwB,OAAS,SACzF,EAAK/C,SAAS,CACV+C,UAAoC,UAAzB,EAAKnD,MAAMmD,UAAwB,OAAS,YANvE,SAWKvE,KAAK4B,MAAMC,e,GAlCezC,IAAM0C,W,mDCHlC,SAAS+C,IAAe,IAC7BC,EAAaC,cAAbD,SASR,OAPA1F,IAAM4F,WAAU,WACdC,OAAOC,SAAS,CACZC,IAAK,EACLC,SAAU,WAEb,CAACN,IAEG,K,sBC0BMO,MAjCf,WAEI,IAmBMC,EAnBYC,aAAY,iBAAO,CACjCC,KAAM,CACFC,SAAU,QACVC,OAAQ,IACRP,IAAK,EACLQ,KAAM,EACNC,MAAO,EACPC,MAAO,OACPC,OAAQ,GAEZC,UAAW,CACPC,gBAAiB,iBAErBC,SAAU,CACND,gBAAiB,iBACjBE,gBAAiB,+EAITC,GAEhB,OACI,qBAAKC,UAAWd,EAAQE,KAAxB,SACI,cAACa,EAAA,EAAD,CAAgBf,QAAS,CACrBgB,aAAchB,EAAQS,UACtBQ,IAAKjB,EAAQW,e,6UCspBdO,OAppBf,WAA8B,IAAD,EAE+DpH,IAAMqH,WAAW1E,GAAlGE,EAFkB,EAElBA,WAAYuB,EAFM,EAENA,cAAeE,EAFT,EAESA,uBAAwBC,EAFjC,EAEiCA,2BACnDQ,EAAW/E,IAAMqH,WAAWxC,GAA5BE,QACDuC,EAAavC,EAAQwC,KACrBC,EAAiBzC,EAAQ0C,SALN,EAOqBzH,IAAM0H,SAAS7E,GAPpC,mBAOlB8E,EAPkB,KAODC,EAPC,OAQD5H,IAAM0H,UAAS,GARd,mBAQlBG,EARkB,KAQZC,EARY,OASe9H,IAAM0H,UAAS,GAT9B,mBASlBK,EATkB,KASJC,EATI,OAWuBhI,IAAM0H,SAAS,IAXtC,mBAWlBO,EAXkB,KAWAC,EAXA,OAYqBlI,IAAM0H,SAAS,IAZpC,mBAYlBS,EAZkB,KAYDC,EAZC,OAcepI,IAAM0H,SAAS,IAd9B,mBAclBW,EAdkB,KAcJC,EAdI,OAeatI,IAAM0H,SAAS,IAf5B,mBAelBa,EAfkB,KAeLC,GAfK,KAqBnBC,GAAc,WAClBX,GAAQ,IA+IJ5B,GA5IYC,aAAW,SAACuC,GAAD,MAAY,CACrCC,UAAY,CACRC,UAAW,GACXC,YAAa,GACb,OAAS,CACLC,UAAW,OACXC,aAAc,IAGtBC,WAAY,CACRC,SAAU,GACVC,WAAY,IACZC,aAAa,iBACbJ,aAAc,IAElBK,KAAM,CACF/C,SAAU,WACVE,KAAM,oBACNR,IAAK,GACLa,gBAAiB8B,EAAMW,QAAQC,WAAWC,MAC1CC,QAAS,GACTC,cAAe,EACfC,SAAU,IACVjD,MAAO,IACPkD,UAAW,sBACXC,UAAW,IACXC,UAAW,UAEfC,UAAW,CACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBhB,SAAU,GACVE,aAAc,oBACdM,cAAe,EACfV,aAAc,GACdmB,OAAQ,QAEZC,WAAY,CAMRvD,gBAAiBwD,KAAO,KACxBC,SAAU,GACVV,UAAW,GACXW,WAAW,GAAD,OAAK5B,EAAM6B,YAAYC,OAAOC,UAA9B,YAA2C/B,EAAM6B,YAAYG,SAASC,QAAtE,OACV,UAAW,CACP/D,gBAAiBwD,KAAO,MAE5B,SAAU,CACNL,QAAS,OACTa,cAAe,SACf3B,SAAU,KAGlB4B,YAAa,CAOT,sBAAuB,CACnBC,QAAS,IAGjBC,QAAS,CACL1E,SAAU,SACVC,OAAQ,GACR0E,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPE,OAAQ,GACRuE,WAAY,GACZrE,gBAAiB8B,EAAMW,QAAQC,WAAWC,OAE9C2B,mBAAoB,CAChB7E,SAAU,WACV,qBAAsB,CAClByE,QAAS,GAEb,qBAAsB,CAClBA,QAAS,IAGjBK,gBAAiB,CACbC,aAAc,GACdvC,YAAa,IAEjBwC,UAAW,CACPhF,SAAU,WACVC,OAAQ,GACRP,IAAK,EACLS,MAAO,EACPI,gBAAiB,UACjBiC,YAAa,EACbuC,aAAc,EACdf,SAAU,GACVS,QAAS,EACTR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASC,QAAhC,cAA6CjC,EAAM6B,YAAYC,OAAOC,UAAtE,YACV,WAAY,CACR7D,gBAAiB,YAGzB0E,UAAW,CACPjF,SAAU,WACVC,OAAQ,GACRP,IAAK,EACLQ,MAAO,EACPuE,QAAS,EACTR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASC,QAAhC,cAA6CjC,EAAM6B,YAAYC,OAAOC,UAAtE,YACV,WAAa,CACT5B,YAAa,EACbuC,aAAc,EACdf,SAAU,KAGlBkB,cAAe,CACX3E,gBAAiB,UACjBiC,YAAa,EACbuC,aAAc,EACdf,SAAU,GACVC,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASC,QAAhC,cAA6CjC,EAAM6B,YAAYC,OAAOC,UAAtE,YACV,WAAY,CACR7D,gBAAiB,YAGzB4E,cAAe,CACXlB,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASC,QAAhC,cAA6CjC,EAAM6B,YAAYC,OAAOC,UAAtE,YACV,WAAa,CACT5B,YAAa,EACbuC,aAAc,EACdf,SAAU,QAMNtD,GAqCV0E,GAAoB,SAACC,EAAMpJ,GACjB,UAAToJ,GAAkBxD,EAAoB5F,GAC7B,SAAToJ,GAAiBtD,EAAmB9F,IAErCqJ,GAAgB,SAACD,EAAMpJ,GACb,UAAToJ,GAAkBpD,EAAgBhG,GACzB,SAAToJ,GAAiBlD,GAAelG,IAoCjCsJ,GAAe,SAACC,EAAWC,GAC7B,IACIC,EADAC,EAAgBnJ,EAAWoJ,QAW/B,GARAD,EAAcjI,KAAK,SAACC,GAIlB,OAHGA,EAAK8H,KAAOA,IACbC,EAAcC,EAAcE,QAAQlI,IAE/B,MAIQ,OAAd6H,GAAsC,IAAhBE,KACR,SAAdF,GAAwBE,IAAgBC,EAAcG,OAAS,GAAlE,CAEA,GAAiB,OAAdN,EAAoB,CACrB,IAAMO,EAAYJ,EAAcD,GAC1BM,EAAYL,EAAcD,EAAc,GAE9CC,EAAcD,GAAeM,EAC7BL,EAAcD,EAAc,GAAMK,EAEpC,GAAiB,SAAdP,EAAsB,CACvB,IAAMO,EAAYJ,EAAcD,GAC1BM,EAAYL,EAAcD,EAAc,GAE9CC,EAAcD,GAAeM,EAC7BL,EAAcD,EAAc,GAAMK,EAGpChI,EAAc4H,KAEZM,GAAW,SAACT,EAAWU,EAAYC,GACrC,IAEIT,EAFAC,EAAgBnJ,EAAWoJ,QAC3BQ,EAAiB,GAgBrB,GAbAT,EAAcjI,KAAK,SAACC,GAUlB,OATGA,EAAK8H,KAAOS,IACTE,EAAiBzI,EACjBA,EAAK0I,MAAM3I,KAAK,SAAAwD,GAIZ,OAHGA,EAAKuE,KAAOU,IACXT,EAAc/H,EAAK0I,MAAMR,QAAQ3E,IAE9B,MAGV,MAGQ,OAAdsE,GAAsC,IAAhBE,KACR,SAAdF,GAAwBE,IAAgBU,EAAeC,MAAMP,OAAS,GAAzE,CAGA,GADAlL,QAAQC,IAAI6K,GACK,OAAdF,EAAoB,CACrB,IAAMO,EAAYK,EAAeC,MAAMX,GACjCM,EAAYI,EAAeC,MAAMX,EAAc,GAErDU,EAAeC,MAAMX,GAAeM,EACpCI,EAAeC,MAAMX,EAAc,GAAMK,EAE3C,GAAiB,SAAdP,EAAsB,CACvB,IAAMO,EAAYK,EAAeC,MAAMX,GACjCM,EAAYI,EAAeC,MAAMX,EAAc,GAErDU,EAAeC,MAAMX,GAAeM,EACpCI,EAAeC,MAAMX,EAAc,GAAMK,EAI3CJ,EAAcjI,KAAK,SAACC,GAIhB,OAHGA,EAAK8H,KAAOS,IACXvI,EAAOyI,GAEJ,KAEXxL,QAAQC,IAAI8K,GAEZ5H,EAAc4H,KAgClB,OACI,sBAAKhF,UAAWd,GAAQ2E,YAAxB,UACI,cAAC8B,EAAA,EAAD,CAASC,MAAM,sBAAsBC,UAAU,SAA/C,SACI,eAACC,EAAA,EAAD,CACIC,QApVS,WACvBjF,GAAQ,IAoVMkF,KAAK,SACLC,QAAQ,YACRC,MAAM,UACNlG,UAAWd,GAAQiE,WALvB,UAOI,8CACA,cAAC,KAAD,CAAcgD,MAAO,CAAED,MAAO,QAAUjE,SAAS,eAIzD,cAACmE,EAAA,EAAD,CACIvF,KAAMA,EACNwF,kBAAgB,yBAChBC,QAAS7E,GAHb,SAKI,cAAC8E,EAAA,EAAD,UACI,cAAC,KAAD,CAAYC,OAAO,0BAA0BC,OAAQ,mCAArD,SACI,sBAAKzG,UAAWd,GAAQkD,KAAxB,UACI,eAACsE,EAAA,EAAD,CACIC,UAAU,IACV3G,UAAWd,GAAQ4D,UACnBgC,GAAG,yBAHP,gPAK8C,cAAC,KAAD,OAE9C,eAAC8B,EAAA,EAAD,CAAMC,WAAS,EAAChC,UAAU,MAAMiC,QAAS,EAAzC,UACI,cAACF,EAAA,EAAD,CAAM5J,MAAI,EAAC+J,GAAI,EAAf,SACI,sBAAMC,SA3NlB,SAACC,GACjBA,EAAEC,iBACF,IAAIC,EAAUtL,EAAWoJ,QACrBmC,EAAcC,OAAOC,OAAO,GAAI9G,GACpC4G,EAAYtC,GAAKyC,MACjBH,EAAYxB,MAAQ3E,EACpBmG,EAAYxK,KAAOuE,EACnBgG,EAAQK,KAAKJ,GAEbhK,EAAc+J,GAEdjG,EAAoB,IACpBE,EAAmB,KA+MS,SACI,eAACqG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CACIC,UAAQ,EACRC,MAAM,iBACN7B,QAAQ,WACR3K,MAAO2F,EACP8G,SAAU,SAACd,GAAQxC,GAAkB,QAASwC,EAAEe,OAAO1M,YAG/D,eAACoM,EAAA,EAAD,CAAKC,GAAI,EAAGxB,MAAO,CAAC9G,SAAU,YAA9B,UACI,cAACuI,EAAA,EAAD,CACIC,UAAQ,EACRC,MAAM,gBACN7B,QAAQ,WACR3K,MAAO6F,EACP4G,SAAU,SAACd,GAAQxC,GAAkB,OAAQwC,EAAEe,OAAO1M,UAG1D,cAACqK,EAAA,EAAD,CAASC,MAAM,mCAAmCC,UAAU,OAA5D,SACI,cAACoC,EAAA,EAAD,CAAY9B,MAAO,CAAC9G,SAAU,WAAYN,IAAK,EAAGS,MAAO,GAAzD,SACI,cAAC,KAAD,CAAc0G,MAAO,qBAIjC,cAACwB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC7B,EAAA,EAAD,CACIpB,KAAK,SACLwB,MAAO,UACPD,QAAQ,YACRiC,WAAS,EAJb,uCAchB,eAACtB,EAAA,EAAD,CAAM5J,MAAI,EAAC+J,GAAI,EAAf,UAEQlL,EAAWkB,KAAK,SAACC,EAAMmL,GACnB,OACI,eAACT,EAAA,EAAD,CAAkB1H,UAAWd,GAAQgF,mBAArC,UACI,cAACyB,EAAA,EAAD,CAASC,MAAM,kBAAkBC,UAAU,MAA3C,SACI,cAACC,EAAA,EAAD,CACIG,QAAQ,YACRC,MAAM,UACNkC,kBAAkB,EAClBpI,UAAWd,GAAQmF,UACnB0B,QAAS,YAlH1C,SAACjB,GACpB,IAAIuD,EAAWxM,EAAWyM,QAAO,SAACtL,GAAD,OAAWA,EAAK8H,KAAOA,KAClDyD,EAAU1M,EAAWyM,QAAQ,SAACtL,GAAD,OAAWA,EAAK8H,KAAOA,KACtD0D,EAAwB,GAE5BA,EAAsBhB,KAAKe,EAAQ,GAAG3L,MACnC2L,EAAQ,GAAG7C,MAAMP,OAAS,GACzBoD,EAAQ,GAAG7C,MAAM3I,KAAI,SAACC,GAElB,OADAwL,EAAsBhB,KAAKxK,EAAKJ,MACzB,KAIfQ,EAAciL,GACd9K,EAA2BiL,GAoG0ChL,CAAeR,EAAK8H,KALzC,SAOI,cAAC,KAAD,CAAmBqB,MAAO,CAAED,MAAO,QAAUjE,SAAS,cAI9D,eAACwG,EAAA,EAAD,CACIC,YAAY,WACZxC,MAAM,UACNyC,aAAW,0CACX1C,QAAQ,YACRjG,UAAWd,GAAQoF,UALvB,UAOI,cAACqB,EAAA,EAAD,CAASC,MAAM,SAASC,UAAU,QAAlC,SACI,cAACC,EAAA,EAAD,CACIC,QAAS,WAAQnB,GAAa,KAAM5H,EAAK8H,KACzCkB,KAAK,QACLC,QAAQ,YACRC,MAAM,UACN0C,SAAuC,IAA7B/M,EAAWqJ,QAAQlI,GALjC,SAOI,cAAC,KAAD,CAAwBmJ,MAAO,CAAED,MAAO,QAAUjE,SAAS,cAGnE,cAAC0D,EAAA,EAAD,CAASC,MAAM,WAAWC,UAAU,QAApC,SACI,cAACC,EAAA,EAAD,CACIC,QAAS,WAAQnB,GAAa,OAAQ5H,EAAK8H,KAC3CkB,KAAK,QACLC,QAAQ,YACRC,MAAM,UACN0C,SAAU/M,EAAWqJ,QAAQlI,KAAUnB,EAAWsJ,OAAS,EAL/D,SAOI,cAAC,KAAD,CAAwBgB,MAAO,CAAED,MAAO,QAAUjE,SAAS,iBAKvE,eAAC4G,EAAA,EAAD,WACI,cAACC,GAAA,EAAD,CACIC,WAAY,cAAC,KAAD,IACZC,gBAAc,yBACdlE,GAAG,iBACH9E,UAAWd,GAAQiF,gBAJvB,SAMI,eAACuC,EAAA,EAAD,CAAYT,QAAQ,KAApB,wBAAqCjJ,EAAK4I,MAA1C,SAIJ,eAAC8B,EAAA,EAAD,CAAKuB,EAAG,EAAR,UACI,cAACvB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CACIC,UAAQ,EACRnD,KAAK,OACLoD,MAAM,iBACNI,WAAS,EACTjC,QAAQ,SACR3K,MAAO0B,EAAK4I,MACZmC,SAAU,SAACd,IA7R9C,SAAC3L,EAAOwJ,GACjC7K,QAAQC,IAAI,UACZ,IAAI8K,EAAgBrE,EAAgBsE,QACpCD,EAAcjI,KAAK,SAACC,GAIhB,OAHGA,EAAK8H,KAAOA,IACX9H,EAAK4I,MAAQtK,GAEV,KAEXsF,EAAmBoE,GACnBhE,GAAgB,GAmR+DkI,CAAqBjC,EAAEe,OAAO1M,MAAO0B,EAAK8H,SAGrE,cAAC4C,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CACIlD,KAAK,OACLoD,MAAM,4BACNI,WAAS,EACTjC,QAAQ,SACR3K,MAAO0B,EAAKJ,KACZgM,UAAU,MAGlB,qBAAI5I,UAAWd,GAAQyC,UAAvB,UACI,cAAC+E,EAAA,EAAD,CAAY1G,UAAWd,GAAQ8C,WAA/B,yBAIIhF,EAAK0I,MAAMP,OAAS,GACpBnI,EAAK0I,MAAM3I,KAAI,SAACoM,EAAWC,GAAZ,OACX,+BACI,eAAC1B,EAAA,EAAD,CAAKC,GAAI,EAAG5E,QAAQ,OAAOE,eAAe,gBAAgBD,WAAW,SAArE,UACI,eAAC0D,EAAA,EAAD,oBAAqByC,EAAUvD,MAA/B,OACA,eAAC6C,EAAA,EAAD,CACIvC,MAAM,UACNyC,aAAW,iCACX1C,QAAQ,YACRjG,UAAWd,GAAQsF,cAJvB,UAMI,cAACmB,EAAA,EAAD,CAASC,MAAM,SAASC,UAAU,MAAlC,SACI,cAACC,EAAA,EAAD,CACIC,QAAS,WAAQT,GAAS,KAAMtI,EAAK8H,GAAIqE,EAAUrE,KACnDkB,KAAK,QACLC,QAAQ,YACRC,MAAM,UACN0C,SAA4C,IAAlC5L,EAAK0I,MAAMR,QAAQiE,GALjC,SAOI,cAAC,KAAD,CAAwBhD,MAAO,CAAED,MAAO,QAAUjE,SAAS,cAGnE,cAAC0D,EAAA,EAAD,CAASC,MAAM,WAAWC,UAAU,MAApC,SACI,cAACC,EAAA,EAAD,CACIC,QAAS,WAAQT,GAAS,OAAQtI,EAAK8H,GAAIqE,EAAUrE,KACrDkB,KAAK,QACLC,QAAQ,YACRC,MAAM,UACN0C,SAAU5L,EAAK0I,MAAMR,QAAQiE,KAAenM,EAAK0I,MAAMP,OAAS,EALpE,SAOI,cAAC,KAAD,CAAwBgB,MAAO,CAAED,MAAO,QAAUjE,SAAS,cAGnE,cAAC0D,EAAA,EAAD,CAASC,MAAM,cAAcC,UAAU,MAAvC,SACI,cAACC,EAAA,EAAD,CACIG,QAAQ,YACRC,MAAM,UACNkC,kBAAkB,EAClBpI,UAAWd,GAAQqF,cACnBwB,QAAS,WAnN9E,IAAER,EAAYC,EAAQ5I,EAApB2I,EAmN+FvI,EAAK8H,GAnNxFU,EAmN4F2D,EAAUrE,GAnN9FlI,EAmNkGuM,EAAUvM,KAlNjJf,EAAWkB,KAAK,SAAA0D,GACZ,GAAGA,EAASqE,KAAOS,EAAY,CAC3B,IAAI8C,EAAW5H,EAASiF,MAAM4C,QAAO,SAACtL,GAAD,OAAWA,EAAK8H,KAAOU,KAC5D/E,EAASiF,MAAQ2C,EAErB,OAAO,KAEXjL,EAAcvB,GAEdyB,EAAuBV,IAoMyD,SAOI,cAAC,KAAD,CAAmBuJ,MAAO,CAAED,MAAO,QAAUjE,SAAS,oBAKtE,cAACyF,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CACIC,UAAQ,EACRnD,KAAK,OACLoD,MAAM,aACNI,WAAS,EACTjC,QAAQ,SACR3K,MAAO6N,EAAUvD,MACjBmC,SAAU,SAACd,IAzVlE,SAAE3L,EAAOiK,EAAYC,GAC1C,IAAIR,EAAgBrE,EAAgBsE,QACpCD,EAAcjI,KAAK,SAACC,GAUhB,OATGA,EAAK8H,KAAOS,GAEXvI,EAAK0I,MAAM3I,KAAK,SAAAwD,GAIZ,OAHGA,EAAKuE,KAAOU,IACXjF,EAAKqF,MAAQtK,GAEV,KAGR,KAEXsF,EAAmBoE,GACnBhE,GAAgB,GA0U8EqI,CAAkBpC,EAAEe,OAAO1M,MAAO0B,EAAK8H,GAAIqE,EAAUrE,SAG/E,cAAC4C,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CACIlD,KAAK,OACLoD,MAAM,YACNI,WAAS,EACTjC,QAAQ,SACR3K,MAAO6N,EAAUvM,KACjBgM,UAAU,QA9DbQ,MAqES,IAAtBpM,EAAK0I,MAAMP,QACX,cAACuB,EAAA,EAAD,CAAY4C,cAAY,EAAxB,uBAEJ,6BACA,sBAAMtC,SAAU,SAACC,IAvZ7D,SAACA,EAAGnC,GAChBmC,EAAEC,iBAEF,IAAIlC,EAAgBnJ,EAAWoJ,QAC3BsE,EAAUlC,OAAOC,OAAO,GAAIhH,GAChCiJ,EAAQzE,GAAKyC,MACbgC,EAAQ3D,MAAQvE,EAChBkI,EAAQ3M,KAAO2E,EAEfyD,EAAcjI,KAAK,SAACC,GAKhB,OAJGA,EAAK8H,KAAOA,IACX7K,QAAQC,IAAIqP,GACZvM,EAAK0I,MAAM8B,KAAK+B,IAEb,KAIXjI,EAAgB,IAChBE,GAAe,IAoYkEgI,CAAQvC,EAAGjK,EAAK8H,KAAzC,SACI,eAAC2C,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CACIC,UAAQ,EACRC,MAAM,aACN7B,QAAQ,WACR3K,MAAO+F,EACP0G,SAAU,SAACd,GAAQtC,GAAc,QAASsC,EAAEe,OAAO1M,YAG3D,eAACoM,EAAA,EAAD,CAAKC,GAAI,EAAGxB,MAAO,CAAC9G,SAAU,YAA9B,UACI,cAACuI,EAAA,EAAD,CACIC,UAAQ,EACRC,MAAM,YACN7B,QAAQ,WACR3K,MAAOiG,EACPwG,SAAU,SAACd,GAAQtC,GAAc,OAAQsC,EAAEe,OAAO1M,UAGtD,cAACqK,EAAA,EAAD,CAASC,MAAM,mCAAmCC,UAAU,OAA5D,SACI,cAACoC,EAAA,EAAD,CAAY9B,MAAO,CAAC9G,SAAU,WAAYN,IAAK,EAAGS,MAAO,GAAzD,SACI,cAAC,KAAD,CAAc0G,MAAO,qBAIjC,cAACwB,EAAA,EAAD,CAAK+B,GAAI,EAAT,SACI,cAAC3D,EAAA,EAAD,CACIpB,KAAM,SACNwB,MAAO,UACPD,QAAQ,YAHZ,8CAxLjBkC,MA6MvB,cAACT,EAAA,EAAD,CAAK1H,UAAWd,GAAQ6E,QAAS0F,GAAI,EAArC,SACI,cAAC3D,EAAA,EAAD,CACII,MAAO,UACPD,QAAQ,YACRF,QAjZrB,WACf3I,EAAcuD,GACdK,GAAgB,GAChBS,MA+YoCiI,UAAW,cAAC,KAAD,IACXd,SAAU7H,EALd,uC,+BCrazB4I,OAnOf,WAAwB,IAEZ/L,EAAiB5E,IAAMqH,WAAW5C,GAAlCG,aAFW,EAGU5E,IAAMqH,WAAW1E,GAAtCG,EAHW,EAGXA,KAAMoB,EAHK,EAGLA,WAHK,EAKKlE,IAAM0H,UAAS,GALpB,mBAKZG,EALY,KAKNC,EALM,OAMqB9H,IAAM0H,UAAS,GANpC,mBAMZK,EANY,KAMEC,EANF,OAQahI,IAAM0H,SAAS5E,EAAKE,UARjC,mBAQZA,EARY,KAQF4N,EARE,OASW5Q,IAAM0H,SAAS5E,EAAKG,SAT/B,mBASZA,EATY,KASH4N,EATG,OAUO7Q,IAAM0H,SAAS5E,EAAKC,OAV3B,mBAUZA,EAVY,KAUL+N,EAVK,KAebrI,EAAc,WAClBX,GAAQ,IAgFJ5B,EA7EYC,aAAW,SAACuC,GAAD,MAAY,CAErCU,KAAM,CACF/C,SAAU,WACVE,KAAM,oBACNR,IAAK,GACLa,gBAAiB8B,EAAMW,QAAQC,WAAWC,MAC1CC,QAAS,GACTC,cAAe,EACfC,SAAU,IACVjD,MAAO,IACPkD,UAAW,sBACXC,UAAW,IACXC,UAAW,UAEfC,UAAW,CACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBhB,SAAU,GACVE,aAAc,oBACdM,cAAe,EACfV,aAAc,GACdmB,OAAQ,QAEZC,WAAY,CAMRvD,gBAAiBmK,KAAM,KACvB1G,SAAU,GACVV,UAAW,GACXW,WAAW,GAAD,OAAK5B,EAAM6B,YAAYC,OAAOC,UAA9B,YAA2C/B,EAAM6B,YAAYG,SAASC,QAAtE,OACV,UAAW,CACP/D,gBAAiBmK,KAAM,MAE3B,SAAU,CACNhH,QAAS,OACTa,cAAe,SACf3B,SAAU,KAGlB4B,YAAa,CAOT,sBAAuB,CACnBC,QAAS,IAGjBC,QAAS,CACL1E,SAAU,SACVC,OAAQ,GACR0E,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPE,OAAQ,GACRuE,WAAY,GACZrE,gBAAiB8B,EAAMW,QAAQC,WAAWC,OAE9C2B,mBAAoB,CAChB7E,SAAU,WACV,qBAAsB,CAClByE,QAAS,GAEb,qBAAsB,CAClBA,QAAS,OAML/D,GAkBViK,EAAgB,SAACC,GACnB,IAAMC,EAAaxQ,EAASK,QAAQoQ,IAAjB,UAAwBF,EAAUG,OAAQC,IAAIJ,GACjEC,EAAWI,GAAG,iBACZ,SAAAC,GACEtQ,QAAQC,IAAKqQ,MAEf,SAAA9P,GACER,QAAQC,IAAIO,EAAM+P,YAEpB,WACE5M,GAAa,GACbsM,EAAWK,SAASJ,IAAIM,iBACrBnQ,MAAM,SAAAoQ,GACLZ,EAASY,UAMrB,OACI,sBAAK1K,UAAWd,EAAQ2E,YAAxB,UACI,cAAC8B,EAAA,EAAD,CAASC,MAAM,gBAAgBC,UAAU,SAAzC,SACI,eAACC,EAAA,EAAD,CACIC,QA7HS,WACvBjF,GAAQ,IA6HMkF,KAAK,SACLC,QAAQ,YACRC,MAAM,UACNlG,UAAWd,EAAQiE,WALvB,UAOI,wCACA,cAAC,KAAD,CAAcgD,MAAO,CAAED,MAAO,QAAUjE,SAAS,eAIzD,cAACmE,EAAA,EAAD,CACIvF,KAAMA,EACNwF,kBAAgB,yBAChBC,QAAS7E,EAHb,SAKI,cAAC8E,EAAA,EAAD,UACI,cAAC,KAAD,CAAYC,OAAO,0BAA0BC,OAAQ,mCAArD,SACI,sBAAKzG,UAAWd,EAAQkD,KAAxB,UACI,eAACsE,EAAA,EAAD,CACIC,UAAU,IACV3G,UAAWd,EAAQ4D,UACnBgC,GAAG,yBAHP,+LAKqC,cAAC,KAAD,OAGrC,eAAC8B,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,eAACD,EAAA,EAAD,CAAM5J,MAAI,EAAC+J,GAAI,EAAf,UACI,eAACjB,EAAA,EAAD,CACII,MAAM,UACND,QAAQ,WACRyD,UAAW,cAAC,KAAD,CAAWxD,MAAM,WAHhC,UAKI,uBAAOyE,QAAQ,oBAAf,wBACA,uBACI7F,GAAG,oBACHJ,KAAK,OACLqD,SAnEb,SAAC6C,GACxBZ,EAAcY,EAAM5C,OAAO6C,MAAM,IACjC7J,GAAgB,GAChBpD,GAAa,IAiEuBuI,MAAO,CAAEpD,QAAS,aAG1B,qBACItD,MAAO,IACPqL,IAAKhP,EAAKC,MACVgP,IAAI,YAGZ,eAACnE,EAAA,EAAD,CAAM5J,MAAI,EAAC+J,GAAI,EAAf,UACI,cAACa,EAAA,EAAD,CACIlD,KAAK,OACLoD,MAAM,aACNI,WAAS,EACT5M,MAAOU,EACPiK,QAAQ,SACR8B,SAAU,SAACd,GAAQjG,GAAgB,GAAQ4I,EAAY3C,EAAEe,OAAO1M,UAEpE,cAACsM,EAAA,EAAD,CACIlD,KAAK,OACLoD,MAAM,aACNI,WAAS,EACT5M,MAAOW,EACPgK,QAAQ,SACR8B,SAAU,SAACd,GAAQjG,GAAgB,GAAQ6I,EAAW5C,EAAEe,OAAO1M,gBAQ3E,cAACoM,EAAA,EAAD,CAAK1H,UAAWd,EAAQ6E,QAAS0F,GAAI,EAArC,SACI,cAAC3D,EAAA,EAAD,CACII,MAAO,UACPD,QAAQ,YACRF,QAlHb,WAMf7I,EALgB,CACZnB,MAAOA,EACPC,SAAUA,EACVC,QAASA,IAGb+E,GAAgB,GAChBS,KA2G4BiI,UAAW,cAAC,KAAD,IACXd,SAAU7H,EALd,iC,wCCwEjBiK,OAtRf,WAAyB,IAAD,EAEiBhS,IAAMqH,WAAW1E,GAA9CO,EAFY,EAEZA,SAAUiB,EAFE,EAEFA,eAFE,EAIInE,IAAM0H,UAAS,GAJnB,mBAIbG,EAJa,KAIPC,EAJO,OAKoB9H,IAAM0H,UAAS,GALnC,mBAKbK,EALa,KAKCC,EALD,OAOsBhI,IAAM0H,SAASxE,EAAS+O,gBAP9C,mBAObC,EAPa,KAOEC,EAPF,OAQoBnS,IAAM0H,SAASxE,EAASkP,OAR5C,mBAQbC,EARa,KAQCC,EARD,OAS0BtS,IAAM0H,SAASxE,EAASwG,UATlD,mBASb6I,EATa,KASIC,EATJ,OAW4BxS,IAAM0H,SAASxE,EAASgD,QAAQuM,WAX5D,mBAWbC,EAXa,KAWKC,EAXL,OAYwB3S,IAAM0H,SAASxE,EAASgD,QAAQ0M,UAZxD,mBAYbC,EAZa,KAYGC,EAZH,OAa0B9S,IAAM0H,SAASxE,EAASgD,QAAQG,UAb1D,mBAab0M,EAba,KAaIC,EAbJ,KAkBdvK,EAAc,WAClBX,GAAQ,IA0EJ5B,EAvEYC,aAAW,SAACuC,GAAD,MAAY,CAErCU,KAAM,CACF/C,SAAU,WACVE,KAAM,oBACNR,IAAK,GACLa,gBAAiB8B,EAAMW,QAAQC,WAAWC,MAC1CC,QAAS,GACTC,cAAe,EACfC,SAAU,IACVjD,MAAO,IACPkD,UAAW,sBACXC,UAAW,IACXC,UAAW,UAEfC,UAAW,CACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBhB,SAAU,GACVE,aAAc,oBACdM,cAAe,EACfV,aAAc,GACdmB,OAAQ,QAEZC,WAAY,CACRvD,gBAAiBmK,KAAM,KACvB1G,SAAU,GACVV,UAAW,GACXW,WAAW,GAAD,OAAK5B,EAAM6B,YAAYC,OAAOC,UAA9B,YAA2C/B,EAAM6B,YAAYG,SAASC,QAAtE,OACV,UAAW,CACP/D,gBAAiBmK,KAAM,MAE3B,SAAU,CACNhH,QAAS,OACTa,cAAe,SACf3B,SAAU,KAGlB4B,YAAa,CACT,sBAAuB,CACnBC,QAAS,IAGjBC,QAAS,CACL1E,SAAU,SACVC,OAAQ,GACR0E,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPE,OAAQ,GACRuE,WAAY,GACZrE,gBAAiB8B,EAAMW,QAAQC,WAAWC,OAE9C2B,mBAAoB,CAChB7E,SAAU,WACV,qBAAsB,CAClByE,QAAS,GAEb,qBAAsB,CAClBA,QAAS,IAGjBmI,aAAc,CACVxM,MAAO,OACPyM,YAAa,EACbnK,aAAc,GACdoK,SAAU,MAIFpM,GAoBhB,OACI,sBAAKC,UAAWd,EAAQ2E,YAAxB,UACI,cAAC8B,EAAA,EAAD,CAASC,MAAM,gBAAgBC,UAAU,SAAzC,SACI,eAACC,EAAA,EAAD,CACIC,QAtGS,WACvBjF,GAAQ,IAsGMkF,KAAK,SACLC,QAAQ,YACRC,MAAM,UACNlG,UAAWd,EAAQiE,WALvB,UAOI,yCACA,cAAC,KAAD,CAAcgD,MAAO,CAAED,MAAO,QAAUjE,SAAS,eAIzD,cAACmE,EAAA,EAAD,CACIvF,KAAMA,EACNwF,kBAAgB,yBAChBC,QAAS7E,EAHb,SAKI,cAAC8E,EAAA,EAAD,UACI,cAAC,KAAD,CAAYC,OAAO,0BAA0BC,OAAQ,mCAArD,SACI,sBAAKzG,UAAWd,EAAQkD,KAAxB,UACI,eAACsE,EAAA,EAAD,CACIC,UAAU,IACV3G,UAAWd,EAAQ4D,UACnBgC,GAAG,yBAHP,sHAKwB,cAAC,KAAD,OAGxB,eAAC2C,EAAA,EAAD,CAAW2E,KAAG,EAAd,UACQ,eAACC,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,EAAQ+M,aAHvB,UAKI,cAACK,GAAA,EAAD,CAAYxH,GAAG,0BAAf,6BACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,oBACR1H,GAAG,oBACHxJ,MAAO4P,EACPnD,SAAU,SAACd,GAAOjG,GAAgB,GAAQmK,EAAiBlE,EAAEe,OAAO1M,QAJxE,UAMI,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,wBAMR,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,EAAQ+M,aAHvB,UAKI,cAACK,GAAA,EAAD,CAAYxH,GAAG,oBAAf,mBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,cACR1H,GAAG,cACHxJ,MAAO+P,EACPtD,SAAU,SAACd,GAAOjG,GAAgB,GAAQsK,EAAgBrE,EAAEe,OAAO1M,QAJvE,UAMI,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,2BAKZ,eAACmM,EAAA,EAAD,CAAW2E,KAAG,EAAd,UACI,eAACC,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,EAAQ+M,aAHvB,UAKI,cAACK,GAAA,EAAD,CAAYxH,GAAG,uBAAf,uBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,iBACR1H,GAAG,iBACHxJ,MAAOiQ,EACPxD,SAAU,SAACd,GAAOjG,GAAgB,GAAQwK,EAAmBvE,EAAEe,OAAO1M,QAJ1E,UAMI,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,KAAjB,wBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,KAAjB,wBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,KAAjB,uBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,KAAjB,uBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,KAAjB,2BAIR,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,EAAQ+M,aAHvB,UAKI,cAACK,GAAA,EAAD,CAAYxH,GAAG,uBAAf,sBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,iBACR1H,GAAG,iBACHxJ,MAAOyQ,EACPhE,SAAU,SAACd,GAAOjG,GAAgB,GAAQgL,EAAmB/E,EAAEe,OAAO1M,QAJ1E,UAMI,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,4BAMZ,eAACmM,EAAA,EAAD,CAAW2E,KAAG,EAAd,UACK,cAACxE,EAAA,EAAD,CACG5H,UAAWd,EAAQ+M,aACnBvH,KAAK,SACLoD,MAAM,qBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOuQ,EACP9D,SAAW,SAACd,GAAQjG,GAAgB,GAAQ8K,EAAkB7E,EAAEe,OAAO1M,UAE3E,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,EAAQ+M,aAHvB,UAKI,cAACK,GAAA,EAAD,CAAYxH,GAAG,qBAAf,oBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,eACR1H,GAAG,eACHxJ,MAAOoQ,EACP3D,SAAU,SAACd,GAAOjG,GAAgB,GAAQ2K,EAAoB1E,EAAEe,OAAO1M,QAJ3E,UAMI,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,kBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAK,mJAAf,mBAEA,cAACmR,GAAA,EAAD,CAAUnR,MAAK,qJAAf,oBAEA,cAACmR,GAAA,EAAD,CAAUnR,MAAK,wJAAf,4BAShB,cAACoM,EAAA,EAAD,CAAK1H,UAAWd,EAAQ6E,QAAS0F,GAAI,EAArC,SACI,cAAC3D,EAAA,EAAD,CACII,MAAO,UACPD,QAAQ,YACRF,QAxKb,WAYf5I,EAXoB,CAChB8N,eAAgBC,EAChBE,MAAOC,EACP3I,SAAU6I,EACVrM,QAAS,CACLuM,UAAWC,EACXE,SAAUC,EACVxM,SAAU0M,KAKlB/K,GAAgB,GAChBS,KA2J4BiI,UAAW,cAAC,KAAD,IACXd,SAAU7H,EALd,iC,oGC6DjB2L,OAnUf,WAA0B,IAsBlBC,EAtBiB,EAEgB3T,IAAMqH,WAAW1E,GAA/CE,EAFc,EAEdA,WAAYC,EAFE,EAEFA,KAAMI,EAFJ,EAEIA,SAFJ,EAIkBwE,mBAAS,GAJ3B,mBAIfkM,EAJe,KAIDC,EAJC,KAMrBjO,qBAAU,WACN,IAAMkO,EAAoB,WACtB,IAAMC,EAAcC,SAASC,cAAc,WAAWC,aAItD,OAFAL,EAAgBE,GAETlO,OAAOsO,WAAaR,EACzBvR,GAAS,SAACgS,GAAD,mBAAC,eAAoBA,GAArB,IAAgCC,YAAY,OACrDjS,GAAS,SAACgS,GAAD,mBAAC,eAAoBA,GAArB,IAAgCC,YAAY,QAE3DP,IACAjO,OAAOyO,oBAAoB,SAAUR,GACrCjO,OAAO0O,iBAAiB,UAAU,kBAAMT,SAEzC,IAGH,IAvBqB,EAuBH3N,aAAW,SAACuC,GAE1B,OADAiL,EAAcjL,EAAM8L,YAAYC,OAAOC,GAC/B,CACJC,OAAO,cACH5K,QAAS,OACTE,eAAgB,SAEhB5D,SAAUnD,EAASgD,QAAQG,SAC3B4E,WAAY/H,EAASgD,QAAQ0M,SAC7BnJ,cAAevG,EAASgD,QAAQ0M,SAChChM,gBAAiB8B,EAAMW,QAAQuL,QAAQC,KACvCpC,UAAWvP,EAASgD,QAAQuM,UAE5B1M,IAAK,EACLQ,KAAM,EACNC,MAAO,EACPF,OAAQ,KAbN,6BAeqBqN,EAfrB,OAewC,CACtC1I,WAAwC,GAA5B/H,EAASgD,QAAQ0M,SAC7BnJ,cAA2C,GAA5BvG,EAASgD,QAAQ0M,WAGxCkC,aAAc,CACVlL,UAAWgK,GAEfmB,SAAS,cACL7L,WAAY,IACZD,SAAU,GACViE,MAAO,UACP8H,UAAW,OACXC,WAAY,UALR,6BAMmBtB,EANnB,OAMsC,CACtC1K,SAAU,GACViM,WAAY,MAGpBC,QAAS,CACLjM,WAAY,IACZD,SAAU,GACVmM,OAAQ,EACRlI,MAAO,WACP8H,UAAW,OACXC,WAAY,UAGhBI,UAAU,cACN5O,MAAO,GACPC,OAAQ,GACRwM,YAAa,EACb,QAAS,CACLzM,MAAO,OACPC,OAAQ,SANP,6BAQkBiN,EARlB,OAQqC,CACtClN,MAAO,GACPC,OAAQ,KAGhB4O,WAAY,CACRjP,SAAU,WACV6C,WAAY,IACZ8D,KAAM,OACNuI,WAAY,OACZ,YAAa,CACT9L,cAAe,EACfN,aAAc,wBAGtBqM,QAAS,CACLzL,QAAS,OACTE,eAAgB,gBAChBT,QAAS,GAEbiM,gBAAiB,CACbhP,MAAO,OACPiD,SAAU,IACVW,SAAU,KAEdqL,WAAY,CACR3L,QAAS,OACTC,WAAY,SACZkD,MAAO,UACPyI,eAAgB,OAChBjP,OAAQ,OACRkD,UAAW,GACXnD,MAAO,OACP+C,QAAS,WACT,WAAa,CACT5C,gBAAiB8B,EAAMW,QAAQuL,QAAQC,KACvC3H,MAAO,SAGf0I,eAAgB,CACZ/M,YAAa,EACbD,UAAW,gBACXG,aAAc,eACda,UAAW,kBACXN,WAAa,OACbmJ,UAAW,WAK4G1L,GAA3HyO,EA/Ha,EA+HbA,QAASb,EA/HI,EA+HJA,OAAQU,EA/HJ,EA+HIA,UAAWN,EA/Hf,EA+HeA,SAAWI,EA/H1B,EA+H0BA,QAASG,EA/HnC,EA+HmCA,WAAYG,EA/H/C,EA+H+CA,gBAAiBC,EA/HhE,EA+HgEA,WAAaE,EA/H7E,EA+H6EA,eAAiBd,EA/H9F,EA+H8FA,aA/H9F,EAiIKpN,mBAAS,CAC/B2M,YAAY,EACZwB,YAAY,IAnIK,mBAiId7T,EAjIc,KAiIPI,EAjIO,KAsIbiS,EAA2BrS,EAA3BqS,WAAYwB,EAAe7T,EAAf6T,WAEdC,EACF,cAAC,IAAD,CAASC,GAAI,IAAb,SACI,eAACrH,EAAA,EAAD,CAAK3E,QAAQ,OAAOC,WAAW,SAA/B,UACI,qBAAKhD,UAAWqO,EAAWvD,IAAKhP,EAAKC,MAAOgP,IAAK,SACjD,eAACrD,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,SAAlC,UACI,cAAC8C,EAAA,EAAD,CAAYC,UAAU,KAAK3G,UAAW+N,EAAtC,SACKjS,EAAKE,WAEV,cAAC0K,EAAA,EAAD,CAAaC,UAAU,IAAI3G,UAAWmO,EAAtC,SACKrS,EAAKG,kBA8J1B,OACI,eAAC,IAAM+S,SAAP,WAEsC,UAA9B9S,EAASgD,QAAQG,UACjB,qBAAKW,UAAW8N,IAEpB,cAACmB,GAAA,EAAD,CAAQjP,UAAW2N,EAAQ7I,GAAG,SAA9B,SACI,cAACoK,GAAA,EAAD,CACIjE,eAAgB/O,EAAS+O,eACzBG,MAAOlP,EAASkP,MAChB1I,SAAUxG,EAASwG,SACnB1C,UAAU,iBAJd,SAMKqN,EAhHK,WAClB,IACM8B,EAAoB,kBAAM/T,GAAS,SAACgS,GAAD,mBAAC,eAAoBA,GAArB,IAAgCyB,YAAY,QAErF,OACI,eAACO,GAAA,EAAD,CAASnE,gBAAgB,EAAM9E,MAAO,CAAClD,eAAgB,iBAAvD,UACI,cAACoM,GAAA,EAAD,2BACQ,CACJC,OAAQ,QACRzO,KAAMgO,EACNvI,QAAS6I,IAJb,aAOI,sBAAKnP,UAAWyO,EAAhB,UACI,cAAC/G,EAAA,EAAD,CAAK6H,GAAI,EAAGC,GAAI,EAAhB,SACI,cAAC1J,EAAA,EAAD,CACIG,QAAQ,WACRC,MAAM,UACNH,QAASoJ,EAHb,SAKI,cAAC,KAAD,QAKJtT,EAAWkB,KAAK,SAACC,EAAMmL,GACnB,OAAGnL,EAAK0I,MAAMP,OAAS,EAEf,eAAC0D,EAAA,EAAD,CAAW3J,QAAS,CAACE,KAAMwP,GAA3B,UACI,cAAC9F,GAAA,EAAD,CACI5J,QAAS,CAACE,KAAMwP,EAAgBa,QAASb,GACzC7F,WAAa,cAAC,KAAD,IAFjB,SAII,cAAC0D,GAAA,EAAD,CAAUtG,MAAO,CAAC3D,QAAS,EAAG/C,MAAO,QAArC,SACI,cAAC,IAAD,CACIiQ,OAAK,EACLX,GAAE,WAAM/R,EAAKJ,MACboD,UAAW0O,EACX3I,QAASoJ,EAJb,SAMKnS,EAAK4I,YAMd5I,EAAK0I,MAAM3I,KAAK,SAAAwD,GAAI,OAChB,cAACkM,GAAA,EAAD,CAAUtG,MAAO,CAAC3D,QAAS,cAA3B,SACI,cAAC,IAAD,CACIkN,OAAK,EACLX,GAAE,WAAM/R,EAAKJ,KAAX,YAAmB2D,EAAK3D,MAC1BoD,UAAW0O,EACX3I,QAASoJ,EAJb,SAMK5O,EAAKqF,SAPiCuC,QAnBVA,GAqCjD,cAACsE,GAAA,EAAD,CAAuBtG,MAAO,CAAC3D,QAAS,EAAG/C,MAAO,OAAQkQ,UAAW,iCAArE,SACI,cAAC,IAAD,CACID,OAAK,EACLX,GAAE,WAAM/R,EAAKJ,MACboD,UAAW0O,EACX3I,QAASoJ,EAJb,SAMKnS,EAAK4I,SAPCuC,YAkBvC,8BAAM2G,IACN,cAAC7G,EAAA,EAAD,2BACQ,CACJ2H,KAAM,QACN1J,MAAO,UACP,aAAc,OACd,gBAAiB,OACjBH,QAzFa,kBAAM3K,GAAS,SAACgS,GAAD,mBAAC,eAAoBA,GAArB,IAAgCyB,YAAY,UAmF5E,aASI,cAAC,KAAD,UAmBcgB,GAjKxB,eAACT,GAAA,EAAD,CAASnE,gBAAgB,EAAMjL,UAAWwO,EAA1C,UACGM,EAED,cAACpH,EAAA,EAAD,CAAK3E,QAAQ,OAAO+M,OAAO,EAA3B,SACI,6BAEIjU,EAAWkB,KAAK,SAACC,EAAMmL,GACvB,OACI,qBAAgBnI,UAAWsO,EAA3B,UAEsB,MAAdtR,EAAKJ,MACL,cAAC,IAAD,CACI8S,OAAK,EACLX,GAAE,UAAK/R,EAAKJ,MAFhB,SAIKI,EAAK4I,QAKI,MAAd5I,EAAKJ,MACL,cAAC,IAAD,CACI8S,OAAK,EACLX,GAAE,WAAM/R,EAAKJ,MAFjB,SAIKI,EAAK4I,QAGd,6BAEI5I,EAAK0I,MAAM3I,KAAK,SAACgT,EAAWC,GAAZ,OAChB,6BACI,cAAC,IAAD,CAASN,OAAK,EAACX,GAAE,WAAM/R,EAAKJ,KAAX,YAAmBmT,EAAUnT,MAA9C,SACKmT,EAAUnK,SAFVoK,UAvBR7H,qB,8DChFlB8H,OAhGf,WAAwB,IAEZ/U,EAASlC,IAAMqH,WAAWtH,GAA1BmC,KAFW,EAGelC,IAAMqH,WAAWpC,GAA5CE,EAHY,EAGZA,UAAWI,EAHC,EAGDA,aAHC,EAMSvF,IAAM0H,UAAS,GANxB,mBAMZwP,EANY,KAMJC,EANI,KAsCbjR,EA9BYC,aAAW,SAACuC,GAAD,MAAY,CACrC0O,eAAgB,CACZ/Q,SAAU,WACVN,IAAK,EACLQ,KAAM,EACND,OAAQ,KACRyD,QAAQ,OACRC,WAAY,SACZvD,MAAO,GACPC,OAAQ,OACRkD,UAAW,GACXhD,gBAAiB,sBACjBsD,OAAQ,WAEZmN,kBAAmB,CACfhR,SAAU,WACVC,OAAQ,KACRyD,QAAQ,OACRE,eAAe,gBACfD,WAAW,SACXR,QAAS,GACT5C,gBAAiB8B,EAAMW,QAAQC,WAAWgO,SAE9CC,QAAS,CACLlR,SAAS,WACTuD,UAAWsN,EAAS,GAAK,EACzBrO,YAAa,OAIL9B,GAQhB,OAAG7E,EAEK,eAACwM,EAAA,EAAD,CAAK1H,UAAWd,EAAQqR,QAAxB,UACI,cAAC5K,EAAA,EAAD,CAASC,MAAM,kBAAkBC,UAAU,QAA3C,SACI,cAAC6B,EAAA,EAAD,CAAK3B,QAAS,WAAQoK,GAAWD,IAAWlQ,UAAWd,EAAQkR,eAA/D,SAEQF,EAAS,cAAC,KAAD,CAAmBjO,SAAU,UAAc,cAAC,KAAD,CAAiBA,SAAU,cAIzFiO,GACF,eAACxI,EAAA,EAAD,CAAK1H,UAAWd,EAAQmR,kBAAxB,UACI,eAAC3J,EAAA,EAAD,CAAYC,UAAU,OAAtB,oBACazL,EAAKsV,aAAa,GAAG9V,SAElC,wEAKA,eAACgN,EAAA,EAAD,WACI,cAAC+I,GAAA,EAAD,CACIC,QACI,cAACC,GAAA,EAAD,CACIzK,MAAM,UACN0K,QAAuB,SAAdzS,EACT4J,SAAU,WAAQxJ,OAG1BuJ,MAAM,cAEV,cAAChC,EAAA,EAAD,CACIE,KAAK,QACLE,MAAM,YACND,QAAS,YACTF,QAvCF,WAClBrM,EAASmX,UAkCO,+BAcT,MCTAC,OAhFf,WAA4B,IAAD,EAEC9X,IAAM0H,UAAS,GAFhB,mBAEhBG,EAFgB,KAEVC,EAFU,KA4CjB5B,EAxCYC,aAAW,SAACuC,GAAD,MAAY,CACrCqP,gBAAiB,CACb1R,SAAU,WACV,uBAAwB,CACpByE,QAAS,IAGjBkN,kBAAmB,CACf3R,SAAU,WACVC,OAAQ,KACRC,KAAM,IACNR,KAAM,GAEVkS,YAAa,CACTnN,QAAS,IACTzE,SAAU,WACVC,OAAQ,KACRC,KAAM,GACNR,IAAK,EACLU,MAAO,GACPC,OAAQ,GACRE,gBAAiB8B,EAAMW,QAAQ5H,MAAMyW,KACrChL,MAAO,OACP,SAAU,CACNnD,QAAS,OACTa,cAAe,SACf3B,SAAU,IAEd,UAAW,CACPrC,gBAAiB8B,EAAMW,QAAQ8O,UAAUD,OAGjDE,gBAAiB,CACb7C,WAAY7M,EAAMoF,QAAQ,GAC1BlF,UAAWF,EAAMoF,QAAQ,GACzB/E,aAAcL,EAAMoF,QAAQ,GAC5B/D,QAAQ,mBAIAhD,GAChB,OACI,eAAC,IAAMiP,SAAP,WAEI,cAAC,GAAD,IAEA,sBAAKhP,UAAWd,EAAQ6R,gBAAxB,UACI,eAACjL,EAAA,EAAD,CACI9F,UAAWd,EAAQ+R,YACnBlL,QAAS,WAAQjF,GAASD,IAF9B,qBAKI,cAAC,KAAD,CAAcsF,MAAO,CAAED,MAAO,QAAUjE,SAAS,aAGjDpB,GACA,sBAAKb,UAAWd,EAAQ8R,kBAAxB,UACI,cAACtJ,EAAA,EAAD,CAAK1H,UAAWd,EAAQkS,gBAAxB,SACI,cAAC,GAAD,MAEJ,cAAC1J,EAAA,EAAD,CAAK1H,UAAWd,EAAQkS,gBAAxB,SACI,cAAC,GAAD,MAEJ,cAAC1J,EAAA,EAAD,CAAK1H,UAAWd,EAAQkS,gBAAxB,SACI,cAAC,GAAD,YAOhB,cAAC,GAAD,QC/DGC,OAnBf,WAA2B,IAEhB9V,EAAWvC,IAAMqH,WAAWtH,GAA5BwC,QAEP,OACI,eAAC,IAAMyT,SAAP,WAEQzT,GACA,cAAC,GAAD,KAICA,GACD,cAAC,GAAD,QCTD+V,GANA,WACX,OACI,cAAC,GAAD,KCuCOC,OA1Cf,WAEI,IAiBMrS,EAjBYC,aAAY,SAACuC,GAAD,MAAY,CACtC8P,WAAY,CACRtL,MAAOxE,EAAMW,QAAQuL,QAAQC,KAC7B,QAAU,CACN4D,KAAM/P,EAAMW,QAAQuL,QAAQC,OAGpC6D,OAAQ,CACJ9R,gBAAiB8B,EAAMW,QAAQuL,QAAQsD,KACvC1O,QAAS,UAEbmP,cAAe,CACXzL,MAAO,OACPnD,QAAS,QACThB,aAAe,OAGPhC,GAEhB,OACI,cAAC2H,EAAA,EAAD,CAAK1H,UAAWd,EAAQwS,OAAxB,SACI,eAACxC,GAAA,EAAD,CAAWxM,SAAU,KAArB,UACI,cAACgE,EAAA,EAAD,CACIT,QAAQ,KACRjG,UAAWd,EAAQyS,cAFvB,oBAQA,cAAC,IAAD,CAAS5C,GAAG,SAAZ,SACI,cAACjJ,EAAA,EAAD,CAAQI,MAAM,YAAYD,QAAQ,YAAlC,2B,yCC1BdlG,GAAYZ,aAAW,SAACuC,GAAD,MAAY,CACvCa,MAAO,CACLX,UAAWF,EAAMoF,QAAQ,GACzB/D,QAAS,OACTa,cAAe,SACfZ,WAAY,UAEd4O,OAAQ,CACNxD,OAAQ1M,EAAMoF,QAAQ,GACtBlH,gBAAiB8B,EAAMW,QAAQ8O,UAAUtD,MAE3CgE,KAAM,CACJpS,MAAO,OACPmC,UAAWF,EAAMoF,QAAQ,IAE3BgL,OAAQ,CACN1D,OAAQ1M,EAAMoF,QAAQ,EAAG,EAAG,QA2FjBiL,OAvFf,WAAkB,IAENnU,EAAiB5E,IAAMqH,WAAW5C,GAAlCG,aAEFsB,EAAUa,KAJH,EAMW/G,IAAM0H,SAAS,IAN1B,mBAMN0J,EANM,KAMA4H,EANA,OAOmBhZ,IAAM0H,SAAS,IAPlC,mBAON/F,EAPM,KAOIsX,EAPJ,OASajZ,IAAM0H,SAAS,MAT5B,mBASNjG,EATM,KASCyX,EATD,OAUuBlZ,IAAM0H,UAAS,GAVtC,mBAUNyR,EAVM,KAUMC,EAVN,KA0Bb,OAdApZ,IAAM4F,WAAW,WACbhB,GAAa,KACd,IAaC,eAACsR,GAAA,EAAD,CAAWvI,UAAU,OAAOjE,SAAS,KAArC,UAGMyP,EAAc,cAAC,IAAD,CAAU3K,MAAI,EAACuH,GAAG,MAAS,KAE3C,sBAAK/O,UAAWd,EAAQqD,MAAxB,UACI,cAAC8P,GAAA,EAAD,CAAQrS,UAAWd,EAAQ0S,OAA3B,SACI,cAAC,KAAD,MAEJ,cAAClL,EAAA,EAAD,CAAYC,UAAU,KAAKV,QAAQ,KAAnC,sCAGA,uBAAMjG,UAAWd,EAAQ2S,KAAM7K,SAvBrB,SAACC,GACnBA,EAAEC,iBACFxN,EAAS4Y,eAAelI,EAAMzP,GAAUL,MAAM,SAACiY,GAC3CH,GAAc,MACf5X,OAAM,SAASgY,GACdN,EAASM,OAkBL,UACI,cAAC5K,EAAA,EAAD,CACI3B,QAAQ,WACRmI,OAAO,SACPvG,UAAQ,EACRK,WAAS,EACTpD,GAAG,OACHgD,MAAM,OACNsC,KAAK,OACLqI,aAAa,OACbC,WAAS,EACTpX,MAAO8O,EACPrC,SAAW,SAACd,GAAK+K,EAAQ/K,EAAEe,OAAO1M,UAEtC,cAACsM,EAAA,EAAD,CACI3B,QAAQ,WACRmI,OAAO,SACPvG,UAAQ,EACRK,WAAS,EACTkC,KAAK,WACLtC,MAAM,WACNpD,KAAK,WACLI,GAAG,WACHxJ,MAAOX,EACPoN,SAAU,SAACd,GAAKgL,EAAYhL,EAAEe,OAAO1M,UAGrCb,GACA,cAACkY,GAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBnY,EAAM+P,UAGnC,cAAC1E,EAAA,EAAD,CACIpB,KAAK,SACLwD,WAAS,EACTjC,QAAQ,YACRC,MAAM,UACNlG,UAAWd,EAAQ4S,OALvB,sDCrELe,OAzBf,WAAkB,IAENjV,EAAiB5E,IAAMqH,WAAW5C,GAAlCG,aAMR,OAJA5E,IAAM4F,WAAW,WACbhB,GAAa,KACd,IAGC,eAAC8J,EAAA,EAAD,CACI3E,QAAQ,OACRa,cAAc,SACdZ,WAAW,SACXyG,GAAI,EAJR,UAMI,cAAC/C,EAAA,EAAD,CAAYT,QAAQ,KAAKqD,cAAY,EAArC,uCAGA,cAAC,IAAD,CAASyF,GAAG,IAAZ,sB,4BC8BGrC,OAjDf,SAAuBlR,GAEnB,IAYM0D,EAZYC,aAAW,SAACuC,GAAD,YAAY,CACrCoR,YAAatX,EAAMwE,UACnB+S,mBAAiB,gDACkB,CAC3B9Q,SAAmC,GAAzBzG,EAAMwE,UAAUiC,WAFjB,4CAIUP,EAAM8L,YAAYC,OAAOuF,GAJnC,OAI6C,CACtD/Q,SAAmC,GAAzBzG,EAAMwE,UAAUiC,WALjB,MAULlC,GAGVkT,EAAgBzX,EAAM0X,iBAAmBhU,EAAQ6T,kBAAoB,GAQ3E,OACI,cAAC,IAAM/D,SAAP,UACK,cAACtH,EAAA,EAAD,CACGf,UAAWnL,EAAMgB,KAAKyJ,QACtBjG,UAAS,UAAKd,EAAQ4T,YAAb,YAA4BG,GAFxC,SARU,WACf,GAAGzX,EAAM2X,aACL,OAAQ,sBAAMC,wBAAyB,CAACC,OAAQ7X,EAAM2X,gBAUhDG,Q,oBCkiBHxC,GAviBS,SAACtV,GAErBvB,QAAQC,IAAI,uBAFmB,MAIDlB,IAAM0H,SAAS,CACzC3B,IAAMvD,EAAMgB,KAAK0C,QAAQ+E,WACzB1E,KAAO/D,EAAMgB,KAAK0C,QAAQ2C,YAC1BmC,OAAQxI,EAAMgB,KAAK0C,QAAQuD,cAC3BjD,MAAOhE,EAAMgB,KAAK0C,QAAQkF,eARC,mBAIxB5B,EAJwB,KAIf+Q,EAJe,OAUHva,IAAM0H,SAAS,CACvC3B,IAAMvD,EAAMgB,KAAK0C,QAAQ0C,UACzBrC,KAAO/D,EAAMgB,KAAK0C,QAAQqP,WAC1BvK,OAAQxI,EAAMgB,KAAK0C,QAAQ6C,aAC3BvC,MAAOhE,EAAMgB,KAAK0C,QAAQgN,cAdC,mBAUxBkC,EAVwB,KAUhBoF,EAVgB,OAiBLxa,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQgH,OAAS,WAjBtC,mBAiBxBA,EAjBwB,KAiBjBuN,EAjBiB,OAkBeza,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQU,iBAAoB,eAlBrE,mBAkBxBA,EAlBwB,KAkBP8T,EAlBO,OAmBG1a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ8O,WAAc,QAnBnD,mBAmBxBA,EAnBwB,KAmBb2F,EAnBa,OAoBD3a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ6D,SAAY,SApB7C,mBAoBxBA,EApBwB,aAqBC/J,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ+C,UAAa,KArBhD,mBAqBxBA,EArBwB,KAqBd2R,EArBc,OAsBK5a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQgD,YAAe,KAtBtD,mBAsBxBA,EAtBwB,KAsBZ2R,EAtBY,OAuBK7a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQgP,YAAe,MAvBtD,mBAuBxBA,EAvBwB,KAuBZ4F,EAvBY,OAyBiB9a,IAAM0H,SAASlF,EAAMgB,KAAKuX,eAAgB,GAzB3D,mBAyBxBb,EAzBwB,KAyBNc,EAzBM,QA2BKhb,IAAM0H,SAASlF,EAAMgB,KAAKyX,MA3B/B,qBA2BxBC,GA3BwB,MA2BZC,GA3BY,SA4BSnb,IAAM0H,UAAS,GA5BxB,qBA4BxBK,GA5BwB,MA4BVC,GA5BU,SA+BPhI,IAAM0H,UAAS,GA/BR,qBA+BxBG,GA/BwB,MA+BlBC,GA/BkB,MAkCzBf,GAAYZ,aAAW,SAACuC,GAAD,MAAY,CACrC0S,YAAa,CACTjI,SAAU,EACViC,OAAQ,EACR3O,MAAO,QAEX4U,WAAY,CACRC,OAAO,aAAD,OAAe5S,EAAMW,QAAQkS,SACnC/R,QAAS,EACT4R,YAAa,CACT1R,SAAU,SAIlBqB,QAAS,CACL1E,SAAU,SACVC,OAAQoC,EAAMpC,OAAOkV,QACrBxQ,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPE,OAAQ,GACRE,gBAAiB8B,EAAMW,QAAQC,WAAWC,MAE1C,WAAY,CACRX,UAAW,GACXG,aAAc,GACdwM,WAAY,EACZzK,QAAS,EACTjC,YAAa,GACbuC,aAAc,KAGtBqQ,kBAAmB,CACfpV,SAAU,WACVqV,QAAS,kBACTpR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASC,QAAhC,cAA6CjC,EAAM6B,YAAYC,OAAOmR,OAAtE,YACV,UAAY,CACRlJ,UAAW/J,EAAMkT,QAAQ,IACzB1R,OAAQ,UACR2R,aAAa,GAAD,OAAKnT,EAAMW,QAAQ5H,MAAMqa,OACrC,WAAa,CACThR,QAAS,GAEb,YAAc,CACVA,QAAS,GAEb,YAAc,CACVA,QAAS,GAEb,YAAc,CACVA,QAAS,GAEb,YAAc,CACVA,QAAS,GAEb,oBAAqB,CACjBA,QAAS,KAIrBiR,OAAQ,CACJ1V,SAAU,WACVN,IAAI,IAAD,OAAMqP,EAAOrP,IAAb,MACHQ,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK0O,EAAOrP,IAAZ,MACN+E,QAAS,EACTR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASsR,SAAhC,cAA8CtT,EAAM6B,YAAYC,OAAOmR,OAAvE,aAEdM,OAAQ,CACJ5V,SAAU,WACV2E,OAAO,IAAD,OAAMoK,EAAOpK,OAAb,MACNzE,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK0O,EAAOpK,OAAZ,MACNF,QAAS,EACTR,WAAW,SAAD,OAAW5B,EAAM6B,YAAYC,OAAOmR,OAApC,aAEdO,OAAQ,CACJ7V,SAAU,WACVN,IAAK,EACLQ,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK8C,EAAQzD,IAAb,MACN+E,QAAS,EACTR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASsR,SAAhC,cAA8CtT,EAAM6B,YAAYC,OAAOmR,OAAvE,aAEdQ,OAAQ,CACJ9V,SAAU,WACV2E,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK8C,EAAQwB,OAAb,MACNF,QAAS,EACTR,WAAW,SAAD,OAAW5B,EAAM6B,YAAYC,OAAOmR,OAApC,aAEdS,SAAU,CACN/V,SAAU,WACViE,WAAY,oCAGhB+R,eAAiB,CACbvR,QAAS,EACTzE,SAAU,WACVC,OAAQ,GACRP,IAAK,EACLS,MAAO,EACPI,gBAAiB8B,EAAMW,QAAQ8O,UAAUD,KACzC5N,WAAY,mCACZ,UAAY,CACR1D,gBAAiB8B,EAAMW,QAAQ5H,MAAMqa,QAI7C1S,KAAM,CACF/C,SAAU,WACVE,KAAM,oBACNR,IAAK,GACLa,gBAAiB8B,EAAMW,QAAQC,WAAWC,MAC1CC,QAAS,GACTC,cAAe,EACfC,SAAU,IACVjD,MAAO,IACPkD,UAAW,sBACXC,UAAW,IACXC,UAAW,UAEfC,UAAW,CACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBhB,SAAU,GACVE,aAAc,oBACdM,cAAe,EACfV,aAAc,GACdmB,OAAQ,QAEZoS,UAAW,OAKTxC,GAAc,CAChB/P,QAASA,EACTkB,WAAYzB,EAAQzD,IACpB0D,cAAeD,EAAQwB,OACvBnC,YAAaW,EAAQjD,KACrB6E,aAAc5B,EAAQhD,MACtBoC,UAAWwM,EAAOrP,IAClBgD,aAAcqM,EAAOpK,OACrBuK,WAAYH,EAAO7O,KACnB2M,YAAakC,EAAO5O,MACpB0G,MAAOA,EACPtG,gBAAiBA,EACjBoO,UAAWA,EACX/L,SAAUA,EACVC,WAAYA,EACZgM,WAAYA,GAEVhP,GAAUa,KAGVwV,GAAO,2BAAO/Z,EAAMgB,MAAS,CAC/B0C,QAAS4T,KAGP0C,GAAgB,SAACvO,EAAGpC,GACtB,IAAI4Q,EAAapO,OAAOC,OAAO,GAAI9E,GACnCiT,EAAW5Q,GAAa6Q,OAAOzO,EAAEe,OAAO1M,OACxCiY,EAAWkC,GAEXzU,IAAgB,IAEd2U,GAAc,SAAC1O,EAAGpC,GACpB,IAAI+Q,EAAYvO,OAAOC,OAAO,GAAI8G,GAClCwH,EAAU/Q,GAAa6Q,OAAOzO,EAAEe,OAAO1M,OACvCkY,EAAUoC,GAEV5U,IAAgB,IAoBdS,GAAc,WAChBX,IAAQ,IAIZ,OACQ,eAAC8F,EAAA,EAAD,CAAMC,WAAS,EAACV,MAAO,CAAC9G,SAAU,YAAlC,UACI,cAAC+G,EAAA,EAAD,CACIvF,KAAMA,GAENwF,kBAAgB,yBAChBC,QAAS7E,GAJb,SAMI,cAAC8E,EAAA,EAAD,UACI,cAAC,KAAD,CAAYC,OAAO,0BAA0BC,OAAQ,mCAArD,SACI,sBAAKzG,UAAWd,GAAQkD,KAAxB,UACI,eAACsE,EAAA,EAAD,CACIC,UAAU,IACV3G,UAAWd,GAAQ4D,UACnBgC,GAAG,yBAHP,8KAKmC,cAAC,KAAD,OAInC,cAAC4C,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CACIlD,KAAK,OACLoD,MAAM,aACNI,WAAS,EACT5M,MAAO4Y,GACPnM,SAAU,SAACd,GAAQjG,IAAgB,GAAQmT,GAAclN,EAAEe,OAAO1M,OAAQ2L,EAAEe,OAAO6N,aAK3F,eAACnO,EAAA,EAAD,CAAKC,GAAI,EAAT,UACQ,cAAC8I,GAAA,EAAD,CACIC,QACI,cAACC,GAAA,EAAD,CACIC,QAASsC,EACTnL,SAAU,WAAS/G,IAAgB,GAAQgT,GAAqBd,IAChE9I,KAAK,WACLlE,MAAM,YAGd4B,MAAM,6BAEV,cAACnC,EAAA,EAAD,CAASC,MAAM,0WAAf,SACI,cAACqC,EAAA,EAAD,UACI,cAAC,KAAD,WAMhB,eAACP,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,aACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAOrP,IACdgJ,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,UAExC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAOpK,OACd+D,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,gBAG5C,eAACS,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,cACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAO7O,KACdwI,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,WAExC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAO5O,MACduI,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,kBAMhD,eAACS,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,cACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQzD,IACfgJ,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,UAEzC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,iBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQwB,OACf+D,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,gBAG7C,eAACS,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQjD,KACfwI,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,WAEzC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQhD,MACfuI,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,kBAOjD,eAACS,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAYtR,QAAQ,OAAOa,cAAc,MAAjE,UACI,eAAC8D,EAAA,EAAD,CACI1H,UAAWd,GAAQkV,YADvB,UAGI,cAAC1N,EAAA,EAAD,CAAaC,UAAW,KAAM2C,cAAY,EAA1C,wBAGA,cAAC,KAAD,CACI7J,MAAO,OACPqW,SAAU,OACV5P,MAAOtG,EACPmW,OAAQ,CAAE,UAAW,UAAW,qBAChCC,iBAAkB,SAACC,GACfjV,IAAgB,GAChB0S,EAAmBuC,EAASC,WAKxC,eAACxO,EAAA,EAAD,CACI1H,UAAWd,GAAQkV,YADvB,UAGI,cAAC1N,EAAA,EAAD,CAAaC,UAAW,KAAM2C,cAAY,EAA1C,mBAGA,cAAC,KAAD,CACI7J,MAAO,OACPqW,SAAU,OACVC,OAAQ,CAAE,UAAW,UAAW,qBAChC7P,MAAOA,EACP8P,iBAAkB,SAACC,GACfjV,IAAgB,GAChByS,EAASwC,EAASC,cAQlC,eAACxO,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,YACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO2G,EACP8F,SAAW,SAACd,GAAOjG,IAAgB,GAAQ4S,EAAY8B,OAAOzO,EAAEe,OAAO1M,WAE3E,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YAHvB,UAKI,cAAC9H,GAAA,EAAD,CAAYxH,GAAG,sBAAf,yBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,sBACR1H,GAAG,gBACHxJ,MAAO4G,EACP6F,SAAU,SAACd,GAAOjG,IAAgB,GAAQ6S,EAAc6B,OAAOzO,EAAEe,OAAO1M,SAJ5E,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,IAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,IAAjB,qBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,IAAjB,2BAMR,eAACoM,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACA,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,mBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO4S,EACPnG,SAAW,SAACd,GAAOjG,IAAgB,GAAQ8S,EAAc4B,OAAOzO,EAAEe,OAAO1M,WAE7E,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YAHvB,UAKI,cAAC9H,GAAA,EAAD,CAAYxH,GAAG,qBAAf,wBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,qBACR1H,GAAG,eACHxJ,MAAO0S,EACPjG,SAAU,SAACd,GAAOjG,IAAgB,GAAQ2S,EAAc1M,EAAEe,OAAO1M,QAJrE,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,kBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,+BAMR,cAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQ6E,QAAxB,SACI,cAAC+B,EAAA,EAAD,CACI8C,SAAU7H,GACVkF,QAAQ,YACRC,MAAM,UACNF,KAAM,SACND,QA7QnB,WACb,IAAMoQ,EAAW9O,OAAOC,OAAO,GAAI9L,EAAMgB,MAEzC2Z,EAASjX,QAAU4T,GACnBqD,EAASlC,KAAOC,GAChBiC,EAASpC,aAAeb,EACxB1X,EAAM4a,eAAe5a,EAAMgB,KAAKsI,GAAIqR,GACpCnV,IAAgB,GAChBS,MAgQ4B,6BAiBpB,eAACmF,EAAA,EAAD,CAAM5J,MAAI,EAAC+J,GAAI,GAAK/G,UAAWd,GAAQuV,kBAAvC,UAEQ,sBACIzU,UAAWd,GAAQkW,SACnBrP,QA/QC,SAAC6E,GACtB9J,IAAQ,IA+QYkI,gBAAc,cAAcqN,gBAAc,OAH9C,UAKI,cAAC1Q,EAAA,EAAD,CAAUC,MAAK,WAAMpK,EAAMgB,KAAKyJ,QAAjB,eAAwCJ,UAAW,MAAlE,SACI,qBAAK7F,UAAWd,GAAQ6V,WAE5B,cAACpP,EAAA,EAAD,CAAUC,MAAK,WAAMpK,EAAMgB,KAAKyJ,QAAjB,kBAA2CJ,UAAW,MAArE,SACI,qBAAK7F,UAAWd,GAAQ+V,WAE5B,cAACtP,EAAA,EAAD,CAAUC,MAAK,WAAMpK,EAAMgB,KAAKyJ,QAAjB,gBAAyCJ,UAAW,MAAnE,SACI,qBAAK7F,UAAWd,GAAQgW,WAE5B,cAACvP,EAAA,EAAD,CAAUC,MAAK,WAAMpK,EAAMgB,KAAKyJ,QAAjB,mBAA4CJ,UAAW,MAAtE,SACI,qBAAK7F,UAAWd,GAAQiW,WAE5B,cAAC,GAAD,CACI3Y,KAAM+Y,GACNvV,UAAW8S,GACXI,iBAAkBA,EAClBoD,KAAM9a,EAAMgB,KAAK8Z,KACjBnD,aAAce,QAItB,cAACvO,EAAA,EAAD,CAAUC,MAAM,iBAAkBC,UAAW,MAA7C,SACI,cAACoC,EAAA,EAAD,CACIjI,UAAYd,GAAQmW,eACpBrP,KAAK,QACL2C,aAAW,SACX5C,QAhTT,WACfvK,EAAM+a,WAAW/a,EAAMgB,KAAKsI,KA2SR,SAMI,cAAC,KAAD,CAAeqB,MAAO,CAAED,MAAO,qBCxhBhDmL,OA5Bf,SAAwB7V,GAAQ,IAErBD,EAAWvC,IAAMqH,WAAWtH,GAA5BwC,QAEP,OACI,eAAC,IAAMyT,SAAP,WAEQzT,GACA,cAAC,GAAD,CACIiB,KAAMhB,EAAMwB,KACZoZ,eAAgB5a,EAAM4a,eACtBG,WAAY/a,EAAM+a,cAKrBhb,GACD,cAAC,GAAD,CACIiB,KAAMhB,EAAMwB,KACZgD,UAAWxE,EAAMwB,KAAKkC,QACtBoX,KAAM9a,EAAMwB,KAAKsZ,KACjBnD,aAAc3X,EAAMwB,KAAKiX,WCF9BvH,OArBf,SAAuBlR,GAEnB,IAIM0D,EAJYC,aAAW,SAACuC,GAAD,MAAY,CACrCoR,YAAatX,EAAMwE,UACnBwW,WAAYhb,EAAMgB,KAAKT,MAAQP,EAAMgB,KAAKT,MAAMmD,QAAU,MAE9Ca,GAGhB,OACI,cAAC,IAAMiP,SAAP,UAEI,cAACtI,EAAA,EAAD,CAAYC,UAAWnL,EAAMgB,KAAKyJ,QAASjG,UAAWd,EAAQ4T,YAA9D,SAEQtX,EAAM2X,kBCoqBXrC,GAxpBS,SAACtV,GAErBvB,QAAQC,IAAI,yBAFmB,MAGHlB,IAAM0H,SAAS,CACvC3B,IAAMvD,EAAMgB,KAAK0C,QAAQ+E,WACzB1E,KAAO/D,EAAMgB,KAAK0C,QAAQ2C,YAC1BmC,OAAQxI,EAAMgB,KAAK0C,QAAQuD,cAC3BjD,MAAOhE,EAAMgB,KAAK0C,QAAQkF,eAPC,mBAG1B5B,EAH0B,KAGjB+Q,EAHiB,OASHva,IAAM0H,SAAS,CACvC3B,IAAMvD,EAAMgB,KAAK0C,QAAQ0C,UACzBrC,KAAO/D,EAAMgB,KAAK0C,QAAQqP,WAC1BvK,OAAQxI,EAAMgB,KAAK0C,QAAQ6C,aAC3BvC,MAAOhE,EAAMgB,KAAK0C,QAAQgN,cAbC,mBASxBkC,EATwB,KAShBoF,EATgB,OAiBLxa,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQgH,OAAS,WAjBtC,mBAiBxBA,EAjBwB,KAiBjBuN,EAjBiB,OAkBeza,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQU,iBAAoB,eAlBrE,mBAkBxBA,EAlBwB,KAkBP8T,EAlBO,OAoBO1a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQuX,aAAgB,eApBzD,mBAoBxBA,EApBwB,KAoBXC,EApBW,OAqBO1d,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQyX,aAAgB,SArBzD,mBAqBxBA,EArBwB,KAqBXC,EArBW,OAsBO5d,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ2X,aAAgB,GAtBzD,mBAsBxBA,EAtBwB,KAsBXC,EAtBW,OAuBS9d,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ6X,cAAgB,GAvB3D,mBAuBxBA,EAvBwB,KAuBVC,EAvBU,OAyBGhe,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ8O,WAAc,QAzBnD,mBAyBxBA,EAzBwB,KAyBb2F,EAzBa,OA0BD3a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ6D,SAAY,SA1B7C,mBA0BxBA,GA1BwB,KA0BfkU,GA1Be,QA2BCje,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ+C,UAAa,IA3BhD,qBA2BxBA,GA3BwB,MA2Bd2R,GA3Bc,SA4BK5a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQgD,YAAe,KA5BtD,qBA4BxBA,GA5BwB,MA4BZ2R,GA5BY,SA6BK7a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQgP,YAAe,MA7BtD,qBA6BxBA,GA7BwB,MA6BZ4F,GA7BY,SA+BK9a,IAAM0H,SAASlF,EAAMgB,KAAKyX,MA/B/B,qBA+BxBC,GA/BwB,MA+BZC,GA/BY,SAgCSnb,IAAM0H,UAAS,GAhCxB,qBAgCxBK,GAhCwB,MAgCVC,GAhCU,SAmCPhI,IAAM0H,UAAS,GAnCR,qBAmCxBG,GAnCwB,MAmClBC,GAnCkB,MAsCzBf,GAAYZ,aAAW,SAACuC,GAAD,YAAY,CAErC0S,YAAa,CACTjI,SAAU,EACViC,OAAQ,EACR3O,MAAO,QAEX4U,WAAY,CACRC,OAAO,aAAD,OAAe5S,EAAMW,QAAQkS,SACnC/R,QAAS,EACT4R,YAAa,CACT1R,SAAU,SAIlBqB,QAAS,CACL1E,SAAU,SACVC,OAAQoC,EAAMpC,OAAOkV,QACrBxQ,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPE,OAAQ,GACRE,gBAAiB8B,EAAMW,QAAQC,WAAWC,MAE1C,WAAY,CACRX,UAAW,GACXG,aAAc,GACdwM,WAAY,EACZzK,QAAS,EACTjC,YAAa,GACbuC,aAAc,KAGtBqQ,kBAAmB,CACfpV,SAAU,WACVqV,QAAS,kBACTpR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASC,QAAhC,cAA6CjC,EAAM6B,YAAYC,OAAOmR,OAAtE,YACV,cACIlJ,UAAW/J,EAAMkT,QAAQ,IACzB1R,OAAQ,UACR2R,aAAa,GAAD,OAAKnT,EAAMW,QAAQ5H,MAAMqa,OACrC,WAAa,CACThR,QAAS,IALjB,0BAOiB,CACTA,QAAS,IARjB,eAUI,YAAc,CACVA,QAAS,IAXjB,eAaI,YAAc,CACVA,QAAS,IAdjB,eAgBI,YAAc,CACVA,QAAS,IAjBjB,eAmBI,YAAc,CACVA,QAAS,IApBjB,eAsBI,oBAAqB,CACjBA,QAAS,IAvBjB,IA2BJiR,OAAQ,CACJ1V,SAAU,WACVN,IAAI,IAAD,OAAMqP,EAAOrP,IAAb,MACHQ,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK0O,EAAOrP,IAAZ,MACN+E,QAAS,EACTR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASsR,SAAhC,cAA8CtT,EAAM6B,YAAYC,OAAOmR,OAAvE,aAEdM,OAAQ,CACJ5V,SAAU,WACV2E,OAAO,IAAD,OAAMoK,EAAOpK,OAAb,MACNzE,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK0O,EAAOpK,OAAZ,MACNF,QAAS,EACTR,WAAW,SAAD,OAAW5B,EAAM6B,YAAYC,OAAOmR,OAApC,aAEdO,OAAQ,CACJ7V,SAAU,WACVN,IAAK,EACLQ,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK8C,EAAQzD,IAAb,MACN+E,QAAS,EACTR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASsR,SAAhC,cAA8CtT,EAAM6B,YAAYC,OAAOmR,OAAvE,aAEdQ,OAAQ,CACJ9V,SAAU,WACV2E,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK8C,EAAQwB,OAAb,MACNF,QAAS,EACTR,WAAW,SAAD,OAAW5B,EAAM6B,YAAYC,OAAOmR,OAApC,aAEdS,SAAU,CACN/V,SAAU,WACViE,WAAY,oCAIhB+R,eAAiB,CACbvR,QAAS,EACTzE,SAAU,WACVC,OAAQ,GACRP,IAAK,EACLS,MAAO,EACPI,gBAAiB8B,EAAMW,QAAQ8O,UAAUD,KACzC5N,WAAY,mCACZ,UAAY,CACR1D,gBAAiB8B,EAAMW,QAAQ5H,MAAMqa,QAI7C1S,KAAM,CACF/C,SAAU,WACVE,KAAM,oBACNR,IAAK,GACLa,gBAAiB8B,EAAMW,QAAQC,WAAWC,MAC1CC,QAAS,GACTC,cAAe,EACfC,SAAU,IACVjD,MAAO,IACPkD,UAAW,sBACXC,UAAW,IACXC,UAAW,UAEfC,UAAW,CACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBhB,SAAU,GACVE,aAAc,oBACdM,cAAe,EACfV,aAAc,GACdmB,OAAQ,QAEZgU,eAAgB,CACZnV,aAAc,IAElBoV,aAAc,CACV9X,SAAU,WACVI,MAAO,IACPC,OAAQ,IACR4U,OAAO,aAAD,OAAe5S,EAAMW,QAAQuL,QAAQkH,OAC3C,QAAU,CACNzV,SAAU,WACVN,IAAK,EACLiF,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACP4O,OAAQ,EACR3O,MAAO,OACPiD,SAAU,OACVhD,OAAQ,OACRiD,UAAW,QAEf,WAAa,CACTtD,SAAU,WACVC,OAAQ,GACRP,IAAK,EACLiF,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPC,MAAO,OACPiD,SAAU,OACVhD,OAAQ,OACRiD,UAAW,OACX/C,gBAAiB,YACjBmX,aAAc,EACdzT,WAAY,mCACZ,UAAW,CACPQ,QAAS,SAOnBgP,GAAc,CAChB/P,QAASA,GACTkB,WAAYzB,EAAQzD,IACpB0D,cAAeD,EAAQwB,OACvBnC,YAAaW,EAAQjD,KACrB6E,aAAc5B,EAAQhD,MACtBoC,UAAWwM,EAAOrP,IAClBgD,aAAcqM,EAAOpK,OACrBuK,WAAYH,EAAO7O,KACnB2M,YAAakC,EAAO5O,MACpB0G,MAAOA,EACPtG,gBAAiBA,EACjBoO,UAAWA,EACX/L,SAAUA,GACVC,WAAYA,GACZgM,WAAYA,GACZuI,YAAaA,EACbE,YAAaA,EACbI,aAAcA,EACdF,YAAaA,GAEX3X,GAAUa,KAGVwV,GAAO,2BAAO/Z,EAAMgB,MAAS,CAC/B0C,QAAS4T,KAIP0C,GAAgB,SAACvO,EAAGpC,GACtB,IAAI4Q,EAAapO,OAAOC,OAAO,GAAI9E,GACnCiT,EAAW5Q,GAAa6Q,OAAOzO,EAAEe,OAAO1M,OACxCiY,EAAWkC,GAEXzU,IAAgB,IAEd2U,GAAc,SAAC1O,EAAGpC,GACpB,IAAI+Q,EAAYvO,OAAOC,OAAO,GAAI8G,GAClCwH,EAAU/Q,GAAa6Q,OAAOzO,EAAEe,OAAO1M,OACvCkY,EAAUoC,GAEV5U,IAAgB,IA0BpB,OACQ,eAAC4F,EAAA,EAAD,CAAMC,WAAS,EAACV,MAAO,CAAC9G,SAAU,YAAlC,UACI,cAAC+G,EAAA,EAAD,CACIvF,KAAMA,GACNwF,kBAAgB,yBAChBC,QAXI,WAChBxF,IAAQ,IAOA,SAKI,cAACyF,EAAA,EAAD,UACI,cAAC,KAAD,CAAYC,OAAO,0BAA0BC,OAAQ,mCAArD,SACA,sBAAKzG,UAAWd,GAAQkD,KAAxB,UACI,eAACsE,EAAA,EAAD,CACIC,UAAU,IACV3G,UAAWd,GAAQ4D,UACnBgC,GAAG,yBAHP,8KAKmC,cAAC,KAAD,OAEnC,cAAC4C,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CACQlD,KAAK,OACLoD,MAAM,aACNI,WAAS,EACT5M,MAAO4Y,GACPkD,WAAW,EACXC,QAAS,EACTpR,QAAQ,SACR8B,SAAU,SAACd,GAAQjG,IAAgB,GAAQmT,GAAclN,EAAEe,OAAO1M,YAM9E,cAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,SACI,cAAC5M,EAAA,EAAD,CAAW2E,KAAG,EAAd,SACI,eAACC,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YACnBlM,WAAS,EAJb,UAMI,cAACoE,GAAA,EAAD,CAAYxH,GAAG,sBAAf,qBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,sBACR1H,GAAG,gBACHxJ,MAAOyH,GACPgF,SAAU,SAACd,GAAOjG,IAAgB,GAAQiW,GAAWhQ,EAAEe,OAAO1M,QAJlE,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,eAAjB,0BACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,kBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,cAAjB,mCAOZ,eAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,aACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAOrP,IACdgJ,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,UAExC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAOpK,OACd+D,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,gBAG5C,eAACS,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,cACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAO7O,KACdwI,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,WAExC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAO5O,MACduI,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,kBAMhD,eAACS,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,cACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQzD,IACfgJ,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,UAEzC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,iBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQwB,OACf+D,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,gBAG7C,eAACS,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQjD,KACfwI,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,WAEzC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQhD,MACfuI,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,kBAOjD,eAACS,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAYtR,QAAQ,OAAOa,cAAc,MAAjE,UACQ,eAAC8D,EAAA,EAAD,CACI1H,UAAWd,GAAQkV,YADvB,UAGI,cAAC1N,EAAA,EAAD,CAAaC,UAAW,KAAM2C,cAAY,EAA1C,wBAGA,cAAC,KAAD,CACI7J,MAAO,OACPqW,SAAU,OACV5P,MAAOtG,EACPmW,OAAQ,CAAE,UAAW,UAAW,qBAChCC,iBAAkB,SAACC,GACfjV,IAAgB,GAChB0S,EAAmBuC,EAASC,WAKxC,eAACxO,EAAA,EAAD,CACI1H,UAAWd,GAAQkV,YADvB,UAGI,cAAC1N,EAAA,EAAD,CAAaC,UAAW,KAAM2C,cAAY,EAA1C,mBAGA,cAAC,KAAD,CACI7J,MAAO,OACPqW,SAAU,OACVC,OAAQ,CAAE,UAAW,UAAW,qBAChC7P,MAAOA,EACP8P,iBAAkB,SAACC,GACfjV,IAAgB,GAChByS,EAASwC,EAASC,cAQtC,eAACxO,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACQ5H,UAAWd,GAAQkV,YACnB1P,KAAK,QACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOmb,EACP1O,SAAW,SAACd,GAAQjG,IAAgB,GAAS0V,EAAezP,EAAEe,OAAO1M,UAE7E,cAACsM,EAAA,EAAD,CACQ5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOyb,EACPhP,SAAW,SAACd,GAAQjG,IAAgB,GAASgW,EAAgBtB,OAAOzO,EAAEe,OAAO1M,cAIzF,eAACoM,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UAEA,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOub,EACP9O,SAAW,SAACd,GAAQjG,IAAgB,GAAO8V,EAAepB,OAAOzO,EAAEe,OAAO1M,WAE9E,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YAHvB,UAKI,cAAC9H,GAAA,EAAD,CAAYxH,GAAG,qBAAf,0BACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,qBACR1H,GAAG,eACHxJ,MAAOqb,EACP5O,SAAU,SAACd,GAAOjG,IAAgB,GAAQ4V,EAAe3P,EAAEe,OAAO1M,QAJtE,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,8BAOR,eAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,YACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO2G,GACP8F,SAAW,SAACd,GAAOjG,IAAgB,GAAQ4S,GAAY8B,OAAOzO,EAAEe,OAAO1M,WAE3E,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YAHvB,UAKI,cAAC9H,GAAA,EAAD,CAAYxH,GAAG,sBAAf,yBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,sBACR1H,GAAG,gBACHxJ,MAAO4G,GACP6F,SAAU,SAACd,GAAOjG,IAAgB,GAAQ6S,GAAc6B,OAAOzO,EAAEe,OAAO1M,SAJ5E,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,IAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,IAAjB,qBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,IAAjB,2BAMR,eAACoM,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACA,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,mBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO4S,GACPnG,SAAW,SAACd,GAAOjG,IAAgB,GAAQ8S,GAAc4B,OAAOzO,EAAEe,OAAO1M,WAE7E,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YAHvB,UAKI,cAAC9H,GAAA,EAAD,CAAYxH,GAAG,qBAAf,wBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,qBACR1H,GAAG,eACHxJ,MAAO0S,EACPjG,SAAU,SAACd,GAAOjG,IAAgB,GAAQ2S,EAAc1M,EAAEe,OAAO1M,QAJrE,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,kBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,+BAMR,cAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQ6E,QAAxB,SACI,cAAC+B,EAAA,EAAD,CACI8C,SAAU7H,GACVkF,QAAQ,YACRC,MAAM,UACNF,KAAM,SACND,QAhVf,WACb,IAAMoQ,EAAW9O,OAAOC,OAAO,GAAI9L,EAAMgB,MAEzC2Z,EAASjX,QAAU4T,GACnBqD,EAASlC,KAAOC,GAGhB1Y,EAAM4a,eAAe5a,EAAMgB,KAAKsI,GAAIqR,GACpCnV,IAAgB,IAmUQ,6BAgBhB,eAAC4F,EAAA,EAAD,CAAM5J,MAAI,EAAC+J,GAAI,GAAK/G,UAAWd,GAAQuV,kBAAvC,UACQ,sBACIzU,UAAWd,GAAQkW,SACnBrP,QAhVC,SAAC6E,GACtB9J,IAAQ,IAgVYkI,gBAAc,cAAcqN,gBAAc,OAH9C,UAKI,cAAC1Q,EAAA,EAAD,CAAUC,MAAK,wBAA4BC,UAAW,MAAtD,SACI,qBAAK7F,UAAWd,GAAQ6V,WAE5B,cAACpP,EAAA,EAAD,CAAUC,MAAK,2BAA+BC,UAAW,MAAzD,SACI,qBAAK7F,UAAWd,GAAQ+V,WAE5B,cAACtP,EAAA,EAAD,CAAUC,MAAK,yBAA6BC,UAAW,MAAvD,SACI,qBAAK7F,UAAWd,GAAQgW,WAE5B,cAACvP,EAAA,EAAD,CAAUC,MAAK,4BAAgCC,UAAW,MAA1D,SACI,qBAAK7F,UAAWd,GAAQiW,WAE5B,cAAC,GAAD,CACI3Y,KAAM+Y,GACNvV,UAAW8S,GACXwD,KAAM9a,EAAMgB,KAAK8Z,KACjBnD,aAAce,QAItB,cAACvO,EAAA,EAAD,CAAUC,MAAM,mBAAoBC,UAAW,MAA/C,SACI,cAACoC,EAAA,EAAD,CACIjI,UAAYd,GAAQmW,eACpBrP,KAAK,QACL2C,aAAW,SACX5C,QAhXT,WACfvK,EAAM+a,WAAW/a,EAAMgB,KAAKsI,KA2WR,SAMI,cAAC,KAAD,CAAeqB,MAAO,CAAED,MAAO,qBCzoBhDmL,OA7Bf,SAAwB7V,GAAQ,IAErBD,EAAWvC,IAAMqH,WAAWtH,GAA5BwC,QAEP,OAEI,cADA,CACC,IAAMyT,SAAP,WAEQzT,GACA,cAAC,GAAD,CACIiB,KAAMhB,EAAMwB,KACZoZ,eAAgB5a,EAAM4a,eACtBG,WAAY/a,EAAM+a,cAKrBhb,GACD,cAAC,GAAD,CACIiB,KAAMhB,EAAMwB,KACZgD,UAAWxE,EAAMwB,KAAKkC,QACtBoX,KAAM9a,EAAMwB,KAAKsZ,KACjBnD,aAAc3X,EAAMwB,KAAKiX,WCO9BvH,OA/Bf,SAAuBlR,GAEnB,IAIM0D,EAJYC,aAAW,SAACuC,GAAD,MAAY,CACrCoR,YAAatX,EAAMwE,UACnBwW,WAAYhb,EAAM8b,eAAiB9b,EAAM8b,eAAiB,MAE9CvX,GAEV6F,EAAQpK,EAAMgB,KAAKT,MAAM6J,MAAQpK,EAAMgB,KAAKT,MAAM6J,MAAQ,GAEhE,OACI,cAAC,IAAMoJ,SAAP,UAEI,eAACtI,EAAA,EAAD,CAAYC,UAAWnL,EAAMgB,KAAKyJ,QAASjG,UAAWd,EAAQ4T,YAA9D,UAEQtX,EAAM+b,UACN,cAAC5R,EAAA,EAAD,CAASC,MAAOA,EAAOC,UAAWrK,EAAMgB,KAAKT,MAAM8J,UAAnD,SACK,qBAAKiF,IAAKtP,EAAM+b,SAAUvX,UAAWd,EAAQsX,WAAYzL,IAAKnF,MAIxE,sBAAMO,MAAO,CAAEpD,QAAS,WAAxB,SAEKvH,EAAM2X,qBCHXzG,OApBf,SAAuBlR,GAEnB,IAGM0D,EAHYC,aAAW,iBAAO,CAChCqX,WAAYhb,EAAMO,MAAMmD,WAEZa,GAEVyX,EAAWhc,EAAMO,MAAM6J,MAAQpK,EAAMO,MAAM6J,MAAQ,GAEzD,OACI,cAACD,EAAA,EAAD,CAASC,MAAO4R,EAAU3R,UAAWrK,EAAMO,MAAM8J,UAAjD,SACI,qBACIiF,IAAKtP,EAAM+b,SACXvX,UAAWd,EAAQsX,WACnBzL,IAAKyM,OCs+BN1G,GAn9BS,SAACtV,GAAW,IACxBoC,EAAiB5E,IAAMqH,WAAW5C,GAAlCG,aADuB,EAGD5E,IAAM0H,SAAS,CACzC3B,IAAMvD,EAAMgB,KAAK0C,QAAQ+E,YAAc,EACvC1E,KAAO/D,EAAMgB,KAAK0C,QAAQ2C,aAAe,EACzCmC,OAAQxI,EAAMgB,KAAK0C,QAAQuD,eAAiB,EAC5CjD,MAAOhE,EAAMgB,KAAK0C,QAAQkF,cAAgB,IAPf,mBAGxB5B,EAHwB,KAGf+Q,EAHe,OASHva,IAAM0H,SAAS,CACvC3B,IAAMvD,EAAMgB,KAAK0C,QAAQ0C,WAAa,EACtCrC,KAAO/D,EAAMgB,KAAK0C,QAAQqP,YAAc,EACxCvK,OAAQxI,EAAMgB,KAAK0C,QAAQ6C,cAAgB,EAC3CvC,MAAOhE,EAAMgB,KAAK0C,QAAQgN,aAAgB,IAbf,mBASxBkC,EATwB,KAShBoF,EATgB,OAgBLxa,IAAM0H,SAASlF,EAAMgB,KAAKT,OAAS,IAhB9B,mBAgBxBA,EAhBwB,aAiBC/C,IAAM0H,SAASlF,EAAMgB,KAAKT,MAAM2O,KAAO,KAjBxC,mBAiBxB6M,EAjBwB,KAiBdE,EAjBc,OAkBKze,IAAM0H,SAASlF,EAAMgB,KAAKT,MAAM6J,OAAS,IAlB9C,mBAkBxB8R,EAlBwB,KAkBZC,EAlBY,OAmBa3e,IAAM0H,SAASlF,EAAMgB,KAAKT,MAAM6b,gBAAkB,OAnB/D,mBAmBxBA,EAnBwB,KAmBRC,EAnBQ,OAqBL7e,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQgH,OAAS,WArBtC,mBAqBxBA,EArBwB,KAqBjBuN,EArBiB,OAsBeza,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQU,iBAAoB,eAtBrE,mBAsBxBA,EAtBwB,KAsBP8T,EAtBO,OAwBO1a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQuX,aAAgB,eAxBzD,mBAwBxBA,EAxBwB,KAwBXC,GAxBW,QAyBO1d,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQyX,aAAgB,SAzBzD,qBAyBxBA,GAzBwB,MAyBXC,GAzBW,SA0BO5d,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ2X,aAAgB,OA1BzD,qBA0BxBA,GA1BwB,MA0BXC,GA1BW,SA2BS9d,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ6X,cAAiB,OA3B5D,qBA2BxBA,GA3BwB,MA2BVC,GA3BU,SA6BGhe,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ8O,WAAc,QA7BnD,qBA6BxBA,GA7BwB,MA6Bb2F,GA7Ba,SA8BD3a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ6D,SAAY,SA9B7C,qBA8BxBA,GA9BwB,MA8BfkU,GA9Be,SA+BCje,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ+C,UAAa,IA/BhD,qBA+BxBA,GA/BwB,MA+Bd2R,GA/Bc,SAgCK5a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQgD,YAAe,KAhCtD,qBAgCxBA,GAhCwB,MAgCZ2R,GAhCY,SAiCK7a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQgP,YAAe,MAjCtD,qBAiCxBA,GAjCwB,MAiCZ4F,GAjCY,SAoCK9a,IAAM0H,SAASlF,EAAMgB,KAAKT,MAAMmD,QAAQO,OAAS,KApCtD,qBAoCxBqY,GApCwB,MAoCZC,GApCY,SAqCO/e,IAAM0H,SAASlF,EAAMgB,KAAKT,MAAMmD,QAAQQ,QAAU,KArCzD,qBAqCxBsY,GArCwB,MAqCXC,GArCW,SAsCiBjf,IAAM0H,SAASlF,EAAMgB,KAAKT,MAAMmD,QAAQuX,aAAgB,eAtCzE,qBAsCxByB,GAtCwB,MAsCNC,GAtCM,SAuCiBnf,IAAM0H,SAASlF,EAAMgB,KAAKT,MAAMmD,QAAQyX,aAAgB,SAvCzE,qBAuCxByB,GAvCwB,MAuCNC,GAvCM,SAwCiBrf,IAAM0H,SAASlF,EAAMgB,KAAKT,MAAMmD,QAAQ2X,aAAgB,OAxCzE,qBAwCxByB,GAxCwB,MAwCNC,GAxCM,SAyCmBvf,IAAM0H,SAASlF,EAAMgB,KAAKT,MAAMmD,QAAQ6X,cAAiB,OAzC5E,qBAyCxByB,GAzCwB,MAyCLC,GAzCK,SA0CKzf,IAAM0H,SAASlF,EAAMgB,KAAKT,MAAMmD,QAAQwZ,OAAS,QA1CtD,qBA0CxBC,GA1CwB,MA0CZC,GA1CY,SA2CO5f,IAAM0H,SAAS,CACjD3B,IAAMvD,EAAMgB,KAAKT,MAAMmD,QAAQ0C,WAAa,EAC5CrC,KAAO/D,EAAMgB,KAAKT,MAAMmD,QAAQqP,YAAc,EAC9CvK,OAAQxI,EAAMgB,KAAKT,MAAMmD,QAAQ6C,cAAgB,EACjDvC,MAAOhE,EAAMgB,KAAKT,MAAMmD,QAAQgN,aAAgB,IA/CrB,qBA2CxB2M,GA3CwB,MA2CXC,GA3CW,SAiDK9f,IAAM0H,SAASlF,EAAMgB,KAAKyX,MAjD/B,qBAiDxBC,GAjDwB,MAiDZC,GAjDY,SAkDSnb,IAAM0H,UAAS,GAlDxB,qBAkDxBK,GAlDwB,MAkDVC,GAlDU,SAsDPhI,IAAM0H,UAAS,GAtDR,qBAsDxBG,GAtDwB,MAsDlBC,GAtDkB,MAyDzBf,GAAYZ,aAAW,SAACuC,GAAD,MAAY,CAErC0S,YAAa,CACTjI,SAAU,EACViC,OAAQ,EACR3O,MAAO,QAEX4U,WAAY,CACRC,OAAO,aAAD,OAAe5S,EAAMW,QAAQkS,SACnC/R,QAAS,EACT4R,YAAa,CACT1R,SAAU,SAIlBqB,QAAS,CACL1E,SAAU,SACVC,OAAQoC,EAAMpC,OAAOkV,QACrBxQ,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPE,OAAQ,GACRkC,UAAW,GACXhC,gBAAiB8B,EAAMW,QAAQC,WAAWC,MAE1C,WAAY,CACRX,UAAW,GACXG,aAAc,GACdwM,WAAY,EACZzK,QAAS,EACTjC,YAAa,GACbuC,aAAc,KAGtBqQ,kBAAmB,CACfpV,SAAU,WACVqV,QAAS,kBACTpR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASC,QAAhC,cAA6CjC,EAAM6B,YAAYC,OAAOmR,OAAtE,YACV,UAAY,CACRlJ,UAAW/J,EAAMkT,QAAQ,IACzB1R,OAAQ,UACR2R,aAAa,GAAD,OAAKnT,EAAMW,QAAQ5H,MAAMqa,OACrC,WAAa,CACThR,QAAS,GAEb,YAAc,CACVA,QAAS,GAEb,YAAc,CACVA,QAAS,GAEb,YAAc,CACVA,QAAS,GAEb,YAAc,CACVA,QAAS,GAEb,oBAAqB,CACjBA,QAAS,KAIrBiR,OAAQ,CACJ1V,SAAU,WACVN,IAAI,IAAD,OAAMqP,EAAOrP,IAAb,MACHQ,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK0O,EAAOrP,IAAZ,MACN+E,QAAS,EACTR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASsR,SAAhC,cAA8CtT,EAAM6B,YAAYC,OAAOmR,OAAvE,aAEdM,OAAQ,CACJ5V,SAAU,WACV2E,OAAO,IAAD,OAAMoK,EAAOpK,OAAb,MACNzE,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK0O,EAAOpK,OAAZ,MACNF,QAAS,EACTR,WAAW,SAAD,OAAW5B,EAAM6B,YAAYC,OAAOmR,OAApC,aAEdO,OAAQ,CACJ7V,SAAU,WACVN,IAAK,EACLQ,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK8C,EAAQzD,IAAb,MACN+E,QAAS,EACTR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASsR,SAAhC,cAA8CtT,EAAM6B,YAAYC,OAAOmR,OAAvE,aAEdQ,OAAQ,CACJ9V,SAAU,WACV2E,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK8C,EAAQwB,OAAb,MACNF,QAAS,EACTR,WAAW,SAAD,OAAW5B,EAAM6B,YAAYC,OAAOmR,OAApC,aAEdS,SAAU,CACN/V,SAAU,WACViE,WAAY,oCAEhB+R,eAAiB,CACbvR,QAAS,EACTzE,SAAU,WACVC,OAAQ,EACRP,IAAK,EACLS,MAAO,EACPI,gBAAiB8B,EAAMW,QAAQ8O,UAAUD,KACzC5N,WAAY,mCACZ,UAAY,CACR1D,gBAAiB8B,EAAMW,QAAQ5H,MAAMqa,QAG7C1S,KAAM,CACF/C,SAAU,WACVE,KAAM,oBACNR,IAAK,GACLa,gBAAiB8B,EAAMW,QAAQC,WAAWC,MAC1CC,QAAS,GACTC,cAAe,EACfC,SAAU,IACVjD,MAAO,IACPkD,UAAW,sBACXC,UAAW,IACXC,UAAW,UAEfC,UAAW,CACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBhB,SAAU,GACVE,aAAc,oBACdM,cAAe,EACfV,aAAc,GACdmB,OAAQ,QAEZgU,eAAgB,CACZnV,aAAc,IAElBoV,aAAc,CACV9X,SAAU,WACVI,MAAO,IACPC,OAAQ,IACR4U,OAAO,aAAD,OAAe5S,EAAMW,QAAQuL,QAAQkH,OAC3C,QAAU,CACNzV,SAAU,WACVN,IAAK,EACLiF,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACP4O,OAAQ,EACR3O,MAAO,OACPiD,SAAU,OACVhD,OAAQ,OACRiD,UAAW,QAEf,WAAa,CACTtD,SAAU,WACVC,OAAQ,GACRP,IAAK,EACLiF,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPC,MAAO,OACPiD,SAAU,OACVhD,OAAQ,OACRiD,UAAW,OACX/C,gBAAiB,YACjBmX,aAAc,EACdzT,WAAY,mCACZ,UAAW,CACPQ,QAAS,KAIrBiV,WAAY,CACR1Z,SAAU,WACVC,OAAQ,GACRP,IAAK,EACLiF,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPC,MAAO,OACPiD,SAAU,OACVhD,OAAQ,OACRiD,UAAW,OACXO,OAAQ,eAIV4P,GAAc,CAChB/P,QAASA,GACTkB,WAAYzB,EAAQzD,IACpB0D,cAAeD,EAAQwB,OACvBnC,YAAaW,EAAQjD,KACrB6E,aAAc5B,EAAQhD,MACtBoC,UAAWwM,EAAOrP,IAClBgD,aAAcqM,EAAOpK,OACrBuK,WAAYH,EAAO7O,KACnB2M,YAAakC,EAAO5O,MACpB0G,MAAOA,EACPtG,gBAAiBA,EACjBoO,UAAWA,GACX/L,SAAUA,GACVC,WAAYA,GACZgM,WAAYA,GACZuI,YAAaA,EACbE,YAAaA,GACbI,aAAcA,GACdF,YAAaA,IAGXS,GAAiB,CACnB1V,UAAWiX,GAAY9Z,IACvBgD,aAAc8W,GAAY7U,OAC1BuK,WAAYsK,GAAYtZ,KACxB2M,YAAa2M,GAAYrZ,MACzBC,MAAOqY,GACPpY,OAAQsY,GACRnB,YAAayB,GACbvB,aAAcyB,GACd/B,YAAayB,GACbvB,YAAayB,GACbM,MAAQC,IAGNzZ,GAAUa,KAGVwV,GAAO,2BAAO/Z,EAAMgB,MAAS,CAC/B0C,QAAS4T,KAGP0C,GAAgB,SAACvO,EAAGpC,GACtB,IAAI4Q,EAAapO,OAAOC,OAAO,GAAI9E,GACnCiT,EAAW5Q,GAAa6Q,OAAOzO,EAAEe,OAAO1M,OACxCiY,EAAWkC,GAEXzU,IAAgB,IAEd2U,GAAe,SAAC1O,EAAGpC,GACrB,IAAI+Q,EAAYvO,OAAOC,OAAO,GAAI8G,GAClCwH,EAAU/Q,GAAa6Q,OAAOzO,EAAEe,OAAO1M,OACvCkY,EAAUoC,GAEV5U,IAAgB,IAEdgY,GAAoB,SAAC/R,EAAGpC,GAC1B,IAAI+Q,EAAYvO,OAAOC,OAAO,GAAIuR,IAClCjD,EAAU/Q,GAAa6Q,OAAOzO,EAAEe,OAAO1M,OACvCwd,GAAelD,GAEf5U,IAAgB,IAkCdgJ,GAAgB,SAACC,GACnB,IAAMC,EAAaxQ,EAASK,QAAQoQ,IAAjB,UAAwBF,EAAUG,OAAQC,IAAIJ,GACjEC,EAAWI,GAAG,iBACZ,SAAAC,GACEtQ,QAAQC,IAAKqQ,MAEf,SAAA9P,GACER,QAAQC,IAAIO,EAAM+P,YAEpB,WACE5M,GAAa,GACbsM,EAAWK,SAASJ,IAAIM,iBACrBnQ,MAAM,SAAAoQ,GACL+M,EAAY/M,UAOxB,OACQ,eAAC9D,EAAA,EAAD,CAAMC,WAAS,EAACV,MAAO,CAAC9G,SAAU,YAAlC,UACI,cAAC+G,EAAA,EAAD,CACIvF,KAAMA,GACNwF,kBAAgB,yBAChBC,QAlCI,WAChBxF,IAAQ,IA8BA,SAKI,cAACyF,EAAA,EAAD,UACI,cAAC,KAAD,CAAYC,OAAO,0BAA0BC,OAAQ,mCAArD,SACA,sBAAKzG,UAAWd,GAAQkD,KAAxB,UACI,eAACsE,EAAA,EAAD,CACIC,UAAU,IACV3G,UAAWd,GAAQ4D,UACnBgC,GAAG,yBAHP,gOAK6C,cAAC,KAAD,OAE7C,cAAC4C,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CACQlD,KAAK,OACLoD,MAAM,aACNI,WAAS,EACT5M,MAAO4Y,GACPkD,WAAW,EACXC,QAAS,EACTpR,QAAQ,SACR8B,SAAU,SAACd,GAAQjG,IAAgB,GAAQmT,GAAclN,EAAEe,OAAO1M,YAI9E,eAACuN,EAAA,EAAD,CAAW7I,UAAWd,GAAQgY,eAA9B,UACI,cAACpO,GAAA,EAAD,CACIC,WAAY,cAAC,KAAD,IACZC,gBAAc,yBACdlE,GAAG,iBAHP,SAKI,cAAC4B,EAAA,EAAD,+BAEJ,cAACgB,EAAA,EAAD,CAAKuR,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACI,eAACvS,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,eAACD,EAAA,EAAD,CAAM5J,MAAI,EAAC+J,GAAI,EAAG/G,UAAWd,GAAQiY,aAArC,UACI,eAACrR,EAAA,EAAD,WACI,cAAC,KAAD,CAAWI,MAAM,WAEjB,uBAAOyE,QAAQ,oBAAoB3K,UAAWd,GAAQ6Z,aACtD,uBACIjU,GAAG,oBACHJ,KAAK,OACLqD,SA1ErB,SAAC6C,GACxBZ,GAAcY,EAAM5C,OAAO6C,MAAM,IACjC7J,IAAgB,GAChBpD,GAAa,IAwE+BuI,MAAO,CAAEpD,QAAS,aAG1B,cAAC,GAAD,CACIwU,SAAUA,EACVxb,MAAOwZ,GAAQxZ,WAGvB,cAAC6K,EAAA,EAAD,CAAM5J,MAAI,EAAC+J,GAAI,EAAf,SACI,eAACW,EAAA,EAAD,CAAK0R,GAAI,EAAT,UACI,cAACxR,EAAA,EAAD,CACIlD,KAAK,OACLoD,MAAM,cACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOoc,EACPxP,WAAS,EACTH,SAAW,SAACd,GAAOjG,IAAgB,GAAS2W,EAAc1Q,EAAEe,OAAO1M,UAEvE,cAACoM,EAAA,EAAD,CAAK+B,GAAI,EAAT,SACI,eAAC4C,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLkC,WAAS,EAHb,UAKI,cAACoE,GAAA,EAAD,CAAYxH,GAAG,wBAAf,6BACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,wBACR1H,GAAG,kBACHxJ,MAAOsc,EACP7P,SAAU,SAACd,GAAOjG,IAAgB,GAAQ6W,EAAkB5Q,EAAEe,OAAO1M,QAJzE,UAMI,cAACmR,GAAA,EAAD,CAAUnR,MAAO,YAAjB,uBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,MAAjB,iBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,UAAjB,qBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,aAAjB,wBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,kBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,WAAjB,sBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,cAAjB,yBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,YAAjB,uBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,eAAjB,0BACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,aAAjB,0CAY5B,cAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,SACI,cAAC5M,EAAA,EAAD,CAAW2E,KAAG,EAAd,SACI,eAACC,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YACnBlM,WAAS,EAJb,UAMI,cAACoE,GAAA,EAAD,CAAYxH,GAAG,sBAAf,mBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,sBACR1H,GAAG,gBACHxJ,MAAOqd,GACP5Q,SAAU,SAACd,GAAOjG,IAAgB,GAAQ4X,GAAc3R,EAAEe,OAAO1M,QAJrE,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,kBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,4BAOZ,eAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,mBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOud,GAAY9Z,IACnBgJ,SAAW,SAACd,GAAQjG,IAAgB,GAAQgY,GAAkB/R,EAAG,UAErE,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOud,GAAY7U,OACnB+D,SAAW,SAACd,GAAQjG,IAAgB,GAAQgY,GAAkB/R,EAAG,gBAGzE,eAACS,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,cACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOud,GAAYtZ,KACnBwI,SAAW,SAACd,GAAQjG,IAAgB,GAAQgY,GAAkB/R,EAAG,WAErE,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOud,GAAYrZ,MACnBuI,SAAW,SAACd,GAAQjG,IAAgB,GAAOgY,GAAkB/R,EAAG,kBAM5E,cAACS,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,SACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,cACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOwc,GACP/P,SAAW,SAACd,GAAQjG,IAAgB,GAAQ+W,GAAcrC,OAAOzO,EAAEe,OAAO1M,WAE9E,cAACsM,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO0c,GACPjQ,SAAW,SAACd,GAAOjG,IAAgB,GAAQiX,GAAevC,OAAOzO,EAAEe,OAAO1M,gBAMtF,eAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACQ5H,UAAWd,GAAQkV,YACnB1P,KAAK,QACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO4c,GACPnQ,SAAW,SAACd,GAAQjG,IAAgB,GAASmX,GAAoBlR,EAAEe,OAAO1M,UAElF,cAACsM,EAAA,EAAD,CACQ5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkd,GACPzQ,SAAW,SAACd,GAAQjG,IAAgB,GAASyX,GAAqB/C,OAAOzO,EAAEe,OAAO1M,cAI9F,eAACoM,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UAEI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOgd,GACPvQ,SAAW,SAACd,GAAQjG,IAAgB,GAAQuX,GAAoB7C,OAAOzO,EAAEe,OAAO1M,WAEpF,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YAHvB,UAKI,cAAC9H,GAAA,EAAD,CAAYxH,GAAG,2BAAf,0BACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,2BACR1H,GAAG,qBACHxJ,MAAO8c,GACPrQ,SAAU,SAACd,GAAOjG,IAAgB,GAAQqX,GAAoBpR,EAAEe,OAAO1M,QAJ3E,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,iCAOhB,eAACuN,EAAA,EAAD,WACI,cAACC,GAAA,EAAD,CACIC,WAAY,cAAC,KAAD,IACZC,gBAAc,6BACdlE,GAAG,iBAHP,SAKI,cAAC4B,EAAA,EAAD,mCAIR,cAACgB,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,SACI,cAAC5M,EAAA,EAAD,CAAW2E,KAAG,EAAd,SACI,eAACC,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YACnBlM,WAAS,EAJb,UAMI,cAACoE,GAAA,EAAD,CAAYxH,GAAG,sBAAf,qBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,sBACR1H,GAAG,gBACHxJ,MAAOyH,GACPgF,SAAU,SAACd,GAAOjG,IAAgB,GAAQiW,GAAWhQ,EAAEe,OAAO1M,QAJlE,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,eAAjB,0BACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,kBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,cAAjB,mCAOZ,eAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,aACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAOrP,IACdgJ,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,UAExC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAOpK,OACd+D,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,gBAG5C,eAACS,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,cACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAO7O,KACdwI,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,WAExC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAO5O,MACduI,SAAW,SAACd,GAAQ0O,GAAa1O,EAAG,kBAMhD,eAACS,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,cACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQzD,IACfgJ,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,UAEzC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,iBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQwB,OACf+D,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,gBAG7C,eAACS,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQjD,KACfwI,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,WAEzC,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQhD,MACfuI,SAAW,SAACd,GAAQuO,GAAcvO,EAAG,kBAOjD,eAACS,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAYtR,QAAQ,OAAOa,cAAc,MAAjE,UACI,eAAC8D,EAAA,EAAD,CACI1H,UAAWd,GAAQkV,YADvB,UAGI,cAAC1N,EAAA,EAAD,CAAaC,UAAW,KAAM2C,cAAY,EAA1C,wBAGA,cAAC,KAAD,CACI7J,MAAO,OACPqW,SAAU,OACV5P,MAAOtG,EACPmW,OAAQ,CAAE,UAAW,UAAW,qBAChCC,iBAAkB,SAACC,GACfjV,IAAgB,GAChB0S,EAAmBuC,EAASC,WAKxC,eAACxO,EAAA,EAAD,CACI1H,UAAWd,GAAQkV,YADvB,UAGI,cAAC1N,EAAA,EAAD,CAAaC,UAAW,KAAM2C,cAAY,EAA1C,mBAGA,cAAC,KAAD,CACI7J,MAAO,OACPqW,SAAU,OACVC,OAAQ,CAAE,UAAW,UAAW,qBAChC7P,MAAOA,EACP8P,iBAAkB,SAACC,GACfjV,IAAgB,GAChByS,EAASwC,EAASC,cAQlC,eAACxO,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACQ5H,UAAWd,GAAQkV,YACnB1P,KAAK,QACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOmb,EACP1O,SAAW,SAACd,GAAQjG,IAAgB,GAAS0V,GAAezP,EAAEe,OAAO1M,UAE7E,cAACsM,EAAA,EAAD,CACQ5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOyb,GACPhP,SAAW,SAACd,GAAQjG,IAAgB,GAASgW,GAAgBtB,OAAOzO,EAAEe,OAAO1M,cAIzF,eAACoM,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UAEA,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOub,GACP9O,SAAW,SAACd,GAAQjG,IAAgB,GAAO8V,GAAepB,OAAOzO,EAAEe,OAAO1M,WAE9E,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YAHvB,UAKI,cAAC9H,GAAA,EAAD,CAAYxH,GAAG,qBAAf,0BACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,qBACR1H,GAAG,eACHxJ,MAAOqb,GACP5O,SAAU,SAACd,GAAOjG,IAAgB,GAAQ4V,GAAe3P,EAAEe,OAAO1M,QAJtE,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,8BAOR,eAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,YACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO2G,GACP8F,SAAW,SAACd,GAAOjG,IAAgB,GAAQ4S,GAAY8B,OAAOzO,EAAEe,OAAO1M,WAE3E,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YAHvB,UAKI,cAAC9H,GAAA,EAAD,CAAYxH,GAAG,sBAAf,yBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,sBACR1H,GAAG,gBACHxJ,MAAO4G,GACP6F,SAAU,SAACd,GAAOjG,IAAgB,GAAQ6S,GAAc6B,OAAOzO,EAAEe,OAAO1M,SAJ5E,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,IAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,IAAjB,qBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,IAAjB,2BAMR,eAACoM,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACA,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,mBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO4S,GACPnG,SAAW,SAACd,GAAOjG,IAAgB,GAAQ8S,GAAc4B,OAAOzO,EAAEe,OAAO1M,WAE7E,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YAHvB,UAKI,cAAC9H,GAAA,EAAD,CAAYxH,GAAG,qBAAf,wBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,qBACR1H,GAAG,eACHxJ,MAAO0S,GACPjG,SAAU,SAACd,GAAOjG,IAAgB,GAAQ2S,GAAc1M,EAAEe,OAAO1M,QAJrE,UAMA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,kBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,kCAQR,cAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQ6E,QAAxB,SACI,cAAC+B,EAAA,EAAD,CACI8C,SAAU7H,GACVkF,QAAQ,YACRC,MAAM,UACNF,KAAM,SACND,QAxlBf,WACb,IAAMoQ,EAAW9O,OAAOC,OAAO,GAAI9L,EAAMgB,MAEzC2Z,EAASjX,QAAU4T,GACnBqD,EAASpa,MAAQsL,OAAOC,OAAOvL,EAAO,CAClC6J,MAAO8R,EACP7R,UAAW+R,EACX1Y,QAASoY,GACT5M,IAAK6M,IAETpB,EAASlC,KAAOC,GAEhB1Y,EAAM4a,eAAe5a,EAAMgB,KAAKsI,GAAIqR,GACpCnV,IAAgB,IAskBQ,6BAehB,eAAC4F,EAAA,EAAD,CAAM5J,MAAI,EAAC+J,GAAI,GAAK/G,UAAWd,GAAQuV,kBAAvC,UAGQ,sBACIzU,UAAWd,GAAQkW,SACnBrP,QAplBC,WACrBjF,IAAQ,IAolBYkI,gBAAc,cAAcqN,gBAAc,OAH9C,UAKI,cAAC1Q,EAAA,EAAD,CAAUC,MAAK,2BAA+BC,UAAW,MAAzD,SACI,qBAAK7F,UAAWd,GAAQ6V,WAE5B,cAACpP,EAAA,EAAD,CAAUC,MAAK,8BAAkCC,UAAW,MAA5D,SACI,qBAAK7F,UAAWd,GAAQ+V,WAE5B,cAACtP,EAAA,EAAD,CAAUC,MAAK,4BAAgCC,UAAW,MAA1D,SACI,qBAAK7F,UAAWd,GAAQgW,WAE5B,cAACvP,EAAA,EAAD,CAAUC,MAAK,+BAAmCC,UAAW,MAA7D,SACI,qBAAK7F,UAAWd,GAAQiW,WAE5B,cAAC,GAAD,CACI3Y,KAAM+Y,GACNvV,UAAW8S,GACXwE,eAAgBA,GAChBC,SAAUA,EACVjB,KAAM9a,EAAMgB,KAAK8Z,KACjBnD,aAAce,QAItB,cAACvO,EAAA,EAAD,CAAUC,MAAM,mBAAoBC,UAAW,MAA/C,SACI,cAACoC,EAAA,EAAD,CACIjI,UAAYd,GAAQmW,eACpBrP,KAAK,QACL2C,aAAW,SACX5C,QAtnBT,WACfvK,EAAM+a,WAAW/a,EAAMgB,KAAKsI,KAinBR,SAMI,cAAC,KAAD,CAAeqB,MAAO,CAAED,MAAO,qBCv8BhDmL,OAhCf,SAAwB7V,GAAQ,IAErBD,EAAWvC,IAAMqH,WAAWtH,GAA5BwC,QAGP,OAEI,cADA,CACC,IAAMyT,SAAP,WAEQzT,GACA,cAAC,GAAD,CACIiB,KAAMhB,EAAMwB,KACZoZ,eAAgB5a,EAAM4a,eACtBG,WAAY/a,EAAM+a,cAKrBhb,GACD,cAAC,GAAD,CACIiB,KAAMhB,EAAMwB,KACZgD,UAAWxE,EAAMwB,KAAKkC,QACtBoY,eAAgB9b,EAAMwB,KAAKjB,MAAMmD,QACjCqY,SAAU/b,EAAMwB,KAAKjB,MAAM2O,IAC3B4L,KAAM9a,EAAMwB,KAAKsZ,KACjBnD,aAAc3X,EAAMwB,KAAKiX,WCoJ9BvH,OAxKf,SAAuBlR,GAAQ,IAEpBD,EAAWvC,IAAMqH,WAAWtH,GAA5BwC,QAKD2D,EAHYC,aAAW,SAACuC,GAAD,MAAY,CACrCoR,YAAatX,EAAM0D,WAEPa,GAGhB,OACI,cAAC,IAAMiP,SAAP,UACI,eAACE,GAAA,EAAD,CACIxM,SAAUlH,EAAMU,SAASwG,SACzB0I,MAAO5P,EAAMU,SAASkP,MACtBH,eAAgBzP,EAAMU,SAAS+O,eAC/BjL,UAAWd,EAAQ4T,YAJvB,UAOQtX,EAAMU,SAASmd,gBACf,eAACnK,GAAA,EAAD,CACIxM,SAAU,KACV0I,MAAO5P,EAAMU,SAASkP,MACtBH,eAAgBzP,EAAMU,SAAS+O,eAHnC,UAMQ1P,GACAC,EAAMgB,KAAKf,SAASsB,KAAI,SAACC,GACrB,OAAOA,EAAK0H,MACR,IAAK,UACD,OACI,cAAC,GAAD,CAEI1H,KAAMA,EACNoZ,eAAgB5a,EAAM4a,eACtBG,WAAY/a,EAAM+a,YAHbvZ,EAAK8H,IAMtB,IAAK,YACD,OACI,cAAC,GAAD,CAEI9H,KAAMA,EACNoZ,eAAgB5a,EAAM4a,eACtBG,WAAY/a,EAAM+a,YAHbvZ,EAAK8H,IAMtB,IAAK,iBACD,OACI,cAAC,GAAD,CAEI9H,KAAMA,EACNoZ,eAAgB5a,EAAM4a,eACtBG,WAAY/a,EAAM+a,YAHbvZ,EAAK8H,IAQ1B,OAAO,SAGVvJ,GACDC,EAAMgB,KAAKf,SAASsB,KAAI,SAACC,GACrB,OAAOA,EAAK0H,MACR,IAAK,UACD,OACI,cAAC,GAAD,CAEI1H,KAAMA,GADDA,EAAK8H,IAItB,IAAK,YACD,OACI,cAAC,GAAD,CAEI9H,KAAMA,GADDA,EAAK8H,IAItB,IAAK,iBACD,OACI,cAAC,GAAD,CAEI9H,KAAMA,GADDA,EAAK8H,IAM1B,OAAO,YAMlBtJ,EAAMU,SAASmd,gBAChB,eAAC,IAAMrK,SAAP,WAEQzT,GACAC,EAAMgB,KAAKf,SAASsB,KAAI,SAACC,GACrB,OAAOA,EAAK0H,MACR,IAAK,UACD,OACI,cAAC,GAAD,CAEI1H,KAAMA,EACNoZ,eAAgB5a,EAAM4a,eACtBG,WAAY/a,EAAM+a,YAHbvZ,EAAK8H,IAMtB,IAAK,YACD,OACI,cAAC,GAAD,CAEI9H,KAAMA,EACNoZ,eAAgB5a,EAAM4a,eACtBG,WAAY/a,EAAM+a,YAHbvZ,EAAK8H,IAMtB,IAAK,iBACD,OACI,cAAC,GAAD,CAEI9H,KAAMA,EACNoZ,eAAgB5a,EAAM4a,eACtBG,WAAY/a,EAAM+a,YAHbvZ,EAAK8H,IAQ1B,OAAO,SAGVvJ,GACDC,EAAMgB,KAAKf,SAASsB,KAAI,SAACC,GACrB,OAAOA,EAAK0H,MACR,IAAK,UACD,OACI,cAAC,GAAD,CAEI1H,KAAMA,GADDA,EAAK8H,IAItB,IAAK,YACD,OACI,cAAC,GAAD,CAEI9H,KAAMA,GADDA,EAAK8H,IAItB,IAAK,iBACD,OACI,cAAC,GAAD,CAEI9H,KAAMA,GADDA,EAAK8H,IAM1B,OAAO,iB,UC8nBxBwU,OAjxBf,SAA0B9d,GACtBvB,QAAQC,IAAI,yBADiB,IAErB6D,EAAY/E,IAAMqH,WAAWxC,GAA7BE,QACFwb,EAAiBxb,EAAQyb,QACzBC,EAAmB1b,EAAQ2b,UAC3BC,EAAwB5b,EAAQ6b,eALT,EAOC5gB,IAAM0H,SAAS,CACzC3B,IAAMvD,EAAMgB,KAAK0C,QAAQ+E,WACzBD,OAAQxI,EAAMgB,KAAK0C,QAAQuD,gBATF,mBAOtBD,EAPsB,KAOb+Q,EAPa,OAWDva,IAAM0H,SAAS,CACvC3B,IAAMvD,EAAMgB,KAAK0C,QAAQ0C,UACzBoC,OAAQxI,EAAMgB,KAAK0C,QAAQ6C,eAbF,mBAWtBqM,EAXsB,KAWdoF,EAXc,OAgBCxa,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ6D,SAAW,QAhB9C,mBAgBtBA,EAhBsB,KAgBbkU,EAhBa,OAiBaje,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ0E,eAAiB,UAjBhE,mBAiBtBA,EAjBsB,KAiBPiW,EAjBO,OAmBH7gB,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQgH,OAAS,WAnBxC,mBAmBtBA,EAnBsB,KAmBfuN,EAnBe,OAoBiBza,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQU,iBAAoB,eApBvE,mBAoBtBA,EApBsB,KAoBL8T,EApBK,OAqBD1a,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQuM,WAAa,QArB9C,mBAqBtBqO,EArBsB,KAqBdC,EArBc,OAuBS/gB,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQuX,aAAgB,eAvB3D,mBAuBtBA,EAvBsB,KAuBTC,EAvBS,OAwBS1d,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQyX,aAAgB,SAxB3D,oBAwBtBA,GAxBsB,MAwBTC,GAxBS,SAyBS5d,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ2X,aAAgB,OAzB3D,qBAyBtBA,GAzBsB,MAyBTC,GAzBS,SA0BW9d,IAAM0H,SAASlF,EAAMgB,KAAK0C,QAAQ6X,cAAiB,OA1B9D,qBA0BtBA,GA1BsB,MA0BRC,GA1BQ,SA4BWhe,IAAM0H,UAAS,GA5B1B,qBA4BtBK,GA5BsB,MA4BRC,GA5BQ,SA8BGhI,IAAM0H,SAASlF,EAAMgB,KAAKf,UA9B7B,qBA8BtBA,GA9BsB,MA8BZue,GA9BY,SAgCahhB,IAAM0H,SAASlF,EAAMgB,KAAKyO,gBAhCvC,qBAgCtBC,GAhCsB,MAgCPC,GAhCO,SAiCWnS,IAAM0H,SAASlF,EAAMgB,KAAK4O,OAjCrC,qBAiCtBC,GAjCsB,MAiCRC,GAjCQ,SAkCiBtS,IAAM0H,SAASlF,EAAMgB,KAAKkG,UAlC3C,qBAkCtB6I,GAlCsB,MAkCLC,GAlCK,SAmC6BxS,IAAM0H,SAASlF,EAAMgB,KAAK6c,iBAAkB,GAnCzE,qBAmCtBY,GAnCsB,MAmCCC,GAnCD,SAqCGlhB,IAAM0H,SAAS,MArClB,qBAqCtByZ,GArCsB,MAqCZC,GArCY,SAsCLphB,IAAM0H,UAAS,GAtCV,qBAsCtBG,GAtCsB,MAsChBC,GAtCgB,MAyCvBuZ,GAAgB,CAClB3X,SAAU6I,GACVN,eAAgBC,GAChBE,MAAOC,GACPgO,eAAgBY,IAmId/a,GA/HYC,aAAW,SAACuC,GAE1B,OADEzH,QAAQC,IAAIwH,GACL,CACL4Y,eAAiB,CACb1a,gBAAiB8B,EAAMW,QAAQ5H,MAAMyW,KACrC7R,SAAU,WACVN,IAAK,EACLQ,KAAM,EACND,OAAQ,KACR+D,SAAU,GACVS,QAAS,EACTR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASC,QAAhC,cAA6CjC,EAAM6B,YAAYC,OAAOmR,OAAtE,aAEd4F,cAAe,CACX3a,gBAAiB8B,EAAMW,QAAQ5H,MAAMyW,KACrC,UAAW,CACPtR,gBAAiB8B,EAAMW,QAAQ8O,UAAUD,OAGjDsJ,iBAAkB,CACdnb,SAAU,WACVqV,QAAS,sBACTpR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASC,QAAhC,cAA6CjC,EAAM6B,YAAYC,OAAOmR,OAAtE,YACV,UAAY,CACRE,aAAa,GAAD,OAAKnT,EAAMW,QAAQ5H,MAAMoT,MACrC,YAAc,CACV/J,QAAS,GAEb,YAAc,CACVA,QAAS,GAEb,YAAc,CACVA,QAAS,GAEb,YAAc,CACVA,QAAS,GAEb,oBAAqB,CACjBA,QAAS,KAKrBiR,OAAQ,CACJ1V,SAAU,WACVN,IAAI,IAAD,OAAMqP,EAAOrP,IAAb,MACHQ,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK0O,EAAOrP,IAAZ,MACN+E,QAAS,EACTR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASsR,SAAhC,cAA8CtT,EAAM6B,YAAYC,OAAOmR,OAAvE,aAEdM,OAAQ,CACJ5V,SAAU,WACV2E,OAAO,IAAD,OAAMoK,EAAOpK,OAAb,MACNzE,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK0O,EAAOpK,OAAZ,MACNF,QAAS,EACTR,WAAW,SAAD,OAAW5B,EAAM6B,YAAYC,OAAOmR,OAApC,aAEdO,OAAQ,CACJ7V,SAAU,WACVN,IAAK,EACLQ,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK8C,EAAQzD,IAAb,MACN+E,QAAS,EACTR,WAAW,GAAD,OAAK5B,EAAM6B,YAAYG,SAASsR,SAAhC,cAA8CtT,EAAM6B,YAAYC,OAAOmR,OAAvE,aAEdQ,OAAQ,CACJ9V,SAAU,WACV2E,OAAQ,EACRzE,KAAM,EACNC,MAAO,EACPF,OAAQ,GACRM,gBAAiB,YACjBF,OAAO,GAAD,OAAK8C,EAAQwB,OAAb,MACNF,QAAS,EACTR,WAAW,SAAD,OAAW5B,EAAM6B,YAAYC,OAAOmR,OAApC,aAEd1I,aAAc,CACVC,YAAa,EACbnK,aAAc,GACdoK,SAAU,GAEdiI,YAAa,CACTjI,SAAU,EACViC,OAAQ,EACR3O,MAAO,OACPiD,SAAU,OAEd2R,WAAY,CACRC,OAAQ,oBACR9R,QAAS,EACT4R,YAAa,CACT1R,SAAU,SAIlBqB,QAAS,CACL1E,SAAU,SACVC,OAAQoC,EAAMpC,OAAOkV,QACrBxQ,OAAQ,EACRzE,KAAM,GACNC,MAAO,EACPE,OAAQ,GACRE,gBAAiB8B,EAAMW,QAAQC,WAAWC,MAE1C,WAAY,CACRX,UAAW,GACXG,aAAc,GACd+B,QAAS,EACTjC,YAAa,GACbuC,aAAc,QAOdrE,GAEV+S,GAAc,CAChB7O,WAAYzB,EAAQzD,IACpB0D,cAAeD,EAAQwB,OACvBpC,UAAWwM,EAAOrP,IAClBgD,aAAcqM,EAAOpK,OACrBkC,MAAOA,EACPtG,gBAAiBA,EACjB6W,YAAaA,EACbE,YAAaA,GACbI,aAAcA,GACdF,YAAaA,GACbpL,UAAWqO,EACX/W,QAASA,EACTa,cAAeA,GAIb4R,GAAgB,SAACvO,EAAGpC,GACtB,IAAI4Q,EAAapO,OAAOC,OAAO,GAAI9E,GACnCiT,EAAW5Q,GAAa6Q,OAAOzO,EAAEe,OAAO1M,OACxCiY,EAAWkC,GAEXzU,IAAgB,IAEd2U,GAAe,SAAC1O,EAAGpC,GACrB,IAAI+Q,EAAYvO,OAAOC,OAAO,GAAI8G,GAClCwH,EAAU/Q,GAAa6Q,OAAOzO,EAAEe,OAAO1M,OACvCkY,EAAUoC,GAEV5U,IAAgB,IAGdyZ,GAAgB,WAClB3Z,IAASD,KAOP6Z,GAAyB,SAACzU,EAASvB,GACrC0V,GAAY,MACZK,KACAE,GAAW1U,EAASvB,IAGlBiW,GAAU,uCAAG,WAAO1U,EAASvB,GAAhB,iBAAAkW,EAAA,sDAEXC,EAAcpf,GAASwJ,QAEvB6V,EAAU,GAJC,KAORpW,EAPQ,OAQN,YARM,OAcN,cAdM,QAkBN,mBAlBM,+BASPoW,EAAUzT,OAAOC,OAAO,GAAIiS,IACpBzU,GAAKyC,MACbuT,EAAQ7U,QAAU6U,EAAQ7U,QAAQA,GAClC6U,EAAQ7G,MAAQ,MAAQ6G,EAAQ7U,QAZzB,oCAeP6U,EAAUzT,OAAOC,OAAO,GAAImS,IACpB3U,GAAKyC,MAhBN,oCAmBPuT,EAAUzT,OAAOC,OAAO,GAAIqS,IACpB7U,GAAKyC,MApBN,iEAyBfsT,EAAYrT,KAAKsT,GAEjBd,GAAYa,GAGZrf,EAAMuf,gBAAgBvf,EAAMgB,KAAKsI,GAAI+V,GA9BtB,4CAAH,wDAuCVzE,GAAc,uCAAG,WAAOtR,EAAItI,GAAX,eAAAoe,EAAA,uDACfI,EAAcvf,GAASwJ,SACfgW,SAAQ,SAACje,GACjB,GAAGA,EAAK8H,KAAOA,EACX,IAAK,IAAIoW,KAAOle,EACZA,EAAKke,GAAO1e,EAAK0e,MAK7B1f,EAAMuf,gBAAgBvf,EAAMgB,KAAKsI,GAAIkW,GAVlB,2CAAH,wDAcdzE,GAAU,uCAAG,WAAOzR,GAAP,eAAA8V,EAAA,sDACJ/b,OAAOsc,QAAQ,cAGlB9S,EAAW5M,GAAS6M,QAAO,SAACtL,GAAD,OAAWA,EAAK8H,KAAOA,KACtDkV,GAAY3R,GAGZ7M,EAAMuf,gBAAgBvf,EAAMgB,KAAKsI,GAAIuD,IAR1B,2CAAH,sDAgBV+S,GAAgB,SAACvW,EAAWC,GAC9BtJ,EAAM4f,cAAcvW,EAAWC,IAInC,OACI,eAACoK,GAAA,EAAD,CACIxM,SAAU2X,GAAc3X,SACxB0I,MAAOiP,GAAcjP,MACrBH,gBAAgB,EAChBjL,UAAWd,GAAQsb,iBAJvB,UAMI,cAAC7U,EAAA,EAAD,CAAUC,MAAK,wBAA4BC,UAAW,MAAtD,SACI,qBAAK7F,UAAWd,GAAQ6V,WAE5B,cAACpP,EAAA,EAAD,CAAUC,MAAK,2BAA+BC,UAAW,MAAzD,SACI,qBAAK7F,UAAWd,GAAQ+V,WAE5B,cAACtP,EAAA,EAAD,CAAUC,MAAK,yBAA6BC,UAAW,MAAvD,SACI,qBAAK7F,UAAWd,GAAQgW,WAE5B,cAACvP,EAAA,EAAD,CAAUC,MAAK,4BAAgCC,UAAW,MAA1D,SACI,qBAAK7F,UAAWd,GAAQiW,WAG5B,eAACzN,EAAA,EAAD,CAAKvB,MAAO,CAAC9G,SAAU,YAAvB,UAEI,cAACqI,EAAA,EAAD,CAAK1H,UAAWd,GAAQob,eAAxB,SAEI,eAAC7R,EAAA,EAAD,CACIC,YAAY,WACZxC,MAAM,YACNyC,aAAW,0CACX1C,QAAQ,YAJZ,UAMI,cAACN,EAAA,EAAD,CAASC,MAAM,qBAAqBC,UAAU,QAA9C,SACI,cAACC,EAAA,EAAD,CACIC,QAAS0U,GACTzU,KAAK,SACLC,QAAQ,YAERjG,UAAWd,GAAQqb,cALvB,SAOI,cAAC,KAAD,CAAcpU,MAAO,CAAED,MAAO,QAAUjE,SAAS,cAGzD,cAAC0D,EAAA,EAAD,CAASC,MAAM,SAASC,UAAU,QAAlC,SACI,cAACC,EAAA,EAAD,CACIC,QAAS,WAAQqV,GAAc,KAAM5f,EAAMgB,KAAKsI,KAChDkB,KAAK,SACLC,QAAQ,YAERjG,UAAWd,GAAQqb,cALvB,SAOI,cAAC,KAAD,CAAwBpU,MAAO,CAAED,MAAO,QAAUjE,SAAS,cAGnE,cAAC0D,EAAA,EAAD,CAASC,MAAM,WAAWC,UAAU,QAApC,SACI,cAACC,EAAA,EAAD,CACIC,QAAS,WAAQqV,GAAc,OAAQ5f,EAAMgB,KAAKsI,KAClDkB,KAAK,SACLC,QAAQ,YAERjG,UAAWd,GAAQqb,cALvB,SAOI,cAAC,KAAD,CAAwBpU,MAAO,CAAED,MAAO,QAAUjE,SAAS,mBAOvE,cAACoN,GAAA,EAAD,CAAQC,OAAQ,OAAQzO,KAAMA,GAAMyF,QAASmU,GAA7C,SAEQ,eAAC/S,EAAA,EAAD,CACIwR,GAAI,EACJC,GAAI,GACJF,GAAI,EACJvW,SAAU,IACVrD,SAAU,WALd,UAOI,eAACoI,EAAA,EAAD,WACI,cAACf,EAAA,EAAD,CAAcT,QAAS,KAAMqD,cAAY,EAAzC,+BAGD,cAAC5B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACK,cAAC7B,EAAA,EAAD,CACIC,QA3FhB,WACpBvK,EAAM6f,gBAAgB7f,EAAMgB,KAAKsI,KA2FGmB,QAAQ,WACRC,MAAM,YAHV,mCAUR,eAACuB,EAAA,EAAD,WACI,cAACf,EAAA,EAAD,CAAaT,QAAS,KAAMqD,cAAY,EAAxC,gCAGA,eAAC5B,EAAA,EAAD,WACQ,cAACA,EAAA,EAAD,CAAK4T,GAAI,EAAG3T,GAAI,EAAGmI,OAAO,EAA1B,SACI,cAAChK,EAAA,EAAD,CACIkD,gBAAc,eACdqN,gBAAc,OACdtQ,QAxLjB,SAAC6E,GAC5BwP,GAAYxP,EAAM2Q,gBAwL0BtV,QAAQ,YACRC,MAAM,UALV,uBAWJ,eAAC,KAAD,CACIpB,GAAG,eACHqV,SAAUA,GACVqB,aAAW,EACX3a,KAAM4a,QAAQtB,IACd7T,QAASoU,GALb,UAOI,cAACjO,GAAA,EAAD,CAAUnR,MAAO,EAAGyK,QAAS,SAACkB,GAAOyT,GAAuBzT,EAAEe,OAAO1M,MAAO,YAA5E,wBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,EAAGyK,QAAS,SAACkB,GAAOyT,GAAuBzT,EAAEe,OAAO1M,MAAO,YAA5E,wBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,EAAGyK,QAAS,SAACkB,GAAOyT,GAAuBzT,EAAEe,OAAO1M,MAAO,YAA5E,wBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,EAAGyK,QAAS,SAACkB,GAAOyT,GAAuBzT,EAAEe,OAAO1M,MAAO,YAA5E,wBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,EAAGyK,QAAS,SAACkB,GAAOyT,GAAuBzT,EAAEe,OAAO1M,MAAO,YAA5E,wBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,EAAGyK,QAAS,SAACkB,GAAOyT,GAAuBzT,EAAEe,OAAO1M,MAAO,YAA5E,2BAGJ,cAACoM,EAAA,EAAD,CAAK4T,GAAI,EAAG3T,GAAI,EAAGmI,OAAO,EAA1B,SACI,cAAChK,EAAA,EAAD,CACIC,QAAS,WAAO4U,GAAW,IAAK,aAAcF,MAC9CxU,QAAQ,YACRC,MAAM,UAHV,yBAQJ,cAACwB,EAAA,EAAD,CAAK4T,GAAI,EAAG3T,GAAI,EAAGmI,OAAO,EAA1B,SACI,cAAChK,EAAA,EAAD,CACIC,QAAS,WAAO4U,GAAW,IAAK,kBAAmBF,MACnDxU,QAAQ,YACRC,MAAM,UAHV,qCAYhB,cAACQ,EAAA,EAAD,CAAaT,QAAS,KAAMqD,cAAY,EAAxC,sBAGA,eAAC7B,EAAA,EAAD,CAAW2E,KAAG,EAAd,UACI,eAACC,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQ+M,aAHvB,UAKI,cAACK,GAAA,EAAD,CAAYxH,GAAG,0BAAf,6BACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,oBACR1H,GAAG,oBACHxJ,MAAO4P,GACPnD,SAAU,SAACd,GAAOjG,IAAgB,GAAQmK,GAAiBlE,EAAEe,OAAO1M,QAJxE,UAMI,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,wBAMR,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQ+M,aAHvB,UAKI,cAACK,GAAA,EAAD,CAAYxH,GAAG,oBAAf,mBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,cACR1H,GAAG,cACHxJ,MAAO+P,GACPtD,SAAU,SAACd,GAAOjG,IAAgB,GAAQsK,GAAgBrE,EAAEe,OAAO1M,QAJvE,UAMI,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,2BAKZ,eAACmM,EAAA,EAAD,CAAW2E,KAAG,EAAd,UACI,eAACC,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQ+M,aAHvB,UAKI,cAACK,GAAA,EAAD,CAAYxH,GAAG,uBAAf,uBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,iBACR1H,GAAG,iBACHxJ,MAAOiQ,GACPxD,SAAU,SAACd,GAAOjG,IAAgB,GAAQwK,GAAmBvE,EAAEe,OAAO1M,QAJ1E,UAMI,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,KAAjB,wBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,KAAjB,wBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,KAAjB,uBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,KAAjB,uBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,KAAjB,2BAIR,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQ+M,aAHvB,UAKI,cAACK,GAAA,EAAD,CAAYxH,GAAG,8BAAf,6BACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,wBACR1H,GAAG,wBACHxJ,MAAO2e,GACPlS,SAAU,SAACd,GAAOjG,IAAgB,GAAQkZ,GAAyBjT,EAAEe,OAAO1M,QAJhF,UAMI,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,OAAO,EAAjB,2BAKZ,cAACoL,EAAA,EAAD,CAAaT,QAAS,KAAMqD,cAAY,EAAxC,oBAGA,eAAC,IAAM0F,SAAP,WAEI,eAACtH,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UAEI,cAAC1O,EAAA,EAAD,CAASC,MAAM,mcAAf,SACI,cAACqC,EAAA,EAAD,UACI,cAAC,KAAD,QAGR,eAACP,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,eAACyI,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YACnBlM,WAAS,EAJb,UAMI,cAACoE,GAAA,EAAD,CAAYxH,GAAG,sBAAf,qBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,sBACR1H,GAAG,gBACHxJ,MAAOyH,EACPgF,SAAU,SAACd,GAAOjG,IAAgB,GAAQiW,EAAWhQ,EAAEe,OAAO1M,QAJlE,UAMI,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,wBAIQ,SAAZyH,GACA,eAACsJ,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YACnBlM,WAAS,EAJb,UAMI,cAACoE,GAAA,EAAD,CAAYxH,GAAG,wBAAf,4BACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,wBACR1H,GAAG,kBACHxJ,MAAOsI,EACPmE,SAAU,SAACd,GAAOjG,IAAgB,GAAQ6Y,EAAiB5S,EAAEe,OAAO1M,QAJxE,UAMI,cAACmR,GAAA,EAAD,CAAUnR,MAAO,MAAjB,iBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,cAAjB,yBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,iBAAjB,wCAQpB,cAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,SACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,aACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAOrP,IACdgJ,SAAW,SAACd,GAAQjG,IAAgB,GAAQ2U,GAAa1O,EAAG,UAEhE,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAO8S,EAAOpK,OACd+D,SAAW,SAACd,GAAQjG,IAAgB,GAAQ2U,GAAa1O,EAAG,kBAMxE,cAACS,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,SACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,cACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQzD,IACfgJ,SAAW,SAACd,GAAQjG,IAAgB,GAAQwU,GAAcvO,EAAG,UAEjE,cAACW,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,iBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOkH,EAAQwB,OACf+D,SAAW,SAACd,GAAOjG,IAAgB,GAAQwU,GAAcvO,EAAG,kBAQxE,eAACS,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAYtR,QAAQ,OAAOa,cAAc,MAAjE,UAEI,eAAC8D,EAAA,EAAD,CACI1H,UAAWd,GAAQkV,YADvB,UAGK,cAAC1N,EAAA,EAAD,CAAaC,UAAW,KAAM2C,cAAY,EAA1C,wBAGD,cAAC,KAAD,CACI7J,MAAO,OACPqW,SAAU,OACVC,OAAQ,CAAI,UAAW,UAAW,UAAW,qBAC7CC,iBAAkB,SAACC,GACfjV,IAAgB,GAChB0S,EAAmBuC,EAASC,WAKxC,eAACxO,EAAA,EAAD,CACI1H,UAAWd,GAAQkV,YADvB,UAGI,cAAC1N,EAAA,EAAD,CAAYC,UAAW,KAAM2C,cAAY,EAAzC,wBAGA,cAAC,KAAD,CACI7J,MAAO,OACPqW,SAAU,OACVC,OAAQ,CAAI,UAAW,UAAW,UAAW,qBAC7CC,iBAAkB,SAACC,GACfjV,IAAgB,GAChByS,EAASwC,EAASC,cAQlC,cAACxO,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAYtR,QAAQ,OAAOa,cAAc,MAAjE,SACI,eAACyI,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YAHvB,UAKI,cAAC9H,GAAA,EAAD,CAAYxH,GAAG,qBAAf,wBACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,qBACR1H,GAAG,eACHxJ,MAAOwe,EACP/R,SAAU,SAACd,GAAOjG,IAAgB,GAAQ+Y,EAAU9S,EAAEe,OAAO1M,QAJjE,UAMI,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,kBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAK,uJAAf,mBAEA,cAACmR,GAAA,EAAD,CAAUnR,MAAK,yJAAf,oBAEA,cAACmR,GAAA,EAAD,CAAUnR,MAAK,4JAAf,2BAQZ,eAACoM,EAAA,EAAD,CAAK1H,UAAWd,GAAQmV,WAAxB,UACI,eAAC3M,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UACI,cAACgE,EAAA,EAAD,CACQ5H,UAAWd,GAAQkV,YACnB1P,KAAK,QACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOmb,EACP1O,SAAW,SAACd,GAAQjG,IAAgB,GAAS0V,EAAezP,EAAEe,OAAO1M,UAE7E,cAACsM,EAAA,EAAD,CACQ5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,gBACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOyb,GACPhP,SAAW,SAACd,GAAQjG,IAAgB,GAASgW,GAAgBtB,OAAOzO,EAAEe,OAAO1M,cAIzF,eAACoM,EAAA,EAAD,CAAK3E,QAAQ,OAAOa,cAAc,MAAlC,UAEA,cAACgE,EAAA,EAAD,CACI5H,UAAWd,GAAQkV,YACnB1P,KAAK,SACLoD,MAAM,eACN7B,QAAQ,SACRD,KAAK,QACL1K,MAAOub,GACP9O,SAAW,SAACd,GAAQjG,IAAgB,GAAO8V,GAAepB,OAAOzO,EAAEe,OAAO1M,WAE9E,eAAC+Q,GAAA,EAAD,CACIpG,QAAQ,SACRD,KAAK,QACLhG,UAAWd,GAAQkV,YAHvB,UAKI,cAAC9H,GAAA,EAAD,CAAYxH,GAAG,qBAAf,0BACA,eAACyH,GAAA,EAAD,CACIC,QAAQ,qBACR1H,GAAG,eACHxJ,MAAOqb,GACP5O,SAAU,SAACd,GAAOjG,IAAgB,GAAQ4V,GAAe3P,EAAEe,OAAO1M,QAJtE,UAMI,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,SAAjB,oBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,QAAjB,mBACA,cAACmR,GAAA,EAAD,CAAUnR,MAAO,OAAjB,8BAMZ,cAACoM,EAAA,EAAD,CAAM1H,UAAWd,GAAQ6E,QAAzB,SACI,cAAC+B,EAAA,EAAD,CACI8C,SAAU7H,GAEVkF,QAAQ,YACRC,MAAM,UACNF,KAAM,SACND,QAvfV,WAC1BvK,EAAMkgB,6BAA6BlgB,EAAMgB,KAAKsI,GAAIgO,GAAauH,IAC/DrZ,IAAgB,IA+egB,+BAkBxB,cAAC,GAAD,CACIoV,eAAgBA,GAChBG,WAAYA,GACZ/Z,KAAMhB,EAAMgB,KACZ0C,QAAS4T,GACT5W,SAAUme,SCpvBfhJ,OApCf,SAAwB7V,GAAQ,IAErBD,EAAWvC,IAAMqH,WAAWtH,GAA5BwC,QAED8e,EAAgB,CAClB3X,SAAUlH,EAAMgB,KAAKkG,SACrBuI,eAAgBzP,EAAMgB,KAAKyO,eAC3BG,MAAO5P,EAAMgB,KAAK4O,OAGtB,OACI,eAAC,IAAM4D,SAAP,WAEQzT,GACA,cAAC,GAAD,CACIiB,KAAMhB,EAAMgB,KACZue,gBAAiBvf,EAAMuf,gBACvBW,6BAA8BlgB,EAAMkgB,6BACpCL,gBAAiB7f,EAAM6f,gBACvBD,cAAe5f,EAAM4f,iBAKxB7f,GACD,cAAC,GAAD,CACIiB,KAAMhB,EAAMgB,KACZ0C,QAAS1D,EAAMgB,KAAK0C,QACpB6b,gBAAiBvf,EAAMuf,gBACvB7e,SAAUme,Q,OCiEf3N,OA/Ff,SAAuBlR,GAEnB,IAAMmgB,EAAYngB,EAAMgB,KAAKgd,QACvBoC,EAAepgB,EAAMgB,KAAKqf,YAAYjW,MAEtC8T,EAAYle,EAAMgB,KAAKkd,UACvBoC,EAAatgB,EAAMgB,KAAKqV,KAAKiK,WAC7BC,EAAcvgB,EAAMgB,KAAKqV,KAAKkK,YAC9BC,EAASxgB,EAAMgB,KAAKqV,KAAKmK,OACzBzE,EAAW/b,EAAMgB,KAAKT,MAwBtBmD,EAtBYC,aAAY,SAACuC,GAAD,MAAY,CACtC8P,WAAY,CACRtL,MAAOxE,EAAMW,QAAQuL,QAAQC,KAC7B,QAAU,CACN4D,KAAM/P,EAAMW,QAAQuL,QAAQC,OAGpCoO,MAAO,CACH3H,OAAO,aAAD,OAAe5S,EAAMW,QAAQuL,QAAQC,MAC3CjO,gBAAiB8B,EAAMW,QAAQC,WAAWgO,QAC1CpK,MAAOxE,EAAMW,QAAQ4R,KAAKrG,SAE9BsO,OAAQ,CACJ5H,OAAO,aAAD,OAAe5S,EAAMW,QAAQuL,QAAQC,KAArC,eACNjO,gBAAiB8B,EAAMW,QAAQuL,QAAQC,KACvCvK,WAAW,GAAD,OAAK5B,EAAM6B,YAAYC,OAAOC,UAA9B,YAA2C/B,EAAM6B,YAAYG,SAASC,QAAtE,MACV,UAAY,CACRrB,WAAY,OACZ4D,MAAOxE,EAAMW,QAAQuL,QAAQkH,WAIzB/U,GAChB,OACI,qBAAKC,UAAU,kBAAf,SACI,cAACkP,GAAA,EAAD,CAAWxM,SAAS,KAApB,SACI,eAACkE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAM5J,MAAI,EAAC0Q,GAAI,EAAG1N,UAAU,kBAA5B,SACI,sBAAKA,UAAU,0BAAf,UACI,6BAEQ2b,IAGR,qBAAI3b,UAAWd,EAAQsS,WAAvB,UACI,qBAAK2K,QAAQ,sBAAb,SACI,8BAAG,sBAAMC,EAAE,gGAA+F,sBAAMA,EAAE,mxCAAkxC,sBAAMA,EAAE,2RAA0R,sBAAMA,EAAE,gSAElrD,+BACMR,OAGV,4BACMlC,IAEN,sBAAK1Z,UAAU,+BAAf,UACI,sBAAMgH,SAAU,SAACC,GAAQA,EAAEC,kBAA3B,SACI,sBAAKlH,UAAU,sCAAf,UACI,+BACI,uBACI0E,KAAK,MACL0F,KAAK,QACLvC,UAAQ,EACRwU,YAAW,UAAKP,GAChB9b,UAAWd,EAAQ+c,UAG3B,qBAAKjc,UAAU,WAAf,SACI,wBACIA,UAAWd,EAAQgd,OACnBxX,KAAK,SAFT,SAIMqX,WAKlB,+BACMC,YAKlB,cAACpV,EAAA,EAAD,CAAM8G,GAAI,EAAG1N,UAAU,WAAvB,SACI,qBAAKA,UAAU,0CAAf,SACA,qBAAKA,UAAU,QAAQmG,MAAO,CAAErG,gBAAgB,OAAD,OAASyX,EAAT,oBCjFxDzG,OARf,SAAyBtV,GACrB,OACI,8BACI,cAAC,GAAD,CAAegB,KAAMhB,EAAMgB,UCuBxB6U,OAvBf,SAAwB7V,GAAQ,IAErBD,EAAWvC,IAAMqH,WAAWtH,GAA5BwC,QAEP,OACI,eAAC,IAAMyT,SAAP,WAEQzT,GACA,cAAC,GAAD,CACIiB,KAAMhB,EAAMgB,QAKfjB,GACD,cAAC,GAAD,CACIiB,KAAMhB,EAAMgB,W,UC0BjB8f,OA5Cf,WACI,OACI,cAAC5U,EAAA,EAAD,CAAK+B,GAAI,EAAGqG,OAAO,EAAnB,SACI,eAACZ,GAAA,EAAD,WACE,cAACxH,EAAA,EAAD,UACE,cAAC6U,GAAA,EAAD,CACEtW,QAAQ,OACRvG,OAAQ,GACR8c,WAAW,MAGf,eAAC9U,EAAA,EAAD,CAAK3E,QAAQ,OAAOC,WAAW,SAA/B,UACE,cAAC0E,EAAA,EAAD,CAAK4T,GAAI,EAAT,SACE,cAACiB,GAAA,EAAD,CACE9c,MAAO,GACPC,OAAQ,GACRuG,QAAQ,SACRuW,UAAU,WAGd,cAACD,GAAA,EAAD,CACEtW,QAAQ,OACRvG,OAAQ,GACRD,MAAM,OACN+c,UAAU,YAGd,cAAC9U,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC4U,GAAA,EAAD,CACEtW,QAAQ,OACRvG,OAAQ,IACR8c,WAAW,MAGf,cAACD,GAAA,EAAD,CACEtW,QAAQ,OACRvG,OAAQ,GACR8c,WAAW,U,oDCgCZC,GAzDW,SAACjhB,GAAY,IAE3BU,EAAalD,IAAMqH,WAAW1E,GAA9BO,SAUFgD,EARYC,aAAY,SAAAuC,GAAK,MAAK,CACpCgb,qBAAsB,CAClBzY,WAAY,GACZxB,cAAe,GACf7C,gBAAiB8B,EAAMW,QAAQuL,QAAQkH,UAI/B/U,GAEhB,OACI,qBAAKC,UAAWd,EAAQwd,qBAAxB,SACI,cAACxN,GAAA,EAAD,CACIjE,eAAgB/O,EAAS+O,eACzBG,MAAOlP,EAASkP,MAChB1I,SAAUxG,EAASwG,SAHvB,SAMQlH,EAAMmhB,aACN,eAACC,GAAA,EAAD,CACIC,UAAW,cAAC,KAAD,CAAkB5a,SAAS,UACtC0G,aAAW,aAFf,UAKI,cAAC,IAAD,CAAMzC,MAAM,UAAU6I,GAAG,IAAzB,SACI,cAAC,KAAD,CAAU9M,SAAS,YAGnBzG,EAAMmhB,YAAY5f,KAAI,SAAC+f,EAAO3U,GAC1B,OAAG3M,EAAMmhB,YAAYxX,OAAS,IAAM3J,EAAMmhB,YAAYzX,QAAQ4X,GAE1D,cAAC,IAAD,CAAkB5W,MAAM,UAAU6I,GAAE,WAAM+N,EAAMlgB,MAAhD,SACKkgB,EAAMlX,OADAuC,GAKf,cAACzB,EAAA,EAAD,CAAYR,MAAM,cAAlB,SACK4W,EAAMlX,mBCsT5BmX,OA5Vf,SAAoBvhB,GAEhB,IAAMwhB,EAAWre,cACX+C,EAAQub,eAERC,EAAW1hB,EAAM2hB,cAEf5hB,EAAYvC,IAAMqH,WAAWtH,GAA7BwC,QACAqC,EAAiB5E,IAAMqH,WAAW5C,GAAlCG,aACAG,EAAY/E,IAAMqH,WAAWxC,GAA7BE,QACFuC,EAAavC,EAAQwC,KACrB6c,EAAkBrf,EAAQ8I,UAC1BwW,EAAmBtf,EAAQuf,WAZV,EAcCtkB,IAAM0H,SAAS,IAdhB,mBAchBlE,EAdgB,KAcV+gB,EAdU,OAeGvkB,IAAM0H,SAAS,IAflB,mBAehB8c,EAfgB,KAeTC,EAfS,OAiBSzkB,IAAM0H,UAAS,GAjBxB,mBAiBhBgd,EAjBgB,KAiBNC,EAjBM,OAmBqB3kB,IAAM0H,UAAS,GAnBpC,mBAmBhBkd,EAnBgB,KAmBAC,EAnBA,KA6DnB3e,EAtCcC,aAAW,SAACuC,GAAD,MAAY,CAEvCyB,WAAY,CACRW,QAAS8Z,EAAiB,OAAS,IACnCve,SAAU,WACVC,OAAQ,KACRP,IAAK,EACLQ,KAAM,GACNK,gBAAiB8B,EAAMW,QAAQ5H,MAAMyW,KACrC7N,SAAU,GACVX,SAAU,GACVE,UAAW,GACXU,WAAW,GAAD,OAAK5B,EAAM6B,YAAYC,OAAOC,UAA9B,YAA2C/B,EAAM6B,YAAYG,SAASC,QAAtE,OACV,UAAW,CACT/D,gBAAiB8B,EAAMW,QAAQ8O,UAAUD,MAE3C,SAAU,CACNnO,QAAS,OACTa,cAAe,SACf3B,SAAU,KAGlBoO,kBAAmB,CACjBvM,QAAU8Z,EAAiB,EAAI,EAC/BE,UAAYF,EAAiB,YAAc,YAC3C7a,QAAS,OACTgb,SAAU,OACV5b,aAAa,GAAD,OAAKT,EAAMW,QAAQ2b,OAAOC,OAA1B,eAEdC,aAAc,CACZ7e,SAAU,WACV,sBAAwB,CACtByE,QAAS,OAMD/D,GACd/G,IAAM4F,WAAW,WACfhB,GAAa,GACbugB,IACAnR,SAASpH,MAAQpK,EAAM4iB,YACtB,CAACpB,IAEJ,IAAMmB,EAAS,uCAAG,gCAAAvD,EAAA,6DAEVyD,EAAU3kB,EAASG,GAAGuC,WAAW,SAASC,IAAI6gB,GAFpC,SAGEmB,EAAQ/hB,MAHV,WAGVD,EAHU,QAKPE,OALO,wBAMdtC,QAAQC,IAAI,kBAGRqP,EAAUlC,OAAOC,OAAO,GAAIhH,IACxBwE,GAAKyC,MACbgC,EAAQ3M,KAAOsgB,EACf3T,EAAQiU,MAAQ,GAZF,UAcRa,EAAQC,IAAI/U,GAdJ,QAgBdgU,EAAQhU,GACRkU,EAASlU,EAAQiU,OAAS,IAC1BG,GAAY,GACZ/f,GAAa,GAnBC,wBAsBd2f,EAAQlhB,EAAIG,QACZihB,EAASphB,EAAIG,OAAOghB,OAEpBG,GAAY,GACZ/f,GAAa,GA1BC,4CAAH,qDA+BTmd,EAAe,uCAAG,WAAOjW,EAAIyZ,GAAX,eAAA3D,EAAA,6DAElB4D,EAAUnX,OAAOC,OAAO,GAAI9K,IACxBghB,MAAQA,EAEhBnW,OAAOoX,KAAKD,EAAQhB,OAAOzgB,KAAK,SAAC2hB,GAI/B,OAHGF,EAAQhB,MAAMkB,GAAM5Z,KAAOA,IAC1B0Z,EAAQhB,MAAMkB,GAAMjjB,SAAW8iB,GAE5B,KAGThB,EAAQiB,GACRf,EAASe,EAAQhB,OACjBG,GAAY,GACZ/f,GAAa,GAfS,SAiBhBlE,EAASG,GAAGuC,WAAW,SAASC,IAAI6gB,GAAUvgB,OAAO,CACzD6gB,MAAOgB,EAAQhB,QACdljB,MAAK,WACNqjB,GAAY,GACZ/f,GAAa,MACZtD,MAAM,WAC2B,IAA7BikB,EAAkBpZ,QACnBkW,EAAgBvW,MAxBA,2CAAH,wDA4Bf4W,EAA4B,uCAAG,WAAO5W,EAAI5F,EAAShD,GAApB,eAAA0e,EAAA,6DAC/B4D,EAAUnX,OAAOC,OAAO,GAAI9K,GAEhC6K,OAAOoX,KAAKD,EAAQhB,OAAOzgB,KAAK,SAAC2hB,GAQ/B,OAPGF,EAAQhB,MAAMkB,GAAM5Z,KAAOA,IAC5B0Z,EAAQhB,MAAMkB,GAAMxf,QAAUA,EAC9Bsf,EAAQhB,MAAMkB,GAAMzT,eAAiB/O,EAAS+O,eAC9CuT,EAAQhB,MAAMkB,GAAMtT,MAAQlP,EAASkP,MACrCoT,EAAQhB,MAAMkB,GAAMhc,SAAWxG,EAASwG,SACxC8b,EAAQhB,MAAMkB,GAAMrF,eAAiBnd,EAASmd,gBAEzC,KAGTkE,EAAQiB,GACRf,EAASe,EAAQhB,OACjBG,GAAY,GACZ/f,GAAa,GAjBsB,SAmB7BlE,EAASG,GAAGuC,WAAW,SAASC,IAAI6gB,GAAUvgB,OAAO,CACzD6gB,MAAOgB,EAAQhB,QACdljB,MAAK,WACNqjB,GAAY,GACZ/f,GAAa,MAvBoB,2CAAH,0DA2B5B+gB,EAAY,uCAAG,WAAOja,GAAP,mBAAAkW,EAAA,6DACf4D,EAAUnX,OAAOC,OAAO,GAAI9K,GAC5BoiB,EAAWpB,EAAMvY,QAGT,cAATP,IAAsBma,EAAUxX,OAAOC,OAAO,GAAI8V,IACzC,eAAT1Y,IAAuBma,EAAUxX,OAAOC,OAAO,GAAI+V,IAEtDwB,EAAQ/Z,GAAKyC,MAEbqX,EAASpX,KAAKqX,GAEdL,EAAQhB,MAAQoB,EAEhBrB,EAAQiB,GACRf,EAASmB,GACTjB,GAAY,GACZ/f,GAAa,GAjBM,UAmBblE,EAASG,GAAGuC,WAAW,SAASC,IAAI6gB,GAAUvgB,OAAO,CACzD6gB,MAAOoB,IACNtkB,MAAK,WACNqjB,GAAY,GACZ/f,GAAa,MAvBI,4CAAH,sDA2BZyd,EAAe,uCAAG,WAAOvW,GAAP,iBAAA8V,EAAA,6DAClB4D,EAAUnX,OAAOC,OAAO,GAAI9K,GAC1B6L,EAAWmV,EAAMlV,QAAO,SAACtL,GAAD,OAAWA,EAAK8H,KAAOA,KAErD0Z,EAAQhB,MAAQnV,EAEhBkV,EAAQiB,GACRf,EAASpV,GACTsV,GAAY,GACZ/f,GAAa,GATS,SAWhBlE,EAASG,GAAGuC,WAAW,SAASC,IAAI6gB,GAAUvgB,OAAO,CACzD6gB,MAAOnV,IACN/N,MAAK,WACNqjB,GAAY,GACZ/f,GAAa,MAfO,2CAAH,sDAmBfwd,EAAa,uCAAG,WAAOvW,EAAWC,GAAlB,2BAAA8V,EAAA,yDAChB4D,EAAUnX,OAAOC,OAAO,GAAI9K,IAC5BoiB,EAAWpB,EAAMvY,SAGZlI,KAAK,SAACC,GAIb,OAHGA,EAAK8H,KAAOA,IACbC,EAAc6Z,EAAS1Z,QAAQlI,IAE1B,KAGQ,OAAd6H,GAAsC,IAAhBE,EAZL,oDAaH,SAAdF,GAAwBE,IAAgB6Z,EAASzZ,OAAS,EAbzC,uDAeH,OAAdN,IACKO,EAAYwZ,EAAS7Z,GACrBM,EAAYuZ,EAAS7Z,EAAc,GAEzC6Z,EAAS7Z,GAAeM,EACxBuZ,EAAS7Z,EAAc,GAAMK,GAEd,SAAdP,IACKO,EAAYwZ,EAAS7Z,GACrBM,EAAYuZ,EAAS7Z,EAAc,GAEzC6Z,EAAS7Z,GAAeM,EACxBuZ,EAAS7Z,EAAc,GAAMK,GAG/BoZ,EAAQhB,MAAQoB,EAEhBnB,EAASmB,GACTrB,EAAQiB,GACRb,GAAY,GACZ/f,GAAa,GAnCO,UAsCdlE,EAASG,GAAGuC,WAAW,SAASC,IAAI6gB,GAAUvgB,OAAO,CACzD6gB,MAAOoB,IACNtkB,MAAK,WACNqjB,GAAY,GACZ/f,GAAa,MA1CK,4CAAH,wDAgFnB,OACI,eAAC,IAAMoR,SAAP,WAGIzT,GACA,eAACmM,EAAA,EAAD,CAAK1H,UAAWd,EAAQgf,aAAxB,UAEE,cAACvY,EAAA,EAAD,CAASC,MAAM,gBAAgBC,UAAU,SAAzC,SACI,eAACC,EAAA,EAAD,CACIC,QAAS,WAAQ8X,GAAmBD,IACpC5X,KAAK,SACLC,QAAQ,YACRC,MAAO,UACPlG,UAAWd,EAAQiE,WALvB,UAOI,wCACA,cAAC,KAAD,CAAcgD,MAAO,CAAED,MAAO,QAAUjE,SAAS,eAKvD,eAACiN,GAAA,EAAD,CAAWlP,UAAWd,EAAQmR,kBAAmB4I,GAAI,EAArD,UAEE,cAACvR,EAAA,EAAD,CAAKoX,EAAG,EAAGC,GAAI,OAAf,SACE,cAACrY,EAAA,EAAD,CAAYR,MAAOxE,EAAMW,QAAQ2b,OAAOC,OAAQhY,QAAQ,KAAxD,4BAKF,cAACyB,EAAA,EAAD,CAAK3E,QAAQ,OAAOC,WAAW,SAASuM,GAAI,EAAGlM,SAAU,GAAzD,SAEIqa,GACA,cAACsB,GAAA,EAAD,CAAkBhZ,KAAM,GAAIiZ,UAAW,MAI3C,cAACvX,EAAA,EAAD,CAAKoX,EAAG,EAAR,SACE,cAAChZ,EAAA,EAAD,CAAQI,MAAO,UAAWD,QAAS,YAAaF,QAAS,WAAO4Y,EAAa,cAA7E,iCAIF,cAACjX,EAAA,EAAD,CAAKoX,EAAG,EAAR,SACE,cAAChZ,EAAA,EAAD,CAAQI,MAAO,UAAWD,QAAS,YAAaF,QAAS,WAAO4Y,EAAa,eAA7E,+BAIF,cAACjX,EAAA,EAAD,CAAKoX,EAAG,EAAR,SACE,cAAChZ,EAAA,EAAD,CAAQI,MAAO,UAAWD,QAAS,WAAY2C,UAAU,EAAzD,mCASV,cAAC,GAAD,CACE+T,YAAanhB,EAAMmhB,YACnBuC,QAAS1jB,EAAM0jB,UA3FlB1B,EAAMrY,OAAS,EACTkC,OAAOoX,KAAKjB,GAAOzgB,KAAK,SAACme,GAC9B,MAAuB,cAApBsC,EAAMtC,GAAKxW,KAER,cAAC,GAAD,CAEElI,KAAMghB,EAAMtC,GACZH,gBAAiBA,EACjBW,6BAA8BA,EAC9BL,gBAAiBA,EACjBD,cAAeA,GALVoC,EAAMtC,GAAKpW,IASD,eAApB0Y,EAAMtC,GAAKxW,KAER,cAAC,GAAD,CAEElI,KAAMghB,EAAMtC,IADPsC,EAAMtC,GAAKpW,SAHxB,KAaA,cAAC,GAAD,QC1LKqa,OA3Ff,WAA4B,IAEjBtjB,EAAc7C,IAAMqH,WAAW1E,GAA/BE,WACA8B,EAAa3E,IAAMqH,WAAW5C,GAA9BE,UAGP,OACI,eAAC,IAAD,CAAQyhB,SAAS,UAAjB,UAEI,cAAC3gB,EAAD,IAEId,GACA,cAAC,EAAD,IAGA9B,EAAWsJ,OAAS,GACpB,eAAC,IAAM6J,SAAP,WAEI,cAAC,GAAD,IAEA,+BACA,eAAC,IAAD,WAEQnT,EAAWkB,KAAK,SAAA0D,GACZ,IAAMkc,EAAc,CAChB,CACI/W,MAAOnF,EAASmF,MAChBhJ,KAAM6D,EAAS7D,OAGvB,OACI,cAAC,IAAD,CAEI8S,OAAK,EACL2P,KAAI,WAAM5e,EAAS7D,MACnB0iB,OACI,SAAC9jB,GACG,MAAqB,MAAlBiF,EAAS7D,KACD,cAAC,GAAD,2BAAgBpB,GAAhB,IAAuB2hB,cAAe,OAAQiB,UAAW3d,EAASmF,MAAO+W,YAAa,QAG1F,cAAC,GAAD,2BAAgBnhB,GAAhB,IAAuB2hB,cAAe1c,EAAS7D,KAAMwhB,UAAW3d,EAASmF,MAAO+W,YAAaA,OATvGlc,EAASqE,OAiB1BjJ,EAAWkB,KAAK,SAAA0D,GAAQ,OACpBA,EAASiF,MAAMP,OAAS,GACxB1E,EAASiF,MAAM3I,KAAK,SAAAwD,GAChB,IAAMoc,EAAc,CAChB,CACI/W,MAAOnF,EAASmF,MAChBhJ,KAAM6D,EAAS7D,MAEnB,CACIgJ,MAAOrF,EAAKqF,MACZhJ,KAAK,GAAD,OAAK6D,EAAS7D,KAAd,YAAsB2D,EAAK3D,QAGvC,OACI,cAAC,IAAD,CAEI8S,OAAK,EACL2P,KAAI,WAAM5e,EAAS7D,KAAf,YAAuB2D,EAAK3D,MAChC0iB,OACI,SAAC9jB,GAAD,OAAW,cAAC,GAAD,2BAAgBA,GAAhB,IAAuB2hB,cAAe5c,EAAK3D,KAAMwhB,UAAW7d,EAAKqF,MAAO+W,YAAaA,OAJ/Fpc,EAAKuE,UAY9B,cAAC,IAAD,CAAOua,KAAK,SAASC,OAAS,kBAAM,cAAC,GAAD,OAEpC,cAAC,IAAD,CAAOD,KAAK,IAAIC,OAAS,kBAAM,cAAC,GAAD,YAKnC,cAAC,GAAD,WC9DLC,OA3Bf,WAA2B,IAChBphB,EAAanF,IAAMqH,WAAWpC,GAA9BE,UAEDuD,EAAQ8d,YAAe,CACzBnd,QAAS,CACLqC,KAAMvG,EACNyP,QAAS,CACLC,KAAoB,SAAd1P,EAAwB,UAAY,WAE9CgT,UAAW,CACPtD,KAAO,cAKnB,OACI,eAAC,IAAD,CAAenM,MAAOA,EAAtB,UAGI,cAAC+d,EAAA,EAAD,IAEA,cAAC,GAAD,QCOGC,I,OAtBH,WAEV,OACI,cAAC,EAAD,UAGC,cAAC,EAAD,UACG,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACI,qBAAK1f,UAAU,MAAf,SACE,cAAC,GAAD,kBChBL2f,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvlB,MAAK,YAAkD,IAA/CwlB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,GAAD,MAEFpT,SAASqT,eAAe,SAM1BV,O","file":"static/js/main.ebbe40f0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth()\r\n        console.log(\"constructor\")\r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) { \r\n                // console.log(user)\r\n                this.setState({\r\n                    isLogin: true,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        settings: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                settings: doc.data().headerSettings\r\n            })\r\n        } \r\n    }\r\n\r\n    async updateCategories(data) {\r\n        console.log('firebase update')\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {   \r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    settings: this.state.settings,\r\n                    updateLogo: (data) => { \r\n                        this.setState({\r\n                            logo: data\r\n                        })\r\n                        this.updateLogo(data) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n\r\n    // async componentDidMount() {\r\n    //     await firebase.auth.onAuthStateChanged( async (user) => {\r\n    //         if(user) {  \r\n    //             const layoutsRef = firebase.db.collection(\"library\").doc('layouts')\r\n    //             const doc = await layoutsRef.get();\r\n                \r\n    //             if (!doc.exists) {\r\n    //                 console.log('No such document!'); \r\n    //             } \r\n    //             else {\r\n    //                 console.log('Layouts:', doc.data());\r\n                    \r\n    //                 this.setState({\r\n    //                     layouts: doc.data()\r\n    //                 })\r\n    //             }\r\n    //         }\r\n    //         else { \r\n    //             console.log('no user') \r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ThemeContext = React.createContext()\r\n\r\nexport default ThemeContext","import React from 'react';\r\n \r\nimport ThemeContext from './ThemeContext'\r\n\r\n \r\n\r\nexport default class ThemeProvider extends React.Component { \r\n\r\n    state = { \r\n        themeMode: 'light'\r\n    } \r\n\r\n    componentDidMount() {\r\n        const storageMode =  localStorage.getItem('siteBuilderThemeMode')\r\n        console.log(storageMode)\r\n        if(storageMode == 'dark') {\r\n            this.setState({\r\n                themeMode: 'dark'\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                themeMode: 'light'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ThemeContext.Provider\r\n                value={{\r\n                    themeMode: this.state.themeMode,\r\n                    setThemeMode: () => {\r\n                        localStorage.setItem('siteBuilderThemeMode', this.state.themeMode === 'light' ? \"dark\" : \"light\" )\r\n                        this.setState({\r\n                            themeMode: this.state.themeMode === 'light' ? \"dark\" : \"light\"\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ThemeContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1000, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n\r\nimport { orange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n// import DumbComponent from './DumbComponent'\r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() {\r\n    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        listPages : {\r\n            marginTop: 20, \r\n            paddingLeft: 25, \r\n            '&>li' : { \r\n                listStyle: 'none',\r\n                marginBottom: 5\r\n            }\r\n        },\r\n        titlePages: {\r\n            fontSize: 14, \r\n            fontWeight: 600, \r\n            borderBottom: `1px solid #eee`,\r\n            marginBottom: 12\r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 350px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 700,  \r\n            width: 700,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // left: 2,\r\n            backgroundColor: orange[700], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: orange[900], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        },\r\n        accordionHeader: {\r\n            paddingRight: 30, \r\n            paddingLeft: 25,     \r\n        },\r\n        deleteBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 5, \r\n            right: 5, \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25,\r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 0, \r\n            left: -5,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        },\r\n        deletePageBtn: {  \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingPageBtn: { \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) { \r\n                console.log(newPage)\r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        // setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => { \r\n        console.log('update')\r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n         \r\n        console.log(activeIndex)\r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        }) \r\n        console.log(newCategories)\r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать список категорий  <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    <Tooltip title='Delete Category' placement='top'>\r\n                                                        <Button\r\n                                                            variant='contained'\r\n                                                            color=\"default\"\r\n                                                            disableElevation={true}\r\n                                                            className={classes.deleteBtn}\r\n                                                            onClick={() => { deleteCategory(item.id) }}\r\n                                                        > \r\n                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        <Tooltip title='Get Up' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('up', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                            >  \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                            </Button>\r\n                                                        </Tooltip> \r\n                                                        <Tooltip title='Get Down' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('down', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                        >  \r\n                                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                        </Button>\r\n                                                                                    </Tooltip> \r\n                                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                        >     \r\n                                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, updateLogo } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // right: 2,\r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        }, \r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        updateLogo(newLogo)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать логотип  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='outlined'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n                                    <img\r\n                                        width={100}\r\n                                        src={logo.image}\r\n                                        alt='logo'\r\n                                    /> \r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: { \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        }, \r\n        settingsItem: {\r\n            width: '100%',\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1, \r\n        },\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition\r\n            } \r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Изменить настройки  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(e.target.value) } }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>  \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React, {useState, useEffect} from 'react'\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"../../assets/header.scss\"\r\nimport { \r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    makeStyles,\r\n    Button,\r\n    IconButton,\r\n    Drawer, \r\n    MenuItem,\r\n    Container, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion\r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\nfunction DumbComponent() {\r\n\r\n    const {categories, logo, settings} = React.useContext(CategoryContext)    \r\n \r\n   const [headerHeight, setHeaderHeight] = useState(0)\r\n\r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  document.querySelector('#header').clientHeight\r\n            \r\n            setHeaderHeight(headHeight)\r\n            \r\n            return window.innerWidth < widthMobile\r\n            ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n            : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n       \r\n    }, []);\r\n\r\n    let widthMobile \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values.md\r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',  \r\n\r\n                position: settings.classes.position, \r\n                paddingTop: settings.classes.paddingY,  \r\n                paddingBottom: settings.classes.paddingY,  \r\n                backgroundColor: theme.palette.primary.main, \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                top: 0, \r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: \"#FFFEFE\",\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: \"##DFDFDF\",\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            },\r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700,\r\n                size: \"18px\",\r\n                marginLeft: \"38px\",\r\n                '&>.active': {\r\n                    paddingBottom: 3,\r\n                    borderBottom: '2px solid #ffffff52'\r\n                }\r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: 0\r\n            },\r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            \r\n        })\r\n    });\r\n    const { toolbar, header, logoImage ,logoMain , logoSub, menuButton, drawerContainer, mobileLink , accordionReset , fixedPadding} = useStyles();\r\n  \r\n    const [state, setState] = useState({\r\n        mobileView: false,\r\n        drawerOpen: false,\r\n    }); \r\n     \r\n    const { mobileView, drawerOpen } = state;\r\n\r\n    const femmecubatorLogo = (\r\n        <NavLink to={'/'} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const displayDesktop = () => {\r\n        return (\r\n          <Toolbar disableGutters={true} className={toolbar}>\r\n            {femmecubatorLogo}\r\n    \r\n            <Box display='flex' clone={true}>\r\n                <ul >\r\n                {\r\n                    categories.map( (item, index) => { \r\n                    return (\r\n                        <li key={index} className={menuButton}>\r\n                            {\r\n                                item.slug === '/' &&\r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                >\r\n                                    {item.title} \r\n                                </NavLink>\r\n                                \r\n                            }\r\n                           {\r\n                                item.slug !== '/' &&\r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                >\r\n                                    {item.title} \r\n                                </NavLink>\r\n                           }\r\n                            <ul >\r\n                            {\r\n                                item.pages.map( (innerItem, innerIndex) => (\r\n                                <li key={innerIndex}>\r\n                                    <NavLink exact to={`/${item.slug}/${innerItem.slug}`} >\r\n                                        {innerItem.title}\r\n                                    </NavLink>\r\n                                </li>\r\n                                ))\r\n                            }\r\n                            </ul>\r\n                        </li>\r\n                    );\r\n                    })\r\n                }\r\n                </ul>\r\n            </Box>\r\n          </Toolbar>\r\n        );\r\n    };\r\n    \r\n    const displayMobile = () => {\r\n        const handleDrawerOpen = () => setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n        const handleDrawerClose = () => setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n        return (\r\n            <Toolbar disableGutters={true} style={{justifyContent: 'space-between'}}> \r\n                <Drawer\r\n                    {...{\r\n                    anchor: \"right\",\r\n                    open: drawerOpen,\r\n                    onClose: handleDrawerClose,\r\n                    }}\r\n                >\r\n                    <div className={drawerContainer}>\r\n                        <Box mx={2} my={1}  >\r\n                            <Button \r\n                                variant='outlined'\r\n                                color='default'\r\n                                onClick={handleDrawerClose}\r\n                            >\r\n                                <ArrowRightAltIcon/>\r\n                            </Button>\r\n                        </Box>\r\n                        \r\n                        {\r\n                            categories.map( (item, index) => {  \r\n                                if(item.pages.length > 0) {\r\n                                    return (  \r\n                                        <Accordion classes={{root: accordionReset}} key={index} >\r\n                                            <AccordionSummary\r\n                                                classes={{root: accordionReset, content: accordionReset  }}\r\n                                                expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                            >\r\n                                                <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >\r\n                                                        {item.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem>     \r\n                                            </AccordionSummary>\r\n                                            { \r\n                                                item.pages.map( page => (\r\n                                                    <MenuItem style={{padding: '0 0 0 15px'}} key={index} > \r\n                                                        <NavLink \r\n                                                            exact\r\n                                                            to={`/${item.slug}/${page.slug}`}  \r\n                                                            className={mobileLink}\r\n                                                            onClick={handleDrawerClose}\r\n                                                        >   \r\n                                                            {page.title}\r\n                                                            \r\n                                                        </NavLink> \r\n                                                    </MenuItem> \r\n                                                ))\r\n                                            }\r\n                                        </Accordion>                                \r\n                                    );\r\n                                }\r\n                                else { \r\n                                    return (\r\n                                        <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                            <NavLink \r\n                                                exact\r\n                                                to={`/${item.slug}`}  \r\n                                                className={mobileLink}\r\n                                                onClick={handleDrawerClose}\r\n                                            >\r\n                                                {item.title} \r\n                                            </NavLink> \r\n                                        </MenuItem>     \r\n                                    )\r\n                                }\r\n                                \r\n                            })\r\n                        }\r\n                    </div>\r\n                </Drawer>\r\n\r\n                <div>{femmecubatorLogo}</div>\r\n                <IconButton\r\n                    {...{\r\n                    edge: \"start\",\r\n                    color: \"inherit\",\r\n                    \"aria-label\": \"menu\",\r\n                    \"aria-haspopup\": \"true\",\r\n                    onClick: handleDrawerOpen,\r\n                    }}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            }\r\n            <AppBar className={header} id='header'>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {mobileView ? displayMobile() : displayDesktop()}\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, Switch, FormControlLabel , makeStyles, Tooltip} from '@material-ui/core'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport ThemeContext from '../../context/themeContext/ThemeContext'  \r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext) \r\n    const {themeMode, setThemeMode} = React.useContext(ThemeContext) \r\n\r\n    \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { isOpen && \r\n                <Box className={classes.settingsContainer} >\r\n                    <Typography component='span' >\r\n                        hello, { user.providerData[0].email } \r\n                    </Typography>\r\n                    <span>\r\n                        (theme setting , css for body, ....)\r\n                    </span>\r\n                    \r\n                    \r\n                    <Box>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch \r\n                                    color=\"primary\" \r\n                                    checked={themeMode === 'dark' ?  true : false}  \r\n                                    onChange={() => { setThemeMode()}}  \r\n                                /> \r\n                            }\r\n                            label=\"Dark Mode\"\r\n                        /> \r\n                        <Button \r\n                            size='small'\r\n                            color='secondary' \r\n                            variant={'contained'} \r\n                            onClick={handleSignOut}\r\n                        >\r\n                            Sign Out\r\n                        </Button>\r\n                    </Box>\r\n                </Box>}\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\n\r\nimport DumbComponent from './DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0.15,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container } from '@material-ui/core'\r\n\r\nfunction Footer() {\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: theme.palette.primary.dark, \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                <Typography \r\n                    variant='h6'\r\n                    className={classes.footerHeading}\r\n\r\n                > \r\n                    Footer\r\n                </Typography>\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n\r\n    const hendlerSubmit = (e) => {\r\n        e.preventDefault() \r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n    \r\n            {/* Redirect при авторизации */}\r\n            { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n     \r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Вход\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={hendlerSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"text\"\r\n                        label=\"User\"\r\n                        name=\"user\"\r\n                        autoComplete='true'\r\n                        autoFocus\r\n                        value={name}\r\n                        onChange={ (e)=>{setName(e.target.value)} }\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={(e)=>{setPassword(e.target.value)}}\r\n                    />\r\n                    {\r\n                        error && \r\n                        <Alert severity=\"error\">{error.message}</Alert>\r\n                    }\r\n                \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                \r\n                </form>\r\n            </div>\r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                fontSize: props.className.fontSize*0.6, \r\n            },\r\n        }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.isResponsiveFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        }, \r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }  ,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50,  \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        showInput: {\r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, шрифт будет меньше размером на мобильных устройствах. \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}\r\n                                isResponsiveFont={isResponsiveFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n     \r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                },\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }  ,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            // height: '100%'\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 100, \r\n            height: 100, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {}\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={classes.imageStyle} alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  '0px')\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            marginTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        }, \r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },  \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 105, \r\n            height: 105, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        },\r\n        imageLabel: {\r\n            position: 'absolute',\r\n            zIndex: 10, \r\n            top: 0, \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0, \r\n            width: \"100%\", \r\n            maxWidth: \"100%\", \r\n            height: \"100%\", \r\n            maxHeight: \"100%\", \r\n            cursor: 'pointer'\r\n        }\r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName,\r\n    }} \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImageUrl(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageSetting} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={dataNew.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='color'\r\n                                                label=\"Border Color\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderColor}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderColor(e.target.value)} }     \r\n                                        />\r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Background  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        color={backgroundColor}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setBackgroundColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box> \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Color  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        color={color}\r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                imageClassName={imageClassName}\r\n                                imageUrl={imageUrl}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Container  \r\n                maxWidth={props.settings.maxWidth} \r\n                fixed={props.settings.fixed} \r\n                disableGutters={props.settings.disableGutters} \r\n                className={classes.myClassName}\r\n            > \r\n                {  \r\n                    props.settings.innerContainer && \r\n                    <Container\r\n                        maxWidth={'lg'}\r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                    >\r\n                        { \r\n                            modeDev && \r\n                            props.data.children.map((item) => {   \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                        {   !modeDev &&\r\n                            props.data.children.map((item) => {  \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                    </Container>\r\n                }\r\n                {  \r\n                    !props.settings.innerContainer && \r\n                    <React.Fragment>\r\n                        { \r\n                            modeDev && \r\n                            props.data.children.map((item) => {   \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item}\r\n                                                reSaveChildren={props.reSaveChildren}\r\n                                                removeItem={props.removeItem}\r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                        {   !modeDev &&\r\n                            props.data.children.map((item) => {  \r\n                                switch(item.type) { \r\n                                    case 'heading' :  \r\n                                        return ( \r\n                                            <HeadingCreator \r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraph' :  \r\n                                        return (\r\n                                            <ParagraphCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    case 'paragraphImage' :  \r\n                                        return (\r\n                                            <ParagraphImageCreator\r\n                                                key={item.id} \r\n                                                item={item} \r\n                                            />\r\n                                        ) \r\n                                    default: break;\r\n                                }  \r\n                                return null\r\n                            })\r\n                        }\r\n                    </React.Fragment>\r\n                }\r\n                \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport uuid from 'react-uuid' \r\nimport { TwitterPicker } from 'react-color';\r\n \r\nimport DumbComponent from './DumbComponent' \r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select,  Container, Typography, ButtonGroup, IconButton\r\n} from '@material-ui/core'\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n  \r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false)\r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n          console.log(theme)\r\n        return ( {  \r\n            btnDrawerStyle : {\r\n                backgroundColor: theme.palette.error.dark, \r\n                position: 'absolute',  \r\n                top: 0, \r\n                left: 0, \r\n                zIndex: 1030,   \r\n                minWidth: 50, \r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n            }, \r\n            btnDrawerItem: { \r\n                backgroundColor: theme.palette.error.dark, \r\n                '&:hover': { \r\n                    backgroundColor: theme.palette.secondary.dark,   \r\n                }, \r\n            },\r\n            containerWrapper: {\r\n                position: 'relative', \r\n                outline: \"1px solid #ffffff00\", \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle': {\r\n                        opacity: 1\r\n                    }\r\n                },   \r\n               \r\n            },\r\n            mtView: {  \r\n                position: 'absolute', \r\n                top: `-${margin.top}px`, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#fff7003d',\r\n                height: `${margin.top}px`, \r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            mbView: {  \r\n                position: 'absolute', \r\n                bottom: `-${margin.bottom}px`, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#fff7003d',\r\n                height: `${margin.bottom}px`, \r\n                opacity: 0,\r\n                transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n            }, \r\n            ptView: {  \r\n                position: 'absolute', \r\n                top: 0, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#400e575e',\r\n                height: `${padding.top}px`, \r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            pbView: {  \r\n                position: 'absolute', \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0,\r\n                zIndex: 10, \r\n                backgroundColor: '#400e575e',\r\n                height: `${padding.bottom}px`, \r\n                opacity: 0,\r\n                transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n            },\r\n            settingsItem: {\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1\r\n            },\r\n            inputNumber: {\r\n                flexGrow: 1, \r\n                margin: 5, \r\n                width: \"100%\", \r\n                maxWidth: '50%'\r\n            }, \r\n            inputGroup: {\r\n                border: \"1px solid #f5f5f5\", \r\n                padding: 3, \r\n                inputNumber: { \r\n                    maxWidth: \"100%\"\r\n    \r\n                }\r\n            },\r\n            btnSave: { \r\n                position: 'sticky', \r\n                zIndex: theme.zIndex.tooltip,\r\n                bottom: 0, \r\n                left: 20, \r\n                right: 0,\r\n                height: 80, \r\n                backgroundColor: theme.palette.background.paper, \r\n                \r\n                '&>button': {\r\n                    marginTop: 20, \r\n                    marginBottom: 30, \r\n                    opacity: 1,  \r\n                    paddingLeft: 40, \r\n                    paddingRight: 40\r\n                }\r\n            }\r\n            \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n     \r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n\r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        toggleDrawer()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid() \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        setChildren(newChildren) \r\n \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n    } \r\n    \r\n    const reSaveChildren = async (id, data) => {   \r\n        let slicedChild = children.slice()\r\n        slicedChild.forEach((item) => {\r\n            if(item.id === id) {\r\n                for( let key in item) { \r\n                    item[key] = data[key]\r\n                } \r\n            }\r\n        })  \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, slicedChild)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => {\r\n        let conf = window.confirm(\"Delete ?\");\r\n \r\n        if(conf) { \r\n            let filtered = children.filter((item) => (item.id !== id))  \r\n            setChildren(filtered) \r\n  \r\n            // save in firestore \r\n            props.reSaveContainer(props.data.id, filtered)  \r\n        }\r\n    }\r\n\r\n    const removeContainer = () => { \r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const swapContainer = (direction, id) => { \r\n        props.swapContainer(direction, id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Container \r\n            maxWidth={propsSettings.maxWidth} \r\n            fixed={propsSettings.fixed} \r\n            disableGutters={true}\r\n            className={classes.containerWrapper} \r\n        >    \r\n            <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip> \r\n\r\n            <Box style={{position: 'relative'}} > \r\n                {/*  DrawerContainer */}\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    \r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"secondary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\"\r\n                    > \r\n                        <Tooltip title='Container Settings' placement='right'>\r\n                            <Button  \r\n                                onClick={toggleDrawer} \r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >   \r\n                                <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title='Get Up' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('up', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >  \r\n                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                            </Button>\r\n                        </Tooltip> \r\n                        <Tooltip title='Get Down' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('down', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >     \r\n                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip> \r\n \r\n                    </ButtonGroup>\r\n                </Box>\r\n                     \r\n                    <Drawer anchor={'left'} open={open} onClose={toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                                <FormGroup> \r\n                                    <Typography   variant={'h6'} gutterBottom  >\r\n                                        Container actions \r\n                                    </Typography>\r\n                                   <Box mb={2}>  \r\n                                        <Button\r\n                                            onClick={removeContainer}\r\n                                            variant='outlined'\r\n                                            color=\"secondary\"  \r\n                                        >\r\n                                            Remove Container\r\n                                        </Button> \r\n                                   </Box>\r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph'); toggleDrawer()}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage'); toggleDrawer()}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                             <Typography  component={'h6'} gutterBottom  >\r\n                                                Background  \r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setBackgroundColor(newColor.hex) \r\n                                                }}\r\n\r\n                                            /> \r\n                                        </Box> \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography component={'h6'} gutterBottom  >\r\n                                                Color text\r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setColor(newColor.hex) \r\n                                                }} \r\n                                            /> \r\n                                        </Box> \r\n                                      \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='color'\r\n                                                    label=\"Border Color\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderColor}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                            />\r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n                <DumbComponent\r\n                    reSaveChildren={reSaveChildren}\r\n                    removeItem={removeItem}\r\n                    data={props.data} \r\n                    classes={myClassName}\r\n                    settings={propsSettings}\r\n                />  \r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed\r\n    }\r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev && \r\n                <StyledComponent   \r\n                    data={props.data} \r\n                    reSaveContainer={props.reSaveContainer}\r\n                    reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                    removeContainer={props.removeContainer}    \r\n                    swapContainer={props.swapContainer}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev &&  \r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles } from '@material-ui/core'\r\n\r\nimport '../../../assets/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    // const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        input: { \r\n            border: `2px solid ${theme.palette.primary.main}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            color: theme.palette.text.primary\r\n        },\r\n        button: {\r\n            border: `2px solid ${theme.palette.primary.main} !important`, \r\n            backgroundColor: theme.palette.primary.main, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n            '&:hover' : {\r\n                background: 'none',\r\n                color: theme.palette.primary.light\r\n            }\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n    return (\r\n        <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>\r\n                                <svg viewBox=\"0 0 511.987 511.987\" > \r\n                                    <g><path d=\"m207.993 123.993c-13.233 0-24-10.767-24-24s10.767-24 24-24 24 10.767 24 24-10.766 24-24 24z\"/><path d=\"m511.477 439.169-39-259.997c-3.4-22.702-22.532-39.18-45.493-39.18h-148.555c13.072-24.73 12.843-53.822-.828-78.611-13.822-25.065-38.887-40.523-67.054-41.352-1.686-.049-3.418-.049-5.115 0-28.161.828-53.226 16.287-67.048 41.352-13.665 24.779-13.899 53.858-.826 78.611h-52.555c-22.961 0-42.093 16.478-45.493 39.176l-39 260.001c-1.987 13.256 1.89 26.684 10.637 36.84 8.748 10.157 21.452 15.982 34.856 15.982h419.98c13.404 0 26.108-5.825 34.856-15.982 8.748-10.154 12.625-23.582 10.638-36.84zm-345.07-362.334c8.423-15.273 22.99-24.319 39.962-24.818.536-.016 1.08-.023 1.625-.023s1.089.008 1.619.023c16.978.499 31.545 9.545 39.968 24.818 8.798 15.954 8.554 34.79-.651 50.392l-40.936 68.92-40.924-68.9c-9.217-15.606-9.465-34.452-.663-50.412zm310.186 378.294c-1.564 1.816-5.023 4.864-10.609 4.864h-289.876c.747-7.5 4.218-18.771 17.343-25.973 7.747-4.251 10.581-13.977 6.33-21.724s-13.979-10.581-21.725-6.33c-16.945 9.298-28.116 23.897-32.305 42.216-.979 4.279-1.452 8.29-1.643 11.811h-98.105c-5.586 0-9.045-3.048-10.609-4.864-1.564-1.817-4.065-5.689-3.237-11.212l39-260.003c1.035-6.907 6.858-11.92 13.847-11.92h71.425l31.046 52.271c4.348 7.343 12.018 11.727 20.519 11.727s16.171-4.384 20.506-11.707l31.059-52.291h167.426c6.988 0 12.812 5.013 13.847 11.923l39 259.999c.826 5.523-1.674 9.396-3.239 11.213z\"/><path d=\"m277.053 220.814c-8.385-2.797-17.444 1.737-20.238 10.119-2.795 8.383 1.736 17.444 10.119 20.238.164.055 16.56 5.917 21.881 21.881 2.234 6.705 8.478 10.945 15.177 10.945 1.677 0 3.384-.266 5.062-.826 8.383-2.794 12.914-11.855 10.119-20.238-10.411-31.23-40.83-41.689-42.12-42.119z\"/><path d=\"m290.621 321.587c-8.334-2.941-17.473 1.43-20.413 9.763-9.03 25.585-39.982 36.575-40.632 36.801-8.349 2.815-12.854 11.855-10.064 20.22 2.234 6.705 8.478 10.945 15.177 10.945 1.677 0 3.384-.266 5.062-.826 1.883-.627 46.287-15.841 60.634-56.49 2.94-8.333-1.431-17.472-9.764-20.413z\"/></g>\r\n                                </svg> \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form onSubmit={(e) => { e.preventDefault() }}>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid md={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n    return (\r\n        <div>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation='wave'\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='text'  \r\n                  height={50}\r\n                  width='100%'\r\n                  animation='wave'\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            backgroundColor: theme.palette.primary.light\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return ( \r\n        <div className={classes.breadcrumbsContainer} >\r\n            <Container\r\n                disableGutters={settings.disableGutters}\r\n                fixed={settings.fixed} \r\n                maxWidth={settings.maxWidth} \r\n            >\r\n                {\r\n                    props.breadcrumbs &&\r\n                    <Breadcrumbs  \r\n                        separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                        aria-label=\"breadcrumb\"\r\n                    >\r\n                        \r\n                        <Link color=\"inherit\" to=\"/\" >\r\n                            <HomeIcon fontSize=\"small\" />\r\n                        </Link>\r\n                        {    \r\n                            props.breadcrumbs.map((crumb, index) => {\r\n                                if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                return(\r\n                                    <Link key={index} color=\"inherit\" to={`/${crumb.slug}`} >\r\n                                        {crumb.title}\r\n                                    </Link>\r\n                                )\r\n                                else return (\r\n                                <Typography color=\"textPrimary\">\r\n                                    {crumb.title}\r\n                                </Typography> \r\n                                )  \r\n                            })\r\n                        }\r\n                        {/* <Link color=\"inherit\" href=\"/getting-started/installation/\" onClick={handleClick}>\r\n                            Core\r\n                        </Link>\r\n                        <Typography color=\"textPrimary\">Breadcrumb</Typography> */}\r\n                    </Breadcrumbs>\r\n                }\r\n            </Container>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, CircularProgress, Tooltip , Container } from \"@material-ui/core\"; \r\n \r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext'\r\n\r\nfunction SinglePage(props) {\r\n\r\n    const location = useLocation()\r\n    const theme = useTheme(); \r\n\r\n    const pageSlug = props.slugForUpdate\r\n\r\n    const { modeDev } = React.useContext(ModeContext)\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const ContainerLayout = layouts.container \r\n    const MainBannerLayout = layouts.mainBanner \r\n  \r\n    const [data, setData] = React.useState({})\r\n    const [items, setItems] = React.useState([])\r\n  \r\n    const [isUpdate, setIsUpdate] = React.useState(true)\r\n\r\n    const [isHideSettings, setIsHideSettings] = React.useState(true)\r\n    //  title\r\n    //  slug\r\n    //  id\r\n    const useStyles = makeStyles((theme) => ({ \r\n      \r\n      btnSetting: {\r\n          opacity: isHideSettings ? '0.15' : '1',\r\n          position: 'absolute', \r\n          zIndex: 1030, \r\n          top: 2, \r\n          left: 45,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      } ,\r\n      settingsContainer: {\r\n        opacity : isHideSettings ? 0 : 1, \r\n        transform : isHideSettings ? 'scaleX(0)' : 'scaleX(1)', \r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        borderBottom: `${theme.palette.action.active} 1px solid` , \r\n      },\r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      }\r\n  \r\n  }))\r\n  \r\n  const classes = useStyles();\r\n    React.useEffect( () => { \r\n      setIsLoading(true)\r\n      fetchData()\r\n      document.title = props.metaTitle\r\n    }, [location])\r\n  \r\n    const fetchData = async () => {  \r\n       \r\n      const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n      const doc = await pageRef.get();\r\n      \r\n      if (!doc.exists) {\r\n        console.log('No such page!'); \r\n\r\n        // задать шаблон страницы\r\n        let newPage = Object.assign({}, pageLayout) \r\n        newPage.id = uuid()\r\n        newPage.slug = pageSlug\r\n        newPage.items = []\r\n\r\n        await pageRef.set(newPage)\r\n\r\n        setData(newPage)  \r\n        setItems(newPage.items || []) \r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n\r\n      } else { \r\n        setData(doc.data())  \r\n        setItems(doc.data().items)  \r\n        \r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }\r\n   \r\n    }  \r\n    \r\n    const reSaveContainer = async (id, childrenContainer) => {  \r\n   \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem].children = childrenContainer \r\n        }\r\n        return 0 \r\n      })\r\n   \r\n      setData(newData)\r\n      setItems(newData.items)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }).then( () => {\r\n          if(childrenContainer.length === 0) {\r\n            removeContainer(id)\r\n          }\r\n      })\r\n    } \r\n    const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n      let newData = Object.assign({}, data)\r\n        \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n          newData.items[elem].classes = classes \r\n          newData.items[elem].disableGutters = settings.disableGutters \r\n          newData.items[elem].fixed = settings.fixed \r\n          newData.items[elem].maxWidth = settings.maxWidth \r\n          newData.items[elem].innerContainer = settings.innerContainer \r\n        }\r\n        return 0 \r\n      }) \r\n  \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    } \r\n   \r\n    const addContainer = async (type) => {   \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n  \r\n      let newCont\r\n      if(type === 'container') newCont = Object.assign({}, ContainerLayout) \r\n      if(type === 'mainBanner') newCont = Object.assign({}, MainBannerLayout) \r\n\r\n      newCont.id = uuid()\r\n   \r\n      newItems.push(newCont) \r\n   \r\n      newData.items = newItems\r\n          \r\n      setData(newData)\r\n      setItems(newItems)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      });  \r\n    }\r\n  \r\n    const removeContainer = async (id) => {  \r\n      let newData = Object.assign({}, data)\r\n      const filtered = items.filter((item) => (item.id !== id))  \r\n  \r\n      newData.items = filtered\r\n          \r\n      setData(newData)\r\n      setItems(filtered) \r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: filtered\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }); \r\n    }\r\n  \r\n    const swapContainer = async (direction, id) => { \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n      let activeIndex   \r\n   \r\n      newItems.map( (item) => { \r\n        if(item.id === id) {\r\n          activeIndex = newItems.indexOf(item) \r\n        }\r\n        return 0 \r\n      }) \r\n   \r\n      if(direction === 'up' && activeIndex === 0) return  \r\n      if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n      \r\n      if(direction === 'up') { \r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex - 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex - 1 ] = movedItem  \r\n      }\r\n      if(direction === 'down') {\r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex + 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex + 1 ] = movedItem  \r\n      }\r\n  \r\n      newData.items = newItems\r\n         \r\n      setItems(newItems)\r\n      setData(newData)\r\n      setIsUpdate(true)\r\n      setIsLoading(true)\r\n   \r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => {\r\n        setIsUpdate(false)\r\n        setIsLoading(false)\r\n      }) \r\n    }\r\n  \r\n    function renderContainers () {   \r\n      if(items.length > 0) {\r\n        return Object.keys(items).map( (key) => {  \r\n          if(items[key].type === 'container') {\r\n            return ( \r\n                <ContainerElement \r\n                  key={items[key].id} \r\n                  data={items[key]} \r\n                  reSaveContainer={reSaveContainer}\r\n                  reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                  removeContainer={removeContainer}\r\n                  swapContainer={swapContainer}\r\n                /> \r\n            ) \r\n          }\r\n          if(items[key].type === 'mainBanner') { \r\n            return(\r\n                <MainBannerElement\r\n                  key={items[key].id} \r\n                  data={items[key]} \r\n                />\r\n            )\r\n          }\r\n          \r\n       })\r\n      }\r\n      else {\r\n        return ( \r\n          <SkeletonPage/> \r\n        ) \r\n      }\r\n      \r\n    } \r\n\r\n    return (\r\n        <React.Fragment> \r\n\r\n          { \r\n            modeDev &&  \r\n            <Box className={classes.btnContainer}  >\r\n               \r\n              <Tooltip title='Page Settings' placement='bottom'>\r\n                  <Button  \r\n                      onClick={() => { setIsHideSettings(!isHideSettings) }} \r\n                      size='medium'\r\n                      variant='contained'\r\n                      color={'primary'}\r\n                      className={classes.btnSetting}\r\n                  >   \r\n                      <span>Page</span>\r\n                      <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                  </Button>\r\n              </Tooltip>  \r\n              {\r\n                // !isHideSettings && \r\n                <Container className={classes.settingsContainer} px={3}  > \r\n                  \r\n                  <Box m={1} pl={'55px'}>\r\n                    <Typography color={theme.palette.action.active} variant=\"h6\" >\r\n                      Page actions\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box display=\"flex\" alignItems='center' mx={1} minWidth={22} >\r\n                    {\r\n                      isUpdate &&\r\n                      <CircularProgress size={22} thickness={5} /> \r\n                    } \r\n                  </Box>\r\n\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                        Add new container\r\n                    </Button> \r\n                  </Box>\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                        Add Main Banner\r\n                    </Button> \r\n                  </Box>\r\n                  <Box m={1}>\r\n                    <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                        More settings\r\n                    </Button> \r\n                  </Box> \r\n            </Container>\r\n              }\r\n            </Box>\r\n          }\r\n  \r\n          <Breadcrumbs \r\n            breadcrumbs={props.breadcrumbs}\r\n            history={props.history}\r\n          />\r\n\r\n          { \r\n            renderContainers()  \r\n          } \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/ScrollToTop'\r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n\r\n// import Home from '../components/Home'\r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n  \r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            {\r\n                isLoading && \r\n                <LoadingProgress/>\r\n            }\r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                    <Switch>\r\n                        { \r\n                            categories.map( category => {\r\n                                const breadcrumbs = [\r\n                                    {\r\n                                        title: category.title,\r\n                                        slug: category.slug\r\n                                    } \r\n                                ]\r\n                                return (\r\n                                    <Route \r\n                                        key={category.id}\r\n                                        exact\r\n                                        path={`/${category.slug}`}\r\n                                        render={\r\n                                            (props) => {\r\n                                                if(category.slug === '/') { \r\n                                                    return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                }\r\n                                                //if === concacts => return contacts .... \r\n                                                return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        }\r\n                                    />  \r\n                                ) \r\n                            })\r\n                        }\r\n                        { \r\n                            categories.map( category => (\r\n                                category.pages.length > 0 &&\r\n                                category.pages.map( page => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        }, \r\n                                        {\r\n                                            title: page.title,\r\n                                            slug: `${category.slug}/${page.slug}`\r\n                                        }\r\n                                    ]\r\n                                    return(\r\n                                        <Route \r\n                                            key={page.id}\r\n                                            exact\r\n                                            path={`/${category.slug}/${page.slug}`}\r\n                                            render = {\r\n                                                (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        />\r\n                                        )\r\n                                })\r\n                            ))\r\n                        }\r\n         \r\n                        <Route path='/login' render={ () => <Login/> } />\r\n\r\n                        <Route path='*' render={ () => <Error/> } />\r\n                         \r\n                    </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n// import purple from '@material-ui/core/colors/purple';\r\n// import green from '@material-ui/core/colors/green';\r\n  \r\nimport ThemeContext from '../context/themeContext/ThemeContext'  \r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nfunction ThemeComponent() {  \r\n    const {themeMode} = React.useContext(ThemeContext) \r\n \r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: themeMode,\r\n            primary: {\r\n                main: themeMode === 'dark' ?  '#3185d8' : '#311b92',\r\n            },\r\n            secondary: {\r\n                main:  '#f40b00' ,\r\n            },\r\n        },  \r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme={theme} >\r\n            \r\n            \r\n            <CssBaseline/>   \r\n\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ThemeProvider from './context/themeContext/ThemeProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n// import theme from './theme/theme.js'\nimport './assets/style.css'\n\n\n\n\n\n  \nconst App = () => {   \n\n  return (\n      <ThemeProvider>\n       \n\n       <LibraryProvider>\n          <ModeProvider> \n            <CategoryProvider>\n              <LoadingProvider>\n                  <div className=\"App\">  \n                    <ThemeComponent/> \n                  </div>\n              </LoadingProvider> \n            </CategoryProvider> \n          </ModeProvider>\n        </LibraryProvider> \n\n      </ThemeProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}