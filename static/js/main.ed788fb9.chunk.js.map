{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/functions/ScrollToTop.js","components/functions/ImageRemover.js","components/placeholders/LoadingProgress.js","styles/changers.js","components/header/headerHelpers/category/AddCategory.js","components/header/headerHelpers/category/AddPage.js","components/header/headerHelpers/category/ChangeCategory.js","components/header/headerHelpers/category/ChangePage.js","components/header/headerHelpers/CategoriesChanger.js","components/library/colorPicker/ColorPicker.js","components/library/colorPicker/ColorSelecter.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/library/colorPicker/ColorCalculation.js","components/header/dumb/DumbComponent.js","components/header/headerHelpers/RequestsChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/library/banner/DumbComponent.js","components/Login.js","components/Error.js","styles/inputs.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/list/DumbComponent.js","components/library/list/StyledComponent.js","components/library/list/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/AddItem.js","components/library/accordion/ChangeItem.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/DumbComponent.js","components/library/table/AddItem.js","components/library/table/ChangeItem.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/library/formLine/DumbComponent.js","components/library/formLine/StyledComponent.js","components/library/formLine/ElementCreator.js","components/library/swiper/DumbComponent.js","components/library/swiper/ElementCreator.js","components/library/banner/StyledComponent.js","components/library/banner/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","idArrayForDelete","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","clearArrayForDelete","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","name","storageRef","ref","imageRef","child","images","removeImage","removeImagesFromArray","SendFormContext","SendFormProvider","requests","modalSettings","isShowAlert","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","setTimeout","req","newList","slice","newReq","Object","assign","time","getCurrentDate","push","closeAlertFromTimeout","updateRequests","updateModalSettings","sendRequests","closeAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","StylesChangers","theme","menu","palette","background","paper","paddingLeft","paddingRight","paddingBottom","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","fontSize","fontWeight","borderBottom","divider","default","padding","marginBottom","cursor","btnSetting","deepOrange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","btnSave","bottom","paddingTop","opacity","btnWithLabel","spacing","btnDrawerStyle","easeIn","btnDrawerItem","secondary","containerWrapper","outline","outlineOffset","responseValues","margin","marginRight","responseTablets","border","success","fill","responseMobile","mobileTooltip","tabletTooltip","AddCategory","useState","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","onSubmit","e","preventDefault","addCategory","FormGroup","Box","mb","TextField","required","fullWidth","label","variant","onChange","style","Tooltip","title","placement","IconButton","Button","type","AddPage","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","addPage","id","Typography","gutterBottom","size","ChangeCategory","setValue","disabled","onClick","handleUpdateCategory","ml","itemPages","handleUpdatePage","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","localCategories","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","commonClasses","classesRef","maxWidth","listPages","marginTop","listStyle","titlePages","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","pageBox","pageBoxLi","fade","newTitle","newSlug","newCategories","newPage","JSON","parse","stringify","uuid","pages","categoryId","pageId","swapCategory","direction","activeIndex","indexOf","length","movedItem","placeItem","swapPage","activeCategory","dumbWrapper","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","component","Grid","container","xs","newCategory","index","disableElevation","confirm","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","Accordion","AccordionSummary","expandIcon","aria-controls","p","indexPages","ChangePage","mt","startIcon","ColorPicker","memo","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","isDisableSaveIcon","setIsDisableSaveIcon","contrastColor","getContrastText","primary","boxColor","flexGrow","borderRadius","shape","shortest","boxShadow","shadows","boxPicker","iconButton","iconButtonDisabled","prevOpen","onChangeComplete","newColor","hex","ColorSelecter","colorSelect","setColorSelect","colorCustom","setColorCustom","block","main","warning","info","colorCustomText","FormControl","InputLabel","Select","labelId","MenuItem","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","uploadHandler","imageData","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","Divider","FormControlLabel","control","Switch","checked","newLogo","newModal","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","row","Number","newSettings","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","lightError","setLightError","darkError","setDarkError","lightWarning","setLightWarning","darkWarning","setDarkWarning","lightInfo","setLightInfo","darkInfo","setDarkInfo","lightSuccess","setLightSuccess","darkSuccess","setDarkSuccess","colorPreview","colorItem","flexWrap","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","innerIndex","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","my","content","indexPage","borderTop","px","edge","getColorByPalette","getColorByPaletteForGradient","getColorByPaletteReverse","DumbComponent","widthMobile","headerHeight","setHeaderHeight","mobileView","setMobileView","backgroundHeader","modalBtnColor1","modalBtnColor2","headerRef","useRef","topHeaderRef","darken","header","fixedPadding","topHeader","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","buttonModal","setResponsiveness","headHeight","current","clientHeight","setScrollHeader","headerTop","pageYOffset","classList","add","remove","err","removeEventListener","addEventListener","handleChange","themeSwitch","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","RequestsChanger","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","amber","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","String","CardActions","isCheck","handleOnceCheck","handleRemove","Checkbox","request","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","newData","AdminHeader","buttonSettings","settingsContainer","wrapper","providerData","ModalChanger","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ElementCreator","Header","Footer","footer","footerHeading","paragraph","imageUrl","isButton","textButton","targetButton","colorText","paddingVertical","maxWidthContainer","bannerBackground","backgroundPosition","backgroundRepeat","backgroundSize","down","bannerContent","up","sm","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","place","Avatar","loginWithEmail","res","autoComplete","autoFocus","Alert","severity","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","ContainerElement","libraryHeading","libraryParagraph","libraryParagraphImage","paragraphImage","libraryList","setPadding","setMargin","setDisplay","setFlexDirection","setBackgroundColor","shadow","setShadow","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","addHeading","a","newChildren","newItem","reSaveContainer","mr","aria-haspopup","currentTarget","keepMounted","Boolean","tooltip","reSaveContainerStyleSettings","resposiveFontSize","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","outlineColor","focus","sentData","reSaveChildren","prop","removeItem","liClass","itemsStyle","mobileClass","items","setPaddingLeft","setItems","itemsPadding","setItemsPadding","itemsListStyle","setItemsListStyle","setNewItem","mobileMarginTopComputed","mobileMarginBottomComputed","swapItem","newItems","handleItemChange","splice","deleteItem","multiline","rowsMax","imageStyle","imageClassName","imageStabilization","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageAccordion","imagePreview","imageLabel","handleImageMargin","handleImageUpload","generateImageName","downloadURL","pt","pb","align","styleClass","noPadding","yesPadding","noPaper","isPaperClassForContainer","isPaperClassForPaper","renderItems","createArrayImages","forEach","isFirst","swapContainer","isLast","removeContainer","newArr","colorFocusInput","formPhone","setFormPhone","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","input","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","md","xlinkHref","phone","placeholder","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","iconName","setIconName","setMarginTop","setMarginBottom","setMaxWidthContainer","tabletMarginTopComputed","tabletMarginBottomComputed","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","AddItem","newItemTitle","setNewItemTitle","newItemBody","setNewItemBody","addItem","ChangeItem","setHead","setBody","handleUpdateItem","itemLayout","colorMapOnload","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","fontFamily","link","boxForFlex","heightRegular","linksContainer","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","cols","rows","setLocation","setPhone","setInputComment","setMapFrame","setIsButton","setTextButton","setTargetButton","colorTheme","headingSize","colorMain","containerColored","containerFlexed","setHeadingSize","CustomizedTables","mainColor","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isBotton","isBottonClick","setIsBottonClick","StyledTableRow","withStyles","TableRow","table","tableCell","tableButtonCell","tableButton","tableContainer","tableHeader","handleVisible","OnceRow","hover","TableCell","scope","price","TableContainer","Table","TableHead","TableBody","newItemPrice","setNewItemPrice","setPrice","handleRowChange","setRows","setTableRow","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","newRows","newRow","handleTableHeadChange","rowLayout","lineDecor","gridItem","SwiperCore","use","Navigation","slideForView","setSlideForView","slideHeight","setSlideHeight","slideRef","swiper","slide","overflow","slideBox","slideImg","slideTitle","getWidthViewport","actualWidth","quantity","Math","floor","slideHeightCalc","clientWidth","spaceBetween","speed","slidesPerView","navigation","onSlideChange","renderSlide","setMinHeight","colorTextSelect","setColorTextSelect","colorTextCustom","setColorTextCustom","setPaddingVertical","paddingVerticalComputed","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","FormLineLayout","formLine","SwiperLayout","BannerLayout","banner","setData","btnContainer","boxMenuItem","fetchData","document","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","innerHeight","history","key","orderFirst","orderLast","RouterComponent","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","closeBtn","targetContainer","targetLabel","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ed788fb9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 959) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        idArrayForDelete: [],\r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n        \r\n        // imageList: [], \r\n    }\r\n    \r\n \r\n    \r\n\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n        // this.fetchListFromStorage()\r\n    } \r\n    // fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .then( () => {\r\n    //         this.setState({\r\n    //             imageList: imagesArray\r\n    //         })\r\n    //     })\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n        \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 700);\r\n        \r\n    // }\r\n\r\n    async updateCategories(data) { \r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {    \r\n        // const pageRef = firebase.db.collection(\"site1\").doc(slug)\r\n        // const doc = await pageRef.get();\r\n        \r\n        // let idArray = []\r\n\r\n        // if (!doc.exists) {\r\n        //     console.log('No such page!');  \r\n        // } else { \r\n        //     const items = doc.data().items\r\n        //     items.forEach(item => {\r\n        //         if(item.type === 'container') { \r\n        //             item.children.forEach( child => {\r\n        //                 if(child.type === 'paragraphImage') {\r\n        //                     idArray.push(child.id)\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //         else {  \r\n        //             idArray.push(item.id)\r\n        //         }\r\n        //     });\r\n        // }\r\n        // this.setState({\r\n        //     idArrayForDelete: idArray\r\n        // })\r\n\r\n        // await pageRef.delete()\r\n        // // .then( () => {\r\n        // //     setTimeout(() => {\r\n        // //         this.setState({\r\n        // //             idArrayForDelete: []\r\n        // //         })\r\n        // //     }, 1000);\r\n        // // })\r\n        // .then( () => {\r\n        //     this.state.imageList.forEach( imageName => {\r\n        //         idArray.forEach(id => {\r\n        //             if(imageName.includes(id)) this.removeImage(imageName)\r\n        //         })\r\n        //     })\r\n        // })\r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n    // async removeImage(name) { \r\n    //     if(name !== '') {\r\n    //         const storageRef = firebase.storage.ref();\r\n \r\n    //         const imageRef = storageRef.child(name)\r\n        \r\n    //         try {\r\n    //             await imageRef.delete().then(function() {\r\n    //                 console.log('File deleted successfully')\r\n    //             }).catch(function(error) {\r\n    //                 console.log(error) \r\n    //             }); \r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    idArrayForDelete: this.state.idArrayForDelete, \r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    clearArrayForDelete: () => {\r\n                        this.setState({\r\n                            idArrayForDelete: []\r\n                        })\r\n                    }, \r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    // state = {  \r\n    //     imageList: [], \r\n    // } \r\n\r\n    // async componentDidMount() { \r\n    //       this.fetchListFromStorage()\r\n    //     //   this.fetchListFromFirestore()\r\n    // }\r\n\r\n    // async fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     await listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n    //     this.setState({\r\n    //         imageList: imagesArray\r\n    //     }) \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 500);\r\n        \r\n    // }\r\n\r\n    // async addImageToList(newImage, oldName) {\r\n    //     const newList = this.state.imageList.slice()\r\n    //     let newItem\r\n    //     let isNew = true\r\n    //     let isNeedUpdate = newImage.name === oldName ? false : true \r\n    //     if(isNeedUpdate) { \r\n    //         for(let i = 0; i < newList.length; i++) {\r\n    //             if(newList[i].name === newImage.name) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity++ \r\n    //                 isNew = false\r\n    //             }\r\n    //             if(newList[i].name === oldName) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity--  \r\n    //                 if( newList[i].quantity === 0 ) { \r\n    //                     this.removeImage(oldName) \r\n    //                     newList.splice(i, 1)\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //         if(isNew) {\r\n    //             newItem = {\r\n    //                 name: newImage.name, \r\n    //                 url: newImage.url, \r\n    //                 quantity: 1\r\n    //             }\r\n    //             newList.push(newItem)\r\n    //         }\r\n    //     }\r\n    //     else { \r\n    //         console.log(newImage, oldName)\r\n    //     }\r\n         \r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })\r\n \r\n    //     console.log(this.state.imageList, oldName)\r\n\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    // async fetchListFromFirestore() {\r\n    //     const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n    //     const doc = await listRef.get();\r\n      \r\n    //     if (!doc.exists) {\r\n    //         console.log('No such page!');  \r\n\r\n    //     } else { \r\n    //         this.setState({\r\n    //             imageList: doc.data().list\r\n    //         }) \r\n    //     }\r\n    // }\r\n    // async uploadImage(imageData, oldName) { \r\n    //     const storageRef = await firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n    //     const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n    //     const newImage = {\r\n    //         url: downloadURL, \r\n    //         name: imageData.name, \r\n    //         quantity: 1\r\n    //     }\r\n    //     this.addImageToList(newImage, oldName)\r\n  \r\n    // }\r\n    // async updateList(newList) {\r\n    //     await firebase.db.collection(\"site1category\").doc(\"imageList\").update({\r\n    //         list: newList, \r\n    //     }).then(() => { \r\n    //         this.setState({\r\n    //             imageList: newList\r\n    //         })\r\n    //     })\r\n    // }\r\n \r\n    // removeImageFromStoreAndList(name) {\r\n    //     console.log(name)\r\n    //     const newList = this.state.imageList.slice()\r\n    //     newList.map( (item, index) => {\r\n    //         if(item.name === name) {\r\n    //             item.quantity--\r\n    //             if(item.quantity === 0) newList.splice(index, 1)\r\n    //         }\r\n    //     })\r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })  \r\n    //     this.removeImage(name)\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    async removeImage(name) { \r\n        if(name !== '') {\r\n            const storageRef = firebase.storage.ref();\r\n \r\n            const imageRef = storageRef.child(name)\r\n        \r\n            try {\r\n                await imageRef.delete().then(function() {\r\n                    console.log('File deleted successfully')\r\n                }).catch(function(error) {\r\n                    console.log(error) \r\n                }); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n    removeImagesFromArray(images) {\r\n        console.log(images)\r\n    }\r\n   \r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    // imageList: this.state.imageList, \r\n                    // nameList: this.state.nameList ,\r\n                    \r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    },\r\n                    removeImagesFromArray: (array) => {\r\n                        this.removeImagesFromArray(array)\r\n                    },\r\n                    // removeImageFromStoreAndList: (name) => {\r\n                    //     this.removeImageFromStoreAndList(name)\r\n                    // },\r\n                    // uploadImage: (data, name) => {\r\n                    //     this.uploadImage(data, name)\r\n                    // }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isShowAlert: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            })  \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout() {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isShowAlert: null\r\n            })\r\n        }, 7000);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isShowAlert: 'info'\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isShowAlert: 'success'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isShowAlert: 'error'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isShowAlert, \r\n                    modalSettings: this.state.modalSettings, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isShowAlert: null\r\n                        })\r\n\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React, { useEffect, useContext, memo } from 'react'\r\n\r\nimport ImageContext from '../../context/imageContext/ImageContext' \r\n\r\nconst ImageRemover = memo(({ idArrayForDelete, clearArrayForDelete }) => {\r\n\r\n    const { removeImagesFromArray } = useContext(ImageContext)\r\n\r\n    useEffect( () => { \r\n        if(idArrayForDelete !== []) removeImages()\r\n        \r\n        console.log('effect') \r\n        \r\n    }, [idArrayForDelete])\r\n\r\n    const removeImages = () => { \r\n        removeImagesFromArray(idArrayForDelete) \r\n    }\r\n\r\n    return null\r\n})\r\n\r\nexport default ImageRemover\r\n \r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            paddingBottom: 0,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        btnWithLabel: {\r\n            padding: 0, \r\n            '& label': {\r\n                padding: theme.spacing(1, 2), \r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            outlineOffset: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                // outlineColor: `${theme.palette.error.main}`,\r\n                // zIndex: 100, \r\n                 \r\n                // '& $mtView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $mbView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $btnDrawerStyle' : { \r\n                //     opacity: 1\r\n                // }\r\n            }\r\n        },\r\n        responseValues: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            padding: theme.spacing(1, 2),\r\n            margin: theme.spacing(1, 0), \r\n            '& p': {\r\n                margin: 0\r\n            },\r\n            '& svg': {\r\n                marginRight: 8, \r\n            }\r\n        }, \r\n        responseTablets: { \r\n            border: `1px solid ${theme.palette.success.dark}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.dark \r\n            }\r\n        },\r\n        responseMobile: { \r\n            border: `1px solid ${theme.palette.success.light}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.light \r\n            }\r\n        },\r\n        mobileTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.light\r\n        },\r\n        tabletTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.dark\r\n        }\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n\r\nconst AddCategory = (props) => {\r\n\r\n    \r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.addCategory(newCategoryTitle, newCategorySlug)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <Box mb={1}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label=\"Category title\" \r\n                        variant=\"outlined\" \r\n                        value={newCategoryTitle}\r\n                        onChange={(e) => { setNewCategoryTitle(e.target.value) }}\r\n                    />\r\n                </Box>\r\n                <Box mb={1} style={{position: 'relative'}}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label=\"Category slug\" \r\n                        variant=\"outlined\" \r\n                        value={newCategorySlug}\r\n                        onChange={(e) => { setNewCategorySlug( e.target.value)}}\r\n                            \r\n                    />\r\n                    <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                        <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                            <InfoOutlined color={'secondary'}/>\r\n                        </IconButton>\r\n                    </Tooltip> \r\n                </Box>\r\n                <Box mb={1}>\r\n                    <Button \r\n                        type='submit'\r\n                        color={'primary'} \r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                    >\r\n                        Add New Category\r\n                    </Button> \r\n                </Box>\r\n            </FormGroup>\r\n\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton,\r\n    Typography, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\nconst AddPage = (props) => {\r\n     \r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addPage(newPageTitle, newPageSlug, props.id)\r\n        setNewPageTitle('')\r\n        setNewPageSlug('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box display='flex' justifyContent={'flex-end'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new page</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New page title\" \r\n                            variant=\"outlined\" \r\n                            value={newPageTitle}\r\n                            onChange={(e) => { setNewPageTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New page slug\" \r\n                            variant=\"outlined\" \r\n                            value={newPageSlug}\r\n                            onChange={(e) => { setNewPageSlug(e.target.value)}}\r\n                            \r\n                        />\r\n                        <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                            <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                <InfoOutlined size={10} color={'secondary'}/>\r\n                            </IconButton>\r\n                        </Tooltip> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Page\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddPage\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n\r\n    const [value, setValue] = useState(props.item.title)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdateCategory(value, props.item.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.item.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Category ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.item.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField  \r\n                    required\r\n                    type='text' \r\n                    label=\"Category title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue(e.target.value)}}\r\n                />     \r\n                <TextField \r\n                    type='text' \r\n                    label=\"Category slug (read only)\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.item.slug} \r\n                    disabled={true} \r\n                />  \r\n            </Box> \r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n\r\n    const [value, setValue] = useState(props.itemPages.title)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdatePage(value, props.item.id, props.itemPages.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.itemPages.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Page ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.itemPages.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField \r\n                    required\r\n                    type='text' \r\n                    label=\"Page title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue( e.target.value )}}\r\n                />     \r\n                <TextField  \r\n                    type='text' \r\n                    label=\"Page slug\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.itemPages.slug} \r\n                    disabled={true}\r\n                />  \r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport AddCategory from './category/AddCategory'\r\nimport AddPage from './category/AddPage'\r\nimport ChangeCategory from './category/ChangeCategory'\r\nimport ChangePage from './category/ChangePage'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid,\r\n    fade,  \r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n\r\n    console.log('CategoriesChanger')\r\n     \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    \r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n       \r\n        return( { \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,\r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid ${theme.palette.divider}`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }, \r\n            pageBox: {\r\n                display: 'flex',  \r\n                justifyContent: 'space-between', \r\n                alignItems: 'center', \r\n                marginBottom: theme.spacing(2), \r\n            }, \r\n            pageBoxLi: {\r\n                padding: 5, \r\n                border: `1px solid ${fade(theme.palette.success.light, 0.3)}`\r\n\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (newTitle, newSlug) => {\r\n        let newList = categories.slice() \r\n        let newCategory = JSON.parse(JSON.stringify(categoryLayout)); \r\n\r\n        newCategory.id = uuid()\r\n        newCategory.title = newTitle\r\n        newCategory.slug = newSlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList) \r\n    }\r\n    const addPage = (newTitle, newSlug, id) => {  \r\n        \r\n        let newCategories = categories.slice()\r\n        \r\n        let newPage = JSON.parse(JSON.stringify(pageLayout));  \r\n        newPage.id = uuid()\r\n        newPage.title = newTitle\r\n        newPage.slug = newSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) {  \r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n    } \r\n     \r\n    const handleUpdateCategory = (value, id) => {  \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n          \r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        })  \r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        const conf = window.confirm('Delete category?')\r\n        if(conf) {\r\n            let filtered = categories.filter((item) => (item.id !== id))  \r\n            const deleted = categories.filter( (item) => (item.id === id))\r\n            let arrayOfPagesForDelete = [] \r\n\r\n            arrayOfPagesForDelete.push(deleted[0].slug)\r\n            if(deleted[0].pages.length > 0) {\r\n                deleted[0].pages.map((item) => {\r\n                    arrayOfPagesForDelete.push(item.slug)\r\n                    return 0\r\n                })\r\n            }\r\n\r\n            setCategories(filtered)  \r\n            deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        }  \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        const conf = window.confirm('Delete page?')\r\n            if(conf) {\r\n            categories.map( category => {\r\n                if(category.id === categoryId) {  \r\n                    let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                    category.pages = filtered\r\n                }\r\n                return 0 \r\n            }) \r\n            setCategories(categories)  \r\n\r\n            deletePageFromFirebase(slug)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <AddCategory addCategory={addCategory} />\r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    {\r\n                                                        item.slug === '/' ?\r\n                                                        <Tooltip title=\"You can't remove Home Category\" placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}  \r\n                                                            > \r\n                                                                <InfoOutlined style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button> \r\n                                                        </Tooltip>\r\n                                                        :\r\n                                                        <Tooltip title='Delete Category' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}\r\n                                                                onClick={() => { deleteCategory(item.id) }}\r\n                                                            > \r\n                                                                <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            \r\n                                                            <ChangeCategory item={item} handleUpdateCategory={handleUpdateCategory}  />\r\n\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages}  className={classes.pageBoxLi}  >\r\n                                                                            <Box className={classes.pageBox}  >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            \r\n                                                                            <ChangePage handleUpdatePage={handleUpdatePage} item={item} itemPages={itemPages} /> \r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n\r\n                                                                    <AddPage addPage={addPage} id={item.id} />    \r\n                                                                 \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState, useEffect } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n    const [isDisableSaveIcon, setIsDisableSaveIcon] = useState(true); \r\n \r\n\r\n    const togglePicker = () => {\r\n        setIsOpen(prevOpen => !prevOpen)\r\n        setColor(initialColor)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const handleChange = (newColor) => {\r\n        setColor(newColor.hex)\r\n        setIsDisableSaveIcon(false)\r\n    }\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit') \r\n        setIsDisableSaveIcon(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(initialColor === 'inherit' ) setColor('#0000')\r\n    }, [initialColor])\r\n\r\n    const useStyles = makeStyles( theme => { \r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'warning' && \r\n            color !== 'error' && \r\n            color !== 'info' && \r\n            color !== 'success' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.shortest} ${theme.transitions.easing.easeInOut}ms`, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[4]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }, \r\n            iconButton: {\r\n                padding: theme.spacing(1)\r\n            }, \r\n            iconButtonDisabled: {\r\n                opacity: 0\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    isDisableSaveIcon ? \r\n                    <IconButton disabled={true} className={`${classes.iconButton} ${classes.iconButtonDisabled}`} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save}  color={'primary'} className={classes.iconButton} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react'\r\n\r\nimport { ColorPicker } from './ColorPicker'\r\n\r\nimport { FormControl, InputLabel, Select , MenuItem, Box, makeStyles } from '@material-ui/core'\r\n\r\nfunction ColorSelecter({label, colorSelect, setColorSelect, colorCustom , setColorCustom, setIsDisableBtn, position, noInherit }) {\r\n   \r\n    console.log(colorSelect, colorCustom)\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        block: {\r\n            position: 'absolute', \r\n            top: 'calc(50% - 12px)', \r\n            right: 7, \r\n            height: 24, \r\n            width: 24\r\n        },\r\n        primary: {\r\n            backgroundColor: theme.palette.primary.main\r\n        },\r\n        secondary: {\r\n            backgroundColor: theme.palette.secondary.main\r\n        },\r\n        warning: {\r\n            backgroundColor: theme.palette.warning.main\r\n        },\r\n        error: {\r\n            backgroundColor: theme.palette.error.main\r\n        },\r\n        info: {\r\n            backgroundColor: theme.palette.info.main\r\n        },\r\n        success: {\r\n            backgroundColor: theme.palette.success.main\r\n        } \r\n    }))\r\n    const { block, primary , secondary , warning , error , info, success } = useStyles()\r\n    const colorCustomText = (colorCustom !== 'primary' && colorCustom !== 'secondary' &&  colorCustom !== 'warning' &&\r\n                            colorCustom !== 'error' && colorCustom !== 'info' && colorCustom !== 'success' ) ? ` - ${colorCustom}` : \" \"\r\n    return (\r\n        <Box display=\"flex\" alignItems='center'>\r\n            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                <InputLabel id=\"color-select-label\">{label}</InputLabel>\r\n                <Select\r\n                    labelId=\"color-select-label\"\r\n                    id=\"color-select\"\r\n                    value={colorSelect}\r\n                    onChange={(e) => { setIsDisableBtn(false); setColorSelect(e.target.value) }} \r\n                >\r\n                    <MenuItem style={{position: 'relative'}} value={'primary'}>\r\n                        Primary\r\n                        <Box className={`${block} ${primary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'secondary'}>\r\n                        Secondary \r\n                        <Box className={`${block} ${secondary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'warning'}>\r\n                        Warning\r\n                        <Box className={`${block} ${warning}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'error'}>\r\n                        Error\r\n                        <Box className={`${block} ${error}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'info'}>\r\n                        Info\r\n                        <Box className={`${block} ${info}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'success'}>\r\n                        Success\r\n                        <Box className={`${block} ${success}`} />\r\n                    </MenuItem>\r\n                    <MenuItem value={'custom'}>\r\n                        Custom  {colorCustomText}\r\n                    </MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <Box ml={1} >\r\n                {\r\n                    colorSelect === 'custom' &&\r\n                    <ColorPicker\r\n                        initialColor = {colorCustom}\r\n                        changeColor = {setColorCustom}\r\n                        setIsDisableBtn = {setIsDisableBtn}\r\n                        position = {position}\r\n                        noInherit={noInherit}\r\n                    />  \r\n                }\r\n                \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ColorSelecter\r\n","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport ColorSelecter from '../../library/colorPicker/ColorSelecter'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch,\r\n    FormControl,\r\n    InputLabel, \r\n    Select, \r\n    MenuItem\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n\r\n    console.log(modal.color )\r\n\r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    React.useEffect(() => {\r\n        if(\r\n            modal.color !== 'primary' && \r\n            modal.color !== 'secondary' &&\r\n            modal.color !== 'warning' &&\r\n            modal.color !== 'error' &&\r\n            modal.color !== 'info' &&\r\n            modal.color !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [modal])\r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnWithLabel } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,  \r\n            btnWithLabel: {...btnWithLabel, ...{\r\n                '& label': {\r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    padding: theme.spacing(1, 2)\r\n                }\r\n            }},\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n                \r\n                setIsDisableBtn(false)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Logo/Modal  changer  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained' \r\n                                        className={classes.btnWithLabel}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> <ImageIcon color=\"action\" /> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Text for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalText}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalText(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <ColorSelecter\r\n                                                label={'Color for Button'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={true}\r\n                                            /> \r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n\r\n    React.useEffect(() => {\r\n        if( \r\n            settings.classes.backgroundColor !== 'default' && \r\n            settings.classes.backgroundColor !== 'paper' && \r\n            settings.classes.backgroundColor !== 'primary' &&  \r\n            settings.classes.backgroundColor !== 'secondary' &&\r\n            settings.classes.backgroundColor !== 'warning' &&\r\n            settings.classes.backgroundColor !== 'error' &&\r\n            settings.classes.backgroundColor !== 'info' &&\r\n            settings.classes.backgroundColor !== 'success'  \r\n        ) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n    }, [settings])\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                maxWidth: 400,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Style changer <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl    variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Background Color for Header</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={settingBackgroundSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setSettingBackgroundSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Theme Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Theme Secondary</MenuItem> \r\n                                                    <MenuItem value={'warning'}>Theme Warning</MenuItem>\r\n                                                    <MenuItem value={'error'}>Theme Error</MenuItem>\r\n                                                    <MenuItem value={'info'}>Theme Info</MenuItem>\r\n                                                    <MenuItem value={'success'}>Theme Success</MenuItem>\r\n                                                    <MenuItem value={'default'}>Theme BG default</MenuItem>\r\n                                                    <MenuItem value={'paper'}>Theme BG paper</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    settingBackgroundSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {settingBackgroundCustom}\r\n                                                        changeColor = {setSettingBackgroundCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'left'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n    const [lightError, setLightError] = React.useState(themeLight.palette.error.main) \r\n    const [darkError, setDarkError] = React.useState(themeDark.palette.error.main) \r\n\r\n    const [lightWarning, setLightWarning] = React.useState(themeLight.palette.warning.main) \r\n    const [darkWarning, setDarkWarning] = React.useState(themeDark.palette.warning.main) \r\n\r\n    const [lightInfo, setLightInfo] = React.useState(themeLight.palette.info.main) \r\n    const [darkInfo, setDarkInfo] = React.useState(themeDark.palette.info.main) \r\n\r\n    const [lightSuccess, setLightSuccess] = React.useState(themeLight.palette.success.main) \r\n    const [darkSuccess, setDarkSuccess] = React.useState(themeDark.palette.success.main) \r\n \r\n    // text.primary\r\n    // text.secondary\r\n    // text.disabled\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        console.log(theme.palette.success)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    const handleSave = () => {  \r\n \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                },\r\n                error: {\r\n                    main: lightError\r\n                },\r\n                warning: {\r\n                    main: lightWarning\r\n                },\r\n                info: {\r\n                    main: lightInfo\r\n                },\r\n                success: {\r\n                    main: lightSuccess\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                },\r\n                error: {\r\n                    main: darkError\r\n                },\r\n                warning: {\r\n                    main: darkWarning\r\n                },\r\n                info: {\r\n                    main: darkInfo\r\n                },\r\n                success: {\r\n                    main: darkSuccess\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={2}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Warning - { lightWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightWarning}\r\n                                        changeColor = {setLightWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Error - { lightError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightError}\r\n                                        changeColor = {setLightError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Info - { lightInfo }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightInfo}\r\n                                        changeColor = {setLightInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Success - { lightSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSuccess}\r\n                                        changeColor = {setLightSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Warning- { darkWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkWarning}\r\n                                        changeColor = {setDarkWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Error - { darkError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkError}\r\n                                        changeColor = {setDarkError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Info - { darkInfo}\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkInfo}\r\n                                        changeColor = {setDarkInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Succwss - { darkSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSuccess}\r\n                                        changeColor = {setDarkSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box my={4} width={'100%'} clone={true} >\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                // color: \"textPrimary\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","export const getColorByPalette = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.primary.main \r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.error.main \r\n        } \r\n        case ('info') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.success.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.default\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        default: return color\r\n    } \r\n}\r\nexport const getColorByPaletteForGradient = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return [theme.palette.primary.main, theme.palette.primary.dark] \r\n        } \r\n        case ('secondary') : {\r\n            return [theme.palette.secondary.main, theme.palette.secondary.dark] \r\n        } \r\n        case ('warning') : {\r\n            return [theme.palette.warning.main, theme.palette.warning.dark] \r\n        } \r\n        case ('error') : {\r\n            return [theme.palette.error.main, theme.palette.error.dark] \r\n        } \r\n        case ('info') : {\r\n            return [theme.palette.info.main, theme.palette.info.dark] \r\n        } \r\n        case ('success') : {\r\n            return  [theme.palette.success.main, theme.palette.success.dark]\r\n        } \r\n        default: return [color, color]\r\n    } \r\n}\r\nexport const getColorByPaletteReverse = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('info') : {\r\n            return theme.palette.error.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.info.main\r\n        } \r\n        default: return color\r\n    } \r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button,\r\n    FormControlLabel, \r\n    Switch\r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\nimport {getColorByPaletteForGradient, getColorByPalette } from '../../library/colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent() { \r\n\r\n    console.log('dumb header')\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings, setThemeMode, themeMode} = React.useContext(CategoryContext)    \r\n  \r\n    const checked = themeMode === 'dark' ? true : false\r\n\r\n    const [headerHeight, setHeaderHeight] = useState(0)\r\n\r\n    const [mobileView, setMobileView] = useState(false); \r\n   \r\n    let backgroundHeader = settings.classes.backgroundColor\r\n    let colorHeader \r\n    let hoverActiveLinkColor\r\n  \r\n    let modalBtnColor1 = modal.color\r\n    let modalBtnColor2 = modal.color\r\n\r\n    let widthMobile \r\n    \r\n    \r\n    const headerRef = React.useRef(null);\r\n    const topHeaderRef = React.useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`]\r\n        \r\n        modalBtnColor1= getColorByPaletteForGradient(theme, modal.color)[0]\r\n        modalBtnColor2= getColorByPaletteForGradient(theme, modal.color)[1]\r\n \r\n        backgroundHeader = getColorByPalette(theme, backgroundHeader)\r\n \r\n\r\n        if(backgroundHeader === 'primary') {\r\n            backgroundHeader = theme.palette.primary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.primary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.primary.main, 0.3)\r\n        }\r\n        if(backgroundHeader === 'secondary') {\r\n            backgroundHeader = theme.palette.secondary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.secondary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.secondary.main, 0.3)\r\n        }\r\n          \r\n\r\n        if( \r\n            backgroundHeader !== 'default' && \r\n            backgroundHeader !== 'paper' && \r\n            backgroundHeader !== 'primary' && \r\n            backgroundHeader !== 'secondary' &&\r\n            backgroundHeader !== 'warning' &&\r\n            backgroundHeader !== 'error' &&\r\n            backgroundHeader !== 'info' &&\r\n            backgroundHeader !== 'success' \r\n        ) {  \r\n                colorHeader = theme.palette.getContrastText(backgroundHeader)\r\n                hoverActiveLinkColor = darken(backgroundHeader, 0.5) \r\n        }   \r\n        if(backgroundHeader === 'paper') { \r\n            backgroundHeader = theme.palette.background.paper\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.paper)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n        if(backgroundHeader === 'default') { \r\n            backgroundHeader = theme.palette.background.default\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.default)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n  \r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n               \r\n                top: 0, \r\n                // left: 0,\r\n                // right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            topHeader: {   \r\n                height: 35, \r\n                backgroundColor: theme.palette.background.default, \r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `, \r\n                '&.sticky' : {\r\n                    // transform: 'scaleY(0)',\r\n                    // transformOrigin: 'top', \r\n                    height: 0, \r\n                    opacity: 0\r\n                }\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: colorHeader , \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundImage: `linear-gradient(180deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`,  \r\n                color: theme.palette.getContrastText(modalBtnColor2), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': { \r\n                    color: theme.palette.getContrastText(modalBtnColor2) ,\r\n                    backgroundImage: `linear-gradient(200deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`, \r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal, topHeader} = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  headerRef.current.clientHeight\r\n            \r\n            console.log('resize header')\r\n            setHeaderHeight(headHeight + 5)\r\n            \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        const setScrollHeader = () => { \r\n            const headerTop =  window.pageYOffset\r\n            try {\r\n                if( headerTop > 1 ) {\r\n                    topHeaderRef.current.classList.add('sticky')\r\n                } else {\r\n                    topHeaderRef.current.classList.remove('sticky')\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n            }\r\n            console.log(headerTop)\r\n        }\r\n        // setScrollHeader()\r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n\r\n        window.removeEventListener('scroll', setScrollHeader)\r\n        window.addEventListener(\"scroll\", () => setScrollHeader());\r\n        // eslint-disable-next-line\r\n    }, []);\r\n     \r\n\r\n    const openModal = () => {\r\n        handleOpen('')\r\n    }\r\n\r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    const themeSwitch = () => (\r\n        <Box>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch\r\n                        checked={checked}\r\n                        onChange={handleChange}\r\n                        name=\"checkedB\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Dark Theme\"\r\n            />\r\n        </Box>\r\n    )\r\n\r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button\r\n            onClick={openModal} \r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n                 \r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            } \r\n            <AppBar className={header} ref={headerRef}  id='header'>\r\n                \r\n                    <Box className={topHeader} ref={topHeaderRef} >\r\n                        <Container \r\n                            disableGutters={settings.disableGutters}\r\n                            fixed={settings.fixed} \r\n                            maxWidth={settings.maxWidth}  \r\n                        > \r\n                            <Box display='flex' alignItems='center'>\r\n                                {themeSwitch()} \r\n                                <NavLink to='/login'>\r\n                                    <Button \r\n                                        color='default' \r\n                                        variant=\"outlined\"\r\n                                        size='small'\r\n                                    >\r\n                                        Login\r\n                                    </Button>\r\n                                </NavLink>\r\n                            </Box>\r\n                        </Container>\r\n                    </Box>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop \r\n                            themeSwitch={themeSwitch}\r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            themeSwitch={themeSwitch}\r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({ \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {  \r\n\r\n        const newReq = localRequests.slice()\r\n        const filtered = newReq.filter(item => ( item.time !== id ))\r\n\r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false)\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n  \r\nimport ColorSelecter from '../../library/colorPicker/ColorSelecter'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,   \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n     \r\n    React.useEffect(() => {\r\n        if(\r\n            modalSettings.colorButton !== 'primary' && \r\n            modalSettings.colorButton !== 'secondary' &&\r\n            modalSettings.colorButton !== 'warning' &&\r\n            modalSettings.colorButton !== 'error' &&\r\n            modalSettings.colorButton !== 'info' &&\r\n            modalSettings.colorButton !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [modalSettings.colorButton])\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Modal Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <ColorSelecter\r\n                                    label={'Color for Button'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={true}\r\n                                /> \r\n                            </Box>\r\n                            \r\n                             \r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, makeStyles, Tooltip} from '@material-ui/core'\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)  \r\n \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { \r\n                    isOpen && \r\n                    <Box className={classes.settingsContainer} >\r\n                        <Typography component='span' >\r\n                            hello, { user.providerData[0].email } \r\n                        </Typography>\r\n\r\n                        <Box display='flex'>\r\n                            <RequestsChanger/>  &nbsp;\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    \r\n                        <Box> \r\n                            <Button \r\n                                size='small'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={handleSignOut}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container, Switch , FormControlLabel, darken } from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nfunction Footer() {\r\n\r\n    const { setThemeMode, themeMode, logo} = React.useContext(CategoryContext)\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: darken(theme.palette.background.paper, 0.5), \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        },\r\n        logoMain: { \r\n            fontWeight: 600,\r\n            fontSize: 24, \r\n            textDecoration: 'none',\r\n            textAlign: \"left\",\r\n            whiteSpace: 'nowrap',\r\n            [`@media (max-width: ${960}px)`]: {\r\n                fontSize: 18,\r\n                lineHeight: 1.2\r\n            },\r\n        },\r\n        logoSub: { \r\n            fontWeight: 400,\r\n            fontSize: 12,\r\n            margin: 0, \r\n            textDecoration: 'none',\r\n            textAlign: \"left\",\r\n            whiteSpace: 'nowrap'\r\n            \r\n        },\r\n        logoImage: { \r\n            width: 80, \r\n            height: 60, \r\n            marginRight: 4, \r\n            '&>img': { \r\n                width: '100%',\r\n                height: '100%'\r\n            },\r\n            [`@media (max-width: ${960}px)`]: {\r\n                width: 60, \r\n                height: 50, \r\n            },\r\n        }, \r\n    }))\r\n    const classes = useStyles()\r\n\r\n    const checked = themeMode === 'dark' ? true : false\r\n\r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    const createLogo = () => (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={classes.logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={classes.logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={classes.logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                { createLogo() }\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n\r\n                <Box>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Dark Theme\"\r\n                    />\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Container, Grid, Box, Button, darken } from '@material-ui/core'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading  \r\n    const paragraph = props.data.paragraph   \r\n     \r\n    const minHeight =  props.data.minHeight \r\n    const imageUrl =  props.data.imageUrl  \r\n \r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorButton = props.data.colorButton || '#f00'\r\n    let colorText = props.data.colorText || 'inherit'\r\n\r\n    const paddingVertical = props.data.paddingVertical  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    console.log(colorText)\r\n    const useStyles = makeStyles((theme) => {   \r\n        colorButton = getColorByPalette(theme, colorButton) \r\n        colorText = getColorByPalette(theme, colorText) \r\n\r\n             \r\n        return ({ \r\n            bannerBackground: {\r\n                backgroundImage: `url(${imageUrl})`, \r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            bannerContent: {\r\n                display: 'flex',\r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                paddingTop: paddingVertical,\r\n                paddingBottom: paddingVertical,\r\n                minHeight: minHeight, \r\n                maxHeight: \"100vh\", \r\n                [theme.breakpoints.down('sm')]: { \r\n                    paddingTop: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20), \r\n                    paddingBottom: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20),\r\n                }\r\n            },\r\n            heading: {  \r\n                marginBottom: theme.spacing(3), \r\n                textAlign: 'center',  \r\n                color: colorText\r\n            },\r\n            paragraph: {  \r\n                marginTop: -10, \r\n                marginBottom: 20,  \r\n                lineHeight: 1.5, \r\n                fontWeight: 400, \r\n                textAlign: 'center',  \r\n                fontSize: 15 , \r\n                color: colorText,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: 0, \r\n                    lineHeight: 1.1\r\n                }\r\n            },\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: 14,  \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n             \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (  \r\n        <div className={classes.bannerBackground}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Box className={classes.bannerContent} > \r\n                    <Grid item xs={12} sm={6} className=\"info heading\">\r\n                        { heading.length > 0 && <h3 className={classes.heading}>{heading}</h3> }\r\n                        { paragraph.length > 0 && <p className={classes.paragraph} > {paragraph} </p> } \r\n                        {\r\n                                isButton && \r\n                                <Box display={'flex'} justifyContent='center'>\r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button>\r\n                                </Box> \r\n                            }\r\n                    </Grid> \r\n                </Box> \r\n            </Container>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport Dumb from '../components/library/banner/DumbComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const disableCheck = () => {\r\n        if(name !== '' && password !== '') setIsDisableBtn(false)\r\n        else setIsDisableBtn(true)\r\n    }\r\n\r\n    const handleChange = (value, place) => {\r\n        switch(place) {\r\n            case ('name') : { \r\n                setName(value)\r\n                break;\r\n            }\r\n            case ('password'): {\r\n                setPassword(value)\r\n                break;\r\n            }\r\n            default: break;\r\n        } \r\n        disableCheck()\r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        setIsDisableBtn(true)\r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>  \r\n            {/* <Dumb/> */}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Вход\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"text\"\r\n                            label=\"User\"\r\n                            name=\"user\"\r\n                            autoComplete='true'\r\n                            autoFocus\r\n                            value={name}\r\n                            onChange={  (e)=>{handleChange(e.target.value, \"name\")} }\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\" \r\n                            value={password}\r\n                            onChange={  (e)=>{handleChange(e.target.value, \"password\")} }\r\n                        />\r\n                        {\r\n                            error && \r\n                            <Alert severity=\"error\">{error.message}</Alert>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            size='medium'\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={isDisableBtn} \r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport uuid from 'react-uuid' \r\nimport ColorSelecter from '../colorPicker/ColorSelecter' \r\nimport {ColorPicker} from '../colorPicker/ColorPicker' \r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu, Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select, Typography, IconButton, \r\n    Modal, DialogContent, \r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n    const libraryList = layouts.list\r\n\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    // const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    // const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    // const [colorBackgroundSelect,  setColorBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n    // const [colorBackgroundCustom, setColorBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n\r\n    // const [colorBorderSelect,  setColorBorderSelect] = React.useState(props.data.classes.borderColor || 'inherit')\r\n    // const [colorBorderCustom, setColorBorderCustom] = React.useState(props.data.classes.borderColor || 'inherit')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0)\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  0)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip  } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem  } = commonStyle \r\n \r\n\r\n        return ({   \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                width: 600, \r\n            } },\r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip,\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection  \r\n    }  \r\n     \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.handleClose()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = props.data.children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = JSON.parse(JSON.stringify(libraryHeading)); \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraph)); \r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraphImage)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            case 'list' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryList)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n   \r\n        props.handleClose()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n        props.handleClose()\r\n    } \r\n     \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} >  \r\n                <Modal \r\n                    open={props.open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={props.handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Container Settings<OpenWithIcon/>\r\n                                </Typography>\r\n                    <FormGroup > \r\n                        <Typography  variant={'h6'} gutterBottom  >\r\n                            Add item from libs\r\n                        </Typography>\r\n                        <Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button \r\n                                        aria-controls=\"heading-menu\" \r\n                                        aria-haspopup=\"true\" \r\n                                        onClick={handleHeadingMenuClick}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Heading\r\n                                    </Button>\r\n                                </Box>\r\n                                \r\n                                <Menu\r\n                                    id=\"heading-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleHeadingMenuClose}\r\n                                >\r\n                                    <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                    <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                    <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                    <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                    <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                    <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                </Menu>\r\n\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraph');}}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Paragraph\r\n                                    </Button>\r\n                                </Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        Paragraph-Image\r\n                                    </Button>\r\n                                </Box> \r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('list', 'list');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        List\r\n                                    </Button>\r\n                                </Box> \r\n                        </Box>\r\n\r\n                    </FormGroup>\r\n\r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Settings \r\n                    </Typography>\r\n                    <FormGroup row>\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                            <Select\r\n                                labelId=\"dis-gutters-label\"\r\n                                id=\"dis-gutters-style\"\r\n                                value={settingGutter}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        \r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                            <Select\r\n                                labelId=\"fixed-label\"\r\n                                id=\"fixed-style\"\r\n                                value={settingFixed}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>  \r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup row> \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                            <Select\r\n                                labelId=\"maxWidth-label\"\r\n                                id=\"maxWidth-style\"\r\n                                value={settingMaxWidth}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-container-label\"\r\n                                id=\"inner-container-style\"\r\n                                value={settingInnerContainer}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup row> \r\n                            \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-paper-label\"\r\n                                id=\"inner-paper-style\"\r\n                                value={settingIsPaper}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    \r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Styles \r\n                    </Typography>\r\n                    <React.Fragment>\r\n                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                <TabletMacIcon/>\r\n                                <Box>   \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.8 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.8 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.8 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.8 }</b> \r\n                                    </p>     \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>  \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.5 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.5 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.5 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.5 }</b> \r\n                                    </p>        \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n                        {/* display */}\r\n                        <Box className={classes.inputGroup}>\r\n\r\n                            <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                <IconButton>\r\n                                    <InfoOutlined/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"display-style-label\"\r\n                                        id=\"display-style\"\r\n                                        value={display}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'block'}>Block</MenuItem>  \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                                {\r\n                                    display === 'flex' &&\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"direction-style-label\"\r\n                                            id=\"direction-style\"\r\n                                            value={flexDirection}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={'row'}>Row</MenuItem>  \r\n                                            <MenuItem value={'column'}>Column</MenuItem>  \r\n                                            <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                            <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>   \r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* margin */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Margin Top\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={margin.top}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                />\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Margin Bottom\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={margin.bottom}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* padding */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Padding Top\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={padding.top}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                />\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Padding Bottom\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={padding.bottom}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                />\r\n                            </Box>\r\n                            \r\n\r\n                        </Box>\r\n                        \r\n                        {/* bg-color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                            <Box className={classes.inputNumber} >\r\n                                <Typography  component={'p'} gutterBottom  >\r\n                                    Background  -  { backgroundColor }\r\n                                </Typography> \r\n                                \r\n                                <ColorPicker \r\n                                    initialColor={backgroundColor} \r\n                                    changeColor={setBackgroundColor} \r\n                                    setIsDisableBtn={setIsDisableBtn}\r\n                                    position={'left'}\r\n                                /> \r\n                            </Box>\r\n                            <Box className={classes.inputNumber} >\r\n                                <Typography  component={'p'} gutterBottom  >\r\n                                    Color  -  { color }\r\n                                </Typography> \r\n                                <ColorPicker \r\n                                    initialColor={color} \r\n                                    changeColor={setColor} \r\n                                    setIsDisableBtn={setIsDisableBtn}\r\n                                    position={'right'}\r\n                                /> \r\n                            </Box>\r\n                                \r\n                        </Box>\r\n                        \r\n                        {/* color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                <Select\r\n                                    labelId=\"shadow-style-label\"\r\n                                    id=\"shadow-style\"\r\n                                    value={shadow}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                    0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                    <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                    0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                    <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                    0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                </Select>\r\n                            </FormControl> \r\n                            \r\n                        </Box>\r\n                            \r\n                        {/* border */}\r\n                        <Box className={classes.inputGroup}> \r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Border Color  -  { borderColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={borderColor} \r\n                                        changeColor={setBorderColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box> \r\n                                <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Border Radius\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={borderRadius}\r\n                                        onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                />\r\n\r\n                            </Box>\r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                            <TextField \r\n                                className={classes.inputNumber}\r\n                                type='number'\r\n                                label=\"Border Width\" \r\n                                variant=\"filled\" \r\n                                size='small'  \r\n                                value={borderWidth}\r\n                                onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                            />\r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                <Select\r\n                                    labelId=\"border-style-label\"\r\n                                    id=\"border-style\"\r\n                                    value={borderStyle}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                        </Box>\r\n\r\n                        <Box  className={classes.btnSave}>\r\n                            <Button\r\n                                disabled={isDisableBtn}\r\n                            \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size={'medium'} \r\n                                onClick={reSaveClassesSettings}\r\n                            >\r\n                                Save\r\n                            </Button> \r\n                        </Box>\r\n                        \r\n                    </React.Fragment> \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                </Modal> \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n                marginTop: props.className.marginTop*0.8,\r\n                marginBottom: props.className.marginBottom*0.8\r\n            },\r\n            [theme.breakpoints.down('sm')]: {\r\n                fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.6 : 20,\r\n                lineHeight : 1.2, \r\n                marginTop: props.className.marginTop*0.5, \r\n                marginBottom: props.className.marginBottom*0.5, \r\n                textAlign: 'center'\r\n            },\r\n        },\r\n        // mobileClass: {\r\n        //     [theme.breakpoints.down('sm')]: {\r\n        //         marginTop: props.className.marginTop > 30 ? props.className.marginTop * 0.6 : 15,\r\n        //         marginBottom: props.className.marginBottom > 30 ? props.className.marginBottom * 0.6 : 15,\r\n        //         paddingLeft: props.className.paddingLeft > 30 ? props.className.paddingLeft * 0.6 : 15\r\n        //     } \r\n        // }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle, responseValues, responseTablets, responseMobile, mobileTooltip, tabletTooltip } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${margin.top * 0.8}px`,  \r\n                        height: `${margin.top * 0.8}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${margin.bottom * 0.8}px`,\r\n                        height: `${margin.bottom * 0.8 }px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${margin.bottom * 0.5}px`,\r\n                        height: `${margin.bottom * 0.5 }px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, то на мобильных устройствах шрифт будет меньше и выравнивание будет по центру  \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n                                <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                        <TabletMacIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.8 }</b>; MarginBottom: <b>{margin.bottom * 0.8 }</b> </p>   \r\n                                                    <p>FontSize: <b>{ fontSize * 0.8 }</b> </p>   \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                        <PhoneIphoneIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p>  \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.6 : 20 }</b>  LineHeight: <b>{1.2} </b> </p>   \r\n                                                    <p>TextAlign:  <b>center</b> </p>\r\n  \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography>\r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb list') \r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,  \r\n        liClass: props.data.itemsStyle,\r\n        mobileClass: {\r\n            [theme.breakpoints.down('sm')]: {\r\n                marginTop: props.className.marginTop === 0 ? 0 : (props.className.marginTop > 30 ? props.className.marginTop*0.6 : 15), \r\n                marginBottom: props.className.marginBottom === 0 ? 0 : (props.className.marginBottom > 30 ? props.className.marginBottom*0.6 : 15),  \r\n                paddingLeft: props.className.paddingLeft === 0 ? 0 : (props.className.paddingLeft > 30 ? props.className.paddingLeft*0.6 : 15)\r\n            } \r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n           <ul className={`${classes.myClassName} ${classes.mobileClass}`}>\r\n                {\r\n                    props.data.items.map( (item, index) => (\r\n                        <li key={index} className={classes.liClass}>\r\n                            {item}\r\n                        </li>\r\n                    ))        \r\n                }\r\n           </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    ButtonGroup, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n  \r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';   \r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled list work')\r\n\r\n    const [paddingLeft, setPaddingLeft] = React.useState( props.data.classes.paddingLeft || 15 )\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    }) \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit') \r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [items, setItems] = React.useState(props.data.items || [])\r\n    const [itemsPadding, setItemsPadding] = React.useState(props.data.itemsStyle.paddingBottom || [])\r\n    const [itemsListStyle, setItemsListStyle] = React.useState(props.data.itemsStyle.listStyle || 'decimal')\r\n    const [newItem, setNewItem] = React.useState('') \r\n\r\n    const mobileMarginTopComputed = margin.top === 0 ? 0 : (margin.top > 30 ? margin.top*0.6 : 15)\r\n    const mobileMarginBottomComputed = margin.bottom === 0 ? 0 : (margin.bottom > 30 ? margin.bottom*0.6 : 15)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues, responseMobile, mobileTooltip  } = commonClasses \r\n        const { mtView, mbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({ \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }   \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n            movingPageBtn: {  \r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = {  \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        paddingLeft: paddingLeft, \r\n        color: color, \r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight \r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.itemsStyle = {\r\n            paddingBottom: itemsPadding, \r\n            listStyle: itemsListStyle\r\n        }\r\n        sentData.items = items\r\n \r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleItemChange = (index, value) => {\r\n        let newItems = items.slice()\r\n        newItems[index] = value\r\n        setItems(newItems)\r\n        setIsDisableBtn(false)\r\n    }\r\n    const swapItem = (direction, index) => {\r\n        let newItems = items.slice() \r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex - 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex + 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const deleteItem = (index) => {  \r\n        let newItems = items.slice()\r\n        newItems.splice(index, 1)\r\n         \r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const handleAddItem = () => {\r\n        let newItems = items.slice()\r\n        \r\n        newItems.push(newItem)\r\n \r\n        setItems(newItems)\r\n        \r\n        setNewItem('') \r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                List Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>\r\n                                        <p>\r\n                                            MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                            MarginBottom: <b>{mobileMarginBottomComputed}</b> \r\n                                        </p> \r\n                                        <p>PaddingLeft:  <b>{paddingLeft === 0 ? 0 : (paddingLeft > 30 ? paddingLeft*0.6 : 15)}</b></p>\r\n                                    </Box>\r\n                                </Box> \r\n                            </Tooltip> \r\n                               \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box> \r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={paddingLeft}\r\n                                        onChange={ (e) => { setPaddingLeft(e.target.value) } }     \r\n                                    /> \r\n                                </Box>\r\n                                 \r\n            \r\n                            </Box>\r\n                           \r\n                                     \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup} mt={2}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl> \r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    /> \r\n                                     <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Item Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={itemsPadding}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setItemsPadding(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">List Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={itemsListStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setItemsListStyle((e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={'circle'}>Circle</MenuItem>\r\n                                            <MenuItem value={'disc'}>Disc</MenuItem>\r\n                                            <MenuItem value={'square'}>Square</MenuItem>\r\n                                            <MenuItem value={'decimal'}>Numbers</MenuItem>\r\n                                            <MenuItem value={'lower-alpha'}>lower-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-alpha'}>upper-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-roman'}>upper-roman</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n\r\n                            {/* items */}\r\n                            <Box className={classes.inputGroup} mt={3}>  \r\n                                {\r\n                                    items.map( (item, index) => {\r\n                                        return (\r\n                                            <Box key={index} display={'flex'} p={1} > \r\n                                                <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='text'\r\n                                                    label={`Item ${index+1}`} \r\n                                                    variant=\"outlined\" \r\n                                                    size='small'  \r\n                                                    value={item}\r\n                                                    onChange={ (e) => {handleItemChange(index, e.target.value)} }     \r\n                                                /> \r\n                                                <ButtonGroup \r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingPageBtn}\r\n                                                    >  \r\n                                                        {\r\n                                                            items.indexOf(item) !== 0 &&\r\n                                                            <Tooltip title='Get Up' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('up', index) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                        {\r\n                                                            items.indexOf(item) !== items.length - 1 &&\r\n                                                            <Tooltip title='Get Down' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('down', index) }} \r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                            \r\n                                                        <Tooltip title='Delete Item' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"secondary\"\r\n                                                                disableElevation={true} \r\n                                                                onClick={() => { deleteItem(index) }}\r\n                                                            > \r\n                                                                <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup> \r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                } \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='text'\r\n                                    label={`New Item`} \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    value={newItem}\r\n                                    onChange={ (e) => {setNewItem(e.target.value)} }     \r\n                                />\r\n                                <Box my={1}>\r\n                                    <Button \r\n                                        onClick={handleAddItem}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        disabled={newItem.length > 0 ? false : true}\r\n                                    >\r\n                                        Add new item\r\n                                    </Button>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                               \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}   \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete List\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes}  \r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,  \r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle, responseValues, responseMobile } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n     \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>   \r\n                                    <p>Paragraph don`t have any response values</p>   \r\n                                </Box>\r\n                            </Box>\r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Background   -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box> \r\n                                      \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border Color  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                     \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) { \r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {},\r\n        imageStabilization: {\r\n            maxWidth: '100%', \r\n            maxHeight: '100%',  \r\n            [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                height: 'auto'\r\n            }, \r\n            // [theme.breakpoints.down('md')]: { \r\n            // }\r\n        },\r\n        mobileClass: {\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                textAlign: 'center', \r\n                marginTop: props.className.marginTop*0.5, \r\n                marginBottom: props.className.marginBottom*0.5,\r\n                '& span': {\r\n                    marginTop: theme.spacing(1)\r\n                }\r\n            }, \r\n            [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                '& span': {\r\n                    marginTop: theme.spacing(1)\r\n                }\r\n            }, \r\n        }\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={`${classes.imageStyle} ${classes.imageStabilization}`}  alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { removeImage } = React.useContext(ImageContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageName, setImageName] = React.useState(props.data.image.imageName || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues, responseMobile, mobileTooltip  } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n\r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.bottom * 0.5}px`,  \r\n                        height: `${margin.bottom * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,   \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }, \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n   \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl,\r\n            imageName: imageName\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) { \r\n            removeImage(imageName)\r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    // const handleImageSetting = (event) => {    \r\n    //     uploadHandler(event.target.files[0])\r\n    //     setIsLoading(true)\r\n    // }\r\n    \r\n    const handleImageUpload = async (e) => { \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n        \r\n        setIsLoading(false) \r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box> \r\n\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>   \r\n                                        <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p> \r\n                                        <p>flexDirection: <b> column</b>; alignItems: <b>center</b> </p>  \r\n                                        <p>TextAlign:  <b>center</b> </p>     \r\n                                    </Box>\r\n                                </Box>\r\n                            </Tooltip> \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageUpload} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Typography variant={'caption'} display='block' align={\"center\"} color={'error'}>\r\n                                        !! set only width, height will set auto\r\n                                    </Typography>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Border  -  { imageBorderColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={imageBorderColor} \r\n                                                changeColor={setImageBorderColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Background  -  { backgroundColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={backgroundColor} \r\n                                        changeColor={setBackgroundColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'left'}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Color  -  { color }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={color} \r\n                                        changeColor={setColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>   \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ListCreator from '../list/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n \r\n    console.log('dumb container work')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,   \r\n        styleClass: { \r\n            [`@media (max-width: 960px)`]: { \r\n                marginTop: props.classes.marginTop*0.8,\r\n                marginBottom: props.classes.marginBottom*0.8, \r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                marginTop: props.classes.marginTop*0.5,\r\n                marginBottom: props.classes.marginBottom*0.5,  \r\n            },\r\n        },\r\n        noPadding : { \r\n            paddingTop: 0,  \r\n            paddingBottom: 0,\r\n            [`@media (max-width: 960px)`]: {  \r\n                paddingTop: 0,\r\n                paddingBottom: 0,\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                paddingTop: 0,\r\n                paddingBottom: 0,\r\n            },\r\n        },\r\n        yesPadding : { \r\n            paddingTop: props.classes.paddingTop,  \r\n            paddingBottom: props.classes.paddingBottom,\r\n            [`@media (max-width: 960px)`]: {  \r\n                paddingTop: props.classes.paddingTop*0.8,\r\n                paddingBottom: props.classes.paddingBottom*0.8,\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                paddingTop: props.classes.paddingTop*0.5,\r\n                paddingBottom: props.classes.paddingBottom*0.5,\r\n            },\r\n        },\r\n        noPaper: {\r\n\r\n        }\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const isPaperClassForContainer = props.settings.isPaper ? classes.noPadding : classes.yesPadding\r\n    const isPaperClassForPaper = props.settings.isPaper ? classes.yesPadding : classes.noPadding\r\n   \r\n \r\n    const renderItems = () => ( \r\n        modeDev ?\r\n        props.data.children.map((item) => {   \r\n            switch(item.type) { \r\n                case 'heading' :  \r\n                    return ( \r\n                        <HeadingCreator \r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    ) \r\n                case 'paragraph' :  \r\n                    return (\r\n                        <ParagraphCreator\r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    ) \r\n                case 'paragraphImage' :  \r\n                    return (\r\n                        <ParagraphImageCreator\r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    )\r\n                case 'list' :  \r\n                    return (\r\n                        <ListCreator\r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    )  \r\n                default: break;\r\n            }  \r\n            return null\r\n        })\r\n        :\r\n        props.data.children.map((item) => {  \r\n            switch(item.type) { \r\n                case 'heading' :  \r\n                    return ( \r\n                        <HeadingCreator \r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                case 'paragraph' :  \r\n                    return (\r\n                        <ParagraphCreator\r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                case 'paragraphImage' :  \r\n                    return (\r\n                        <ParagraphImageCreator\r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                case 'list' :  \r\n                    return (\r\n                        <ListCreator\r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                default: break;\r\n            }  \r\n            return null\r\n        })\r\n        \r\n    )\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                > \r\n                    <Paper style={{paddingLeft: 15, paddingRight: 15}} className={isPaperClassForPaper}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                 { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\nimport ImageContext from '../../../context/imageContext/ImageContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    const {removeImage} = React.useContext(ImageContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n             \r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    zIndex: 25,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n\r\n            \r\n\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => { \r\n\r\n        let filtered = props.data.children.filter((item) => (item.id !== id))   \r\n        // save in firestore \r\n        props.reSaveContainer(props.data.id, filtered)   \r\n    }\r\n\r\n    const handleClose =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) {\r\n            let images = createArrayImages() \r\n            images.forEach( imageName => {\r\n                removeImage(imageName)\r\n            })\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n    const createArrayImages = () => {\r\n        let images = []\r\n        props.data.children.forEach( item => {\r\n            if(item.type === 'paragraphImage') {\r\n                images.push(item.image.imageName)\r\n            }\r\n        })\r\n        return images\r\n    }\r\n    createArrayImages()\r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleClose} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        handleClose={handleClose}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, darken } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n    \r\n    const useStyles = makeStyles( (theme) => { \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n          \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none', \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } ,\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('md')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 30),\r\n                }\r\n            }\r\n        } )\r\n    })\r\n \r\n    \r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className={`bulder-main-banner ${classes.styleClass}`}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={7} >\r\n                        <div className=\"bulder-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                {\r\n                                    titleSubIcon &&\r\n                                    <svg style={{fill: '#fff'}}>       \r\n                                        <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                    </svg>\r\n                                }\r\n                                \r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"bulder-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"bulder-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} > \r\n                        <div className=\"bulder-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'    \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const { removeImage } = React.useContext(ImageContext)\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n    const [iconName, setIconName] = React.useState(props.data.headingIcon.iconName || '')\r\n \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 40)\r\n    const tabletMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50)\r\n    const tabletMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.color !== 'primary' && \r\n            props.data.color !== 'secondary' &&\r\n            props.data.color !== 'warning' &&\r\n            props.data.color !== 'error' &&\r\n            props.data.color !== 'info' &&\r\n            props.data.color !== 'success' \r\n         ) {  \r\n            setColorSelect('custom')\r\n        } \r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel,  \r\n            responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${tabletMarginTopComputed}px`,  \r\n                        height: `${tabletMarginTopComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px `,  \r\n                        height: `${mobileMarginTopComputed}px `,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`,  \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${tabletMarginBottomComputed}px`,  \r\n                        height: `${tabletMarginBottomComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px `,  \r\n                        height: `${mobileMarginBottomComputed}px `,\r\n                    }\r\n                } \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleImageUpload = async (e, imageType) => {  \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        if( imageType === 'mainImage')  { \r\n            removeImage(imageName)   \r\n        }\r\n        if( imageType === 'icon') {\r\n            removeImage(iconName)   \r\n        }\r\n \r\n          \r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        if( imageType === 'mainImage')  { \r\n            setImageName(generateImageName)\r\n            setImageUrl(downloadURL)  \r\n        }\r\n        if( imageType === 'icon') {\r\n            setIconName(generateImageName)\r\n            setIconUrl(downloadURL)\r\n        }\r\n          \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl,\r\n            iconName : iconName\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) { \r\n            removeImage(imageName) \r\n            removeImage(iconName) \r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Main Banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Main Banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                                <TabletMacIcon/>\r\n                                                <Box>   \r\n                                                    <p> \r\n                                                        MarginTop: <b>{tabletMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{tabletMarginBottomComputed}</b> \r\n                                                    </p>     \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button color='primary' variant={'contained'} className={classes.btnWithLabel} > \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            {\r\n                                                iconUrl &&\r\n                                                <Box ml={1}>\r\n                                                    <img src={iconUrl} alt='icon' width={35} />\r\n                                                </Box>\r\n                                            }\r\n                                            \r\n                                        </Box> \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Sub Heading\" \r\n                                            variant=\"outlined\" \r\n                                            size='small'  \r\n                                            value={subHeading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Input Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={inputLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setInputLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Button Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={buttonLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setButtonLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                        <TextField   \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Form Policy\" \r\n                                            size='small'  \r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Form and SubHeading'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'>  \r\n                                            <Button color='primary' variant='contained' className={classes.btnWithLabel} > \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        {\r\n                                            imageUrl &&\r\n                                            <Box ml={1} maxWidth={300}>\r\n                                                <img src={imageUrl} alt='main' width={'100%'} />\r\n                                            </Box>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n  \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className={`${classes.styleClass} bulder-accordion heading`}>\r\n            <Container maxWidth={maxWidthContainer} className={classes.disableMobileGutters}>\r\n\r\n                {\r\n                    heading.length > 0 &&\r\n                    <h3> { heading } </h3> \r\n                }\r\n                \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"bulder-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"bulder-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemBody, setNewItemBody] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemBody)\r\n        setNewItemTitle('')\r\n        setNewItemBody('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} mt={3} mb={2}>\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new item</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item head\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item body\" \r\n                            variant=\"outlined\" \r\n                            value={newItemBody}\r\n                            onChange={(e) => { setNewItemBody(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Item\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useState} from 'react'\r\n \r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nconst ChangeItem = (props) => {\r\n    const [head, setHead] = useState(props.item.head)\r\n    const [body, setBody] = useState(props.item.body)\r\n \r\n    const handleSave = () => { \r\n        props.handleUpdateItem(props.index, head, body)\r\n    }\r\n\r\n    return (\r\n        <Box display='flex' alignItems=\"center\" width=\"100%\">\r\n            {\r\n                (head !== props.item.head || body !== props.item.body) && \r\n                <Box mr={1}>\r\n                    <Tooltip title={`Save item`} placement='top'>\r\n                        <IconButton onClick={handleSave} color={'primary'} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                </Box>\r\n            }\r\n            <Box width=\"100%\">\r\n                <Box mt={1} >\r\n                    <TextField  \r\n                        fullWidth\r\n                        size='small'\r\n                        type='text'\r\n                        label=\"Head\" \r\n                        variant=\"outlined\"  \r\n                        value={head}\r\n                        onChange={ (e) => {  setHead(e.target.value) } }     \r\n                    /> \r\n                </Box>\r\n                \r\n                <Box mt={2}  >\r\n                    <TextField  \r\n                        fullWidth\r\n                        size='small'\r\n                        type='text'\r\n                        label=\"Body\" \r\n                        variant=\"outlined\"  \r\n                        value={body}\r\n                        onChange={ (e) => {  setBody(e.target.value) } }     \r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n \r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\"\r\nimport ChangeItem from \"./ChangeItem\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg')\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.color !== 'primary' && \r\n            props.data.color !== 'secondary' &&\r\n            props.data.color !== 'warning' &&\r\n            props.data.color !== 'error' &&\r\n            props.data.color !== 'info' &&\r\n            props.data.color !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, \r\n            containerWrapper, responseValues ,responseMobile , mobileTooltip \r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   } ,\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItem = (index, head, body) => { \r\n        const newItems = items.slice()\r\n        newItems[index].head = head\r\n        newItems[index].body = body\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = (head, body) => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: head,\r\n            body: body\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newItems = items.slice()\r\n        newItems.splice(index, 1) \r\n \r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}> \r\n            <Tooltip  title={`accordion margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`accordion margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >   \r\n                <Box className={classes.btnDrawerStyle}> \r\n\r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Accordion Settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={2}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n                                                        <ChangeItem index={index} item={item} handleUpdateItem={handleUpdateItem} /> \r\n                                                        \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <AddItem addItem={addItem} />\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Accordion'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box, darken } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\nimport {getColorByPalette, getColorByPaletteReverse} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload  \r\n    let color = props.data.color || 'primary'\r\n    let colorFocusInput\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n \r\n        return ({\r\n            svg: {\r\n                fill: colorFocusInput\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                color: '#fff',\r\n                 \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${color} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }, \r\n            styleClass: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),  \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),  \r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className={`bulder-contact ${classes.styleClass}`}> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`bulder-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"bulder-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, \r\n    ButtonGroup, makeStyles, Modal, DialogContent, Switch, \r\n    FormControlLabel, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.mapFrame === null ? false : true)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.color !== 'primary' && \r\n            props.data.color !== 'secondary' &&\r\n            props.data.color !== 'warning' &&\r\n            props.data.color !== 'error' &&\r\n            props.data.color !== 'info' &&\r\n            props.data.color !== 'success' \r\n         ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.color])\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n        \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Contact Map margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Contact Map margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Contacts Map Settings  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p>  \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                         \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Location\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={location}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setLocation(e.target.value) } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Phone\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={phone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Comment Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\" \r\n                                            value={inputComment}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputComment(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                    <TextField  \r\n                                                        multiline\r\n                                                        fullWidth\r\n                                                        type='text'\r\n                                                        label=\"Map Frame\" \r\n                                                        variant=\"outlined\"  \r\n                                                        value={mapFrame}\r\n                                                        onChange={ (e) => { setIsDisableBtn(false);  setMapFrame(e.target.value)  } }     \r\n                                                    />\r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button and Inputs'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n  \r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, darken } from '@material-ui/core'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext' \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext) \r\n      \r\n    const imageUrl = props.data.image\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    let imageName = props.data.imageName\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    let colorButton = props.data.colorButton || '#f00'\r\n   \r\n    const useStyles = makeStyles((theme) => {   \r\n\r\n        colorButton = getColorByPalette(theme, colorButton) \r\n\r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth={maxWidthContainer} >\r\n                <div className={`${classes.styleClass} bulder-about heading`}>\r\n                    <Grid container> \r\n                        <Grid item xs={12} md={6} >\r\n                            <div className=\"bulder-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"bulder-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers' \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n      \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.colorButton !== 'primary' && \r\n            props.data.colorButton !== 'secondary' &&\r\n            props.data.colorButton !== 'warning' &&\r\n            props.data.colorButton !== 'error' &&\r\n            props.data.colorButton !== 'info' &&\r\n            props.data.colorButton !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, \r\n            containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip\r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave, \r\n            btnWithLabel: btnWithLabel,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n  \r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf)  {\r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n           \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`about margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`about margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'right'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { darken, fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n  \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        colorMain = getColorByPalette(theme, colorMain) \r\n \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain,\r\n                border: `1px solid ${colorMain}`, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorMain, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    paddingTop: \".4em\",\r\n                    paddingBottom: \".4em\",\r\n                    '&:hover' : {\r\n                        backgroundColor: colorMain , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0),  \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            },\r\n            styleClass: {\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={`${classes.containerColored} ${classes.styleClass}`}> \r\n            <Container maxWidth={maxWidthContainer} > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.colorMain !== 'primary' && \r\n            props.data.colorMain !== 'secondary' &&\r\n            props.data.colorMain !== 'warning' &&\r\n            props.data.colorMain !== 'error' &&\r\n            props.data.colorMain !== 'info' &&\r\n            props.data.colorMain !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, \r\n            btnDrawerItem, containerWrapper , responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Action Line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Action Line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Action Line\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Heading Size\"\r\n                                                variant=\"outlined\"\r\n                                                value={headingSize}\r\n                                                onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setHeadingSize(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>{ headingSize*0.65 }</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                   \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                            <ColorSelecter\r\n                                                label={'Color for Block'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'top'}\r\n                                                noInherit={true}\r\n                                            />\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React , {useState} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box\r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isBotton = rows.length - visibleRows > 0 ? true : false  \r\n    const [isBottonClick, setIsBottonClick] = useState(false)\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        \r\n        mainColor = getColorByPalette(theme, mainColor)\r\n \r\n        return ({\r\n            table: {\r\n                minWidth: 200,\r\n            },\r\n            \r\n            tableCell: {\r\n                paddingTop: theme.spacing(2), \r\n                paddingBottom: theme.spacing(2),  \r\n                [theme.breakpoints.down('md')]: { \r\n                    paddingTop: theme.spacing(1), \r\n                    paddingBottom: theme.spacing(1), \r\n                },\r\n            },\r\n            tableButtonCell: { \r\n                maxWidth: 300,\r\n                width: 300,\r\n                [theme.breakpoints.down('md')]: {\r\n                    width: 'auto', \r\n                },\r\n            },\r\n            tableButton: { \r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                fontSize: 14, \r\n                lineHeight: 1.2, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    padding: theme.spacing(1), \r\n                },\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsBottonClick(!isBottonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(!isBottonClick)\r\n        return (\r\n            rows.map((row, index) => {\r\n                if(index < visibleRows)\r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n                return false\r\n            })\r\n        )\r\n        if(isBottonClick)\r\n        return (\r\n            rows.map((row, index) => { \r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n            })\r\n        )\r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true}  >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableCell}>\r\n                {row.price}\r\n            </TableCell> \r\n            <TableCell align=\"right\" className={`${classes.tableButtonCell} ${classes.tableCell}`}> \r\n                <Button \r\n                    variant='contained'   \r\n                    className={classes.tableButton}\r\n                    onClick={() => { handleOpenModal(row.name) }}\r\n                >\r\n                    { buttonText }\r\n                </Button>\r\n            </TableCell>\r\n        </StyledTableRow>\r\n    )\r\n    const renderBotton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isBottonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth={maxWidthContainer} className={`${classes.tableContainer} heading`} >\r\n            {\r\n                heading.length > 0 &&\r\n                <h3> { heading } </h3> \r\n            }\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={`${classes.tableHeader} ${classes.tableCell}` }\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            <TableCell align=\"right\" className={`${classes.tableHeader} ${classes.tableCell}` } ></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            renderRows()\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isBotton &&\r\n                renderBotton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemPrice, setNewItemPrice] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemPrice)\r\n        setNewItemTitle('')\r\n        setNewItemPrice('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new row</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item title\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item price\" \r\n                            variant=\"outlined\" \r\n                            value={newItemPrice}\r\n                            onChange={(e) => { setNewItemPrice(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Row\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useState} from 'react'\r\n\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nconst ChangeItem = (props) => {\r\n    const [name, setName] = useState(props.item.name)\r\n    const [price, setPrice] = useState(props.item.price)\r\n \r\n    const handleSave = () => { \r\n        props.handleRowChange(props.index, name, price)\r\n    }\r\n\r\n    return (\r\n        <Box display='flex' alignItems=\"center\" width=\"100%\">\r\n            {\r\n                (name !== props.item.name || price !== props.item.price) && \r\n                <Box mr={1}>\r\n                    <Tooltip title={`Save row`} placement='top'>\r\n                        <IconButton onClick={handleSave} color={'primary'} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                </Box>\r\n            }\r\n            <Box mr={1} flexGrow={1}>\r\n                <TextField \r\n                    fullWidth\r\n                    size='small'\r\n                    type='text'\r\n                    label={`Table Row Name ${props.index + 1}`}\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    onChange={(e) => { \r\n                        setName(e.target.value)\r\n                    }}\r\n                />\r\n            </Box>\r\n            <Box >\r\n                <TextField \r\n                    fullWidth\r\n                    size='small'\r\n                    type='text'\r\n                    label={`Table Row Price ${props.index + 1}`}\r\n                    variant=\"outlined\"\r\n                    value={price}\r\n                    onChange={(e) => { \r\n                        setPrice(e.target.value)\r\n                    }}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeItem\r\n","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\"\r\nimport ChangeItem from \"./ChangeItem\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n \r\n    const [textButton,  setTextButton] = React.useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    const [rows, setRows] = React.useState(props.data.rows)\r\n    const [tableRow, setTableRow] = React.useState(props.data.tableRow)\r\n\r\n    const [visibleRows, setVisibleRows] = React.useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = React.useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = React.useState(props.data.visibleBottonTextClick || 'Show less') \r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n     \r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.color !== 'primary' && \r\n            props.data.color !== 'secondary' &&\r\n            props.data.color !== 'warning' &&\r\n            props.data.color !== 'error' &&\r\n            props.data.color !== 'info' &&\r\n            props.data.color !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper ,\r\n            responseValues ,responseMobile , mobileTooltip} = commonClasses \r\n\r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,  \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeTable = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleTableHeadChange = (index, value) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChange = (index, name, price) => {\r\n        const newRows = rows.slice()\r\n\r\n        newRows[index].name = name\r\n        newRows[index].price = price\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addRow = (title, body) => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: title, \r\n            price: body \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Table margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Table margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        \r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            size='small'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <TextField \r\n                                            fullWidth\r\n                                            size='small'\r\n                                            type='text'\r\n                                            label=\"Text Button\"\r\n                                            variant=\"outlined\"\r\n                                            value={textButton}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setTextButton(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <TextField \r\n                                                            fullWidth\r\n                                                            type='text'\r\n                                                            size='small'\r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant=\"outlined\"\r\n                                                            value={item}\r\n                                                            onChange={(e) => {\r\n                                                            setIsDisableBtn(false);\r\n                                                            handleTableHeadChange(index, e.target.value)\r\n                                                        }}/>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n  \r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                                \r\n                                                        <ChangeItem handleRowChange={handleRowChange} item={item} index={index} />\r\n\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n                                    \r\n                                    <AddItem addItem={addRow} />\r\n                                     \r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <ColorSelecter\r\n                                            label={'Color for Table'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='number'\r\n                                                label={`Quantity to show`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleRows}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleRows(Number(e.target.value))\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='text'\r\n                                                label={`Text for botton`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleBottonText}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleBottonText(e.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <TextField  \r\n                                            type='text'\r\n                                            label={`Text for botton clicked`}\r\n                                            variant=\"outlined\"\r\n                                            value={visibleBottonTextClick}\r\n                                            onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setVisibleBottonTextClick(e.target.value)\r\n                                            }}\r\n                                        />\r\n                                    </Box>\r\n                                                \r\n                                    \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, makeStyles, Button, Box, Grid, fade, darken } from '@material-ui/core'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../colorPicker/ColorCalculation'\r\n\r\nimport '../../../assets/style/lineForm.scss' \r\n\r\nfunction DumbComponent(props) {  \r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('') \r\n   \r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone \r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n      \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    let color = props.data.color\r\n    let colorFocusInput\r\n  \r\n    const useStyles = makeStyles((theme) => {    \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n\r\n        return ({ \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper,  \r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            },\r\n            lineDecor: {\r\n                position: \"absolute\",\r\n                top: 8,\r\n                left: 8,\r\n                right: 8,\r\n                bottom: 8,\r\n                border: `1px solid ${fade(color, 0.25)}`,\r\n                borderRadius: 4,\r\n            },\r\n            input: {\r\n                width: '100%',\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: 'inherit',\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                height: 50,\r\n                paddingLeft: 45,\r\n                paddingRight: 25, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center' ,\r\n                    paddingLeft: 20,\r\n                    paddingRight: 20, \r\n                }\r\n            },\r\n            button: {\r\n                width: '100%',\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                height: 50,\r\n                textTransform: 'inherit', \r\n                \r\n                color: theme.palette.getContrastText(color),\r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: 0,  \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: 'none',\r\n                        color: theme.palette.getContrastText(theme.palette.background.paper),\r\n                    }\r\n                }, \r\n            }, \r\n            gridItem: {\r\n                paddingRight: theme.spacing(1),\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginBottom: 10,  \r\n                }\r\n            },\r\n            policy: {\r\n                height: \"100%\", \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                fontSize: 12,\r\n                lineHeight: 1.2,\r\n                fontWeight: 300, \r\n                [theme.breakpoints.down('md')]: {\r\n                    marginTop: 10, \r\n                    textAlign: 'center', \r\n                    justifyContent: 'center'\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName,  \r\n            place: 'line Form',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('') \r\n\r\n    }\r\n    return ( \r\n        <div className={classes.itemBackground}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className=\"line-form\"> \r\n                    <Box className={classes.lineDecor} ></Box>\r\n                    {\r\n                        heading.length > 0 &&\r\n                        <h5>\r\n                            {heading}\r\n                        </h5>\r\n                    }\r\n                    {\r\n                        paragraph.length > 0 &&\r\n                        <p>\r\n                            {paragraph}\r\n                        </p>\r\n                    } \r\n\r\n                    <form onSubmit={handleSubmit} style={{position: 'relative', zIndex: 5}}>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name={`name-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputName} \r\n                                    value={formName}\r\n                                    onChange={(e) => {setFormName(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"tel\" \r\n                                    name={`phone-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputPhone} \r\n                                    value={formPhone}\r\n                                    onChange={(e) => {setFormPhone(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4} lg={3} className={classes.gridItem}>\r\n                                <Button \r\n                                    type=\"submit\"\r\n                                    className={classes.button} \r\n                                >\r\n                                    <span>\r\n                                       { buttonText}\r\n                                    </span>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={3} >\r\n                                <span className={classes.policy}>\r\n                                    { policy }\r\n                                </span> \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                    </form>\r\n                </div> \r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, ButtonGroup, makeStyles, Modal, DialogContent, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n \r\n    const [heading, setHeading] = React.useState(props.data.heading || '')\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '') \r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom )\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    React.useEffect(() => {\r\n        if ( \r\n            props.data.color !== 'primary' && \r\n            props.data.color !== 'secondary' &&\r\n            props.data.color !== 'warning' &&\r\n            props.data.color !== 'error' &&\r\n            props.data.color !== 'info' &&\r\n            props.data.color !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.color])\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n     \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)  \r\n        newData.heading = heading \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone  \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy  \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Form line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Form line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Form Line Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Settings Form line  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    \r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select> \r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                      \r\n                                    <Box mt={2} >   \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        />\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }  \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Typography, Container, Box, fade } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\n// import '../../../assets/style/swiperCustom.scss';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\n// import 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nSwiperCore.use([Navigation]);\r\n\r\n// import ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    // const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = \"props.data.heading \"\r\n\r\n    // const heading = props.data.heading \r\n     \r\n    // let colorMain = props.data.colorMain || '#f00' \r\n    // const openModal = () => {\r\n    //     handleOpen(targetButton)\r\n    // }\r\n    const slideWidth = 300 \r\n    const spaceBetween = 30\r\n\r\n    const [slideForView, setSlideForView] = React.useState(1)\r\n    // const [slideWidth, setSlideWidth] = React.useState(500)\r\n    const [slideHeight, setSlideHeight] = React.useState(slideWidth)\r\n\r\n    const slideRef = React.useRef(null);\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        // if(colorMain === 'primary')  colorMain = theme.palette.primary.main\r\n        // if(colorMain === 'secondary') colorMain = theme.palette.secondary.main   \r\n        return ({ \r\n            heading: {  \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center',  \r\n            },\r\n            swiper: {\r\n                marginTop: 50, \r\n                marginBottom: 50, \r\n                '& .swiper-button-prev': {\r\n                    color: theme.palette.secondary.main, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: theme.palette.secondary.main, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                    }\r\n                },\r\n                '& .swiper-pagination': { \r\n\r\n                },\r\n                '& .swiper-pagination-bullet': {\r\n                    // width: 12, \r\n                    // height: 12\r\n                },\r\n                '& .swiper-pagination-bullet-active': {\r\n                    backgroundColor: theme.palette.secondary.main\r\n                }, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& .swiper-button-prev': {\r\n                        display: 'none !important'\r\n                    },\r\n                    '& .swiper-button-next': {\r\n                        display: 'none'\r\n                    }\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                     \r\n                }\r\n            },\r\n            slide: {\r\n                position: 'relative',  \r\n                height: slideHeight,  \r\n                width: slideWidth, \r\n                overflow: 'hidden',   \r\n            },\r\n            slideBox: {\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }, \r\n            slideImg: {\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover'\r\n            },\r\n            slideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: 14, \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2)\r\n            }\r\n             \r\n        })\r\n    });\r\n\r\n\r\n    const classes  = useStyles();\r\n \r\n    React.useEffect(() => {  \r\n        const getWidthViewport = () => {  \r\n            console.log('swiper resize')\r\n            let actualWidth = window.innerWidth\r\n            let quantity = Math.floor(actualWidth/slideWidth)\r\n            if(quantity !== 0) setSlideForView(quantity)\r\n            else setSlideForView(1)\r\n \r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current.clientWidth\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 300)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n        window.removeEventListener('resize', getWidthViewport )\r\n        window.addEventListener(\"resize\", () => getWidthViewport())\r\n        // eslint-disable-next-line\r\n    }, []);\r\n \r\n    const items = [1, 2, 3, 4 ,5 , 6, 7, 8, 9]\r\n\r\n    const renderSlide = (slide) => (\r\n        <SwiperSlide key={slide} ref={slideRef} className={`${classes.slide} js-slide-height-computed `}>\r\n            <Box className={classes.slideBox}>\r\n                <Box \r\n                    style={{backgroundImage: `url(https://c8.alamy.com/comp/2A27D1R/square-format-view-of-empty-ocean-and-sky-landscape-with-expressive-clouds-2A27D1R.jpg)`}}\r\n                    className={classes.slideImg}\r\n                />\r\n                <Typography\r\n                    component='h6'\r\n                    className={classes.slideTitle}\r\n                >\r\n                    Slide Title \"fade\", \"cube\", \"coverflow\" or \"flip\" - {slide}  Slide Title \"fade\", \"cube\", \"coverflow\" or \"flip\"\r\n                </Typography>\r\n            </Box>\r\n        </SwiperSlide>\r\n    )\r\n    return ( \r\n        <Container className={`${classes.swiper} heading`}>\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            <Swiper\r\n                // loop={false} \r\n                // autoplay={}\r\n                // freeMode={true} \r\n                // \"fade\", \"cube\", \"coverflow\" or \"flip\"\r\n\r\n                height={slideHeight}\r\n                spaceBetween={spaceBetween}\r\n                speed={200}\r\n                slidesPerView={slideForView}\r\n \r\n                navigation \r\n                // pagination={{ clickable: true }}\r\n                // scrollbar={{ draggable: true }}\r\n \r\n                onSlideChange={() => console.log('slide change')}\r\n                // onSwiper={(swiper) => console.log(swiper)}\r\n            >\r\n                {\r\n                    items.map( slide => {\r\n                        return renderSlide(slide)\r\n                    } )\r\n                }\r\n            </Swiper>\r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {/* {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                : */}\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            {/* }  */}\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react' \r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) { \r\n    \r\n    const { removeImage } = React.useContext(ImageContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)  \r\n    const [minHeight, setMinHeight] = React.useState(props.data.minHeight)  \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.imageUrl)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [colorTextSelect,  setColorTextSelect] = React.useState(props.data.colorText || 'inherit')\r\n    const [colorTextCustom, setColorTextCustom] = React.useState(props.data.colorText || 'inherit') \r\n\r\n    const [paddingVertical, setPaddingVertical] = React.useState(props.data.paddingVertical || 80)\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 0)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    const paddingVerticalComputed = paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20)\r\n \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    React.useEffect(() => {\r\n        if(\r\n            props.data.colorButton !== 'primary' && \r\n            props.data.colorButton !== 'secondary' &&\r\n            props.data.colorButton !== 'warning' &&\r\n            props.data.colorButton !== 'error' &&\r\n            props.data.colorButton !== 'info' &&\r\n            props.data.colorButton !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n         \r\n    }, [props.data.colorButton])  \r\n    React.useEffect(() => { \r\n        if( \r\n            props.data.colorText !== 'primary' && \r\n            props.data.colorText !== 'secondary' &&\r\n            props.data.colorText !== 'warning' &&\r\n            props.data.colorText !== 'error' &&\r\n            props.data.colorText !== 'info' &&\r\n            props.data.colorText !== 'success' \r\n         ) {  \r\n            setColorTextSelect('custom')\r\n        }\r\n    }, [props.data.colorText ]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel , \r\n             responseValues ,responseMobile , mobileTooltip} = commonClasses \r\n        \r\n        const { mtView, mbView, ptView, pbView  } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $ptView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $pbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.paragraph = paragraph   \r\n        newData.minHeight = minHeight   \r\n        newData.isButton = isButton   \r\n        newData.textButton = textButton   \r\n        newData.targetButton = targetButton     \r\n        newData.imageUrl = imageUrl   \r\n        newData.imageName = imageName\r\n        newData.paddingVertical = paddingVertical\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        if (colorTextSelect === 'custom') {\r\n            newData.colorText = colorTextCustom\r\n        } else {\r\n            newData.colorText = colorTextSelect\r\n        }\r\n        \r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) { \r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` banner padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` banner padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Example Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Banner\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Top\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginTop}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginTop(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Margin Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={marginBottom}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setMarginBottom(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Min Height for block\"\r\n                                                variant=\"outlined\"\r\n                                                value={minHeight}\r\n                                                onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setMinHeight(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <TextField \r\n                                                type='number'\r\n                                                size='small'\r\n                                                label=\"Padding Top/Bottom\"\r\n                                                variant=\"outlined\"\r\n                                                value={paddingVertical}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setPaddingVertical(Number(e.target.value))\r\n                                            }}/>\r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        Padding Top/Bottom: <b>{paddingVerticalComputed }</b> ; MinHeight: <b>{minHeight}</b>\r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Text'}\r\n                                            colorSelect={colorTextSelect} \r\n                                            setColorSelect={setColorTextSelect}\r\n                                            colorCustom={colorTextCustom}\r\n                                            setColorCustom={setColorTextCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                   \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box> \r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'top'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n \r\n                                   \r\n   \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ?\r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                : \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent, Divider } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\nimport FormLineElement from '../library/formLine/ElementCreator'  \r\nimport SwiperElement from '../library/swiper/ElementCreator'  \r\nimport BannerElement from '../library/banner/ElementCreator'  \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n  const FormLineLayout = layouts.formLine \r\n  const SwiperLayout = layouts.swiper \r\n  const BannerLayout = layouts.banner \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => {\r\n    const classesRef = StylesChangers()\r\n  const commonClasses = classesRef(theme)\r\n\r\n  const { menu, menuTitle } = commonClasses \r\n    return ({ \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 80,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 600, \r\n        left: \"calc(50% - 300px)\",\r\n      }},     \r\n      menuTitle: menuTitle,\r\n      tooltip: {\r\n        fontSize: 14\r\n      }, \r\n      boxMenuItem : { \r\n        display: 'inline-block',\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n      }\r\n\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    // newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n   \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container')  newCont = JSON.parse(JSON.stringify(ContainerLayout))\r\n    if(type === 'mainBanner') newCont = JSON.parse(JSON.stringify(MainBannerLayout))\r\n    if(type === 'accordion')  newCont = JSON.parse(JSON.stringify(AccordionLayout))\r\n    if(type === 'contactMap') newCont = JSON.parse(JSON.stringify(СontactMapLayout))\r\n    if(type === 'about')      newCont = JSON.parse(JSON.stringify(AboutLayout))\r\n    if(type === 'actionLine') newCont = JSON.parse(JSON.stringify(ActionLineLayout))\r\n    if(type === 'table')      newCont = JSON.parse(JSON.stringify(TableLayout))\r\n    if(type === 'formLine')   newCont = JSON.parse(JSON.stringify(FormLineLayout))\r\n    if(type === 'swiper')     newCont = JSON.parse(JSON.stringify(SwiperLayout))\r\n    if(type === 'banner')     newCont = JSON.parse(JSON.stringify(BannerLayout))\r\n  \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n\r\n    window.scrollTo({\r\n      top: window.innerHeight \r\n    })\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n        \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n    \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'formLine') { \r\n          return(\r\n              <FormLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'swiper') { \r\n          return(\r\n              <SwiperElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'banner') { \r\n          return(\r\n              <BannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <React.Fragment> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <Box className={classes.btnContainer}  >\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Add Block for Page <OpenWithIcon/>\r\n                            </Typography> \r\n                            \r\n                            \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Container for heading, paragraph, image-paragraph, list' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                    Container\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With form\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block to start the page. Contain: text, form, image(desktop only)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                    Main Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                           \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Contain: location and phone view, contact form, map. Has two different displays, with and without a map' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                    Contacts with Map\r\n                                </Button>  \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Small contact form with optional heading and paragrapher' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('formLine') }}>\r\n                                    Add Form Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Accordion with heading on top' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                    Accordion\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip title='Line for small text paragrapher with ability to add a button modal  ' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                    Colored Action Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Table with heading on top. Has ability to add \"Show More Botton \" on bottom' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                    Add Table \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With image\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block with heading, paragraph and image. Image on desktop - 50% vieport width. Image on mobile - 50% vieport width . Has the ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                    About\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Simple slider with square images' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('swiper') }}>\r\n                                    Swiper\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Banner with background image, heading, paragraph and modal button (optional)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('banner') }}>\r\n                                    Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </Box>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/functions/ScrollToTop' \r\nimport ImageRemover from '../components/functions/ImageRemover' \r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n \r\n    const {categories, idArrayForDelete, clearArrayForDelete } = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    \r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            {/* <ImageRemover\r\n                idArrayForDelete={idArrayForDelete}\r\n                clearArrayForDelete={clearArrayForDelete}\r\n            /> */}\r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton\r\n} from '@material-ui/core'; \r\nimport { darken, lighten } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPaletteForGradient} from '../library/colorPicker/ColorCalculation'\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, \r\n    // handleOpen, \r\n    handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2  \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n   \r\n    // const currentColor = getColorByPalette(theme, modalSettings.colorButton)\r\n  \r\n    colorGradient1 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[0]\r\n    colorGradient2 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[1]\r\n    // colorGradient1 = lighten(currentColor, 0.2)\r\n    // colorGradient2 = darken(currentColor, 0.2) \r\n     \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        }\r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n\r\n  // const openModal = () => {\r\n  //   handleOpen('')\r\n  // }\r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <button type=\"button\" onClick={ openModal }>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nconst  AlertComponent = (props) => {\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        props.closeAlert()\r\n    }\r\n\r\n    const alertText = () => {\r\n        if(props.severity === 'success') return \"Your request was accepted successfully\"\r\n        if(props.severity === 'info') return \"Your request is being processed\"\r\n        if(props.severity === 'error') return \"An error has occurred :(\"\r\n        if(props.severity === 'warning') return \"Warning!\"\r\n    }\r\n      \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={props.severity} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText() }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert, closeAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert severity={isShowAlert} closeAlert={closeAlert} /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}