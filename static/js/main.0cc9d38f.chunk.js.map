{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/functions/ScrollToTop.js","components/placeholders/LoadingProgress.js","components/functions/InputMaskPhone.js","components/functions/colorChanger/ColorCalculation.js","components/placeholders/ValidationChip.js","components/functions/formValidation.js","components/modal/DumbComponent.js","styles/changers.js","components/header/headerHelpers/category/AddItem.js","components/header/headerHelpers/category/ChangePage.js","components/functions/InputChange.js","components/header/headerHelpers/CategoriesChanger.js","components/functions/colorChanger/ColorPicker.js","components/functions/colorChanger/ColorSelecter.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/headerHelpers/RequestsChanger.js","components/header/headerHelpers/ValidationChanger.js","assets/icons/half-moon.svg","assets/icons/sun.svg","components/header/dumb/ThemeSwitcher.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/Login.js","components/Error.js","styles/inputs.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/list/DumbComponent.js","components/library/list/StyledComponent.js","components/library/list/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/AddItem.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","assets/icons/location.js","assets/icons/phone.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/DumbComponent.js","components/library/table/AddItem.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/library/formLine/DumbComponent.js","components/library/formLine/StyledComponent.js","components/library/formLine/ElementCreator.js","components/library/swiper/DumbComponent.js","components/library/swiper/AddItem.js","components/functions/SelectPage.js","components/library/swiper/StyledComponent.js","components/library/swiper/ElementCreator.js","components/library/banner/DumbComponent.js","components/library/banner/StyledComponent.js","components/library/banner/ElementCreator.js","components/library/blocksPages/DumbComponent.js","components/library/blocksPages/AddItem.js","components/library/blocksPages/StyledComponent.js","components/library/blocksPages/ElementCreator.js","components/library/blocksAdv/DumbComponent.js","components/library/blocksAdv/AddItem.js","components/library/blocksAdv/StyledComponent.js","components/library/blocksAdv/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","idArrayForDelete","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","clearArrayForDelete","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","name","storageRef","ref","imageRef","child","removeImage","SendFormContext","SendFormProvider","requests","modalSettings","isAlertSeverity","alertText","validationSettings","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","time","setTimeout","req","newList","slice","newReq","Object","assign","getCurrentDate","push","closeAlertFromTimeout","severity","duration","isShowAlert","updateValidationSettings","updateRequests","updateModalSettings","sendRequests","closeAlert","setCustomAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","InputMaskPhone","setValue","placeholder","useState","valueLocal","setValueLocal","mask","useContext","maskPlaceholder","alwaysShowMask","onChange","e","onBlur","getColorByPalette","theme","palette","primary","main","secondary","warning","info","success","background","default","paper","getColorByPaletteForGradient","getColorByPaletteReverse","isNoThemeColor","ValidationChip","isValid","place","absolute","closeOnFirstClick","style","textForView","variantView","colorView","variant","setCloseClick","handleCloseChip","addEventListener","removeEventListener","chipColor","chipContainer","display","alignItems","justifyContent","borderRadius","marginTop","marginBottom","transition","transitions","shortest","easing","easeInOut","transformOrigin","minHeight","chipFilled","getContrastText","action","selected","hover","chipOutlined","border","darken","chipLabel","fontSize","lineHeight","paddingTop","paddingBottom","paddingLeft","paddingRight","marginRight","flexGrow","breakpoints","down","textAlign","closeChip","cursor","Fade","in","timeout","enter","exit","Box","Typography","component","phone","renderText","IconButton","aria-label","onClick","size","NameValidation","field","answer","undefined","length","PhoneValidation","includes","TransitionsModal","colorGradient1","colorGradient2","formPhone","setFormPhone","formName","setFormName","isValidPhone","setIsValidPhone","isValidName","setIsValidName","heading","subHeading","targetText","buttonText","policy","inputName","inputPhone","inValidColor","colorButton","padding","spacing","margin","values","sm","outline","closeBtn","input","fontFamily","divider","boxShadow","shorter","borderColor","inValidInput","inValidColorFade","button","textTransform","targetContainer","flexDirection","maxWidth","targetLabel","fontWeight","closeModal","handleCloseValidationChip","Fragment","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","onSubmit","preventDefault","valphone","valname","isCheck","my","type","Button","StylesChangers","menu","maxHeight","overflowY","menuTitle","borderBottom","btnSetting","deepOrange","minWidth","btnSave","bottom","opacity","btnWithLabel","btnDrawerStyle","easeIn","btnDrawerItem","containerWrapper","outlineOffset","responseValues","responseTablets","fill","responseMobile","mobileTooltip","tabletTooltip","dialogContentUnstyle","AddItem","newItemTitle","setNewItemTitle","newItemSlug","setNewItemSlug","id","addItem","FormGroup","mb","TextField","required","fullWidth","label","title","Tooltip","placement","ChangeCategory","itemPages","disabled","handleUpdatePage","ml","InputChange","memo","multiline","setIsDisableBtn","Number","CategoriesChanger","pageLayout","page","categoryLayout","category","setOpen","isDisableBtn","commonClasses","classesRef","listPages","listStyle","titlePages","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","pageBox","pageBoxLi","fade","addPage","newTitle","newSlug","newCategories","newPage","JSON","parse","stringify","uuid","pages","handleUpdateCategory","categoryId","pageId","handleSave","swapCategory","direction","activeIndex","indexOf","movedItem","placeItem","swapPage","activeCategory","dumbWrapper","DialogContent","handle","cancel","Grid","container","xs","newCategory","index","disableElevation","confirm","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","Accordion","AccordionSummary","expandIcon","aria-controls","p","indexPages","ChangePage","gutterBottom","mt","ColorPicker","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","isDisableSaveIcon","setIsDisableSaveIcon","contrastColor","boxColor","shape","short","shadows","boxPicker","iconButton","iconButtonDisabled","prevOpen","onChangeComplete","newColor","hex","ColorSelecter","colorSelect","setColorSelect","colorCustom","setColorCustom","isContrastSelect","block","defaultColor","colorCustomText","FormControl","InputLabel","Select","labelId","MenuItem","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","modalTarget","setModalTarget","colorTheme","newLogo","newModal","uploadHandler","imageData","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","Divider","FormControlLabel","control","Switch","checked","mr","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","newSettings","row","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","lightError","setLightError","darkError","setDarkError","lightWarning","setLightWarning","darkWarning","setDarkWarning","lightInfo","setLightInfo","darkInfo","setDarkInfo","lightSuccess","setLightSuccess","darkSuccess","setDarkSuccess","colorPreview","colorItem","flexWrap","startIcon","RequestsChanger","setHeading","setSubHeading","setTargetText","setButtonText","setPolicy","setInputName","setInputPhone","amber","newData","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","innerIndex","String","CardActions","handleOnceCheck","handleRemove","Checkbox","request","setMask","setName","setPhone","setVariant","infoBlock","infoBtn","ThemeSwitcher","ThemeCustomSwitch","withStyles","switchBase","transform","darkThemeIcon","thumb","lightThemeIcon","backgroundSize","backgroundPosition","track","create","focusVisible","focusVisibleClassName","disableRipple","Desktop","menuButton","menuButtonLink","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","ListItem","ListItemText","Mobile","drawerContainer","mobileLink","menuColor","iconColor","accordionReset","drawerHeader","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","handleSignOut","content","indexPage","borderTop","px","openModal","edge","DumbComponent","backgroundHeader","widthMobile","mobileView","setMobileView","modalBtnColor","headerRef","useRef","topHeaderRef","header","fixedPadding","topHeader","logoMain","whiteSpace","logoSub","logoImage","buttonModal","linkModal","setResponsiveness","setScrollHeader","headerTop","pageYOffset","current","classList","add","remove","err","logout","createLogo","createModalBtn","renderModal","AppBar","Container","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ModalChanger","ValidationChanger","ElementCreator","Header","Footer","contrastFooter","backgroundFooter","footer","buttonToTop","handleClickToTop","Login","setPassword","setError","isRedirect","setIsRedirect","isSubmit","setIsSubmit","avatar","form","submitBtn","forgotTitle","handleChange","value1","value2","disableCheck","Avatar","CircularProgress","loginWithEmail","res","autoComplete","autoFocus","Alert","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","libraryList","setPadding","setMargin","setDisplay","setFlexDirection","backgroundSelect","setBackgroundSelect","backgroundCustom","setBackgroundCustom","borderColorSelect","setBorderColorSelect","borderColorCustom","setBorderColorCustom","shadow","setShadow","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","bgTheme","borderTheme","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","addHeading","a","newChildren","newItem","reSaveContainer","reSaveContainerStyleSettings","aria-haspopup","currentTarget","keepMounted","Boolean","tooltip","resposiveFontSize","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","outlineColor","swapHeading","swapChildrens","viewCorrect","sentData","reSaveChildren","prop","isFirst","isLast","removeItem","liClass","itemsStyle","mobileClass","items","setPaddingLeft","setItems","itemsPadding","setItemsPadding","itemsListStyle","setItemsListStyle","setNewItem","mobileMarginTopComputed","mobileMarginBottomComputed","handleItemChange","newItems","swapItem","swapList","splice","deleteItemList","swapParagraph","imageBorderColor","imageClassName","imageStyle","imageStabilization","imageUrl","titleImg","imageBorderColorSelect","setImageBorderColorSelect","imageBorderColorCustom","setImageBorderColorCustom","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageBorderTheme","imageAccordion","imagePreview","imageLabel","handleImageMargin","handleImageUpload","generateImageName","downloadURL","pt","pb","align","F","styleClass","noPadding","yesPadding","isPaperClassForContainer","isPaperClassForPaper","renderItems","orderFirst","orderLast","createArrayImages","images","forEach","swapContainer","removeContainer","newArr","colorFocusInput","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","maxWidthContainer","lighten","up","webkitMaskImage","maskImage","webkitMask","webkitMaskSize","maskSize","md","xlinkHref","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","iconName","setIconName","setMarginTop","setMarginBottom","setMaxWidthContainer","tabletMarginTopComputed","tabletMarginBottomComputed","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","newItemBody","setNewItemBody","handleUpdateItemHead","handleUpdateItemBody","itemLayout","Location","version","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","d","Phone","colorMapOnload","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","link","boxForFlex","heightRegular","linksContainer","validationChipsContainer","href","comment","cols","rows","setLocation","setInputComment","setMapFrame","isButton","setIsButton","textButton","targetButton","setTextButton","setTargetButton","headingSize","colorMain","containerColored","containerFlexed","setHeadingSize","CustomizedTables","mainColor","tableMinWidth","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isButtonShowMore","isButtonClick","setIsButtonClick","StyledTableRow","TableRow","table","tableCell","tableButtonCell","tableButton","tableContainer","tableHeader","handleVisible","OnceRow","TableCell","scope","price","TableContainer","Table","TableHead","TableBody","newItemPrice","setNewItemPrice","setRows","setTableRow","setTableMinWidth","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","handleTableHeadChange","newRow","handleRowChangeName","newRows","handleRowChangePrice","warningBtn","rowLayout","lineDecor","gridItem","gridValidation","SwiperCore","use","Navigation","history","useHistory","isSwiper","setIsSwiper","slidesForViewDesktop","slidesPerView","slidesForViewTablet","slidesPerViewTablet","slidesForViewMobile","slidesPerViewMobile","spaceBetween","speed","loop","freeMode","slides","slideHeight","setSlideHeight","slideRef","swiper","activeSlide","slide","overflow","slideBox","slideImg","backgroundRepeat","slideTitle","gallery","marginRigth","getWidthViewport","actualWidth","slideHeightCalc","clientWidth","renderSlide","key","isUrl","activePage","handleSlideClick","600","960","navigation","newImageName","setNewImageName","newImageUrl","setNewImageUrl","newImageTitle","setNewImageTitle","addSlide","replace","SelectPage","SetPages","selectValue","setSelectValue","createPages","pagesArray","categorySlug","setSlidesPerView","setSlidesPerViewTablet","setSlidesPerViewMobile","setSpaceBetween","setSpeed","setLoop","setFreeMode","setSlides","imageForDelete","setImageForDelete","slideContainer","dumbSlide","dumbSlideButtons","dumbSlideTitle","tooltipReload","reloadSettings","handleSlideTitle","newSlides","handleChangeUrl","handleChangeIsButtonTarget","swipeSlide","element","imgArray","handleChangeIsButton","handleChangeIsUrl","newImageForDelete","deletedImageName","removeSlide","isLink","colorText","paddingVertical","bannerBackground","bannerContent","setMinHeight","colorTextSelect","setColorTextSelect","colorTextCustom","setColorTextCustom","setPaddingVertical","paddingVerticalComputed","colorButtonTheme","colorTextTheme","boxSizing","standard","newSvg","setNewSvg","idActive","setIdActive","setActivePage","selectedPage","dumbSlideSvg","handleSlideSvg","inner","setNewTitle","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","FormLineLayout","formLine","SwiperLayout","BannerLayout","banner","BlocksPagesLayout","blocksPages","BlocksAdvLayout","blocksAdv","setData","btnContainer","boxMenuItem","fetchData","document","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","innerHeight","RouterComponent","basename","path","render","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0cc9d38f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 600) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        idArrayForDelete: [],\r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n        \r\n        // imageList: [], \r\n    }\r\n    \r\n \r\n    \r\n\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n        // this.fetchListFromStorage()\r\n    } \r\n    // fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .then( () => {\r\n    //         this.setState({\r\n    //             imageList: imagesArray\r\n    //         })\r\n    //     })\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n        \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 700);\r\n        \r\n    // }\r\n\r\n    async updateCategories(data) { \r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {    \r\n        // const pageRef = firebase.db.collection(\"site1\").doc(slug)\r\n        // const doc = await pageRef.get();\r\n        \r\n        // let idArray = []\r\n\r\n        // if (!doc.exists) {\r\n        //     console.log('No such page!');  \r\n        // } else { \r\n        //     const items = doc.data().items\r\n        //     items.forEach(item => {\r\n        //         if(item.type === 'container') { \r\n        //             item.children.forEach( child => {\r\n        //                 if(child.type === 'paragraphImage') {\r\n        //                     idArray.push(child.id)\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //         else {  \r\n        //             idArray.push(item.id)\r\n        //         }\r\n        //     });\r\n        // }\r\n        // this.setState({\r\n        //     idArrayForDelete: idArray\r\n        // })\r\n\r\n        // await pageRef.delete()\r\n        // // .then( () => {\r\n        // //     setTimeout(() => {\r\n        // //         this.setState({\r\n        // //             idArrayForDelete: []\r\n        // //         })\r\n        // //     }, 1000);\r\n        // // })\r\n        // .then( () => {\r\n        //     this.state.imageList.forEach( imageName => {\r\n        //         idArray.forEach(id => {\r\n        //             if(imageName.includes(id)) this.removeImage(imageName)\r\n        //         })\r\n        //     })\r\n        // })\r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n    // async removeImage(name) { \r\n    //     if(name !== '') {\r\n    //         const storageRef = firebase.storage.ref();\r\n \r\n    //         const imageRef = storageRef.child(name)\r\n        \r\n    //         try {\r\n    //             await imageRef.delete().then(function() {\r\n    //                 console.log('File deleted successfully')\r\n    //             }).catch(function(error) {\r\n    //                 console.log(error) \r\n    //             }); \r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    idArrayForDelete: this.state.idArrayForDelete, \r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    clearArrayForDelete: () => {\r\n                        this.setState({\r\n                            idArrayForDelete: []\r\n                        })\r\n                    }, \r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n \r\n    async removeImage(name) { \r\n        if(name !== '') {\r\n            const storageRef = firebase.storage.ref();\r\n \r\n            const imageRef = storageRef.child(name)\r\n        \r\n            try {\r\n                await imageRef.delete().then(function() {\r\n                    console.log('File deleted successfully')\r\n                }).catch(function(error) {\r\n                    console.log(error) \r\n                }); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n   \r\n   \r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{  \r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    }  \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isAlertSeverity: null,\r\n        alertText: '',\r\n        validationSettings: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n                validationSettings: doc.data().validationSettings, \r\n            })  \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout(time) {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isAlertSeverity: null,\r\n                alertText: ''\r\n            })\r\n        }, time);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isAlertSeverity: 'info',\r\n            alertText: \"Your request is being processed\"\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isAlertSeverity: 'success', \r\n                alertText: 'Your request was accepted successfully'\r\n            })\r\n            this.closeAlertFromTimeout(7000)\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isAlertSeverity: 'error', \r\n                alertText: \"An error has occurred :(\"\r\n            })\r\n            this.closeAlertFromTimeout(700)\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n    async updateValidationSettings(settings) {\r\n        this.setState({\r\n            validationSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            validationSettings: settings, \r\n        }) \r\n    }\r\n\r\n    setCustomAlert(severity, text, duration) {\r\n        this.setState({  \r\n            isAlertSeverity: severity, \r\n            alertText: text\r\n        })\r\n        this.closeAlertFromTimeout(duration)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    validationSettings: this.state.validationSettings, \r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isAlertSeverity, \r\n                    modalSettings: this.state.modalSettings, \r\n                    alertText: this.state.alertText, \r\n                    \r\n                    updateValidationSettings: (settings) => {\r\n                        this.updateValidationSettings(settings)\r\n                    },\r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isAlertSeverity: null, \r\n                            alertText: ''\r\n                        }) \r\n                    }, \r\n                    setCustomAlert: (severity, text, duration) => {\r\n                        this.setCustomAlert(severity, text, duration)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React, {useState, useContext} from 'react'\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\n\r\nconst InputMaskPhone = ({value, setValue, className, placeholder}) => {\r\n\r\n    const [valueLocal, setValueLocal] = useState(value) \r\n\r\n    const { validationSettings } = useContext(SendFormContext)  \r\n    const mask = validationSettings.mask\r\n \r\n    React.useEffect(() => {\r\n        if(valueLocal !== value) {\r\n            setValueLocal(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const handleSave = () => { \r\n        setValue(valueLocal) \r\n    }\r\n\r\n    return ( \r\n        <InputMask \r\n            mask={mask}\r\n            maskPlaceholder={'_'}\r\n            alwaysShowMask={false}\r\n            className={className}\r\n            placeholder={placeholder} \r\n            value={valueLocal}\r\n            onChange={(e) => { setValueLocal(e.target.value) }}\r\n            onBlur={handleSave} \r\n        /> \r\n    )\r\n}\r\n\r\nexport default InputMaskPhone\r\n"," \r\nexport const getColorByPalette = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.primary.main \r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.error.main \r\n        } \r\n        case ('info') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.success.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.default\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('contrast') : {\r\n            return 'contrast'\r\n        } \r\n        default: return color\r\n    } \r\n}\r\nexport const getColorByPaletteForGradient = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return [theme.palette.primary.main, theme.palette.primary.dark] \r\n        } \r\n        case ('secondary') : {\r\n            return [theme.palette.secondary.main, theme.palette.secondary.dark] \r\n        } \r\n        case ('warning') : {\r\n            return [theme.palette.warning.main, theme.palette.warning.dark] \r\n        } \r\n        case ('error') : {\r\n            return [theme.palette.error.main, theme.palette.error.dark] \r\n        } \r\n        case ('info') : {\r\n            return [theme.palette.info.main, theme.palette.info.dark] \r\n        } \r\n        case ('success') : {\r\n            return  [theme.palette.success.main, theme.palette.success.dark]\r\n        } \r\n        case ('default') : {\r\n            return [theme.palette.background.paper, theme.palette.background.default]\r\n        } \r\n        case ('paper') : {\r\n            return [theme.palette.background.default, theme.palette.background.paper]\r\n        } \r\n        default: return [color, color]\r\n    } \r\n}\r\nexport const getColorByPaletteReverse = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('info') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.default\r\n        }\r\n        default: return color\r\n    } \r\n}\r\nexport const isNoThemeColor = (color) => {\r\n    if(\r\n        color !== 'contrast' && \r\n        color !== 'default' && \r\n        color !== 'paper' && \r\n        color !== 'primary' && \r\n        color !== 'secondary' &&\r\n        color !== 'warning' &&\r\n        color !== 'error' &&\r\n        color !== 'info' &&\r\n        color !== 'success' \r\n    ) return true \r\n    else return false \r\n}\r\n","import React , { useEffect, useContext } from 'react'\r\n\r\nimport { Box, makeStyles, IconButton, Typography, darken, Fade  } from '@material-ui/core'\r\n\r\nimport CloseIcon from '@material-ui/icons/Close'; \r\n \r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'  \r\n\r\nimport { getColorByPalette} from '../../components/functions/colorChanger/ColorCalculation'\r\n\r\nconst  ValidationChip = ({ isValid, handleClose, place, absolute, closeOnFirstClick, style, textForView, variantView, colorView}) => {\r\n  \r\n    const { validationSettings } = useContext(SendFormContext)    \r\n\r\n    const variant = variantView ? variantView : validationSettings.variant\r\n\r\n    useEffect(() => {\r\n        const setCloseClick = () => { \r\n            if(closeOnFirstClick) handleCloseChip() \r\n        }  \r\n\r\n        window.addEventListener(\"click\", setCloseClick); \r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('click', setCloseClick)   \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    const useStyles = makeStyles( theme => {\r\n         \r\n        const chipColor = colorView ? getColorByPalette(theme, colorView) : getColorByPalette(theme, validationSettings.color)\r\n        return({\r\n            chipContainer: {\r\n                position: absolute ? 'absolute' : 'relative', \r\n                top:  absolute ? -42 : 'auto', \r\n                left: absolute ? 0 : 'auto', \r\n                right: absolute ? 0 : 'auto', \r\n                display: isValid ? 'none' : 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between', \r\n                borderRadius: 16, \r\n                width: '100%', \r\n                marginTop: 8, \r\n                marginBottom: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                transformOrigin: 'bottom', \r\n                minHeight: 30,    \r\n            },\r\n            chipFilled: {\r\n                backgroundColor: chipColor,\r\n                color: theme.palette.getContrastText(chipColor),\r\n                '& $closeChip': { \r\n                    backgroundColor: theme.palette.action.selected, \r\n                    '&:hover': {\r\n                        backgroundColor: theme.palette.action.hover, \r\n                    }\r\n                }\r\n            },\r\n            chipOutlined: {\r\n                backgroundColor: absolute ? theme.palette.background.default : 'inherit', \r\n                border: `1px solid ${chipColor}`,  \r\n                color: chipColor,\r\n                '& $closeChip': { \r\n                    backgroundColor: chipColor, \r\n                    '&:hover': {\r\n                        backgroundColor: darken(chipColor), \r\n                    }\r\n                }\r\n            },\r\n            chipLabel: {\r\n                fontSize: \"0.8125rem\", \r\n                lineHeight: 1.15,\r\n                paddingTop: 3, \r\n                paddingBottom: 3, \r\n                paddingLeft: 25,\r\n                paddingRight: 25,\r\n                marginRight: 0, \r\n                flexGrow: 1, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center'\r\n                }\r\n            }, \r\n            closeChip: {\r\n                position: 'absolute',\r\n                top: 'calc(50% - 9px)', \r\n                right: 6,  \r\n                zIndex: 5, \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',   \r\n                width: 18,\r\n                cursor: \"pointer\",\r\n                height: 18, \r\n                fontSize: 15, \r\n                \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles()\r\n  \r\n    const handleCloseChip = () => { \r\n        handleClose(place)\r\n    }\r\n    const renderText = () => {\r\n        if(textForView) return textForView\r\n        switch(place) {\r\n            case('name') : {\r\n                return validationSettings.name\r\n            }\r\n            case('phone') : {\r\n                return validationSettings.phone\r\n            }\r\n            default: return \"Incorrect field\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fade in={!isValid} timeout={{enter: 300, exit: 0}}>\r\n            <Box className={`${classes.chipContainer} ${variant === 'outlined' ? classes.chipOutlined : classes.chipFilled}`} style={style} >\r\n                <Typography component=\"span\" className={classes.chipLabel}>\r\n                    {renderText()}    \r\n                </Typography>\r\n                <IconButton \r\n                    aria-label=\"close\" \r\n                    onClick={handleCloseChip} \r\n                    size={'small'}\r\n                    className={classes.closeChip}\r\n                >\r\n                    <CloseIcon fontSize={'inherit'} />\r\n                </IconButton>\r\n            </Box>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nexport default ValidationChip\r\n"," \r\nexport const NameValidation = (field) => { \r\n    const answer = {\r\n        isValid: false\r\n    }\r\n    if(field !== undefined ) {\r\n        answer.isValid = field.length > 0 ? true : false \r\n    }\r\n    return answer \r\n}\r\nexport const PhoneValidation = (field) => { \r\n    const answer = {\r\n        isValid: false\r\n    }\r\n    if(field !== undefined ) {\r\n        answer.isValid = !field.includes('_') && field.length > 0 \r\n    } \r\n    return answer \r\n}\r\n \r\n","import React, {useContext, useState} from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton,  \r\n    fade,  \r\n} from '@material-ui/core';  \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\nimport InputMaskPhone from '../functions/InputMaskPhone'\r\nimport ValidationChip from '../placeholders/ValidationChip'\r\n\r\nimport { getColorByPalette, getColorByPaletteForGradient} from '../functions/colorChanger/ColorCalculation'\r\n\r\nimport { NameValidation, PhoneValidation} from '../functions/formValidation'\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings, validationSettings } = useContext(SendFormContext)\r\n  const { target, open, handleClose } = useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = useState('')\r\n  const [formName, setFormName] = useState('') \r\n  const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n  const [isValidName, setIsValidName] = useState({isValid: true})\r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone \r\n\r\n  let colorGradient1, colorGradient2, inValidColorFade\r\n  let inValidColor = validationSettings.color \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n     \r\n    colorGradient1 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[0]\r\n    colorGradient2 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[1]\r\n    inValidColor = getColorByPalette(theme, validationSettings.color)   \r\n      \r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1, \r\n          // background: fade(colorGradient1, 0.05), \r\n          \"&:hover\": {\r\n              // background: fade(colorGradient1, 0.05), \r\n          },\r\n        },\r\n        '&:hover': {\r\n          backgroundColor: \"#7979792b\", \r\n        },\r\n         \r\n      },\r\n      inValidInput: {\r\n          borderColor: inValidColor, \r\n          background: inValidColorFade,  \r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n      \r\n    const valphone = PhoneValidation(formPhone) \r\n    const valname = NameValidation(formName) \r\n\r\n    if(valphone.isValid && valname.isValid) {\r\n      const sendForm = {\r\n        phone: formPhone,\r\n        name: formName,  \r\n        target: target,\r\n        place: 'modal',  \r\n        isCheck: false\r\n      }\r\n\r\n      sendRequests(sendForm)\r\n      \r\n      setFormPhone('')\r\n      setFormName('')\r\n      closeModal()\r\n    } else {\r\n      setIsValidName(valname)\r\n      setIsValidPhone(valphone)\r\n    }\r\n      \r\n  } \r\n    \r\n  const closeModal = () => { \r\n    setIsValidName({isValid: true})\r\n    setIsValidPhone({isValid: true})\r\n    handleClose()\r\n  }\r\n\r\n  const handleChangePhone = (value) => {\r\n    setFormPhone(value) \r\n    setIsValidPhone({isValid: true})\r\n  }\r\n  const handleChangeName = (value) => {\r\n    setFormName(value) \r\n    setIsValidName({isValid: true})\r\n  }\r\n\r\n  const handleCloseValidationChip = (place) => {\r\n    if(place === 'name') setIsValidName({isValid: true})\r\n    if(place === 'phone') setIsValidPhone({isValid: true})\r\n  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>  \r\n                      {\r\n                        !isValidName.isValid &&\r\n                        <ValidationChip  \r\n                          isValid={isValidName.isValid} \r\n                          handleClose={handleCloseValidationChip}\r\n                          place={'name'}\r\n                          absolute={false}\r\n                          style={{textAlign: 'center'}}\r\n                        />\r\n                      }\r\n                      {\r\n                        !isValidPhone.isValid &&\r\n                        <ValidationChip  \r\n                          isValid={isValidPhone.isValid}  \r\n                          handleClose={handleCloseValidationChip}\r\n                          place={'phone'}\r\n                          absolute={false}\r\n                          style={{textAlign: 'center'}}\r\n                        />\r\n                      }\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName}  \r\n                          variant='outlined' \r\n                          className={`${classes.input} ${!isValidName.isValid && classes.inValidInput}`} \r\n                          value={formName}\r\n                          onChange={ e => handleChangeName(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      \r\n                      <InputMaskPhone \r\n                          placeholder={`${inputPhone}`}   \r\n                          className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                          value={formPhone}\r\n                          setValue={handleChangePhone}\r\n                      /> \r\n                    </Box> \r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            // paddingBottom: 50,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        btnWithLabel: {\r\n            padding: 0, \r\n            '& label': {\r\n                padding: theme.spacing(1, 2), \r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            outlineOffset: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                // outlineColor: `${theme.palette.error.main}`,\r\n                // zIndex: 100, \r\n                 \r\n                // '& $mtView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $mbView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $btnDrawerStyle' : { \r\n                //     opacity: 1\r\n                // }\r\n            }\r\n        },\r\n        responseValues: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            padding: theme.spacing(1, 2),\r\n            margin: theme.spacing(1, 0), \r\n            '& p': {\r\n                margin: 0\r\n            },\r\n            '& svg': {\r\n                marginRight: 8, \r\n            }\r\n        }, \r\n        responseTablets: { \r\n            border: `1px solid ${theme.palette.success.dark}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.dark \r\n            }\r\n        },\r\n        responseMobile: { \r\n            border: `1px solid ${theme.palette.success.light}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.light \r\n            }\r\n        },\r\n        mobileTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.light\r\n        },\r\n        tabletTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.dark\r\n        }, \r\n        dialogContentUnstyle: {\r\n            outline: 0, \r\n            padding: 0\r\n        }\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n\r\nconst AddItem = (props) => {\r\n\r\n    \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemSlug, setNewItemSlug] = React.useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if(props.id !== null ) props.addItem(newItemTitle, newItemSlug, props.id)\r\n        else props.addItem(newItemTitle, newItemSlug)\r\n        \r\n        \r\n        setNewItemTitle('') \r\n        setNewItemSlug('')\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <Box mb={1}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label={`${props.title} title`} \r\n                        variant=\"outlined\" \r\n                        value={newItemTitle}\r\n                        onChange={(e) => { setNewItemTitle(e.target.value) }}\r\n                    />\r\n                </Box>\r\n                <Box mb={1} style={{position: 'relative'}}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label={`${props.title} slug`} \r\n                        variant=\"outlined\" \r\n                        value={newItemSlug}\r\n                        onChange={(e) => { setNewItemSlug( e.target.value)}}\r\n                            \r\n                    />\r\n                    <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                        <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                            <InfoOutlined color={'secondary'}/>\r\n                        </IconButton>\r\n                    </Tooltip> \r\n                </Box>\r\n                <Box mb={1}>\r\n                    <Button \r\n                        type='submit'\r\n                        color={'primary'} \r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                    >\r\n                        Add New {props.title}\r\n                    </Button> \r\n                </Box>\r\n            </FormGroup>\r\n\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n\r\n    const [value, setValue] = useState(props.itemPages.title)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdatePage(value, props.item.id, props.itemPages.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.itemPages.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Page ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.itemPages.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField \r\n                    required\r\n                    type='text' \r\n                    label=\"Page title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue( e.target.value )}}\r\n                />     \r\n                <TextField  \r\n                    type='text' \r\n                    label=\"Page slug\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.itemPages.slug} \r\n                    disabled={true}\r\n                />  \r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React, { memo, useState, useEffect } from \"react\";\r\n\r\nimport { TextField } from '@material-ui/core' \r\n \r\n\r\n\r\nconst InputChange = memo(({ id, fullWidth, required, multiline,  type, size, label, variant, value, setValue, setIsDisableBtn }) => {\r\n\r\n   \r\n    const [valueLocal, setValueLocal] = useState(value)   \r\n   \r\n    useEffect(() => {\r\n        if(valueLocal !== value) {\r\n            setValueLocal(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const save = () => { \r\n        if(valueLocal !== value) {\r\n            if(id !== null ) setValue(valueLocal, id)\r\n            else setValue(valueLocal)\r\n\r\n            setIsDisableBtn(false) \r\n        } \r\n    } \r\n    \r\n    const handleChange = (e) => {\r\n        type === 'number' ? setValueLocal(Number(e.target.value)) : setValueLocal(e.target.value)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n      \r\n    return ( \r\n        <TextField\r\n            required={required}\r\n            fullWidth={fullWidth}\r\n            type={type}\r\n            multiline={multiline}\r\n            size={size}\r\n            label={label}\r\n            variant={variant}\r\n            value={valueLocal}\r\n            onChange={handleChange}\r\n            onBlur={save}\r\n        /> \r\n    )\r\n})\r\n\r\nexport default InputChange\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport AddItem from './category/AddItem' \r\nimport ChangePage from './category/ChangePage'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid,\r\n    fade,\r\n    TextField,  \r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n\r\n    console.log('Categories Changer')\r\n     \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    \r\n \r\n    const handleOpen = () => {  \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting , dialogContentUnstyle } = commonClasses\r\n       \r\n        return( { \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid ${theme.palette.divider}`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }, \r\n            pageBox: {\r\n                display: 'flex',  \r\n                justifyContent: 'space-between', \r\n                alignItems: 'center', \r\n                marginBottom: theme.spacing(2), \r\n            }, \r\n            pageBoxLi: {\r\n                padding: 5, \r\n                border: `1px solid ${fade(theme.palette.success.light, 0.3)}`\r\n\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (newTitle, newSlug) => {\r\n        let newList = categories.slice() \r\n        let newCategory = JSON.parse(JSON.stringify(categoryLayout)); \r\n\r\n        newCategory.id = uuid()\r\n        newCategory.title = newTitle\r\n        newCategory.slug = newSlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList) \r\n    }\r\n    const addPage = (newTitle, newSlug, id) => {  \r\n        \r\n        let newCategories = categories.slice()\r\n        \r\n        let newPage = JSON.parse(JSON.stringify(pageLayout));  \r\n        newPage.id = uuid()\r\n        newPage.title = newTitle\r\n        newPage.slug = newSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) {  \r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n    } \r\n     \r\n    const handleUpdateCategory = (value, id) => {  \r\n        let newCategories = categories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = categories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        // setCategories(localCategories)\r\n        setIsDisableBtn(true) \r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = JSON.parse(JSON.stringify(categories)) \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n          \r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        })  \r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        const conf = window.confirm('Delete category?')\r\n        if(conf) {\r\n            let filtered = categories.filter((item) => (item.id !== id))  \r\n            const deleted = categories.filter( (item) => (item.id === id))\r\n            let arrayOfPagesForDelete = [] \r\n\r\n            arrayOfPagesForDelete.push(deleted[0].slug)\r\n            if(deleted[0].pages.length > 0) {\r\n                deleted[0].pages.map((item) => {\r\n                    arrayOfPagesForDelete.push(item.slug)\r\n                    return 0\r\n                })\r\n            }\r\n\r\n            setCategories(filtered)  \r\n            deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        }  \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        const conf = window.confirm('Delete page?')\r\n            if(conf) {\r\n            categories.map( category => {\r\n                if(category.id === categoryId) {  \r\n                    let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                    category.pages = filtered\r\n                }\r\n                return 0 \r\n            }) \r\n            setCategories(categories)  \r\n\r\n            deletePageFromFirebase(slug)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <AddItem title={'Category'} id={null} addItem={addCategory} />\r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    {\r\n                                                        item.slug === '/' ?\r\n                                                        <Tooltip title=\"You can't remove Home Category\" placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}  \r\n                                                            > \r\n                                                                <InfoOutlined style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button> \r\n                                                        </Tooltip>\r\n                                                        :\r\n                                                        <Tooltip title='Delete Category' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}\r\n                                                                onClick={() => { deleteCategory(item.id) }}\r\n                                                            > \r\n                                                                <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  >  \r\n                                                            <InputChange\r\n                                                                id={item.id}\r\n                                                                fullWidth={true}\r\n                                                                required={true}\r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Category title\"\r\n                                                                variant='filled'\r\n                                                                value={item.title}\r\n                                                                setValue={handleUpdateCategory}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            /> \r\n                                                            <TextField\r\n                                                                type='text' \r\n                                                                label=\"Category slug (read only)\"\r\n                                                                fullWidth\r\n                                                                variant='filled'\r\n                                                                value={item.slug} \r\n                                                                disabled={true} \r\n                                                            /> \r\n\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages}  className={classes.pageBoxLi}  >\r\n                                                                            <Box className={classes.pageBox}  >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            \r\n                                                                            <ChangePage handleUpdatePage={handleUpdatePage} item={item} itemPages={itemPages} /> \r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n\r\n                                                                    <Box mt={2} ml={'auto'} maxWidth={300}>\r\n                                                                        <Box mb={1} ><Typography variant='caption' gutterBottom >Add new page</Typography></Box>\r\n                                                                        <AddItem title={'Page'} id={item.id} addItem={addPage} />\r\n                                                                    </Box> \r\n                                                                 \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box mt={5} />\r\n                                    {/* <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState, useEffect } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n    const [isDisableSaveIcon, setIsDisableSaveIcon] = useState(true); \r\n \r\n\r\n    const togglePicker = () => {\r\n        setIsOpen(prevOpen => !prevOpen)\r\n        setColor(initialColor)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const handleChange = (newColor) => {\r\n        setColor(newColor.hex)\r\n        setIsDisableSaveIcon(false)\r\n    }\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit') \r\n        setIsDisableSaveIcon(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(initialColor === 'inherit' ) setColor('#0000')\r\n    }, [initialColor])\r\n\r\n    const useStyles = makeStyles( theme => { \r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'warning' && \r\n            color !== 'error' && \r\n            color !== 'info' && \r\n            color !== 'success' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'contrast' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.short}ms ${theme.transitions.easing.easeInOut} `, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[2]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }, \r\n            iconButton: {\r\n                padding: theme.spacing(1)\r\n            }, \r\n            iconButtonDisabled: {\r\n                opacity: 0\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    isDisableSaveIcon ? \r\n                    <IconButton disabled={true} className={`${classes.iconButton} ${classes.iconButtonDisabled}`} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save}  color={'primary'} className={classes.iconButton} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react'\r\n\r\nimport { ColorPicker } from './ColorPicker'\r\n\r\nimport { FormControl, InputLabel, Select , MenuItem, Box, makeStyles } from '@material-ui/core'\r\n\r\nfunction ColorSelecter({label, colorSelect, setColorSelect, colorCustom , setColorCustom, setIsDisableBtn, position, noInherit, isContrastSelect }) {\r\n    \r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        block: {\r\n            position: 'absolute', \r\n            top: 'calc(50% - 12px)', \r\n            right: 7, \r\n            height: 24, \r\n            width: 24\r\n        },\r\n        primary: {\r\n            backgroundColor: theme.palette.primary.main\r\n        },\r\n        secondary: {\r\n            backgroundColor: theme.palette.secondary.main\r\n        },\r\n        warning: {\r\n            backgroundColor: theme.palette.warning.main\r\n        },\r\n        error: {\r\n            backgroundColor: theme.palette.error.main\r\n        },\r\n        info: {\r\n            backgroundColor: theme.palette.info.main\r\n        },\r\n        success: {\r\n            backgroundColor: theme.palette.success.main\r\n        },\r\n        defaultColor: {\r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        paper: { \r\n            backgroundColor: theme.palette.background.paper\r\n        }\r\n    }))\r\n    const { block, primary , secondary , warning , error , info, success, defaultColor , paper } = useStyles()\r\n    const colorCustomText = (colorCustom !== 'primary' && colorCustom !== 'secondary' &&  colorCustom !== 'warning' &&\r\n                            colorCustom !== 'error' && colorCustom !== 'info' && colorCustom !== 'success' ) ? ` - ${colorCustom}` : \" \"\r\n    return (\r\n        <Box display=\"flex\" alignItems='center'>\r\n            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                <InputLabel id=\"color-select-label\">{label}</InputLabel>\r\n                <Select\r\n                    labelId=\"color-select-label\"\r\n                    id=\"color-select\"\r\n                    value={colorSelect}\r\n                    onChange={(e) => { setIsDisableBtn(false); setColorSelect(e.target.value) }} \r\n                >\r\n                    <MenuItem style={{position: 'relative'}} value={'primary'}>\r\n                        Primary\r\n                        <Box className={`${block} ${primary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'secondary'}>\r\n                        Secondary \r\n                        <Box className={`${block} ${secondary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'warning'}>\r\n                        Warning\r\n                        <Box className={`${block} ${warning}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'error'}>\r\n                        Error\r\n                        <Box className={`${block} ${error}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'info'}>\r\n                        Info\r\n                        <Box className={`${block} ${info}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'success'}>\r\n                        Success\r\n                        <Box className={`${block} ${success}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'default'}>\r\n                        Default Background\r\n                        <Box className={`${block} ${defaultColor}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'paper'}>\r\n                        Paper Background\r\n                        <Box className={`${block} ${paper}`} />\r\n                    </MenuItem>\r\n                    {   \r\n                        isContrastSelect &&\r\n                        <MenuItem style={{position: 'relative'}} value={'contrast'}>\r\n                            Contrast (about Background)\r\n                        </MenuItem>\r\n                    }\r\n                    <MenuItem value={'custom'}>\r\n                        Custom  {colorCustomText}\r\n                    </MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <Box ml={1} >\r\n                {\r\n                    colorSelect === 'custom' &&\r\n                    <ColorPicker\r\n                        initialColor = {colorCustom}\r\n                        changeColor = {setColorCustom}\r\n                        setIsDisableBtn = {setIsDisableBtn}\r\n                        position = {position}\r\n                        noInherit={noInherit}\r\n                    />  \r\n                }\r\n                \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ColorSelecter\r\n","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch, \r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n  \r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n    const [modalTarget, setModalTarget] = React.useState(modal.target || 'buy') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    \r\n    const colorTheme = isNoThemeColor(modal.color) \r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [modal])\r\n\r\n    const handleOpen = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        \r\n        const { menu, menuTitle, btnSetting, btnSave, btnWithLabel, dialogContentUnstyle } = commonClasses\r\n\r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,  \r\n            btnWithLabel: {...btnWithLabel, ...{\r\n                '& label': {\r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    padding: theme.spacing(1, 2)\r\n                }\r\n            }},\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText, \r\n            target: modalTarget\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true) \r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => { \r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n                \r\n                setIsDisableBtn(false)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Logo/Modal Settings  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained' \r\n                                        className={classes.btnWithLabel}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> <ImageIcon color=\"action\" /> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    /> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <Box mr={1} display='inline'>\r\n                                                    <TextField\r\n                                                        type='text'\r\n                                                        label=\"Text for Button\"\r\n                                                        variant=\"outlined\"\r\n                                                        value={modalText}\r\n                                                        onChange={(e) => {\r\n                                                        setIsDisableBtn(false);\r\n                                                        setModalText(e.target.value)\r\n                                                    }}/>  \r\n                                                </Box> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Target for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalTarget}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalTarget(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <ColorSelecter\r\n                                                label={'Color for Button'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={true}\r\n                                            /> \r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box mt={5} /> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n\r\n    \r\n    const colorTheme = isNoThemeColor(settings.classes.backgroundColor) \r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [settings])\r\n     \r\n    const handleOpen = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle } = commonClasses\r\n        \r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true) \r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                               { !isDisableBtn && \"Close to save - \" }  Header Style Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                        <ColorSelecter\r\n                                            label={'Background for Header'}\r\n                                            colorSelect={settingBackgroundSelect} \r\n                                            setColorSelect={setSettingBackgroundSelect}\r\n                                            colorCustom={settingBackgroundCustom}\r\n                                            setColorCustom={setSettingBackgroundCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        />\r\n                                             \r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box mt={5} /> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../functions/colorChanger/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n    const [lightError, setLightError] = React.useState(themeLight.palette.error.main) \r\n    const [darkError, setDarkError] = React.useState(themeDark.palette.error.main) \r\n\r\n    const [lightWarning, setLightWarning] = React.useState(themeLight.palette.warning.main) \r\n    const [darkWarning, setDarkWarning] = React.useState(themeDark.palette.warning.main) \r\n\r\n    const [lightInfo, setLightInfo] = React.useState(themeLight.palette.info.main) \r\n    const [darkInfo, setDarkInfo] = React.useState(themeDark.palette.info.main) \r\n\r\n    const [lightSuccess, setLightSuccess] = React.useState(themeLight.palette.success.main) \r\n    const [darkSuccess, setDarkSuccess] = React.useState(themeDark.palette.success.main) \r\n \r\n    // text.primary\r\n    // text.secondary\r\n    // text.disabled\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, dialogContentUnstyle } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }, \r\n            dialogContentUnstyle: dialogContentUnstyle\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    const handleSave = () => {  \r\n \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                },\r\n                error: {\r\n                    main: lightError\r\n                },\r\n                warning: {\r\n                    main: lightWarning\r\n                },\r\n                info: {\r\n                    main: lightInfo\r\n                },\r\n                success: {\r\n                    main: lightSuccess\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                },\r\n                error: {\r\n                    main: darkError\r\n                },\r\n                warning: {\r\n                    main: darkWarning\r\n                },\r\n                info: {\r\n                    main: darkInfo\r\n                },\r\n                success: {\r\n                    main: darkSuccess\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={2}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Warning - { lightWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightWarning}\r\n                                        changeColor = {setLightWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Error - { lightError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightError}\r\n                                        changeColor = {setLightError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Info - { lightInfo }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightInfo}\r\n                                        changeColor = {setLightInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Success - { lightSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSuccess}\r\n                                        changeColor = {setLightSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Warning- { darkWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkWarning}\r\n                                        changeColor = {setDarkWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Error - { darkError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkError}\r\n                                        changeColor = {setDarkError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Info - { darkInfo}\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkInfo}\r\n                                        changeColor = {setDarkInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Succwss - { darkSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSuccess}\r\n                                        changeColor = {setDarkSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n  \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors' \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport InputChange from '../../functions/InputChange'\r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n     \r\n    const colorTheme = isNoThemeColor(modalSettings.colorButton)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [modalSettings.colorButton])\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle } = commonClasses\r\n\r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }},  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true) \r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Modal Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}> \r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Heading\" \r\n                                    variant='outlined'\r\n                                    value={heading}\r\n                                    setValue={setHeading}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Sub Heading\"\r\n                                    variant='outlined'\r\n                                    value={subHeading}\r\n                                    setValue={setSubHeading}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Target text\" \r\n                                    variant='outlined'\r\n                                    value={targetText}\r\n                                    setValue={setTargetText}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Input Name text\" \r\n                                    variant='outlined'\r\n                                    value={inputName}\r\n                                    setValue={setInputName}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Input Phone text\" \r\n                                    variant='outlined'\r\n                                    value={inputPhone}\r\n                                    setValue={setInputPhone}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Button text\" \r\n                                    variant='outlined'\r\n                                    value={buttonText}\r\n                                    setValue={setButtonText}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />  \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Policy text\" \r\n                                    variant='outlined'\r\n                                    value={policy}\r\n                                    setValue={setPolicy}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />  \r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <ColorSelecter\r\n                                    label={'Color for Button'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={true}\r\n                                /> \r\n                            </Box>\r\n                             \r\n                            <Box mt={5} /> \r\n\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, dialogContentUnstyle } = commonClasses\r\n        \r\n        return ({ \r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {   \r\n        const conf = window.confirm('Delete request?') \r\n        if(conf) {\r\n            const newReq = localRequests.slice()\r\n            const filtered = newReq.filter(item => ( item.time !== id ))\r\n    \r\n            setLocalRequests(filtered)\r\n            setIsDisableBtn(false) \r\n        }\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    IconButton,\r\n    MenuItem, \r\n    FormControl,\r\n    Select, \r\n    InputLabel\r\n} from '@material-ui/core' \r\nimport {InfoOutlined} from '@material-ui/icons'; \r\n\r\nimport { amber } from '@material-ui/core/colors' \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\n\r\nimport InputChange from '../../functions/InputChange'\r\nimport ValidationChip from '../../placeholders/ValidationChip'\r\n\r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { validationSettings, updateValidationSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mask, setMask] = React.useState(validationSettings.mask || '')  \r\n    const [name, setName] = React.useState(validationSettings.name || '')\r\n    const [phone, setPhone] = React.useState(validationSettings.phone || '')\r\n    const [variant, setVariant] = React.useState(validationSettings.variant || 'filled')\r\n    const [colorSelect,  setColorSelect] = React.useState(validationSettings.color || 'error')\r\n    const [colorCustom, setColorCustom] = React.useState(validationSettings.color || 'error')\r\n\r\n    const colorTheme = isNoThemeColor(validationSettings.color) \r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [validationSettings.color])  \r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    const handleChangeVariant = (value) => {\r\n        setVariant(value)\r\n    }\r\n         \r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle } = commonClasses\r\n \r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }},  \r\n            infoBlock: {\r\n                display: \"flex\", \r\n                alignItems: 'center', \r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                '&:hover': {\r\n                    borderColor: theme.palette.warning.light,  \r\n                    '& $infoBtn': {\r\n                        backgroundColor: theme.palette.warning.main,   \r\n                        '& svg': {\r\n                            fill: theme.palette.getContrastText(theme.palette.warning.main)\r\n                        }\r\n                    }\r\n                }\r\n                 \r\n            },\r\n            infoBtn: {\r\n                backgroundColor: theme.palette.divider, \r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.warning.light,\r\n                }\r\n            },  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, validationSettings) \r\n         \r\n        newData.mask = mask \r\n        newData.name = name \r\n        newData.phone = phone \r\n        newData.variant = variant \r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true) \r\n\r\n        updateValidationSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Validation Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Validation</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Validation Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label='Error text for Name input'\r\n                                    variant='outlined'\r\n                                    value={name}\r\n                                    setValue={setName}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />  \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label='Error text for Phone input'\r\n                                    variant='outlined'\r\n                                    value={phone}\r\n                                    setValue={setPhone}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box> \r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label='Mask Phone input'\r\n                                    variant='outlined'\r\n                                    value={mask}\r\n                                    setValue={setMask}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                                \r\n                            </Box> \r\n                            <Box my={2}>\r\n                                <ColorSelecter\r\n                                    label={'Background'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'top'}\r\n                                    noInherit={true}\r\n                                />\r\n                            </Box> \r\n                            <Box my={2}>\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'    \r\n                                >\r\n                                    <InputLabel id=\"variant-style-label\">Variant</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"variant-label\"\r\n                                        id=\"variant-style\"\r\n                                        value={variant}\r\n                                        style={{minWidth: 180}}\r\n                                        onChange={(e) => {setIsDisableBtn(false); handleChangeVariant(e.target.value) }}\r\n                                    > \r\n                                        <MenuItem value={'filled'}>Filled</MenuItem> \r\n                                        <MenuItem value={'outlined'}>Outlined</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box> \r\n                            <Box className={classes.infoBlock}> \r\n                                <Box mr={1}>  \r\n                                    <IconButton className={classes.infoBtn} >\r\n                                        <InfoOutlined/>\r\n                                    </IconButton> \r\n                                </Box>\r\n                                <Box>\r\n                                    <Typography>\r\n                                        Validation Setting is common for all fields on site\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        Enter the mask in the format \"+7 (999) 999-99-99\", where 9 is any number  \r\n                                    </Typography> \r\n                                    <ValidationChip \r\n                                        textForView={name} \r\n                                        variantView={variant} \r\n                                        colorView={colorSelect === 'custom' ? colorCustom : colorSelect} \r\n                                        isValid={false} \r\n                                        handleClose={() => {}} \r\n                                        absolute={false} \r\n                                        closeOnFirstClick={false}\r\n                                    />\r\n                                    <ValidationChip \r\n                                        textForView={phone} \r\n                                        variantView={variant} \r\n                                        colorView={colorSelect === 'custom' ? colorCustom : colorSelect} \r\n                                        isValid={false} \r\n                                        handleClose={() => {}} \r\n                                        absolute={false} \r\n                                        closeOnFirstClick={false}\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                             \r\n                            <Box mt={5} /> \r\n\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","export default __webpack_public_path__ + \"static/media/half-moon.4946e6c2.svg\";","export default __webpack_public_path__ + \"static/media/sun.b7c92f87.svg\";","import React from 'react'\r\n\r\nimport {  \r\n    FormControlLabel, \r\n    Switch,\r\n    withStyles\r\n} from \"@material-ui/core\"; \r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\n \r\nimport darkThemeIcon from '../../../assets/icons/half-moon.svg'\r\nimport lightThemeIcon from '../../../assets/icons/sun.svg' \r\n\r\nfunction ThemeSwitcher() {\r\n\r\n    const { setThemeMode, themeMode} = React.useContext(CategoryContext)    \r\n  \r\n    const checked = themeMode === 'dark' ? true : false\r\n    \r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    const ThemeCustomSwitch = withStyles((theme) => ({\r\n        root: {\r\n          width: 60,\r\n          height: 28,\r\n          padding: 0, \r\n          marginRight: 5\r\n        },\r\n        switchBase: {\r\n          padding: 1,  \r\n          '&$checked': {\r\n            transform: 'translateX(32px)',\r\n            color: '#27536b',\r\n            '& + $track': {\r\n              backgroundColor: '#27536b',\r\n              opacity: 1,\r\n              border: 'none',\r\n            },\r\n            '&  $thumb': { \r\n              opacity: 1,\r\n              border: 'none',\r\n              backgroundImage: `url(${darkThemeIcon})`\r\n            },\r\n          },\r\n          '&$focusVisible $thumb': {\r\n            color: '#52d869', \r\n          },\r\n        },\r\n        thumb: {\r\n          width: 26,\r\n          height: 26,\r\n          backgroundImage: `url(${lightThemeIcon})`,\r\n          backgroundSize: '28px',\r\n          backgroundPosition: 'center',  \r\n        },\r\n        track: {\r\n          borderRadius: 28 / 2,\r\n          border: `1px solid #a3d4ff`,\r\n          backgroundColor: '#a3d4ff',\r\n          opacity: 1,\r\n          transition: theme.transitions.create(['background-color', 'border']),\r\n        },\r\n        checked: {},\r\n        focusVisible: {},\r\n      }))(({ classes, ...props }) => {\r\n        return (\r\n          <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n              root: classes.root,\r\n              switchBase: classes.switchBase,\r\n              thumb: classes.thumb,\r\n              track: classes.track,\r\n              checked: classes.checked,\r\n            }}\r\n            {...props}\r\n          />\r\n        );\r\n      });\r\n    return ( \r\n        <FormControlLabel\r\n            control={<ThemeCustomSwitch checked={checked} onChange={handleChange} name=\"checkedB\" />}\r\n            label={checked ? 'Night Mode' : 'Light Mode'}\r\n        /> \r\n    ) \r\n}\r\n\r\nexport default ThemeSwitcher\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                // paddingLeft: 10, \r\n                // paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n    Button\r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nconst Mobile = (props) => { \r\n \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: props.menuColor,\r\n                    color: props.iconColor\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            drawerHeader: {\r\n                margin: theme.spacing(1, 2), \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between', \r\n                '& .log-button': {\r\n                    minWidth: 100\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset, drawerHeader } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n    const handleModal = () => {\r\n        handleDrawerClose()\r\n        props.openModal()\r\n    }\r\n\r\n    return (\r\n        <Toolbar disableGutters style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box className={drawerHeader}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        {\r\n                            props.user ? \r\n                            <Button \r\n                                size='medium'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={ () => { props.handleSignOut(); handleDrawerClose()  } }\r\n                                className={'log-button'}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                            :\r\n                            <NavLink to='/login' onClick={handleDrawerClose}>\r\n                                <Button  \r\n                                    color='primary' \r\n                                    variant=\"contained\"\r\n                                    size='medium'\r\n                                    className={'log-button'} \r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </NavLink>\r\n                        }\r\n                        \r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box my={3} width={'100%'} clone={true} onClick={handleModal}>\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                    \r\n                    <Box px={3} my={2} >\r\n                        <Box  width={'100%'} clone={true} >\r\n                            <ThemeSwitcher/>\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                color: \"default\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon style={{color: props.iconColor}} />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n   \r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button, \r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\n\r\nimport { getColorByPalette } from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent() { \r\n\r\n    console.log('dumb header')\r\n\r\n    const { setCustomAlert } = React.useContext(SendFormContext)\r\n    const { user } = React.useContext(ModeContext)\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings } = React.useContext(CategoryContext)    \r\n    \r\n    const [mobileView, setMobileView] = useState(true); \r\n   \r\n    let backgroundHeader\r\n    let colorHeader \r\n    let hoverActiveLinkColor \r\n  \r\n    let modalBtnColor = modal.color  \r\n\r\n    let widthMobile \r\n     \r\n    const headerRef = React.useRef(null);\r\n    const topHeaderRef = React.useRef(null);\r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`] \r\n        modalBtnColor= getColorByPalette(theme, modal.color)  \r\n\r\n        backgroundHeader = getColorByPalette(theme, settings.classes.backgroundColor) \r\n\r\n        hoverActiveLinkColor = darken(backgroundHeader, 0.3)\r\n        colorHeader =  theme.palette.getContrastText(backgroundHeader)  \r\n \r\n        if(settings.classes.backgroundColor === 'paper' || settings.classes.backgroundColor === 'default') {  \r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n  \r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `, \r\n               \r\n                top: 0,  \r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n                '&.sticky' : {\r\n                    transform: \"translateY(-41px)\",\r\n                    [`@media (max-width: ${widthMobile}px)`]: {\r\n                        transform: \"translateY(0px)\",\r\n                    }\r\n                }\r\n            },\r\n            fixedPadding: { \r\n                minHeight: 100 + settings.classes.paddingY*2 , \r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    minHeight: 60 + settings.classes.paddingY , \r\n                },\r\n            },\r\n            topHeader: {   \r\n                height: '100%', \r\n                paddingTop: 5, \r\n                paddingBottom: 5,  \r\n                backgroundColor:  \"rgba(0, 0, 0, 0.16)\" , \r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `,  \r\n                '&.sticky' : {\r\n                    // transform: 'scaleY(0)',\r\n                    // transformOrigin: 'top', \r\n                    height: 0, \r\n                    opacity: 0\r\n                }\r\n            },\r\n            logoMain: { \r\n                fontWeight: 700,\r\n                fontSize: 22,\r\n                color: colorHeader , \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundColor: modalBtnColor,   \r\n                color: theme.palette.getContrastText(modalBtnColor), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': {  \r\n                    backgroundColor: darken(modalBtnColor, .3) , \r\n                }\r\n            }, \r\n            linkModal: {  \r\n                textTransform: 'inherit', \r\n                color: colorHeader, \r\n                padding: theme.spacing(0.5, 1.2),\r\n                '&:hover': { \r\n                    backgroundColor: modalBtnColor, \r\n                    color: theme.palette.getContrastText(modalBtnColor), \r\n                    cursor: 'pointer'\r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal, linkModal, topHeader} = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {  \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        const setScrollHeader = () => { \r\n            if(mobileView) {\r\n                const headerTop =  window.pageYOffset \r\n                try {\r\n                    if( headerTop > 1 ) {\r\n                        headerRef.current.classList.add('sticky')\r\n                    } else {\r\n                        headerRef.current.classList.remove('sticky')\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.log(err)\r\n                } \r\n            }\r\n        } \r\n        setResponsiveness(); \r\n        setScrollHeader();\r\n\r\n        window.addEventListener(\"resize\", setResponsiveness);\r\n        window.addEventListener(\"scroll\", setScrollHeader);\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', setResponsiveness) \r\n            window.removeEventListener('scroll', setScrollHeader) \r\n        }\r\n        // eslint-disable-next-line \r\n    }, []);\r\n     \r\n\r\n    const openModal = () => { \r\n        handleOpen(modal.target) \r\n    }\r\n\r\n    const handleSignOut = () => { \r\n        firebase.logout()\r\n        setCustomAlert('warning', 'You are logged out successfully', 3000)\r\n    }\r\n  \r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button \r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n    const topHeaderModalBtn = () => ( \r\n        <Button\r\n            onClick={() => { openModal(modal.target) }} \r\n            className={linkModal}\r\n            size='small' \r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n                 \r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            } \r\n            <AppBar className={header} ref={headerRef}  id='header'>\r\n                    { \r\n                        !mobileView &&\r\n                        <Box className={topHeader} ref={topHeaderRef} >\r\n                            <Container \r\n                                disableGutters={settings.disableGutters}\r\n                                fixed={settings.fixed} \r\n                                maxWidth={settings.maxWidth}  \r\n                            > \r\n                                <Box display='flex' alignItems='center' justifyContent='space-between'>\r\n                                    {  modal.isModal ? topHeaderModalBtn() : ( <span></span> ) }\r\n                                    <Box display='flex' alignItems='center' >\r\n                                        \r\n                                        <ThemeSwitcher/>\r\n                                        \r\n                                        {\r\n                                            user ?\r\n                                            <Button \r\n                                                size='small'\r\n                                                color='secondary' \r\n                                                variant={'contained'} \r\n                                                onClick={handleSignOut}\r\n                                            >\r\n                                                Sign Out\r\n                                            </Button>\r\n                                            :\r\n                                            <NavLink to='/login'>\r\n                                                <Button \r\n                                                    color='default' \r\n                                                    variant=\"outlined\"\r\n                                                    size='small'\r\n                                                >\r\n                                                    Login\r\n                                                </Button>\r\n                                            </NavLink>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n                                </Box>\r\n                            </Container>\r\n                        </Box>\r\n                    }\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop   \r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            openModal={openModal}\r\n                            iconColor={colorHeader}  \r\n                            menuColor={backgroundHeader}  \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                            user={user}\r\n                            handleSignOut={handleSignOut}\r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\nimport ValidationChanger from './headerHelpers/ValidationChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\n\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: open ? 1 : 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 10, \r\n            top: 5, \r\n            width: 60, \r\n            height: 60,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            textAlign: 'center' ,\r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.headerContainer}>\r\n  \r\n            <div>   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >   \r\n                    {open ? 'close' : 'open' }\r\n                    <br/>\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <RequestsChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ValidationChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { makeStyles, Box, Typography, Container, IconButton, Tooltip, darken } from '@material-ui/core'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nimport { getColorByPalette } from '../functions/colorChanger/ColorCalculation'\r\n\r\nfunction Footer() {\r\n\r\n    const { logo, settings } = React.useContext(CategoryContext)\r\n\r\n    let backgroundFooter = settings.classes.backgroundColor\r\n    let contrastFooter\r\n    let hoverActiveLinkColor\r\n     \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        backgroundFooter = getColorByPalette(theme, backgroundFooter) \r\n        contrastFooter = theme.palette.getContrastText(backgroundFooter)\r\n        hoverActiveLinkColor = darken(backgroundFooter, 0.3)\r\n\r\n        if(settings.classes.backgroundColor === 'paper' || settings.classes.backgroundColor === 'default') {  \r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n\r\n        return({ \r\n            footer: {\r\n                backgroundColor: backgroundFooter, \r\n                padding: theme.spacing(3, 0)\r\n            }, \r\n            logoMain: { \r\n                color: contrastFooter,\r\n                fontWeight: 700,\r\n                fontSize: 25, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                color: contrastFooter,\r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 70, \r\n                height: 50, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: 45, \r\n                    height: 30, \r\n                },\r\n            },  \r\n            buttonToTop: {\r\n                '&:hover': {\r\n                    backgroundColor: hoverActiveLinkColor\r\n                }\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n \r\n    const createLogo = () => (\r\n        <NavLink to={'/'} style={{textDecoration: 'none', display: 'inline-block'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={classes.logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={classes.logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={classes.logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n    const buttonToTop = () => (\r\n        <Tooltip title='To Top' placement='top' >\r\n            <IconButton \r\n                className={classes.buttonToTop}  \r\n                onClick={handleClickToTop}\r\n            >\r\n                <KeyboardArrowUpIcon style={{fill: contrastFooter}}/>\r\n            </IconButton>\r\n        </Tooltip>\r\n    )\r\n    const handleClickToTop = () => {\r\n        window.scrollTo({\r\n            top: 0, \r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n\r\n                <Box display='flex' alignItems=\"center\" justifyContent='space-between'>\r\n                    { createLogo() }\r\n                    { buttonToTop() }\r\n                </Box>\r\n                \r\n \r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\nimport ModeContext from '../context/modeContext/ModeContext' \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext' \r\n \r\nimport { Avatar, Button, TextField, Box, Container, CircularProgress, Typography, Tooltip } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab'; \r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setCustomAlert } = React.useContext(SendFormContext)\r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n    const { user } = React.useContext(ModeContext) \r\n \r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    const [isSubmit, setIsSubmit] = React.useState(false)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        if(user) setIsRedirect(true)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          marginBottom: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: isSubmit ? theme.palette.primary.main : theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', // Fix IE 11 issue.\r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submitBtn: {  \r\n            minHeight: 55\r\n        },\r\n        forgotTitle: {\r\n            textAlign: 'center'\r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n    const disableCheck = ({value1, value2}) => { \r\n        console.log(value1, value2)\r\n        if(value1 !== '' && value2 !== '') setIsDisableBtn(false)\r\n        else setIsDisableBtn(true)   \r\n    }\r\n\r\n    const handleChange = (value, place) => {\r\n        switch(place) {\r\n            case ('name') : { \r\n                setName(value)\r\n                break;\r\n            }\r\n            case ('password'): {\r\n                setPassword(value)\r\n                break;\r\n            }\r\n            default: break;\r\n        } \r\n        setError(null)\r\n        disableCheck({\r\n            value1: value, \r\n            value2: place === 'name' ? password : name\r\n        })\r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        setIsLoading(true)\r\n        setIsDisableBtn(true)\r\n        setIsSubmit(true)\r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n            setIsSubmit(false) \r\n            setCustomAlert('success', `Hello, ${res.user.email}. Now you can change site`, 7000)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n            setIsSubmit(false)\r\n            setIsLoading(false)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>  \r\n            {/* <Dumb/> */}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        { isSubmit ? <CircularProgress size={25} style={{color: '#fff'}} /> : <LockOutlinedIcon /> }\r\n                    </Avatar> \r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                id=\"text\"\r\n                                label=\"User\"\r\n                                name=\"user\"\r\n                                autoComplete='true'\r\n                                autoFocus\r\n                                value={name}\r\n                                onChange={  (e)=>{handleChange(e.target.value, 'name')} }\r\n                            />\r\n                        </Box>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\" \r\n                                value={password}\r\n                                onChange={  (e)=>{handleChange(e.target.value, 'password')} }\r\n                            />\r\n                        </Box>\r\n                        {\r\n                            error && \r\n                            <Box mb={2} >\r\n                                <Alert severity=\"error\">{error.message}</Alert>\r\n                            </Box>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            size='medium'\r\n                            color=\"primary\"\r\n                            className={classes.submitBtn}\r\n                            disabled={isDisableBtn} \r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                        \r\n                    <Box mt={2} >\r\n                        <Tooltip title=\"It's your problem\" placement='top'>\r\n                            <Typography variant='caption' className={classes.forgotTitle}>\r\n                                Forgot Password? \r\n                            </Typography>\r\n                        </Tooltip>\r\n                    </Box>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5, \r\n            display: 'flex', \r\n            alignItems: 'center'\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React from 'react' \r\nimport Draggable from 'react-draggable'; \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\n\r\nimport uuid from 'react-uuid' \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter' \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu, Tooltip,\r\n    FormControl, InputLabel,\r\n    Select, Typography, IconButton, \r\n    Modal, DialogContent, \r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n    const libraryList = layouts.list\r\n\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n\r\n    const [borderColorSelect,  setBorderColorSelect] = React.useState(props.data.classes.borderColor || 'inherit')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor || 'inherit')\r\n \r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n \r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0)\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  0)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor])\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem  } = commonStyle \r\n \r\n        \r\n        return ({   \r\n            dialogContentUnstyle:dialogContentUnstyle, \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                // maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                width: 600, \r\n            } },\r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip,\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,  \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection  \r\n    }  \r\n     \r\n\r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.handleClose()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = props.data.children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = JSON.parse(JSON.stringify(libraryHeading)); \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraph)); \r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraphImage)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            case 'list' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryList)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n   \r\n        props.handleClose()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        if (backgroundSelect === 'custom') { myClassName.backgroundColor = backgroundCustom }\r\n        else { myClassName.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { myClassName.color = colorCustom } \r\n        else { myClassName.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { myClassName.borderColor = borderColorCustom } \r\n        else { myClassName.borderColor = borderColorSelect }\r\n\r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true);  \r\n    } \r\n\r\n    const handleClose = () => {\r\n        if(!isDisableBtn)reSaveClassesSettings()\r\n        props.handleClose()\r\n    } \r\n    \r\n    \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} >  \r\n                <Modal \r\n                    open={props.open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Container Settings<OpenWithIcon/>\r\n                                </Typography>\r\n                    <FormGroup > \r\n                        <Typography  variant={'h6'} gutterBottom  >\r\n                            Add item from libs\r\n                        </Typography>\r\n                        <Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button \r\n                                        aria-controls=\"heading-menu\" \r\n                                        aria-haspopup=\"true\" \r\n                                        onClick={handleHeadingMenuClick}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Heading\r\n                                    </Button>\r\n                                </Box>\r\n                                \r\n                                <Menu\r\n                                    id=\"heading-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleHeadingMenuClose}\r\n                                >\r\n                                    <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                    <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                    <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                    <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                    <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                    <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                </Menu>\r\n\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraph');}}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Paragraph\r\n                                    </Button>\r\n                                </Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        Paragraph-Image\r\n                                    </Button>\r\n                                </Box> \r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('list', 'list');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        List\r\n                                    </Button>\r\n                                </Box> \r\n                        </Box>\r\n\r\n                    </FormGroup>\r\n\r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Settings \r\n                    </Typography>\r\n                    <FormGroup row>\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                            <Select\r\n                                labelId=\"dis-gutters-label\"\r\n                                id=\"dis-gutters-style\"\r\n                                value={settingGutter}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        \r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                            <Select\r\n                                labelId=\"fixed-label\"\r\n                                id=\"fixed-style\"\r\n                                value={settingFixed}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>  \r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup row> \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                            <Select\r\n                                labelId=\"maxWidth-label\"\r\n                                id=\"maxWidth-style\"\r\n                                value={settingMaxWidth}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-container-label\"\r\n                                id=\"inner-container-style\"\r\n                                value={settingInnerContainer}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup row> \r\n                            \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-paper-label\"\r\n                                id=\"inner-paper-style\"\r\n                                value={settingIsPaper}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    \r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Styles \r\n                    </Typography>\r\n                    <React.Fragment>\r\n                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                <TabletMacIcon/>\r\n                                <Box>   \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.8 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.8 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.8 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.8 }</b> \r\n                                    </p>     \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>  \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.5 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.5 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.5 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.5 }</b> \r\n                                    </p>        \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n                        {/* display */}\r\n                        <Box className={classes.inputGroup}>\r\n\r\n                            <Tooltip title=\"For correct margin inside conteiner recomended:   display: flex, flexDirection: column\"  >\r\n                                <IconButton>\r\n                                    <InfoOutlined/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"display-style-label\"\r\n                                        id=\"display-style\"\r\n                                        value={display}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'block'}>Block</MenuItem>  \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                                {\r\n                                    display === 'flex' &&\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"direction-style-label\"\r\n                                            id=\"direction-style\"\r\n                                            value={flexDirection}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={'row'}>Row</MenuItem>  \r\n                                            <MenuItem value={'column'}>Column</MenuItem>  \r\n                                            <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                            <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>   \r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* margin */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Top'\r\n                                        variant='filled'\r\n                                        value={margin.top}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Bottom'\r\n                                        variant='filled'\r\n                                        value={margin.bottom}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* padding */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Top\" \r\n                                        variant='filled'\r\n                                        value={padding.top}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Bottom\" \r\n                                        variant='filled'\r\n                                        value={padding.bottom}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n\r\n                        </Box>\r\n                        \r\n                        {/* bg-color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} > \r\n                                <ColorSelecter\r\n                                    label={'Background'}\r\n                                    colorSelect={backgroundSelect} \r\n                                    setColorSelect={setBackgroundSelect}\r\n                                    colorCustom={backgroundCustom}\r\n                                    setColorCustom={setBackgroundCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false}\r\n                                />  \r\n                            </Box>\r\n                        </Box>\r\n                        <Box  className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Color'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false}\r\n                                    isContrastSelect={true}\r\n                                />   \r\n                                {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                            </Box> \r\n                        </Box>\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Border Color'}\r\n                                    colorSelect={borderColorSelect} \r\n                                    setColorSelect={setBorderColorSelect}\r\n                                    colorCustom={borderColorCustom}\r\n                                    setColorCustom={setBorderColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false} \r\n                                />  \r\n                            </Box> \r\n                        </Box>\r\n                         \r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                <Select\r\n                                    labelId=\"shadow-style-label\"\r\n                                    id=\"shadow-style\"\r\n                                    value={shadow}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                    0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                    <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                    0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                    <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                    0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                </Select>\r\n                            </FormControl> \r\n                            \r\n                        </Box>\r\n                            \r\n                        {/* border */}\r\n                        <Box className={classes.inputGroup}> \r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Radius\" \r\n                                        variant='filled'\r\n                                        value={borderRadius}\r\n                                        setValue={setBorderRadius}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Width\" \r\n                                        variant='filled'\r\n                                        value={borderWidth}\r\n                                        setValue={setBorderWidth}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Box mt={5} />\r\n                        {/* <Box  className={classes.btnSave}>\r\n                            <Button\r\n                                disabled={isDisableBtn}\r\n                            \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size={'medium'} \r\n                                onClick={reSaveClassesSettings}\r\n                            >\r\n                                Save\r\n                            </Button> \r\n                        </Box> */}\r\n                        \r\n                    </React.Fragment> \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                </Modal> \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} ,\r\n            resposiveFontSize: { \r\n                [`@media (max-width: 960px)`]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.8 : 20, \r\n                    marginTop: props.className.marginTop*0.8,\r\n                    marginBottom: props.className.marginBottom*0.8\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.6 : 20,\r\n                    lineHeight : 1.2, \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n             \r\n          })\r\n    } );\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren.length > 0) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n        else {\r\n            return `(No text - ${props.data.variant})`\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent,\r\n    ButtonGroup,\r\n    FormGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n \r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n          \r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, responseValues, responseTablets, responseMobile, mobileTooltip, tabletTooltip, dialogContentUnstyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            // btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${margin.top * 0.8}px`,  \r\n                        height: `${margin.top * 0.8}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${margin.bottom * 0.8}px`,\r\n                        height: `${margin.bottom * 0.8 }px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${margin.bottom * 0.5}px`,\r\n                        height: `${margin.bottom * 0.5 }px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n            tooltip: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.primary.main\r\n            }\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n \r\n\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        // handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    const swapHeading = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const viewCorrect = props.data.classes.display !== 'block' ? `(uncorrect view for ${props.data.classes.display} display)` : ''\r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    { !isDisableBtn && \"Close to save - \" } Heading - {props.data.variant} Settings <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <InputChange\r\n                                        id={null}\r\n                                        fullWidth={true}\r\n                                        multiline={true}\r\n                                        type='text'\r\n                                        size=\"medium\" \r\n                                        label=\"Text input\"\r\n                                        variant='standard'\r\n                                        value={textInDumb}\r\n                                        setValue={setTextInDumb}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    />      \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip classes={{tooltip: classes.tooltip}}  title=\"If enabled, the type will be smaller on mobile devices and the alignment will be centered\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n                                <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                        <TabletMacIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.8 }</b>; MarginBottom: <b>{margin.bottom * 0.8 }</b> </p>   \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.8 : 20 }</b> </p>   \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                        <PhoneIphoneIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p>  \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.6 : 20 }</b>  LineHeight: <b>{1.2} </b> </p>   \r\n                                                    <p>TextAlign:  <b>center</b> </p>\r\n  \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={display}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'block'}>Block</MenuItem> \r\n                                            <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                            <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                            <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>  \r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='filled'\r\n                                                value={margin.top}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={margin.bottom}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Left'\r\n                                                variant='filled'\r\n                                                value={margin.left}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Right'\r\n                                                variant='filled'\r\n                                                value={margin.right}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top\" \r\n                                                variant='filled'\r\n                                                value={padding.top}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Bottom\" \r\n                                                variant='filled'\r\n                                                value={padding.bottom}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Left\" \r\n                                                variant='filled'\r\n                                                value={padding.left}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Right\" \r\n                                                variant='filled'\r\n                                                value={padding.right}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Background'}\r\n                                            colorSelect={backgroundSelect} \r\n                                            setColorSelect={setBackgroundSelect}\r\n                                            colorCustom={backgroundCustom}\r\n                                            setColorCustom={setBackgroundCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                            isContrastSelect={true} \r\n                                        /> \r\n                                        {\r\n                                            backgroundCustom === 'inherit' &&\r\n                                            colorSelect === 'contrast' && \r\n                                            <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>\r\n                                        } \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Font Size\" \r\n                                                variant='filled'\r\n                                                value={fontSize}\r\n                                                setValue={setFontSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Line Height (em)\" \r\n                                                variant='filled'\r\n                                                value={lineHeight}\r\n                                                setValue={setLineHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                     \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={borderRadius}\r\n                                                setValue={setBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={borderWidth}\r\n                                                setValue={setBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber} >   \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={borderColorSelect} \r\n                                                setColorSelect={setBorderColorSelect}\r\n                                                colorCustom={borderColorCustom}\r\n                                                setColorCustom={setBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                                {/* <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box> */}\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                        \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb list') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        \r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: color,   \r\n            }},  \r\n            liClass: props.data.itemsStyle,\r\n            mobileClass: {\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: props.className.marginTop === 0 ? 0 : (props.className.marginTop > 30 ? props.className.marginTop*0.6 : 15), \r\n                    marginBottom: props.className.marginBottom === 0 ? 0 : (props.className.marginBottom > 30 ? props.className.marginBottom*0.6 : 15),  \r\n                    paddingLeft: props.className.paddingLeft === 0 ? 0 : (props.className.paddingLeft > 30 ? props.className.paddingLeft*0.6 : 15)\r\n                } \r\n            }\r\n          })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n           <ul className={`${classes.myClassName} ${classes.mobileClass}`}>\r\n                {\r\n                    props.data.items.map( (item, index) => (\r\n                        <li key={index} className={classes.liClass}>\r\n                            {item}\r\n                        </li>\r\n                    ))        \r\n                }\r\n                {\r\n                    props.data.items.length === 0 &&\r\n                    <li className={classes.liClass} >No items</li>\r\n                }\r\n           </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    Grid,  \r\n    Button, \r\n    ButtonGroup, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n  \r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';   \r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled list work')\r\n\r\n    const [paddingLeft, setPaddingLeft] = React.useState( props.data.classes.paddingLeft || 15 )\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    }) \r\n     \r\n    const [colorSelect, setColorSelect] = React.useState(props.data.classes.color || 'inherit') \r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit') \r\n\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [items, setItems] = React.useState(props.data.items || [])\r\n    const [itemsPadding, setItemsPadding] = React.useState(props.data.itemsStyle.paddingBottom || [])\r\n    const [itemsListStyle, setItemsListStyle] = React.useState(props.data.itemsStyle.listStyle || 'decimal')\r\n    const [newItem, setNewItem] = React.useState('') \r\n\r\n    const mobileMarginTopComputed = margin.top === 0 ? 0 : (margin.top > 30 ? margin.top*0.6 : 15)\r\n    const mobileMarginBottomComputed = margin.bottom === 0 ? 0 : (margin.bottom > 30 ? margin.bottom*0.6 : 15)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { mtView, mbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({ \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }   \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n            movingPageBtn: {  \r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = {  \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        paddingLeft: paddingLeft,  \r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight \r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.itemsStyle = {\r\n            paddingBottom: itemsPadding, \r\n            listStyle: itemsListStyle\r\n        }\r\n        sentData.items = items\r\n        if(colorSelect === 'custom') {\r\n            sentData.classes.color = colorCustom\r\n        } else {\r\n            sentData.classes.color = colorSelect\r\n        }\r\n \r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleItemChange = (value, index) => {\r\n        let newItems = items.slice()\r\n        newItems[index] = value\r\n        setItems(newItems)\r\n        setIsDisableBtn(false)\r\n    }\r\n    const swapItem = (direction, index) => {\r\n        let newItems = items.slice() \r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex - 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex + 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const deleteItemList = (index) => { \r\n        let conf = window.confirm(\"Delete item?\");\r\n        if(conf) {\r\n            let newItems = items.slice()\r\n            newItems.splice(index, 1)\r\n             \r\n            setItems(newItems) \r\n            setIsDisableBtn(false)\r\n        } \r\n    } \r\n    const handleAddItem = () => {\r\n        let newItems = items.slice()\r\n        \r\n        newItems.push(newItem)\r\n \r\n        setItems(newItems)\r\n        \r\n        setNewItem('') \r\n        setIsDisableBtn(false)\r\n    } \r\n    const swapList = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } List Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>\r\n                                        <p>\r\n                                            MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                            MarginBottom: <b>{mobileMarginBottomComputed}</b> \r\n                                        </p> \r\n                                        <p>PaddingLeft:  <b>{paddingLeft === 0 ? 0 : (paddingLeft > 30 ? paddingLeft*0.6 : 15)}</b></p>\r\n                                    </Box>\r\n                                </Box> \r\n                            </Tooltip> \r\n                               \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>  \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Block Padding Left\" \r\n                                            variant='filled'\r\n                                            value={paddingLeft}\r\n                                            setValue={setPaddingLeft}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Item Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={itemsPadding}\r\n                                            setValue={setItemsPadding}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                </Box>\r\n                                 \r\n                            </Box>\r\n                           \r\n                                     \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup} mt={2}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl> \r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">List Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={itemsListStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setItemsListStyle((e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={'circle'}>Circle</MenuItem>\r\n                                            <MenuItem value={'disc'}>Disc</MenuItem>\r\n                                            <MenuItem value={'square'}>Square</MenuItem>\r\n                                            <MenuItem value={'decimal'}>Numbers</MenuItem>\r\n                                            <MenuItem value={'lower-alpha'}>lower-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-alpha'}>upper-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-roman'}>upper-roman</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n \r\n                                       \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >\r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"left\"\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n\r\n                            {/* items */}\r\n                            <Box className={classes.inputGroup} mt={3}>  \r\n                                {\r\n                                    items.map( (item, index) => {\r\n                                        return (\r\n                                            <Box key={index} display={'flex'} alignItems='flex-start' p={1} > \r\n                                                <InputChange\r\n                                                    id={index}\r\n                                                    fullWidth={true}\r\n                                                    multiline={true}\r\n                                                    type='text'\r\n                                                    size=\"small\" \r\n                                                    label={`Item ${index+1}`} \r\n                                                    variant='outlined'\r\n                                                    value={item}\r\n                                                    setValue={handleItemChange}\r\n                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                />  \r\n                                                <Box mr={0.5} />\r\n                                                <ButtonGroup \r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingPageBtn}\r\n                                                    >  \r\n                                                        {\r\n                                                            items.indexOf(item) !== 0 &&\r\n                                                            <Tooltip title='Get Up' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('up', index) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                        {\r\n                                                            items.indexOf(item) !== items.length - 1 &&\r\n                                                            <Tooltip title='Get Down' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('down', index) }} \r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                            \r\n                                                        <Tooltip title='Delete Item' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"secondary\"\r\n                                                                disableElevation={true} \r\n                                                                onClick={() => { deleteItemList(index) }}\r\n                                                            > \r\n                                                                <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup> \r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                } \r\n                                <Box px={1}>\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='text'\r\n                                        label={`New Item`} \r\n                                        variant=\"outlined\" \r\n                                        size='small'  \r\n                                        value={newItem}\r\n                                        onChange={ (e) => {setNewItem(e.target.value)} }     \r\n                                    />\r\n                                    <Box my={1}>\r\n                                        <Button \r\n                                            onClick={handleAddItem}\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            disabled={newItem.length > 0 ? false : true}\r\n                                        >\r\n                                            Add new item\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box mt={5} />\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` list margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` list margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                               \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}   \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                            \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete List\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes}  \r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n \r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor) \r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }}   \r\n        })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren.length !== 0 ? props.textChildren : '(No text - paragraph)'\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    ButtonGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent') \r\n\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)     \r\n\r\n        const { menu, menuTitle, responseValues, responseMobile, dialogContentUnstyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right, \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n      \r\n     \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)   \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)   \r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />     \r\n                            </Box>  \r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>   \r\n                                    <p>Paragraph don`t have any response values</p>   \r\n                                </Box>\r\n                            </Box>\r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >   \r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                        isContrastSelect={true} \r\n                                    />  \r\n                                    {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                                </Box> \r\n                                    \r\n                            </Box>\r\n\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                            </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                              \r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box> */}\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        let  imageBorderColor = getColorByPalette(theme, props.imageClassName.borderColor)\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} , \r\n            imageStyle: props.imageClassName ? {...props.imageClassName, ...{ \r\n                borderColor: imageBorderColor\r\n            }} : {} ,  \r\n            imageStabilization: {\r\n                maxWidth: '100%', \r\n                maxHeight: '100%',  \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    height: 'auto'\r\n                }, \r\n                // [theme.breakpoints.down('md')]: { \r\n                // }\r\n            },\r\n            mobileClass: {\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    textAlign: 'center', \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5,\r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n            }\r\n          })\r\n    }); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={`${classes.imageStyle} ${classes.imageStabilization}`}  alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    ButtonGroup, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { removeImage } = React.useContext(ImageContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit') \r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent') \r\n    const [imageBorderColorSelect, setImageBorderColorSelect] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderColorCustom, setImageBorderColorCustom] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n  \r\n    // eslint-disable-next-line\r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageName, setImageName] = React.useState(props.data.image.imageName || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n     \r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n \r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    const imageBorderTheme = isNoThemeColor(props.data.image.classes.borderColor)\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        if(imageBorderTheme) {  \r\n            setImageBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor, props.data.image.classes.borderColor ]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.bottom * 0.5}px`,  \r\n                        height: `${margin.bottom * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,   \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }, \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius,  \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n   \r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl,\r\n            imageName: imageName\r\n        })\r\n        if (imageBorderColorSelect === 'custom') { sentData.classes.borderColor = imageBorderColorCustom } \r\n        else { sentData.classes.borderColor = imageBorderColorSelect }\r\n\r\n\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) { \r\n            removeImage(imageName)\r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }\r\n     \r\n    \r\n    const handleImageUpload = async (e) => { \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n        \r\n        setIsLoading(false) \r\n    }\r\n\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Image Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />   \r\n                            </Box> \r\n\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>   \r\n                                        <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p> \r\n                                        <p>flexDirection: <b> column</b>; alignItems: <b>center</b> </p>  \r\n                                        <p>TextAlign:  <b>center</b> </p>     \r\n                                    </Box>\r\n                                </Box>\r\n                            </Tooltip> \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageUpload} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <InputChange\r\n                                                    id={null} \r\n                                                    fullWidth={true}\r\n                                                    type='text'\r\n                                                    size=\"small\" \r\n                                                    label=\"Image title\" \r\n                                                    variant='filled'\r\n                                                    value={imageTitle}\r\n                                                    setValue={setImageTitle}\r\n                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                /> \r\n                                                 \r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Top'\r\n                                                variant='filled'\r\n                                                value={imageMargin.top}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={imageMargin.bottom}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Left'\r\n                                                variant='filled'\r\n                                                value={imageMargin.left}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Right'\r\n                                                variant='filled'\r\n                                                value={imageMargin.right}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Typography variant={'caption'} display='block' align={\"center\"} color={'error'}>\r\n                                        !! set only width, height will set auto\r\n                                    </Typography>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Width'\r\n                                                variant='filled'\r\n                                                value={imageWidth}\r\n                                                setValue={setImageWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Height'\r\n                                                variant='filled'\r\n                                                value={imageHeight}\r\n                                                setValue={setImageHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} > \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={imageBorderColorSelect} \r\n                                                setColorSelect={setImageBorderColorSelect}\r\n                                                colorCustom={imageBorderColorCustom}\r\n                                                setColorCustom={setImageBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={imageBorderRadius}\r\n                                                setValue={setImageBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={imageBorderWidth}\r\n                                                setValue={setImageBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                             \r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                 \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                        isContrastSelect={true} \r\n                                    />  \r\n                                    {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            \r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            F = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                                 \r\n\r\n\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            \r\n                            <Box mt={5} />\r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                 */}\r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer } onClick={handleOpen}>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem } \r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n  \r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ListCreator from '../list/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n \r\n    console.log('dumb container work') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.classes.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.classes.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.classes.borderColor)\r\n\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n             myClassName: {...props.classes, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor \r\n            }} ,   \r\n            styleClass: { \r\n                [`@media (max-width: 960px)`]: { \r\n                    marginTop: props.classes.marginTop*0.8,\r\n                    marginBottom: props.classes.marginBottom*0.8, \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    marginTop: props.classes.marginTop*0.5,\r\n                    marginBottom: props.classes.marginBottom*0.5,  \r\n                },\r\n            },\r\n            noPadding : { \r\n                paddingTop: 0,  \r\n                paddingBottom: 0,\r\n                [`@media (max-width: 960px)`]: {  \r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                },\r\n            },\r\n            yesPadding : { \r\n                paddingTop: props.classes.paddingTop,  \r\n                paddingBottom: props.classes.paddingBottom,\r\n                [`@media (max-width: 960px)`]: {  \r\n                    paddingTop: props.classes.paddingTop*0.8,\r\n                    paddingBottom: props.classes.paddingBottom*0.8,\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    paddingTop: props.classes.paddingTop*0.5,\r\n                    paddingBottom: props.classes.paddingBottom*0.5,\r\n                },\r\n            }, \r\n        })\r\n    });\r\n    const classes = useStyles(); \r\n\r\n    const isPaperClassForContainer = props.settings.isPaper ? classes.noPadding : classes.yesPadding\r\n    const isPaperClassForPaper = props.settings.isPaper ? classes.yesPadding : classes.noPadding\r\n    \r\n    const renderItems = () => { \r\n        return (\r\n            modeDev ?\r\n            props.data.children.map((item) => {   \r\n                // eslint-disable-next-line\r\n                let orderFirst = props.data.children.indexOf(item) == 0 ? true : false\r\n                // eslint-disable-next-line\r\n                let orderLast = props.data.children.indexOf(item) == props.data.children.length - 1 ? true : false\r\n\r\n                switch(item.type) {  \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens} \r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )\r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )  \r\n                    default: break;\r\n                }  \r\n                return null\r\n            })\r\n            :\r\n            props.data.children.map((item) => {  \r\n                switch(item.type) { \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    default: break;\r\n                }  \r\n                return null\r\n            }) \r\n        )\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                > \r\n                    <Paper style={{paddingLeft: 15, paddingRight: 15}} className={isPaperClassForPaper}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={props.settings.innerContainer}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={props.settings.innerContainer}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                 { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\nimport ImageContext from '../../../context/imageContext/ImageContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    const {removeImage} = React.useContext(ImageContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n             \r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    zIndex: 25,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n\r\n            \r\n\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => { \r\n\r\n        let filtered = props.data.children.filter((item) => (item.id !== id))   \r\n        // save in firestore \r\n        props.reSaveContainer(props.data.id, filtered)   \r\n    }\r\n\r\n    const handleClose =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) {\r\n            let images = createArrayImages() \r\n            images.forEach( imageName => {\r\n                removeImage(imageName)\r\n            })\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    const swapChildrens = (direction, id) => {  \r\n\r\n        let newChildren = props.data.children.slice() \r\n        let activeIndex  \r\n        newChildren.map( (item) => { \r\n            if(item.id === id) {\r\n              activeIndex = newChildren.indexOf(item) \r\n            }\r\n            return 0 \r\n        }) \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newChildren.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex - 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex + 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex + 1 ] = movedItem  \r\n        } \r\n \r\n        props.reSaveContainer(props.data.id, newChildren)\r\n    }\r\n\r\n    const createArrayImages = () => {\r\n        let images = []\r\n        props.data.children.forEach( item => {\r\n            if(item.type === 'paragraphImage') {\r\n                images.push(item.image.imageName)\r\n            }\r\n        })\r\n        return images\r\n    }\r\n    createArrayImages()\r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleClose} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        handleClose={handleClose}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                        swapChildrens={swapChildrens}\r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, { useState, useContext} from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, darken, fade, lighten } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { PhoneValidation} from '../../functions/formValidation'\r\nimport InputMaskPhone from '../../functions/InputMaskPhone'\r\n\r\nimport ValidationChip from '../../placeholders/ValidationChip'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests, validationSettings } = useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = useState(false)\r\n    const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput, inValidColor\r\n  \r\n    \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n    \r\n    const useStyles = makeStyles( (theme) => { \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n        inValidColor = getColorByPalette(theme, validationSettings.color) \r\n          \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput, \r\n                    background: fade(colorFocusInput, 0.07),\r\n                    \"&:hover\": {\r\n                        background: fade(colorFocusInput, 0.07), \r\n                    },\r\n                }, \r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                }\r\n            },\r\n            inValidInput: {\r\n                borderColor: lighten(inValidColor, 0.2),\r\n                background: fade(inValidColor, 0.15), \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } ,\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('md')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 30),\r\n                }\r\n            }\r\n        } )\r\n    })\r\n \r\n    \r\n    const classes = useStyles() \r\n     \r\n \r\n    const handleSubmit = (event) => {\r\n        \r\n        event.preventDefault() \r\n          \r\n        const valphone = PhoneValidation(formPhone)  \r\n        if(valphone.isValid) {\r\n            const sendForm = {\r\n                phone: formPhone,\r\n                place: 'main page',  \r\n                isCheck: false\r\n            }\r\n    \r\n            sendRequests(sendForm)\r\n            \r\n            setIsDisableBtn(false) \r\n            setFormPhone('')\r\n        } else {\r\n            setIsValidPhone(valphone)\r\n        }\r\n        \r\n    }\r\n    const handleChangePhone = (value) => {\r\n        setFormPhone(value) \r\n        setIsValidPhone({isValid: true})\r\n    }\r\n    const handleCloseValidationChip = (place) => { \r\n        if(place === 'phone') setIsValidPhone({isValid: true})\r\n      }\r\n    return (\r\n        <div className={`bulder-main-banner ${classes.styleClass}`}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={7} >\r\n                        <div className=\"bulder-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                {\r\n                                    titleSubIcon &&\r\n                                    <svg style={{fill: '#fff'}}>       \r\n                                        <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                    </svg>\r\n                                }\r\n                                \r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"bulder-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"bulder-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            {\r\n                                                !isValidPhone.isValid && \r\n                                                <ValidationChip \r\n                                                    isValid={isValidPhone.isValid} \r\n                                                    handleClose={handleCloseValidationChip}\r\n                                                    place={'phone'}\r\n                                                    absolute={true} \r\n                                                    closeOnFirstClick={true}\r\n                                                />\r\n                                            }\r\n                                            \r\n                                            <InputMaskPhone \r\n                                                placeholder={`${inputLabel}`}   \r\n                                                className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                                                value={formPhone}\r\n                                                setValue={handleChangePhone}\r\n                                            /> \r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} > \r\n                        <div className=\"bulder-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'    \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const { removeImage } = React.useContext(ImageContext)\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n    const [iconName, setIconName] = React.useState(props.data.headingIcon.iconName || '')\r\n \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 40)\r\n    const tabletMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50)\r\n    const tabletMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, dialogContentUnstyle, \r\n            responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${tabletMarginTopComputed}px`,  \r\n                        height: `${tabletMarginTopComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px `,  \r\n                        height: `${mobileMarginTopComputed}px `,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`,  \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${tabletMarginBottomComputed}px`,  \r\n                        height: `${tabletMarginBottomComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px `,  \r\n                        height: `${mobileMarginBottomComputed}px `,\r\n                    }\r\n                } \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleImageUpload = async (e, imageType) => {  \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        if( imageType === 'mainImage')  { \r\n            removeImage(imageName)   \r\n        }\r\n        if( imageType === 'icon') {\r\n            removeImage(iconName)   \r\n        }\r\n \r\n          \r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        if( imageType === 'mainImage')  { \r\n            setImageName(generateImageName)\r\n            setImageUrl(downloadURL)  \r\n        }\r\n        if( imageType === 'icon') {\r\n            setIconName(generateImageName)\r\n            setIconUrl(downloadURL)\r\n        }\r\n          \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl,\r\n            iconName : iconName\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) { \r\n            removeImage(imageName) \r\n            removeImage(iconName) \r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Main Banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Main Banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                                <TabletMacIcon/>\r\n                                                <Box>   \r\n                                                    <p> \r\n                                                        MarginTop: <b>{tabletMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{tabletMarginBottomComputed}</b> \r\n                                                    </p>     \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button color='primary' variant={'contained'} className={classes.btnWithLabel} > \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            {\r\n                                                iconUrl &&\r\n                                                <Box ml={1}>\r\n                                                    <img src={iconUrl} alt='icon' width={35} />\r\n                                                </Box>\r\n                                            }\r\n                                            \r\n                                        </Box> \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Sub Heading'\r\n                                            variant='outlined'\r\n                                            value={subHeading}\r\n                                            setValue={setSubHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                         \r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >  \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Input Label\" \r\n                                                variant='outlined'\r\n                                                value={inputLabel}\r\n                                                setValue={setInputLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Button Label\" \r\n                                                variant='outlined'\r\n                                                value={buttonLabel}\r\n                                                setValue={setButtonLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Form Policy\" \r\n                                            variant='outlined'\r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />   \r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Form and SubHeading'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'>  \r\n                                            <Button color='primary' variant='contained' className={classes.btnWithLabel} > \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        {\r\n                                            imageUrl &&\r\n                                            <Box ml={1} maxWidth={300}>\r\n                                                <img src={imageUrl} alt='main' width={'100%'} />\r\n                                            </Box>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n  \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className={`${classes.styleClass} bulder-accordion heading`}>\r\n            <Container maxWidth={maxWidthContainer} className={classes.disableMobileGutters}>\r\n\r\n                {\r\n                    heading.length > 0 &&\r\n                    <h3> { heading } </h3> \r\n                }\r\n                \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"bulder-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"bulder-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemBody, setNewItemBody] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemBody)\r\n        setNewItemTitle('')\r\n        setNewItemBody('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} mt={3} mb={2}>\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new item</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item head\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item body\" \r\n                            variant=\"outlined\" \r\n                            value={newItemBody}\r\n                            onChange={(e) => { setNewItemBody(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Item\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter' \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n \r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\" \r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg')\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        \r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, dialogContentUnstyle, \r\n            containerWrapper, responseValues ,responseMobile , mobileTooltip \r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   } ,\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItemHead = (head, index) => { \r\n        const newItems = items.slice()\r\n        newItems[index].head = head \r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const handleUpdateItemBody = (body, index) => { \r\n        const newItems = items.slice() \r\n        newItems[index].body = body\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = (head, body) => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: head,\r\n            body: body\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const conf = window.confirm('Delete item?')\r\n        if(conf) {\r\n            const newItems = items.slice()\r\n            newItems.splice(index, 1) \r\n    \r\n            setItems(newItems)\r\n            setIsDisableBtn(false); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}> \r\n            <Tooltip  title={`accordion margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`accordion margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >   \r\n                <Box className={classes.btnDrawerStyle}> \r\n\r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Accordion Settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                             \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={2}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                                \r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label='Head'\r\n                                                            variant='outlined'\r\n                                                            value={item.head}\r\n                                                            setValue={handleUpdateItemHead}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />\r\n                                                        <Box mt={1} />\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label='Body'\r\n                                                            variant='outlined'\r\n                                                            value={item.body}\r\n                                                            setValue={handleUpdateItemBody}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        /> \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <AddItem addItem={addItem} />\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Accordion'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />\r\n                                    </Box>\r\n \r\n                                    <Box mt={5} />  \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                     \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","export const Location = () => (\r\n    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 511.999 511.999\" style={{enableBackground: 'new 0 0 511.999 511.999'}} xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n            <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                    c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                    c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                    M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                    S306.457,272.806,255.999,272.806z\" />\r\n            </g>\r\n        </g> \r\n    </svg>\r\n\r\n) ","export const Phone = () => ( \r\n    <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n    <g>\r\n        <g>\r\n        <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n        </g>\r\n    </g> \r\n    </svg> \r\n)","import React, {useState, useContext} from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box, darken, fade, lighten } from '@material-ui/core'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation' \r\nimport { NameValidation, PhoneValidation} from '../../functions/formValidation'\r\nimport InputMaskPhone from '../../functions/InputMaskPhone' \r\nimport ValidationChip from '../../placeholders/ValidationChip'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\n\r\nimport {Location} from '../../../assets/icons/location.js'\r\nimport {Phone} from '../../../assets/icons/phone.js'\r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests, validationSettings } = useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = useState('')\r\n    const [formName, setFormName] = useState('')\r\n    const [formComment, setFormComment] = useState('')\r\n\r\n    const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n    const [isValidName, setIsValidName] = useState({isValid: true})\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload  \r\n    let color = props.data.color || 'primary'\r\n    let colorFocusInput, inValidColor\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n        inValidColor = getColorByPalette(theme, validationSettings.color) \r\n \r\n        return ({\r\n            svg: {\r\n                fill: colorFocusInput, \r\n                marginRight: 15,\r\n                maxWidth: 25,\r\n                minWidth: 25,\r\n                height: 25,\r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '& svg': {\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                }\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`,  \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput, \r\n                    background: fade(colorFocusInput, 0.07), \r\n                    \"&:hover\": {\r\n                        background: fade(colorFocusInput, 0.07), \r\n                    },\r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n            },\r\n            inValidInput: {\r\n                borderColor: lighten(inValidColor, 0.2),\r\n                background: fade(inValidColor, 0.15), \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n            },\r\n            button: {\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                color: '#fff',\r\n                 \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${color} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }, \r\n            styleClass: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),  \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),  \r\n                }\r\n            }, \r\n            validationChipsContainer: {\r\n                display: 'flex', \r\n                [theme.breakpoints.down('sm')]: {\r\n                    flexDirection: 'column',\r\n                    '& >*' : {\r\n                        marginLeft: 0, \r\n                        marginTop: `0px !important`\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n        const valphone = PhoneValidation(formPhone) \r\n        const valname = NameValidation(formName) \r\n    \r\n        if(valphone.isValid && valname.isValid) {\r\n            const sendForm = {\r\n                phone: formPhone,\r\n                name: formName, \r\n                comment: formComment,\r\n                place: 'contact',  \r\n                isCheck: false\r\n            }\r\n    \r\n            sendRequests(sendForm)\r\n            \r\n            setFormPhone('')\r\n            setFormName('')\r\n            setFormComment('')\r\n        } else {\r\n            setIsValidName(valname)\r\n            setIsValidPhone(valphone)\r\n        } \r\n    }\r\n    const handleChangePhone = (value) => {\r\n        setFormPhone(value) \r\n        setIsValidPhone({isValid: true})\r\n    }\r\n    const handleChangeName = (value) => {\r\n        setFormName(value) \r\n        setIsValidName({isValid: true})\r\n    }\r\n\r\n    const handleCloseValidationChip = (place) => {\r\n        if(place === 'name') setIsValidName({isValid: true})\r\n        if(place === 'phone') setIsValidPhone({isValid: true})\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className={`bulder-contact ${classes.styleClass}`}> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`bulder-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <div className={classes.svg} > \r\n                                                <Location/>\r\n                                            </div>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\" >\r\n                                            <div className={classes.svg}> \r\n                                                 <Phone/>\r\n                                            </div>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <Box className={classes.validationChipsContainer}> \r\n                                            {\r\n                                                !isValidName.isValid &&\r\n                                                <Box flexGrow={1}  >\r\n                                                    <ValidationChip  \r\n                                                        isValid={isValidName.isValid} \r\n                                                        handleClose={handleCloseValidationChip}\r\n                                                        place={'name'}\r\n                                                        absolute={false}\r\n                                                        style={{marginTop: 0}}\r\n                                                        closeOnFirstClick={true}\r\n                                                    />\r\n                                                </Box>\r\n                                            } \r\n                                            {\r\n                                                !isValidPhone.isValid &&\r\n                                                <Box flexGrow={1} ml={2}>\r\n                                                    <ValidationChip  \r\n                                                        isValid={isValidPhone.isValid}  \r\n                                                        handleClose={handleCloseValidationChip}\r\n                                                        place={'phone'}\r\n                                                        absolute={false}\r\n                                                        style={{ marginTop: 0 }}\r\n                                                        closeOnFirstClick={true}\r\n                                                    />\r\n                                                </Box>\r\n                                            } \r\n                                        </Box>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName}  \r\n                                                    className={`${classes.input} ${!isValidName.isValid && classes.inValidInput}`} \r\n                                                    value={formName}\r\n                                                    onChange={e => {handleChangeName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <InputMaskPhone \r\n                                                    placeholder={`${inputPhone}`}  \r\n                                                    className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                                                    value={formPhone}\r\n                                                    setValue={handleChangePhone}\r\n                                                /> \r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"bulder-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, \r\n    ButtonGroup, makeStyles, Modal, DialogContent, Switch, \r\n    FormControlLabel, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) { \r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.mapFrame === null ? false : true)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.color])\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n        \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData)  \r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Contact Map margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Contact Map margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Contacts Map Settings  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p>  \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                         \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Location'\r\n                                            variant='outlined'\r\n                                            value={location}\r\n                                            setValue={setLocation}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Phone'\r\n                                            variant='outlined'  \r\n                                            value={phone}\r\n                                            setValue={setPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} > \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Comment Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputComment}\r\n                                            setValue={setInputComment}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >       \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                  \r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={true} \r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Map Frame\" \r\n                                                        variant='outlined'  \r\n                                                        value={mapFrame}\r\n                                                        setValue={setMapFrame}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />  \r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button and Inputs'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n  \r\n                                    <Box my={5} />\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, darken, fade } from '@material-ui/core'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext' \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext) \r\n      \r\n    const imageUrl = props.data.image\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    // let imageName = props.data.imageName\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    let colorButton = props.data.colorButton || '#f00'\r\n   \r\n    const useStyles = makeStyles((theme) => {   \r\n\r\n        colorButton = getColorByPalette(theme, colorButton) \r\n\r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(colorButton, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth={maxWidthContainer} >\r\n                <div className={`${classes.styleClass} bulder-about heading`}>\r\n                    <Grid container> \r\n                        <Grid item xs={12} md={6} >\r\n                            <div className=\"bulder-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"bulder-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers' \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n      \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorButton)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem,  dialogContentUnstyle, \r\n            containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip\r\n        } = commonClasses \r\n\r\n        \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave, \r\n            btnWithLabel: btnWithLabel,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n  \r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => { \r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf)  {\r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n           \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`about margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`about margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }  Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />   \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />  \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'right'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { darken, fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n  \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        colorMain = getColorByPalette(theme, colorMain) \r\n \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorMain, 0.5) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    paddingTop: \".4em\",\r\n                    paddingBottom: \".4em\",\r\n                    '&:hover' : {\r\n                        backgroundColor: colorMain , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorMain, 0.3) ,  \r\n                    }\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0),  \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            },\r\n            styleClass: {\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={`${classes.containerColored} ${classes.styleClass}`}> \r\n            <Container maxWidth={maxWidthContainer} > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorMain)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, dialogContentUnstyle,\r\n            btnDrawerItem, containerWrapper , responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Action Line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Action Line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Action Line \r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Heading Size\"\r\n                                                variant='outlined'\r\n                                                value={headingSize}\r\n                                                setValue={setHeadingSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>{ headingSize*0.65 }</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n \r\n                                    </Box>\r\n                                   \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                            <ColorSelecter\r\n                                                label={'Color for Block'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'top'}\r\n                                                noInherit={true}\r\n                                            />\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />   \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React , {useState} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box    \r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const tableMinWidth = props.data.tableMinWidth\r\n    const isButton = props.data.isButton\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isButtonShowMore = rows.length - visibleRows > 0 ? true : false  \r\n    const [isButtonClick, setIsButtonClick] = useState(false)\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        \r\n        mainColor = getColorByPalette(theme, mainColor)\r\n \r\n        return ({\r\n            table: { \r\n                minWidth: tableMinWidth,\r\n            },\r\n            \r\n            tableCell: {\r\n                paddingTop: theme.spacing(2), \r\n                paddingBottom: theme.spacing(2),  \r\n                [theme.breakpoints.down('md')]: { \r\n                    paddingTop: theme.spacing(1), \r\n                    paddingBottom: theme.spacing(1), \r\n                },\r\n            },\r\n            tableButtonCell: { \r\n                maxWidth: 300,\r\n                width: 300,\r\n                [theme.breakpoints.down('md')]: {\r\n                    width: 'auto', \r\n                },\r\n            },\r\n            tableButton: { \r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                fontSize: 14, \r\n                lineHeight: 1.2, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    padding: theme.spacing(1), \r\n                },\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsButtonClick(!isButtonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(isButtonClick)\r\n            return (\r\n                rows.map((row, index) => { \r\n                    return (\r\n                        OnceRow(row, index)\r\n                    )\r\n                })\r\n            )\r\n        else\r\n            return (\r\n                rows.map((row, index) => {\r\n                    if(index < visibleRows)\r\n                    return (\r\n                        OnceRow(row, index)\r\n                    )\r\n                    return false\r\n                })\r\n            )\r\n       \r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true}  >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableCell}>\r\n                {row.price}\r\n            </TableCell> \r\n            {\r\n                isButton && \r\n                <TableCell align=\"right\" className={`${classes.tableButtonCell} ${classes.tableCell}`}> \r\n                    <Button \r\n                        variant='contained'   \r\n                        className={classes.tableButton}\r\n                        onClick={() => { handleOpenModal(row.name) }}\r\n                    >\r\n                        { buttonText }\r\n                    </Button>\r\n                </TableCell>\r\n            }\r\n        </StyledTableRow> \r\n    )\r\n    const renderButton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isButtonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth={maxWidthContainer} className={`${classes.tableContainer} heading`} >\r\n            {\r\n                heading.length > 0 &&\r\n                <h3> { heading } </h3> \r\n            }\r\n            <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead> \r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={`${classes.tableHeader} ${classes.tableCell}` }\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            {\r\n                                isButton &&\r\n                                <TableCell align=\"right\" className={`${classes.tableHeader} ${classes.tableCell}` } ></TableCell>\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    \r\n                        <TableBody>\r\n                            {\r\n                                renderRows()\r\n                            }\r\n                        </TableBody> \r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isButtonShowMore &&\r\n                renderButton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemPrice, setNewItemPrice] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemPrice)\r\n        setNewItemTitle('')\r\n        setNewItemPrice('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new row</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item title\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item price\" \r\n                            variant=\"outlined\" \r\n                            value={newItemPrice}\r\n                            onChange={(e) => { setNewItemPrice(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Row\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n    FormControlLabel, \r\n    Switch, \r\n    IconButton\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    const [rows, setRows] = React.useState(props.data.rows)\r\n    const [tableRow, setTableRow] = React.useState(props.data.tableRow)\r\n\r\n    const [tableMinWidth, setTableMinWidth] = React.useState(props.data.tableMinWidth || 200 )\r\n\r\n    const [visibleRows, setVisibleRows] = React.useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = React.useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = React.useState(props.data.visibleBottonTextClick || 'Show less') \r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper ,\r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle} = commonClasses   \r\n\r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,  \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading \r\n        newData.tableMinWidth = tableMinWidth \r\n        newData.isButton = isButton \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeTable = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleTableHeadChange = (value, index) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChangeName = (name, index) => {\r\n        const newRows = rows.slice() \r\n        newRows[index].name = name \r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const handleRowChangePrice = (price, index) => {\r\n        const newRows = rows.slice() \r\n        newRows[index].price = price\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false);  \r\n    }\r\n    const addRow = (title, body) => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: title, \r\n            price: body \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Table margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Table margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        \r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    <Box my={2} display={'flex'}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box flexGrow={1}> \r\n                                                    <InputChange\r\n                                                        id={null} \r\n                                                        fullWidth={true}\r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Text for Button\"\r\n                                                        variant='outlined'\r\n                                                        value={textButton}\r\n                                                        setValue={setTextButton}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box my={3} display='flex' alignItems='center'>\r\n                                        <Box mr={1}> \r\n                                            <Tooltip  title=\"The table will scroll horizontally with a smaller width\" >\r\n                                                <IconButton className={classes.warningBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            fullWidth={true}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Table Min Width\"\r\n                                            variant='outlined'\r\n                                            value={tableMinWidth}\r\n                                            setValue={setTableMinWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <InputChange\r\n                                                            id={index} \r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item}\r\n                                                            setValue={handleTableHeadChange}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n  \r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Row' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Row Name ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item.name}\r\n                                                            setValue={handleRowChangeName}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                        <Box mr={1} />\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={false}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Row Price ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item.price}\r\n                                                            setValue={handleRowChangePrice}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                        {/* <ChangeItem handleRowChange={handleRowChange} item={item} index={index} /> */}\r\n\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n                                    \r\n                                    <AddItem addItem={addRow} />\r\n                                     \r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <ColorSelecter\r\n                                            label={'Color for Table'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label={`Quantity to show`}\r\n                                                variant='outlined'\r\n                                                value={visibleRows}\r\n                                                setValue={setVisibleRows}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label={`Text for botton`}\r\n                                                variant='outlined'\r\n                                                value={visibleBottonText}\r\n                                                setValue={setVisibleBottonText}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <InputChange\r\n                                            id={null}  \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label={`Text for botton clicked`}\r\n                                            variant='outlined'\r\n                                            value={visibleBottonTextClick}\r\n                                            setValue={setVisibleBottonTextClick}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                        \r\n                                    </Box>\r\n                                                \r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, { useState, useContext} from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, makeStyles, Button, Box, Grid, fade, darken, lighten } from '@material-ui/core'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport '../../../assets/style/lineForm.scss' \r\n\r\nimport ValidationChip from '../../placeholders/ValidationChip'\r\nimport {NameValidation, PhoneValidation} from '../../functions/formValidation'\r\nimport InputMaskPhone from '../../functions/InputMaskPhone'\r\n\r\nfunction DumbComponent(props) {  \r\n    const { sendRequests, validationSettings } = useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = useState('')\r\n    const [formName, setFormName] = useState('') \r\n    \r\n    const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n    const [isValidName, setIsValidName] = useState({isValid: true})\r\n   \r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone \r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n      \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    let color = props.data.color\r\n    let colorFocusInput, inValidColor\r\n  \r\n    const useStyles = makeStyles((theme) => {    \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n        inValidColor = getColorByPalette(theme, validationSettings.color) \r\n\r\n        return ({ \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper,  \r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            },\r\n            lineDecor: {\r\n                position: \"absolute\",\r\n                top: 8,\r\n                left: 8,\r\n                right: 8,\r\n                bottom: 8,\r\n                border: `1px solid ${fade(color, 0.25)}`,\r\n                borderRadius: 4,\r\n            },\r\n            input: {\r\n                width: '100%',\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: 'inherit',\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                height: 50,\r\n                paddingLeft: 45,\r\n                paddingRight: 25, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput,\r\n                    background: fade(colorFocusInput, 0.07), \r\n                    \"&:hover\": {\r\n                        background: fade(colorFocusInput, 0.07), \r\n                    },\r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center' ,\r\n                    paddingLeft: 20,\r\n                    paddingRight: 20, \r\n                }\r\n            },\r\n            inValidInput: {\r\n                borderColor: lighten(inValidColor, 0.2),\r\n                background: fade(inValidColor, 0.15), \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n            },\r\n            button: {\r\n                width: '100%',\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                height: 50,\r\n                textTransform: 'inherit', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \r\n                color: theme.palette.getContrastText(color),\r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: 0,  \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.getContrastText(theme.palette.background.paper),\r\n                    }\r\n                }, \r\n            }, \r\n            gridItem: {\r\n                position: 'relative',\r\n                paddingRight: theme.spacing(1), \r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginBottom: 10,  \r\n                }\r\n            },\r\n            gridValidation: {\r\n                position: 'relative', \r\n                height: 45, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    height: 35\r\n                }\r\n            },\r\n            policy: {\r\n                height: \"100%\", \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                fontSize: 12,\r\n                lineHeight: 1.2,\r\n                fontWeight: 300, \r\n                [theme.breakpoints.down('md')]: {\r\n                    marginTop: 10, \r\n                    textAlign: 'center', \r\n                    justifyContent: 'center'\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const valphone = PhoneValidation(formPhone) \r\n        const valname = NameValidation(formName) \r\n\r\n        if(valphone.isValid && valname.isValid) {\r\n            const sendForm = {\r\n                phone: formPhone,\r\n                name: formName,  \r\n                place: 'line Form',  \r\n                isCheck: false\r\n            }\r\n    \r\n            sendRequests(sendForm)\r\n            \r\n            setFormPhone('')\r\n            setFormName('')\r\n        } else {\r\n          setIsValidName(valname)\r\n          setIsValidPhone(valphone)\r\n        }\r\n         \r\n\r\n    }\r\n    const handleChangePhone = (value) => {\r\n        setFormPhone(value) \r\n        setIsValidPhone({isValid: true})\r\n      }\r\n      const handleChangeName = (value) => {\r\n        setFormName(value) \r\n        setIsValidName({isValid: true})\r\n      }\r\n    \r\n      const handleCloseValidationChip = (place) => {\r\n        if(place === 'name') setIsValidName({isValid: true})\r\n        if(place === 'phone') setIsValidPhone({isValid: true})\r\n      }\r\n    return ( \r\n        <div className={classes.itemBackground}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className=\"line-form\"> \r\n                    <Box className={classes.lineDecor} ></Box>\r\n                    {\r\n                        heading.length > 0 &&\r\n                        <h5>\r\n                            {heading}\r\n                        </h5>\r\n                    }\r\n                    {\r\n                        paragraph.length > 0 &&\r\n                        <p>\r\n                            {paragraph}\r\n                        </p>\r\n                    } \r\n\r\n                    <form onSubmit={handleSubmit} style={{position: 'relative', zIndex: 5}}>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}  >\r\n                            {\r\n                                !isValidName.isValid && \r\n                                <Box className={classes.gridValidation}>\r\n                                    <ValidationChip \r\n                                        isValid={isValidName.isValid}  \r\n                                        handleClose={handleCloseValidationChip}\r\n                                        place={'name'}\r\n                                        absolute={true} \r\n                                        closeOnFirstClick={true}\r\n                                        style={{width: 'calc(100% - 10px)', top: 'auto', bottom: 0}}\r\n                                    />\r\n                                </Box>\r\n                            }\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}  >\r\n                            {\r\n                                !isValidPhone.isValid && \r\n                                <Box className={classes.gridValidation}>\r\n                                    <ValidationChip  \r\n                                        isValid={isValidPhone.isValid}  \r\n                                        handleClose={handleCloseValidationChip}\r\n                                        place={'phone'}\r\n                                        absolute={true} \r\n                                        closeOnFirstClick={true}\r\n                                        style={{width: 'calc(100% - 10px)', top: 'auto', bottom: 0}}\r\n                                    />\r\n                                </Box>\r\n                                \r\n                            }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name={`name-${props.data.id}`}  \r\n                                    placeholder={inputName} \r\n                                    value={formName}\r\n                                    onChange={(e) => {handleChangeName(e.target.value)}} \r\n                                    className={`${classes.input} ${!isValidName.isValid && classes.inValidInput}`} \r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                 \r\n                                <InputMaskPhone \r\n                                    placeholder={`${inputPhone}`}   \r\n                                    className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                                    value={formPhone}\r\n                                    setValue={handleChangePhone}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4} lg={3} className={classes.gridItem}>\r\n                                <Button \r\n                                    type=\"submit\"\r\n                                    className={classes.button} \r\n                                >\r\n                                    <span>\r\n                                       { buttonText}\r\n                                    </span>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={3} >\r\n                                <span className={classes.policy}>\r\n                                    { policy }\r\n                                </span> \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                    </form>\r\n                </div> \r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, ButtonGroup, makeStyles, Modal, DialogContent, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n \r\n    const [heading, setHeading] = React.useState(props.data.heading || '')\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '') \r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom )\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if (colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.color])\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n     \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n         \r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, dialogContentUnstyle, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)  \r\n        newData.heading = heading \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone  \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy  \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Form line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Form line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Form Line Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Form line  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    \r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select> \r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                      \r\n                                    <Box mt={2} >   \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>  \r\n                                    <Box mt={2} >        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >      \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        />\r\n                                        \r\n                                    </Box>\r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }  \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState} from 'react'\r\n  \r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles, Typography, Container, Box, fade } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n\r\n    let history = useHistory();\r\n    \r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({  \r\n            swiper: {\r\n                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                    }\r\n                },  \r\n            },\r\n            activeSlide: {\r\n                cursor: 'pointer', \r\n                '&:hover': {\r\n                    '& $slideImg': {\r\n                        transform: \"scale(1.03)\"\r\n                    },\r\n                    '& $slideTitle': { \r\n                        backgroundColor: theme.palette.background.default\r\n                    },\r\n                }\r\n            }, \r\n            slide: {\r\n                position: 'relative',  \r\n                height: slideHeight,   \r\n                overflow: 'hidden',    \r\n            },\r\n            slideBox: {\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }, \r\n            slideImg: {\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n            },\r\n            slideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: '3vw', \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2), \r\n                borderBottom: `2px solid ${color}`,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 20\r\n                }\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 300, \r\n                    marginLeft: spaceBetween,\r\n                    marginRigth: spaceBetween,\r\n                    marginBottom: spaceBetween, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 0, \r\n                        marginRight: 0, \r\n                        maxWidth: '100%',   \r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n     \r\n  \r\n    React.useEffect(() => {   \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('swiper resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current.clientWidth\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n \r\n    const handleSlideClick = (slide) => {\r\n        if(slide.isButton) {\r\n            handleOpen(slide.targetButton)\r\n        }\r\n        if(slide.isUrl) {\r\n            history.push(`${slide.activePage.slug}`) \r\n        }\r\n    }\r\n\r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key} \r\n            ref={slideRef} \r\n            className={`${classes.slide} ${(slide.isButton || slide.isUrl) ? classes.activeSlide : '' } `}\r\n            onClick={() => { handleSlideClick(slide) }}\r\n        >\r\n            <Box className={classes.slideBox}>\r\n                <Box \r\n                    style={{backgroundImage: `url(${slide.imageUrl})`}}\r\n                    className={classes.slideImg}\r\n                />\r\n                {\r\n                    slide.title.length > 0 &&\r\n                    <Typography\r\n                        component='h6'\r\n                        className={classes.slideTitle}\r\n                    >\r\n                        {slide.title}\r\n                    </Typography>\r\n                }\r\n                \r\n            </Box>\r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,  \r\n    Typography, \r\n    makeStyles\r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newImageName, setNewImageName] = React.useState('')\r\n    const [newImageUrl, setNewImageUrl] = React.useState('')\r\n    const [newImageTitle, setNewImageTitle] = React.useState('')\r\n\r\n    const handleImageUpload = async (e) => { \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setNewImageUrl(downloadURL)\r\n        setNewImageName(generateImageName)   \r\n    }\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newImageUrl, newImageName, newImageTitle)\r\n        setNewImageName('')\r\n        setNewImageUrl('') \r\n        setNewImageTitle('') \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n            <Button color='primary' variant='contained' className={props.btnWithLabel}  >\r\n                <label htmlFor='image-input-label'>\r\n                    Set image\r\n                </label>\r\n                <input\r\n                    id=\"image-input-label\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {  handleImageUpload(e) }}\r\n                    style={{\r\n                    display: \"none\"\r\n                }}/>\r\n            </Button> \r\n            <Box ml={2} display='inline-block'>\r\n                <Typography variant='caption' > Image: { newImageName.replace(`-${props.id}`, '') }</Typography>\r\n            </Box>\r\n            <Box my={1}>\r\n                <TextField \r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Title'\r\n                    variant=\"outlined\"\r\n                    value={newImageTitle}\r\n                    onChange={(e) => { setNewImageTitle(e.target.value) }}\r\n                />\r\n                <Box my={1}>\r\n                    <Button\r\n                        disabled={newImageName !== '' ? false : true }\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useContext, useState, useEffect, memo} from 'react'\r\n\r\nimport {   \r\n    Box,   \r\n    FormControl, \r\n    InputLabel, \r\n    Select,  \r\n    MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nconst SelectPage = memo( ({value, setValue, index}) => {\r\n   \r\n    const { categories } = useContext(CategoryContext)\r\n\r\n    const [pages, SetPages] = useState([]) \r\n    const [selectValue, setSelectValue] = useState(value)\r\n\r\n    useEffect( () => {\r\n        createPages() \r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {\r\n        if(selectValue !== value && value !== null) {\r\n            setSelectValue(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const createPages = () => {\r\n        let pagesArray = []\r\n        categories.forEach( item => { \r\n            pagesArray.push(item)\r\n            if(item.pages.length > 0) {\r\n                item.pages.forEach( innerItem => {\r\n                    let page = JSON.parse(JSON.stringify(innerItem))\r\n                    page.categorySlug = item.slug\r\n                    pagesArray.push(page)\r\n                })\r\n            }\r\n        })\r\n        SetPages(pagesArray) \r\n    }\r\n    \r\n    const handleChange = (id) => { \r\n        const activePage = {\r\n            id: id\r\n        }\r\n        pages.forEach( page => {\r\n            if(page.id === id) {\r\n                activePage.title = page.title\r\n                activePage.slug = (page.type === 'page') ? (`/${page.categorySlug}/${page.slug}`) : (`/${page.slug}`)\r\n            }\r\n        })\r\n        setSelectValue(id) \r\n        if(index !== undefined) { \r\n            setValue(activePage, index)\r\n        }\r\n        else {\r\n            setValue(activePage)\r\n        }\r\n    }\r\n\r\n    const renderLinkList = () => { \r\n        return pages.map( link => {\r\n            switch(link.type) {\r\n                case('category') : {\r\n                    return <MenuItem key={link.id} value={link.id} >{link.title } - { link.slug}</MenuItem> \r\n                }\r\n                case('page'): {\r\n                    return <MenuItem key={link.id} value={link.id} >{link.title } - {`${link.categorySlug}/${link.slug}`}</MenuItem>\r\n                }\r\n                default: break;\r\n            } \r\n            return false\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <Box> \r\n            <FormControl \r\n                variant='filled' \r\n                size='small'    \r\n                // style={{width: '100%'}}\r\n                fullWidth\r\n            >\r\n                <InputLabel id={`url-pages`}>Choice page</InputLabel>\r\n                <Select\r\n                    labelId={`url-pages`}\r\n                    id=\"url-select\"\r\n                    value={selectValue}  \r\n                    fullWidth\r\n                    style={{maxWidth: '100%'}}\r\n                    onChange={(e) => { handleChange(e.target.value) }}\r\n                >   \r\n                    {\r\n                        renderLinkList()\r\n                    }\r\n                        \r\n                </Select>\r\n            </FormControl>\r\n        </Box> \r\n    )\r\n})\r\n\r\nexport default SelectPage\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent, \r\n    fade, \r\n    FormControlLabel, \r\n    Switch\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\nimport SelectPage from '../../functions/SelectPage';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const [imageForDelete, setImageForDelete] = React.useState([])\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-block', \r\n                width: 250, \r\n                height: 250, \r\n                position: 'relative', \r\n                \"& img\": {\r\n                    width: '100%', \r\n                    height: '100%'\r\n                },\r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: 14, \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2)\r\n            }, \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            reloadSettings: {\r\n                display: \"flex\", \r\n                alignItems: 'center', \r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                '&:hover': {\r\n                    borderColor: theme.palette.warning.light,  \r\n                    '& $warningBtn': {\r\n                        backgroundColor: theme.palette.warning.main,   \r\n                        '& svg': {\r\n                            fill: theme.palette.getContrastText(theme.palette.warning.main)\r\n                        }\r\n                    }\r\n                }\r\n                 \r\n            },\r\n            warningBtn: {\r\n                backgroundColor: theme.palette.divider, \r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.warning.light,\r\n                }\r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        if(imageForDelete.length > 0) {\r\n            imageForDelete.forEach( name => {\r\n                removeImage(name)\r\n            })\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n        setImageForDelete([])\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  { \r\n            let imgArray = []\r\n            slides.forEach( slide => {\r\n                if(slide.imageName !== 'ImageExample') imgArray.push(slide.imageName)\r\n            })\r\n            if(imgArray.length > 0) {\r\n                imgArray.forEach( name => {\r\n                    removeImage(name)\r\n                })\r\n            }\r\n\r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideTitle = (title, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].title = title \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsUrl = (value, index) => { \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].isUrl = !value \r\n        newSlides[index].isButton = false \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeUrl = (activePage, index) => {  \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].activePage = activePage  \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsButton = (value, index) => { \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].isButton = !value \r\n        newSlides[index].isUrl = false\r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsButtonTarget = (value, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].targetButton = value \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false) \r\n    }\r\n\r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => {\r\n        const conf = window.confirm('Delete? ') \r\n        if(conf) {\r\n            const newImageForDelete = imageForDelete.slice()\r\n            const newSlides = slides.slice()\r\n            const deletedImageName = newSlides[index].imageName\r\n    \r\n            if(deletedImageName !== 'imageExample') newImageForDelete.push(deletedImageName)\r\n    \r\n            newSlides.splice(index, 1)\r\n            setSlides(newSlides)\r\n            setImageForDelete(newImageForDelete)\r\n            setIsDisableBtn(false) \r\n        }\r\n    }\r\n    const addSlide = ( url, name, title ) => {\r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            imageUrl: url, \r\n            imageName: name, \r\n            title: title, \r\n            isLink: false, \r\n            activePage: [],\r\n            isButton: false, \r\n            targetButton: \"\"\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {  \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>\r\n                    {\r\n                        !item.isUrl &&\r\n                        <React.Fragment>\r\n                            <FormControlLabel\r\n                                control={\r\n                                        <Switch checked = { item.isButton }\r\n                                            onChange = { () => {handleChangeIsButton(item.isButton, index)} }\r\n                                            name={`checkedB-${index}`} \r\n                                            color = \"primary\"\r\n                                        />\r\n                                    }\r\n                                label=\"Set Modal Button\"\r\n                            /> \r\n                            {\r\n                                item.isButton &&  \r\n                                <Box my={1}>  \r\n                                    <InputChange\r\n                                        id={index}\r\n                                        fullWidth={true}\r\n                                        type='text'\r\n                                        size=\"small\"  \r\n                                        label=\"Target for Modal\"\r\n                                        variant='outlined'\r\n                                        value={item.targetButton}\r\n                                        setValue={handleChangeIsButtonTarget}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    />  \r\n                                </Box> \r\n                            }\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        !item.isButton &&\r\n                        <React.Fragment>\r\n                            <FormControlLabel\r\n                                control={\r\n                                        <Switch checked = { item.isUrl }\r\n                                            onChange = { () => {handleChangeIsUrl(item.isUrl, index)} }\r\n                                            name={`checkedB-${index}`} \r\n                                            color = \"primary\"\r\n                                        />\r\n                                    }\r\n                                label=\"Set Link\"\r\n                            /> \r\n                            {\r\n                                item.isUrl &&  \r\n                                <Box my={1}>\r\n                                    <SelectPage value={item.activePage.id} setValue={handleChangeUrl} index={index} />\r\n                                </Box>\r\n                                // <Box my={1}> \r\n                                //     <FormControl \r\n                                //         variant='filled' \r\n                                //         size='small'    \r\n                                //         // style={{width: '100%'}}\r\n                                //         fullWidth\r\n                                //     >\r\n                                //         <InputLabel id={`url-${index}`}>Choice page</InputLabel>\r\n                                //         <Select\r\n                                //             labelId={`url-${index}`}\r\n                                //             id=\"url-select\"\r\n                                //             value={item.url}  \r\n                                //             fullWidth\r\n                                //             style={{maxWidth: '100%'}}\r\n                                //             onChange={(e) => {setIsDisableBtn(false); handleChangeUrl(e.target.value, index) }}\r\n                                //         >   \r\n                                //             {\r\n                                //                 renderLinkList()\r\n                                //             }\r\n                                             \r\n                                //         </Select>\r\n                                //     </FormControl>\r\n                                // </Box> \r\n                            }\r\n                        </React.Fragment>\r\n                    }\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box>\r\n                        <img src={item.imageUrl} alt={item.imageName}/>\r\n                        <Box className={classes.dumbSlideTitle}>  \r\n                            <InputChange\r\n                                id={index}\r\n                                fullWidth={true}\r\n                                type='text'\r\n                                size=\"small\"  \r\n                                variant='outlined'\r\n                                value={item.title}\r\n                                setValue={handleSlideTitle}\r\n                                setIsDisableBtn={setIsDisableBtn} \r\n                            /> \r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n\r\n     \r\n      \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Swiper margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Swiper margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Swiper Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Swiper\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    \r\n                                    <Box className={classes.reloadSettings}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.warningBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Arrows'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} btnWithLabel={classes.btnWithLabel} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Container, Grid, Box, Button, darken, fade } from '@material-ui/core'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading  \r\n    const paragraph = props.data.paragraph   \r\n     \r\n    const minHeight =  props.data.minHeight \r\n    const imageUrl =  props.data.imageUrl  \r\n \r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorButton = props.data.colorButton || '#f00'\r\n    let colorText = props.data.colorText || 'inherit'\r\n\r\n    const paddingVertical = props.data.paddingVertical  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n \r\n    const useStyles = makeStyles((theme) => {   \r\n        colorButton = getColorByPalette(theme, colorButton) \r\n        colorText = getColorByPalette(theme, colorText) \r\n\r\n             \r\n        return ({ \r\n            bannerBackground: {\r\n                backgroundColor: fade(theme.palette.primary.main, 0.3), \r\n                backgroundImage: `url(${imageUrl})`, \r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            bannerContent: {\r\n                display: 'flex',\r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                paddingTop: paddingVertical,\r\n                paddingBottom: paddingVertical,\r\n                minHeight: minHeight, \r\n                maxHeight: \"100vh\", \r\n                [theme.breakpoints.down('sm')]: { \r\n                    paddingTop: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20), \r\n                    paddingBottom: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20),\r\n                }\r\n            },\r\n            heading: {  \r\n                marginBottom: theme.spacing(3), \r\n                textAlign: 'center',  \r\n                color: colorText\r\n            },\r\n            paragraph: {  \r\n                marginTop: -10, \r\n                marginBottom: 20,  \r\n                lineHeight: 1.5, \r\n                fontWeight: 400, \r\n                textAlign: 'center',  \r\n                fontSize: 15 , \r\n                color: colorText,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: 0, \r\n                    lineHeight: 1.1\r\n                }\r\n            },\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: 14,  \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorButton, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorButton, 0.2) , \r\n                    }\r\n                }, \r\n            },\r\n             \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (  \r\n        <div className={classes.bannerBackground}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Box className={classes.bannerContent} > \r\n                    <Grid item xs={12} sm={6} className=\"info heading\">\r\n                        { heading.length > 0 && <h3 className={classes.heading}>{heading}</h3> }\r\n                        { paragraph.length > 0 && <p className={classes.paragraph} > {paragraph} </p> } \r\n                        {\r\n                                isButton && \r\n                                <Box display={'flex'} justifyContent='center'>\r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button>\r\n                                </Box> \r\n                            }\r\n                    </Grid> \r\n                </Box> \r\n            </Container>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) { \r\n    \r\n    const { removeImage } = React.useContext(ImageContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)  \r\n    const [minHeight, setMinHeight] = React.useState(props.data.minHeight)  \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.imageUrl)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [colorTextSelect,  setColorTextSelect] = React.useState(props.data.colorText || 'inherit')\r\n    const [colorTextCustom, setColorTextCustom] = React.useState(props.data.colorText || 'inherit') \r\n\r\n    const [paddingVertical, setPaddingVertical] = React.useState(props.data.paddingVertical || 80)\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 0)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    const paddingVerticalComputed = paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20)\r\n \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    \r\n    const colorButtonTheme = isNoThemeColor(props.data.colorButton)\r\n    const colorTextTheme = isNoThemeColor(props.data.colorText)\r\n\r\n    React.useEffect(() => {\r\n        if(colorButtonTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        if(colorTextTheme) {  \r\n            setColorTextSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.colorButton, props.data.colorText])  \r\n   \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel , \r\n             responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle} = commonClasses \r\n        \r\n        const { mtView, mbView, ptView, pbView  } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $ptView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $pbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.paragraph = paragraph   \r\n        newData.minHeight = minHeight   \r\n        newData.isButton = isButton   \r\n        newData.textButton = textButton   \r\n        newData.targetButton = targetButton     \r\n        newData.imageUrl = imageUrl   \r\n        newData.imageName = imageName\r\n        newData.paddingVertical = paddingVertical\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        if (colorTextSelect === 'custom') {\r\n            newData.colorText = colorTextCustom\r\n        } else {\r\n            newData.colorText = colorTextSelect\r\n        }\r\n        \r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) { \r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` banner padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` banner padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Banner Settings ' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                         { !isDisableBtn && \"Close to save - \" }  Settings Banner\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Min Height for block\"\r\n                                                variant='outlined'\r\n                                                value={minHeight}\r\n                                                setValue={setMinHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top/Bottom\"\r\n                                                variant='outlined'\r\n                                                value={paddingVertical}\r\n                                                setValue={setPaddingVertical}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />    \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        Padding Top/Bottom: <b>{paddingVerticalComputed }</b> ; MinHeight: <b>{minHeight}</b>\r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Text'}\r\n                                            colorSelect={colorTextSelect} \r\n                                            setColorSelect={setColorTextSelect}\r\n                                            colorCustom={colorTextCustom}\r\n                                            setColorCustom={setColorTextCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                   \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            /> \r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box> \r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'top'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n \r\n                                   \r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ?\r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                : \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState} from 'react'\r\n  \r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles, Typography, Container, Box } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n         \r\n        return ({  \r\n            swiper: {                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,\r\n                        left: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,  \r\n                        right: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                        paddingTop: 30\r\n                    }\r\n                },  \r\n            },\r\n            \r\n            slide: { \r\n                boxSizing: 'border-box !important', \r\n                position: 'relative',   \r\n                height: slideHeight > 300 ? 300 : (slideHeight - 30) ,   \r\n                cursor: 'pointer',   \r\n                backgroundColor: theme.palette.background.paper,\r\n                '& a': {\r\n                    color: 'inherit'\r\n                },\r\n                [theme.breakpoints.down('xs')]: {  \r\n                    height: 'auto'\r\n                }\r\n            },\r\n            slideBox: {\r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                maxWidth: '100%', \r\n                height: \"100%\",\r\n                padding: 15,\r\n                boxShadow: theme.shadows['10'], \r\n                borderRadius: theme.shape.borderRadius, \r\n                transition: `${theme.transitions.duration.standard}ms ${theme.transitions.easing.easeInOut}`,\r\n                \r\n                [theme.breakpoints.up('sm')]: {\r\n                    overflow: 'hidden', \r\n                    '&:hover': { \r\n                        // backgroundColor: color, \r\n                        boxShadow: theme.shadows[\"2\"], \r\n                        '& $slideImg': {\r\n                            // width: 500, \r\n                            // height: 500, \r\n                            \r\n                            // backgroundColor: theme.palette.getContrastText(color), \r\n                            \"& svg\": { \r\n                                // fill: color\r\n                            }, \r\n                            \"&::after\": {\r\n                                transform: 'scale(10)'\r\n                            },\r\n                        },\r\n                        '& $slideTitle': {\r\n                            color: theme.palette.getContrastText(color)\r\n                        } \r\n                    }, \r\n                }, \r\n                \r\n                [theme.breakpoints.down('xs')]: {\r\n                    position: 'relative',  \r\n                    paddingTop: 25, \r\n                    paddingLeft: 10, \r\n                    paddingRight: 10, \r\n                    paddingBottom: 10, \r\n                    '& $slideImg': {\r\n                        position: 'absolute', \r\n                        top: -25, \r\n                        left: 'calc(50% - 25px)',\r\n                        width: 50, \r\n                        height: 50,\r\n                        \"&::after\": { \r\n                            width: 50, \r\n                            height: 50,\r\n                        },\r\n                        \"& svg\": {\r\n                            width: 30, \r\n                            height: 30,\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }, \r\n            slideImg: { \r\n                display: 'flex', \r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                position: 'relative', \r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: '50%',    \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                \"&::after\": { \r\n                    position: 'absolute',\r\n                    zIndex: 3, \r\n                    top: 0, \r\n                    left: 0,  \r\n                    content: \"''\", \r\n                    width: 70, \r\n                    height: 70, \r\n                    borderRadius: '50%',  \r\n                    backgroundColor: color, \r\n                    transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                },\r\n                '& span': { \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                },\r\n                \"& svg\": {\r\n                    position: 'relative', \r\n                    zIndex: 10,  \r\n                    width: 40,\r\n                    height: 40,\r\n                    fill: theme.palette.getContrastText(color)\r\n                }, \r\n                 \r\n            },\r\n            slideTitle: { \r\n                position: 'relative', \r\n                zIndex: 15, \r\n                fontSize: 18, \r\n                lineHeight: 1.1,  \r\n                textAlign: 'center',  \r\n                marginTop: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                width: \"100%\", \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16\r\n                }\r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 200, \r\n                    marginLeft: spaceBetween,\r\n                    marginRight: spaceBetween,\r\n                    marginBottom: spaceBetween*2, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 10, \r\n                        marginRight: 10, \r\n                        marginBottom: 20, \r\n                        // maxWidth: '100%',   \r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n    \r\n     \r\n    React.useEffect(() => {  \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('blocks resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current ? slideRef.current.clientWidth : 0\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n  \r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key}  \r\n            ref={slideRef} \r\n            className={`${classes.slide}`}\r\n        >\r\n            <NavLink to={slide.activePage.slug}>\r\n                <Box className={classes.slideBox}> \r\n                    <Box className={classes.slideImg}>\r\n                        <span dangerouslySetInnerHTML={{__html: slide.svg}}></span>\r\n                    </Box> \r\n                    <Typography\r\n                        component='h6'\r\n                        className={classes.slideTitle}\r\n                    >\r\n                        {slide.activePage.title} \r\n                    </Typography> \r\n                </Box>\r\n            </NavLink>\r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,   \r\n    makeStyles\r\n} from '@material-ui/core'\r\n\r\nimport SelectPage from '../../functions/SelectPage'\r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newSvg, setNewSvg] = React.useState('') \r\n    const [idActive, setIdActive] = React.useState(null) \r\n    const [activePage, setActivePage] = React.useState({}) \r\n \r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newSvg, activePage)\r\n        setNewSvg('') \r\n        setIdActive('')\r\n        setActivePage({})\r\n    }\r\n    function handleChangeUrl(selectedPage) {  \r\n     \r\n        setIdActive(selectedPage.id)\r\n        setActivePage(selectedPage)\r\n      \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n             \r\n            \r\n            <Box my={1} maxWidth={300} >\r\n                <TextField \r\n                    fullWidth\r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Svg'\r\n                    variant=\"outlined\"\r\n                    value={newSvg}\r\n                    onChange={(e) => { setNewSvg(e.target.value) }}\r\n                />\r\n                <Box my={1}> \r\n                    <SelectPage value={idActive} setValue={handleChangeUrl} />\r\n                </Box> \r\n                <Box my={1}>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,   \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n  \r\nimport SelectPage from '../../functions/SelectPage';\r\n\r\nfunction StyledComponent(props) {\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n  \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264,  \r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-flex',\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                width: 250,   \r\n                position: 'relative'\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: { \r\n                fontSize: 14, \r\n                lineHeight: 1.1,  \r\n            }, \r\n            dumbSlideSvg: {\r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: 35, \r\n                padding: 10, \r\n                backgroundColor: theme.palette.text.disabled, \r\n                \"& svg\": {\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    fill: theme.palette.text.primary\r\n                }\r\n            },\r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            reloadSettings: {\r\n                display: \"flex\", \r\n                alignItems: 'center', \r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                '&:hover': {\r\n                    borderColor: theme.palette.warning.light,  \r\n                    '& $warningBtn': {\r\n                        backgroundColor: theme.palette.warning.main,   \r\n                        '& svg': {\r\n                            fill: theme.palette.getContrastText(theme.palette.warning.main)\r\n                        }\r\n                    }\r\n                }\r\n                 \r\n            },\r\n            warningBtn: {\r\n                backgroundColor: theme.palette.divider, \r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.warning.light,\r\n                }\r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n \r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true) \r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  {  \r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideSvg = (svg, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].svg = svg \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n     \r\n    const handleChangeUrl = (activePage, index) => {  \r\n        let newSlides = slides.slice()\r\n   \r\n        newSlides[index].activePage = activePage \r\n         \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n      \r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => { \r\n        const conf = window.confirm('Delete? ') \r\n        if(conf) {\r\n            const newSlides = slides.slice() \r\n    \r\n            newSlides.splice(index, 1)\r\n            setSlides(newSlides) \r\n            setIsDisableBtn(false) \r\n        } \r\n    }\r\n    const addSlide = ( svg, activePage ) => {\r\n         \r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            svg: svg,  \r\n            activePage: activePage,   \r\n            inner: []\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {   \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>  \r\n                    <Box my={1}> \r\n                        <SelectPage value={item.activePage.id} setValue={handleChangeUrl} index={index} /> \r\n                    </Box> \r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set svg as html\"\r\n                            variant='outlined'\r\n                            value={item.svg}\r\n                            setValue={handleSlideSvg}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n\r\n                    {/* view */}\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box> \r\n                        \r\n\r\n                        <Box className={classes.dumbSlideSvg}>  \r\n                            <span dangerouslySetInnerHTML={{__html: item.svg}}></span>\r\n                        </Box>\r\n                        <Box my={1} className={classes.dumbSlideTitle}>  \r\n                             { item.activePage.title }\r\n                        </Box>\r\n                         \r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n\r\n     \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Block Pages margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Block Pages margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Block Pages Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Block Pages\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                      \r\n                                    <Box className={classes.reloadSettings}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.warningBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Block'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState} from 'react' \r\n\r\nimport { makeStyles, Typography, Container, Box } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n \r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const heading = props.data.heading  \r\n    const isButton = props.data.isButton  \r\n    const targetButton = props.data.targetButton \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n         \r\n        return ({  \r\n            swiper: {  \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,\r\n                        left: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,  \r\n                        right: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                }, \r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                        paddingTop: 30\r\n                    }\r\n                },  \r\n            },\r\n            \r\n            slide: { \r\n                boxSizing: 'border-box !important', \r\n                position: 'relative',   \r\n                height: slideHeight > 300 ? 300 : (slideHeight - 30) ,    \r\n                backgroundColor: theme.palette.background.paper,\r\n                '& a': {\r\n                    color: 'inherit'\r\n                },\r\n                [theme.breakpoints.down('xs')]: {  \r\n                    height: 'auto'\r\n                }\r\n            },\r\n            slideBox: {\r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                maxWidth: '100%', \r\n                height: \"100%\",\r\n                padding: 15,\r\n                boxShadow: theme.shadows['10'], \r\n                borderRadius: theme.shape.borderRadius, \r\n                transition: `${theme.transitions.duration.standard}ms ${theme.transitions.easing.easeInOut}`,\r\n\r\n                cursor: isButton ? 'pointer' : 'default', \r\n                \r\n                [theme.breakpoints.up('sm')]: {\r\n                    overflow: 'hidden', \r\n                    '&:hover': { \r\n                        // backgroundColor: color, \r\n                        boxShadow: theme.shadows[\"2\"], \r\n                        '& $slideImg': {\r\n                            // width: 500, \r\n                            // height: 500, \r\n                            \r\n                            // backgroundColor: theme.palette.getContrastText(color), \r\n                            \"& svg\": { \r\n                                // fill: color\r\n                            }, \r\n                            \"&::after\": {\r\n                                transform: 'scale(10)'\r\n                            },\r\n                        },\r\n                        '& $slideTitle': {\r\n                            color: theme.palette.getContrastText(color)\r\n                        } \r\n                    }, \r\n                }, \r\n                \r\n                [theme.breakpoints.down('xs')]: {\r\n                    position: 'relative',  \r\n                    paddingTop: 25, \r\n                    paddingLeft: 10, \r\n                    paddingRight: 10, \r\n                    paddingBottom: 15, \r\n                    '& $slideImg': {\r\n                        position: 'absolute', \r\n                        top: -25, \r\n                        left: 'calc(50% - 25px)',\r\n                        width: 50, \r\n                        height: 50,\r\n                        \"&::after\": { \r\n                            width: 50, \r\n                            height: 50,\r\n                        },\r\n                        \"& svg\": {\r\n                            width: 30, \r\n                            height: 30,\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }, \r\n            slideImg: { \r\n                display: 'flex', \r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                position: 'relative', \r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: '50%',    \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                \"&::after\": { \r\n                    position: 'absolute',\r\n                    zIndex: 3, \r\n                    top: 0, \r\n                    left: 0,  \r\n                    content: \"''\", \r\n                    width: 70, \r\n                    height: 70, \r\n                    borderRadius: '50%',  \r\n                    backgroundColor: color, \r\n                    transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                },\r\n                '& span': { \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                },\r\n                \"& svg\": {\r\n                    position: 'relative', \r\n                    zIndex: 10,  \r\n                    width: 40,\r\n                    height: 40,\r\n                    fill: theme.palette.getContrastText(color)\r\n                }, \r\n                 \r\n            },\r\n            slideTitle: { \r\n                position: 'relative', \r\n                zIndex: 15, \r\n                fontSize: 18, \r\n                lineHeight: 1.1,  \r\n                textAlign: 'center',  \r\n                marginTop: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                width: \"100%\", \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16\r\n                }\r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 200, \r\n                    marginLeft: spaceBetween,\r\n                    marginRight: spaceBetween,\r\n                    marginBottom: spaceBetween*2, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('xs')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 10, \r\n                        marginRight: 10, \r\n                        marginBottom: 20, \r\n                        maxWidth: 400,   \r\n                    },\r\n                    '& $slideBox': {\r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        flexDirection: 'row', \r\n                        padding: 10\r\n                    },\r\n                    '& $slideImg': {\r\n                        position: 'relative', \r\n                        top: 'auto',\r\n                        left: 'auto',\r\n                        minWidth: 50\r\n                    },\r\n                    '& $slideTitle': {\r\n                        marginTop: 0, \r\n                        marginLeft: 8\r\n                    },\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n    \r\n     \r\n    React.useEffect(() => {  \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('blocks resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current ? slideRef.current.clientWidth : 0\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n  \r\n    const handleSlideClick = () => { \r\n        if(isButton) handleOpen(targetButton) \r\n    }\r\n\r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key}  \r\n            ref={slideRef} \r\n            className={`${classes.slide}`} \r\n            onClick={handleSlideClick}\r\n        > \r\n            <Box className={classes.slideBox}> \r\n                <Box className={classes.slideImg}>\r\n                    <span dangerouslySetInnerHTML={{__html: slide.svg}}></span>\r\n                </Box> \r\n                <Typography\r\n                    component='h6'\r\n                    className={classes.slideTitle}\r\n                >\r\n                    {slide.title} \r\n                </Typography> \r\n            </Box> \r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,   \r\n    makeStyles\r\n} from '@material-ui/core'\r\n \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newSvg, setNewSvg] = React.useState('') \r\n    const [newTitle, setNewTitle] = React.useState('') \r\n    \r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newSvg, newTitle)\r\n        setNewSvg('') \r\n        setNewTitle('') \r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n             \r\n            \r\n            <Box my={1} maxWidth={300} >\r\n                <Box my={1}>\r\n                    <TextField \r\n                        fullWidth\r\n                        type='text'\r\n                        size=\"small\" \r\n                        label='Set Title'\r\n                        variant=\"outlined\"\r\n                        value={newTitle}\r\n                        onChange={(e) => { setNewTitle(e.target.value) }}\r\n                    /> \r\n                </Box>\r\n                <Box my={1}>\r\n                    <TextField \r\n                        fullWidth\r\n                        type='text'\r\n                        size=\"small\" \r\n                        label='Set Svg'\r\n                        variant=\"outlined\"\r\n                        value={newSvg}\r\n                        onChange={(e) => { setNewSvg(e.target.value) }}\r\n                    /> \r\n                </Box>\r\n                \r\n                <Box my={1}>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,   \r\n    FormControlLabel, \r\n    Switch\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n    \r\nfunction StyledComponent(props) {\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n  \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264,  \r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-flex',\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                width: 250,   \r\n                position: 'relative'\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: { \r\n                fontSize: 14, \r\n                lineHeight: 1.1,  \r\n            }, \r\n            dumbSlideSvg: {\r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: 35, \r\n                padding: 10, \r\n                backgroundColor: theme.palette.text.disabled, \r\n                \"& svg\": {\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    fill: theme.palette.text.primary\r\n                }\r\n            },\r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            reloadSettings: {\r\n                display: \"flex\", \r\n                alignItems: 'center', \r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                '&:hover': {\r\n                    borderColor: theme.palette.warning.light,  \r\n                    '& $warningBtn': {\r\n                        backgroundColor: theme.palette.warning.main,   \r\n                        '& svg': {\r\n                            fill: theme.palette.getContrastText(theme.palette.warning.main)\r\n                        }\r\n                    }\r\n                }\r\n                 \r\n            },\r\n            warningBtn: {\r\n                backgroundColor: theme.palette.divider, \r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.warning.light,\r\n                }\r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.isButton = isButton   \r\n        newData.targetButton = targetButton   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n \r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true) \r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  {  \r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideSvg = (svg, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].svg = svg \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSlideTitle = (title, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].title = title \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n      \r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => { \r\n        const conf = window.confirm('Delete? ') \r\n        if(conf) {\r\n            const newSlides = slides.slice() \r\n\r\n            newSlides.splice(index, 1)\r\n            setSlides(newSlides) \r\n            setIsDisableBtn(false)\r\n        }\r\n         \r\n    }\r\n    const addSlide = ( svg, title ) => {\r\n         \r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            svg: svg,  \r\n            title: title\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {   \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>\r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set title\"\r\n                            variant='outlined'\r\n                            value={item.title}\r\n                            setValue={handleSlideTitle}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set svg as html\"\r\n                            variant='outlined'\r\n                            value={item.svg}\r\n                            setValue={handleSlideSvg}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n\r\n                    {/* view */}\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box> \r\n                        \r\n\r\n                        <Box className={classes.dumbSlideSvg}>  \r\n                            <span dangerouslySetInnerHTML={{__html: item.svg}}></span>\r\n                        </Box>\r\n                        <Box my={1} className={classes.dumbSlideTitle}>  \r\n                             { item.title }\r\n                        </Box>\r\n                         \r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n\r\n     \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Advantages margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Advantages margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Advantages Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Advantages\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Box display='flex' mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Open Modal by click\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box flexGrow={1} > \r\n                                                    <InputChange\r\n                                                        id={null} \r\n                                                        fullWidth={true}\r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Target for Button\"\r\n                                                        variant='outlined'\r\n                                                        value={targetButton}\r\n                                                        setValue={setTargetButton}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />   \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box className={classes.reloadSettings}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.warningBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n                                     \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Block'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '20px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                margin: '10px 0', \r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent, Divider } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\nimport FormLineElement from '../library/formLine/ElementCreator'  \r\nimport SwiperElement from '../library/swiper/ElementCreator'  \r\nimport BannerElement from '../library/banner/ElementCreator'  \r\nimport BlocksPagesElement from '../library/blocksPages/ElementCreator'   \r\nimport BlocksAdvElement from '../library/blocksAdv/ElementCreator'   \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n  const FormLineLayout = layouts.formLine \r\n  const SwiperLayout = layouts.swiper \r\n  const BannerLayout = layouts.banner \r\n  const BlocksPagesLayout = layouts.blocksPages \r\n  const BlocksAdvLayout = layouts.blocksAdv \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => { \r\n\r\n    const classesRef = StylesChangers()\r\n    const commonClasses = classesRef(theme)\r\n\r\n    const { menu, menuTitle, dialogContentUnstyle } = commonClasses \r\n\r\n    return ({ \r\n      dialogContentUnstyle: dialogContentUnstyle, \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 70,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38,  \r\n          opacity: 0, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 600, \r\n        left: \"calc(50% - 300px)\",\r\n      }},     \r\n      menuTitle: menuTitle,\r\n      tooltip: {\r\n        fontSize: 14\r\n      }, \r\n      boxMenuItem : { \r\n        display: 'inline-block',\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n      }\r\n\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    // newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n   \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container')   newCont = JSON.parse(JSON.stringify(ContainerLayout))\r\n    if(type === 'mainBanner')  newCont = JSON.parse(JSON.stringify(MainBannerLayout))\r\n    if(type === 'accordion')   newCont = JSON.parse(JSON.stringify(AccordionLayout))\r\n    if(type === 'contactMap')  newCont = JSON.parse(JSON.stringify(СontactMapLayout))\r\n    if(type === 'about')       newCont = JSON.parse(JSON.stringify(AboutLayout))\r\n    if(type === 'actionLine')  newCont = JSON.parse(JSON.stringify(ActionLineLayout))\r\n    if(type === 'table')       newCont = JSON.parse(JSON.stringify(TableLayout))\r\n    if(type === 'formLine')    newCont = JSON.parse(JSON.stringify(FormLineLayout))\r\n    if(type === 'swiper')      newCont = JSON.parse(JSON.stringify(SwiperLayout))\r\n    if(type === 'banner')      newCont = JSON.parse(JSON.stringify(BannerLayout))\r\n    if(type === 'blocksPages') newCont = JSON.parse(JSON.stringify(BlocksPagesLayout))\r\n    if(type === 'blocksAdv')   newCont = JSON.parse(JSON.stringify(BlocksAdvLayout))\r\n  \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n\r\n    window.scrollTo({\r\n      top: window.innerHeight \r\n    })\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n        \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n    \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'formLine') { \r\n          return(\r\n              <FormLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'swiper') { \r\n          return(\r\n              <SwiperElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'banner') { \r\n          return(\r\n              <BannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'blocksPages') { \r\n          return(\r\n              <BlocksPagesElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'blocksAdv') { \r\n          return(\r\n              <BlocksAdvElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <Box className={classes.btnContainer}> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <React.Fragment>\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Add Block for Page <OpenWithIcon/>\r\n                            </Typography> \r\n                            \r\n                            \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Container for heading, paragraph, image-paragraph, list' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                    Container\r\n                                </Button> \r\n                              </Tooltip> \r\n                            </Box> \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Paper cart with svg icon, contain link to page. Has be slider' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('blocksPages') }}>\r\n                                    Blocks with Links\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Paper cart with svg icon. Has be slider' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('blocksAdv') }}>\r\n                                    Blocks without Links\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With form\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block to start the page. Contain: text, form, image(desktop only)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                    Main Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                           \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Contain: location and phone view, contact form, map. Has two different displays, with and without a map' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                    Contacts with Map\r\n                                </Button>  \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Small contact form with optional heading and paragrapher' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('formLine') }}>\r\n                                    Add Form Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Accordion with heading on top' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                    Accordion\r\n                                </Button> \r\n                              </Tooltip>  \r\n                            </Box>\r\n                            \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Line for small text paragrapher with ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                    Colored Action Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Table with heading on top. Has ability to add \"Show More Botton \" on bottom' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                    Add Table \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With image\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block with heading, paragraph and image. Image on desktop - 50% vieport width. Image on mobile - 50% vieport width . Has the ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                    About\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Simple slider with square images. Has be blocks' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('swiper') }}>\r\n                                    Swiper\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Banner with background image, heading, paragraph and modal button (optional)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('banner') }}>\r\n                                    Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </React.Fragment>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/functions/ScrollToTop'  \r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n \r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    \r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n             \r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Modal/>\r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\n\r\nconst  AlertComponent = () => { \r\n    \r\n    const { isShowAlert, closeAlert, alertText  } = React.useContext(SendFormContext)  \r\n\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        closeAlert() \r\n    }\r\n   \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={isShowAlert} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert  /> \r\n            } \r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}