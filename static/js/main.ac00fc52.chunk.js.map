{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebaseConfig.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/functions/ScrollToTop.js","components/utilits/LoadingProgress.js","components/utilits/PreloaderThumbnail.js","components/functions/InputMaskPhone.js","components/functions/colorChanger/ColorCalculation.js","components/utilits/ValidationChip.js","components/functions/formValidation.js","components/modal/DumbComponent.js","styles/changers.js","components/header/headerHelpers/category/AddItem.js","components/header/headerHelpers/category/ChangePage.js","components/functions/InputChange.js","components/utilits/Confirm.js","components/header/headerHelpers/CategoriesChanger.js","components/functions/colorChanger/ColorPicker.js","components/functions/colorChanger/ColorSelecter.js","components/functions/RemoveImage.js","components/header/headerHelpers/LogoChanger.js","components/functions/SelectShadow.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/headerHelpers/RequestsChanger.js","components/header/headerHelpers/ValidationChanger.js","assets/icons/half-moon.svg","assets/icons/sun.svg","components/header/dumb/ThemeSwitcher.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/single/Login.js","components/single/Error.js","styles/inputs.js","components/library/container/Modal.js","components/library/heading/DumbComponent.js","components/utilits/TableFontSizeInfo.js","components/functions/SelectHeadingVariant.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/list/DumbComponent.js","components/library/list/StyledComponent.js","components/library/list/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/StyledComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/AddItem.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","assets/icons/location.js","assets/icons/phone.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/DumbComponent.js","components/library/table/AddItem.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/library/formLine/DumbComponent.js","components/library/formLine/StyledComponent.js","components/library/formLine/ElementCreator.js","components/library/swiper/DumbComponent.js","components/library/swiper/AddItem.js","components/functions/SelectPage.js","components/library/swiper/StyledComponent.js","components/library/swiper/ElementCreator.js","components/library/banner/DumbComponent.js","components/library/banner/StyledComponent.js","components/library/banner/ElementCreator.js","components/library/blocksPages/DumbComponent.js","components/library/blocksPages/AddItem.js","components/library/blocksPages/StyledComponent.js","components/library/blocksPages/ElementCreator.js","components/library/blocksAdv/DumbComponent.js","components/library/blocksAdv/AddItem.js","components/library/blocksAdv/StyledComponent.js","components/library/blocksAdv/ElementCreator.js","components/utilits/SkeletonPage.js","components/utilits/Breadcrumbs.js","components/page/StyledComponent.js","components/page/DumbComponent.js","components/page/SinglePage.js","Router/RouterComponent.js","components/utilits/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","idArrayForDelete","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","clearArrayForDelete","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","SendFormContext","SendFormProvider","requests","modalSettings","isAlertSeverity","alertText","validationSettings","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","time","setTimeout","req","newList","slice","newReq","Object","assign","getCurrentDate","push","closeAlertFromTimeout","severity","duration","isShowAlert","updateValidationSettings","updateRequests","updateModalSettings","sendRequests","closeAlert","setCustomAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","PreloaderThumbnail","status","theme","preloaderContainer","bottom","opacity","palette","background","default","transition","centeredFlexed","display","flexDirection","alignItems","justifyContent","progressCircle","title","marginTop","fontSize","disabled","fontWeight","loadContainer","transform","enterTitle","Box","CircularProgress","size","thickness","circle","Typography","variant","InputMaskPhone","setValue","placeholder","useState","valueLocal","setValueLocal","mask","useContext","maskPlaceholder","alwaysShowMask","onChange","e","onBlur","getColorByPalette","primary","main","secondary","warning","info","success","paper","getColorByPaletteForGradient","getColorByPaletteReverse","isNoThemeColor","ValidationChip","isValid","place","absolute","closeOnFirstClick","style","textForView","variantView","colorView","setCloseClick","handleCloseChip","addEventListener","removeEventListener","chipColor","chipContainer","borderRadius","marginBottom","transitions","shortest","easing","easeInOut","transformOrigin","minHeight","breakpoints","down","chipFilled","getContrastText","action","selected","hover","chipOutlined","border","darken","chipLabel","lineHeight","paddingTop","paddingBottom","paddingLeft","paddingRight","marginRight","flexGrow","textAlign","closeChip","cursor","fill","Fade","in","timeout","enter","exit","component","name","phone","renderText","IconButton","aria-label","onClick","NameValidation","field","answer","undefined","length","PhoneValidation","includes","TransitionsModal","colorGradient1","colorGradient2","formPhone","setFormPhone","formName","setFormName","isValidPhone","setIsValidPhone","isValidName","setIsValidName","heading","subHeading","targetText","buttonText","policy","inputName","inputPhone","inValidColor","colorButton","padding","spacing","margin","values","sm","outline","closeBtn","input","fontFamily","divider","boxShadow","shorter","borderColor","inValidInput","inValidColorFade","button","textTransform","targetContainer","maxWidth","targetLabel","closeModal","handleCloseValidationChip","Fragment","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","onSubmit","preventDefault","valphone","valname","isCheck","my","type","Button","StylesChangers","menu","maxHeight","overflowY","overflowX","menuTitle","borderStyle","borderWidth","btnSetting","deepOrange","minWidth","btnSave","btnWithLabel","btnDrawerStyle","easeIn","btnDrawerItem","containerWrapper","outlineOffset","responseValues","responseTablets","responseMobile","mobileTooltip","tabletTooltip","dialogContentUnstyle","infoBlock","infoBtn","tableSizeContainer","tableSizeBtn","tableSizeAbsolute","AddItem","newItemTitle","setNewItemTitle","newItemSlug","setNewItemSlug","id","addItem","FormGroup","mb","TextField","required","fullWidth","label","Tooltip","placement","ChangeCategory","itemPages","handleUpdatePage","ml","InputChange","memo","multiline","setIsDisableBtn","Number","Confirm","isVariable","show","setShow","removeText","handleRemoveClick","index","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","CategoriesChanger","pageLayout","page","categoryLayout","category","setOpen","isDisableBtn","isVisibleConfirmCategory","setIsVisibleConfirmCategory","isVisibleConfirmPage","setIsVisibleConfirmPage","commonClasses","classesRef","listPages","listStyle","titlePages","borderBottom","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","pageBox","pageBoxLi","fade","addPage","newTitle","newSlug","newCategories","newPage","JSON","parse","stringify","uuid","pages","handleUpdateCategory","categoryId","pageId","handleSave","swapCategory","direction","activeIndex","indexOf","movedItem","placeItem","swapPage","activeCategory","dumbWrapper","filtered","filter","deleted","arrayOfPagesForDelete","handle","cancel","Grid","container","xs","newCategory","disableElevation","ButtonGroup","orientation","Accordion","AccordionSummary","expandIcon","aria-controls","p","indexPages","ChangePage","gutterBottom","mt","ColorPicker","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","isDisableSaveIcon","setIsDisableSaveIcon","contrastColor","boxColor","shape","short","shadows","boxPicker","iconButton","iconButtonDisabled","draggableColorTitle","prevOpen","onChangeComplete","newColor","hex","ColorSelecter","colorSelect","setColorSelect","colorCustom","setColorCustom","isContrastSelect","block","defaultColor","colorCustomText","FormControl","InputLabel","Select","labelId","MenuItem","RemoveImage","a","storageRef","ref","imageRef","child","LogoChanger","isVisibleConfirm","setIsVisibleConfirm","setMainText","setSubText","imageUrl","setImageUrl","imageName","setImageName","setIsModal","modalText","setModalText","modalTarget","setModalTarget","colorTheme","newLogo","newModal","uploadHandler","imageData","put","on","snapshot","message","getDownloadURL","url","htmlFor","whiteSpace","event","files","mx","src","alt","Divider","FormControlLabel","control","Switch","checked","mr","SelectShadow","useTheme","defaultValue","autoWidth","MenuProps","changedValue","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","newSettings","row","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","lightError","setLightError","darkError","setDarkError","lightWarning","setLightWarning","darkWarning","setDarkWarning","lightInfo","setLightInfo","darkInfo","setDarkInfo","lightSuccess","setLightSuccess","darkSuccess","setDarkSuccess","colorPreview","colorItem","flexWrap","startIcon","RequestsChanger","setHeading","setSubHeading","setTargetText","setButtonText","setPolicy","setInputName","setInputPhone","amber","newData","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","innerIndex","String","CardActions","handleOnceCheck","Checkbox","request","setMask","setName","setPhone","setVariant","blue","ThemeSwitcher","ThemeCustomSwitch","withStyles","switchBase","darkThemeIcon","thumb","lightThemeIcon","backgroundSize","backgroundPosition","track","create","focusVisible","focusVisibleClassName","disableRipple","Desktop","menuButton","menuButtonLink","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","Toolbar","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","ListItem","ListItemText","Mobile","drawerContainer","mobileLink","menuColor","iconColor","accordionReset","drawerHeader","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","handleSignOut","content","indexPage","borderTop","px","openModal","edge","DumbComponent","backgroundHeader","widthMobile","mobileView","setMobileView","modalBtnColor","headerRef","useRef","topHeaderRef","header","fixedPadding","topHeader","logoMain","logoSub","logoImage","buttonModal","linkModal","loginBtn","setResponsiveness","setScrollHeader","headerTop","pageYOffset","current","classList","add","remove","err","logout","createLogo","createModalBtn","renderModal","AppBar","Container","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ModalChanger","ValidationChanger","ElementCreator","Header","Footer","contrastFooter","backgroundFooter","footer","buttonToTop","handleClickToTop","Login","setPassword","setError","isRedirect","setIsRedirect","isSubmit","setIsSubmit","avatar","form","submitBtn","forgotTitle","handleChange","value1","value2","disableCheck","Avatar","loginWithEmail","res","autoComplete","autoFocus","Alert","AlertTitle","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","libraryList","setPadding","setMargin","setDisplay","setFlexDirection","backgroundSelect","setBackgroundSelect","backgroundCustom","setBackgroundCustom","borderColorSelect","setBorderColorSelect","borderColorCustom","setBorderColorCustom","shadow","setShadow","setBorderStyle","setBorderWidth","setBorderRadius","innerContainer","settingInnerContainer","setSettingInnerContainer","anchorEl","setAnchorEl","propsSettings","bgTheme","borderTheme","commonStyle","styleRef","addItemBtn","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","addHeading","newChildren","newItem","reSaveContainer","reSaveContainerStyleSettings","aria-haspopup","currentTarget","keepMounted","Boolean","tooltip","resposiveFontSize","classeForResp","responseFont","defaultSizeClass","defaultSize","textChildren","TableFontSizeInfo","activeRow","defaultSizeInfo","activeRowColor","iconCell","alignitems","Table","TableHead","TableRow","TableCell","align","TableBody","scope","SelectHeadingVariant","setTextAlign","setDefaultSize","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","outlineColor","tooltipResponse","tooltipDefault","defaultSizeCheck","defaultSizeTrack","responseCheck","responseTrack","swapHeading","swapChildrens","viewCorrect","removeItem","sentData","reSaveChildren","prop","isFirst","isLast","liClass","itemsStyle","mobileClass","items","isVisibleConfirmBlock","setIsVisibleConfirmBlock","isVisibleConfirmItem","setIsVisibleConfirmItem","setPaddingLeft","setItems","itemsPadding","setItemsPadding","itemsListStyle","setItemsListStyle","setNewItem","mobileMarginTopComputed","mobileMarginBottomComputed","handleItemChange","newItems","swapItem","swapList","splice","deleteItemList","swapParagraph","imageBorderColor","imageClassName","imageStyle","imageStabilization","titleImg","isVisibleConfirmImage","setIsVisibleConfirmImage","imageBorderColorSelect","setImageBorderColorSelect","imageBorderColorCustom","setImageBorderColorCustom","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageBorderTheme","imageAccordion","imagePreview","imageLabel","handleImageMargin","handleImageUpload","generateImageName","downloadURL","pt","pb","F","styleClass","renderItems","orderFirst","orderLast","createArrayImages","images","forEach","removeContainer","swapContainer","newArr","reSaveItem","colorFocusInput","variantHeading","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","maxWidthContainer","lighten","up","webkitMaskImage","maskImage","webkitMask","webkitMaskSize","maskSize","md","xlinkHref","isVisibleConfirmIcon","setIsVisibleConfirmIcon","isTableSizeVisible","setIsTableSizeVisible","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","iconName","setIconName","setMarginTop","setMarginBottom","setMaxWidthContainer","tabletMarginTopComputed","tabletMarginBottomComputed","imageType","disableMobileGutters","colorNumber","indexForDisplay","head","body","newItemBody","setNewItemBody","handleUpdateItemHead","handleUpdateItemBody","itemLayout","Location","version","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","d","Phone","colorMapOnload","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","link","boxForFlex","heightRegular","linksContainer","validationChipsContainer","href","comment","cols","rows","dangerouslySetInnerHTML","__html","setLocation","setInputComment","setMapFrame","isButton","setIsButton","textButton","targetButton","setTextButton","setTargetButton","headingSize","colorMain","containerColored","containerFlexed","setHeadingSize","CustomizedTables","mainColor","tableMinWidth","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isButtonShowMore","isButtonClick","setIsButtonClick","StyledTableRow","table","tableCell","tableButtonCell","tableButton","tableContainer","tableHeader","handleVisible","OnceRow","price","TableContainer","newItemPrice","setNewItemPrice","setRows","setTableRow","setTableMinWidth","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","handleTableHeadChange","newRow","handleRowChangeName","newRows","handleRowChangePrice","warningBtn","rowLayout","lineDecor","gridItem","gridValidation","SwiperCore","use","Navigation","isSwiper","setIsSwiper","slidesForViewDesktop","slidesPerView","slidesForViewTablet","slidesPerViewTablet","slidesForViewMobile","slidesPerViewMobile","spaceBetween","speed","loop","freeMode","slides","slideHeight","setSlideHeight","slideRef","swiper","activeSlide","slide","overflow","slideBox","slideImg","backgroundRepeat","slideTitle","gallery","marginRigth","getWidthViewport","actualWidth","slideHeightCalc","clientWidth","renderSlide","key","isUrl","handleSlideClick","activePage","600","960","navigation","newImageName","setNewImageName","newImageUrl","setNewImageUrl","newImageTitle","setNewImageTitle","addSlide","replace","SelectPage","SetPages","selectValue","setSelectValue","createPages","pagesArray","categorySlug","setSlidesPerView","setSlidesPerViewTablet","setSlidesPerViewMobile","setSpaceBetween","setSpeed","setLoop","setFreeMode","setSlides","imageForDelete","setImageForDelete","slideContainer","dumbSlide","dumbSlideButtons","dumbSlideTitle","tooltipReload","handleSlideTitle","newSlides","handleChangeUrl","handleChangeIsButtonTarget","swipeSlide","element","removeSlide","imgArray","newImageForDelete","deletedImageName","handleChangeIsButton","handleChangeIsUrl","colorBackground","colorText","paddingVertical","computedContrastColor","bannerBackground","bannerContent","setMinHeight","colorTextSelect","setColorTextSelect","colorTextCustom","setColorTextCustom","setPaddingVertical","paddingVerticalComputed","colorButtonTheme","colorTextTheme","boxSizing","standard","newSvg","setNewSvg","idActive","setIdActive","setActivePage","selectedPage","dumbSlideSvg","handleSlideSvg","inner","setNewTitle","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","Breadcrumbs","separator","breadcrumbs","crumb","StyledSinlePage","pageSlug","slugForUpdate","setData","metaTitle","setMetaTitle","metaDescription","setMetaDescription","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","FormLineLayout","formLine","SwiperLayout","BannerLayout","banner","BlocksPagesLayout","blocksPages","BlocksAdvLayout","blocksAdv","description","btnContainer","boxMenuItem","fetchData","pageRef","set","childrenContainer","elem","addContainer","newCont","innerHeight","SinglePageCreator","RouterComponent","preloaderStatus","setPreloaderStatus","document","basename","path","render","SinglePage","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ac00fc52.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","export const config = { \r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}","import firebase from 'firebase'\r\n \r\nimport { config } from './firebaseConfig'  \r\n  \r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(config)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 600) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        idArrayForDelete: [],\r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n        \r\n        // imageList: [], \r\n    }\r\n    \r\n \r\n    \r\n\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n        // this.fetchListFromStorage()\r\n    } \r\n    // fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .then( () => {\r\n    //         this.setState({\r\n    //             imageList: imagesArray\r\n    //         })\r\n    //     })\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n        \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 700);\r\n        \r\n    // }\r\n\r\n    async updateCategories(data) { \r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {    \r\n        // const pageRef = firebase.db.collection(\"site1\").doc(slug)\r\n        // const doc = await pageRef.get();\r\n        \r\n        // let idArray = []\r\n\r\n        // if (!doc.exists) {\r\n        //     console.log('No such page!');  \r\n        // } else { \r\n        //     const items = doc.data().items\r\n        //     items.forEach(item => {\r\n        //         if(item.type === 'container') { \r\n        //             item.children.forEach( child => {\r\n        //                 if(child.type === 'paragraphImage') {\r\n        //                     idArray.push(child.id)\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //         else {  \r\n        //             idArray.push(item.id)\r\n        //         }\r\n        //     });\r\n        // }\r\n        // this.setState({\r\n        //     idArrayForDelete: idArray\r\n        // })\r\n\r\n        // await pageRef.delete()\r\n        // // .then( () => {\r\n        // //     setTimeout(() => {\r\n        // //         this.setState({\r\n        // //             idArrayForDelete: []\r\n        // //         })\r\n        // //     }, 1000);\r\n        // // })\r\n        // .then( () => {\r\n        //     this.state.imageList.forEach( imageName => {\r\n        //         idArray.forEach(id => {\r\n        //             if(imageName.includes(id)) this.removeImage(imageName)\r\n        //         })\r\n        //     })\r\n        // })\r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n    // async removeImage(name) { \r\n    //     if(name !== '') {\r\n    //         const storageRef = firebase.storage.ref();\r\n \r\n    //         const imageRef = storageRef.child(name)\r\n        \r\n    //         try {\r\n    //             await imageRef.delete().then(function() {\r\n    //                 console.log('File deleted successfully')\r\n    //             }).catch(function(error) {\r\n    //                 console.log(error) \r\n    //             }); \r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    idArrayForDelete: this.state.idArrayForDelete, \r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    clearArrayForDelete: () => {\r\n                        this.setState({\r\n                            idArrayForDelete: []\r\n                        })\r\n                    }, \r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isAlertSeverity: null,\r\n        alertText: '',\r\n        validationSettings: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n                validationSettings: doc.data().validationSettings, \r\n            })  \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout(time) {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isAlertSeverity: null,\r\n                alertText: ''\r\n            })\r\n        }, time);\r\n    }\r\n\r\n    async sendRequests(req) {  \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isAlertSeverity: 'info',\r\n            alertText: \"Your request is being processed\"\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isAlertSeverity: 'success', \r\n                alertText: 'Your request was accepted successfully'\r\n            })\r\n            this.closeAlertFromTimeout(7000)\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isAlertSeverity: 'error', \r\n                alertText: \"An error has occurred :(\"\r\n            })\r\n            this.closeAlertFromTimeout(700)\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        this.setState({ \r\n            requests: req,  \r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n    async updateValidationSettings(settings) {\r\n        this.setState({\r\n            validationSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            validationSettings: settings, \r\n        }) \r\n    }\r\n\r\n    setCustomAlert(severity, text, duration) {\r\n        this.setState({  \r\n            isAlertSeverity: severity, \r\n            alertText: text\r\n        })\r\n        this.closeAlertFromTimeout(duration)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    validationSettings: this.state.validationSettings, \r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isAlertSeverity, \r\n                    modalSettings: this.state.modalSettings, \r\n                    alertText: this.state.alertText, \r\n                    \r\n                    updateValidationSettings: (settings) => {\r\n                        this.updateValidationSettings(settings)\r\n                    },\r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isAlertSeverity: null, \r\n                            alertText: ''\r\n                        }) \r\n                    }, \r\n                    setCustomAlert: (severity, text, duration) => {\r\n                        this.setCustomAlert(severity, text, duration)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import {useEffect} from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    }); \r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 10001, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React from 'react'\r\n\r\nimport { Box, makeStyles, CircularProgress, Typography } from '@material-ui/core'\r\n   \r\nfunction PreloaderThumbnail({status}) {\r\n \r\n    const useStyles = makeStyles((theme) => {\r\n        return({\r\n            preloaderContainer: {\r\n                position: 'fixed', \r\n                zIndex: 10000, \r\n                top: 0, \r\n                left: 0, \r\n                bottom: 0, \r\n                right: 0, \r\n  \r\n                opacity: status === 'delete' ? 0 : 1,   \r\n                // backgroundColor: status === 'loading' ? '#fdfdfd' : '#d1cfe6',  \r\n                backgroundColor: theme.palette.background.default,  \r\n\r\n                transition: `400ms ease-in-out`,\r\n            },  \r\n            centeredFlexed: { \r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n            },\r\n            progressCircle: {\r\n                color: \"#08bb35bf\"\r\n            },    \r\n            title: {\r\n                marginTop: 4, \r\n                fontSize: 16, \r\n                color: theme.palette.text.disabled, \r\n                fontWeight: 300 \r\n            }, \r\n            loadContainer: { \r\n                transform: status === 'loading' ? 'translateY(0)' : 'translateY(-40px)', \r\n                transition: `300ms ease-in-out`,\r\n                opacity: status === 'loading' ? 1 : 0\r\n            },\r\n            enterTitle: {\r\n                fontSize: 24, \r\n                color: theme.palette.text.disabled, \r\n                fontWeight: 300 , \r\n                transition: `300ms ease-in-out`,\r\n                transform: status === 'loading' ? 'translateY(30px)' : 'translateY(-30px)', \r\n                opacity: status === 'loading' ? 0 : 1\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n\r\n    return ( \r\n        status !== 'hide' ? \r\n        \r\n        <Box className={`${classes.preloaderContainer} ${classes.centeredFlexed}`}>\r\n            <Box className={`${classes.loadContainer} ${classes.centeredFlexed}`}>   \r\n                <CircularProgress \r\n                    size={34}\r\n                    thickness={2}  \r\n                    classes={{ circle: classes.progressCircle }} \r\n                /> \r\n                <Typography className={classes.title} variant='h3'>\r\n                    Loading\r\n                </Typography>  \r\n            </Box>\r\n            \r\n            <Typography className={classes.enterTitle} variant='h3'>\r\n                Site builder\r\n            </Typography>  \r\n        </Box> \r\n        :\r\n        null\r\n    )\r\n}\r\n\r\nexport default PreloaderThumbnail\r\n","import React, {useState, useContext, useEffect } from 'react'\r\n\r\nimport InputMask from \"react-input-mask\";\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\n\r\nconst InputMaskPhone = ({value, setValue, className, placeholder}) => {\r\n\r\n    const [valueLocal, setValueLocal] = useState(value) \r\n\r\n    const { validationSettings } = useContext(SendFormContext)  \r\n    const mask = validationSettings.mask\r\n \r\n    useEffect(() => {\r\n        if(valueLocal !== value) {\r\n            setValueLocal(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const handleSave = () => { \r\n        setValue(valueLocal) \r\n    }\r\n\r\n    return ( \r\n        <InputMask \r\n            mask={mask}\r\n            maskPlaceholder={'_'}\r\n            alwaysShowMask={false}\r\n            className={className}\r\n            placeholder={placeholder} \r\n            value={valueLocal}\r\n            onChange={(e) => { setValueLocal(e.target.value) }}\r\n            onBlur={handleSave} \r\n        /> \r\n    )\r\n}\r\n\r\nexport default InputMaskPhone\r\n"," \r\nexport const getColorByPalette = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.primary.main \r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.error.main \r\n        } \r\n        case ('info') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.success.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.default\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('contrast') : {\r\n            return 'contrast'\r\n        } \r\n        default: return color\r\n    } \r\n}\r\nexport const getColorByPaletteForGradient = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return [theme.palette.primary.main, theme.palette.primary.dark] \r\n        } \r\n        case ('secondary') : {\r\n            return [theme.palette.secondary.main, theme.palette.secondary.dark] \r\n        } \r\n        case ('warning') : {\r\n            return [theme.palette.warning.main, theme.palette.warning.dark] \r\n        } \r\n        case ('error') : {\r\n            return [theme.palette.error.main, theme.palette.error.dark] \r\n        } \r\n        case ('info') : {\r\n            return [theme.palette.info.main, theme.palette.info.dark] \r\n        } \r\n        case ('success') : {\r\n            return  [theme.palette.success.main, theme.palette.success.dark]\r\n        } \r\n        case ('default') : {\r\n            return [theme.palette.background.paper, theme.palette.background.default]\r\n        } \r\n        case ('paper') : {\r\n            return [theme.palette.background.default, theme.palette.background.paper]\r\n        } \r\n        default: return [color, color]\r\n    } \r\n}\r\nexport const getColorByPaletteReverse = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('info') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.default\r\n        }\r\n        default: return color\r\n    } \r\n}\r\nexport const isNoThemeColor = (color) => {\r\n    if(\r\n        color !== 'contrast' && \r\n        color !== 'default' && \r\n        color !== 'paper' && \r\n        color !== 'primary' && \r\n        color !== 'secondary' &&\r\n        color !== 'warning' &&\r\n        color !== 'error' &&\r\n        color !== 'info' &&\r\n        color !== 'success' \r\n    ) return true \r\n    else return false \r\n}\r\n","import React , { useEffect, useContext } from 'react'\r\n\r\nimport { Box, makeStyles, IconButton, Typography, darken, Fade  } from '@material-ui/core'\r\n\r\nimport CloseIcon from '@material-ui/icons/Close'; \r\n \r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'  \r\n\r\nimport { getColorByPalette} from '../../components/functions/colorChanger/ColorCalculation'\r\n\r\nconst  ValidationChip = ({ isValid, handleClose, place, absolute, closeOnFirstClick, style, textForView, variantView, colorView}) => {\r\n  \r\n    const { validationSettings } = useContext(SendFormContext)    \r\n\r\n    const variant = variantView ? variantView : validationSettings.variant\r\n\r\n    useEffect(() => {\r\n        const setCloseClick = () => { \r\n            if(closeOnFirstClick) handleCloseChip() \r\n        }  \r\n\r\n        window.addEventListener(\"click\", setCloseClick); \r\n        window.addEventListener(\"scroll\", setCloseClick); \r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('click', setCloseClick)   \r\n            window.removeEventListener('scroll', setCloseClick)   \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    const useStyles = makeStyles( theme => {\r\n         \r\n        const chipColor = colorView ? getColorByPalette(theme, colorView) : getColorByPalette(theme, validationSettings.color)\r\n        return({\r\n            chipContainer: {\r\n                position: absolute ? 'absolute' : 'relative', \r\n                top:  absolute ? -42 : 'auto', \r\n                left: absolute ? 0 : 'auto', \r\n                right: absolute ? 0 : 'auto', \r\n                display: isValid ? 'none' : 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between', \r\n                borderRadius: 16, \r\n                width: '100%', \r\n                marginTop: 8, \r\n                marginBottom: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                transformOrigin: 'bottom', \r\n                minHeight: 30,   \r\n                [theme.breakpoints.down('sm')] : {\r\n                    position: 'relative', \r\n                    top: absolute ? 0 : \"inherit\",\r\n                    marginTop: 0 \r\n                }\r\n            },\r\n            chipFilled: {\r\n                backgroundColor: chipColor,\r\n                color: theme.palette.getContrastText(chipColor),\r\n                '& $closeChip': { \r\n                    backgroundColor: theme.palette.action.selected, \r\n                    '&:hover': {\r\n                        backgroundColor: theme.palette.action.hover, \r\n                    }\r\n                }\r\n            },\r\n            chipOutlined: {\r\n                backgroundColor: 'inherit', \r\n                border: `1px solid ${chipColor}`,  \r\n                color: chipColor,\r\n                '& $closeChip': { \r\n                    backgroundColor: chipColor, \r\n                    '&:hover': {\r\n                        backgroundColor: darken(chipColor), \r\n                    }\r\n                }\r\n            },\r\n            chipLabel: {\r\n                fontSize: \"0.8125rem\", \r\n                lineHeight: 1.15,\r\n                paddingTop: 3, \r\n                paddingBottom: 3, \r\n                paddingLeft: 25,\r\n                paddingRight: 25,\r\n                marginRight: 0, \r\n                flexGrow: 1, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center'\r\n                }\r\n            }, \r\n            closeChip: {\r\n                position: 'absolute',\r\n                top: 'calc(50% - 9px)', \r\n                right: 6,  \r\n                zIndex: 5, \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',   \r\n                width: 18,\r\n                cursor: \"pointer\",\r\n                height: 18, \r\n                fontSize: 15, \r\n                '& svg': {\r\n                    fill: theme.palette.getContrastText(chipColor)\r\n                }\r\n                \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles()\r\n  \r\n    const handleCloseChip = () => { \r\n        handleClose(place)\r\n    }\r\n    const renderText = () => {\r\n        if(textForView) return textForView\r\n        switch(place) {\r\n            case('name') : {\r\n                return validationSettings.name\r\n            }\r\n            case('phone') : {\r\n                return validationSettings.phone\r\n            }\r\n            default: return \"Incorrect field\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fade in={!isValid} timeout={{enter: 300, exit: 0}}>\r\n            <Box className={`${classes.chipContainer} ${variant === 'outlined' ? classes.chipOutlined : classes.chipFilled}`} style={style} >\r\n                <Typography component=\"span\" className={classes.chipLabel}>\r\n                    {renderText()}    \r\n                </Typography>\r\n                <IconButton \r\n                    aria-label=\"close\" \r\n                    onClick={handleCloseChip} \r\n                    size={'small'}\r\n                    className={classes.closeChip}\r\n                >\r\n                    <CloseIcon fontSize={'inherit'} />\r\n                </IconButton>\r\n            </Box>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nexport default ValidationChip\r\n"," \r\nexport const NameValidation = (field) => { \r\n    const answer = {\r\n        isValid: false\r\n    }\r\n    if(field !== undefined ) {\r\n        answer.isValid = field.length > 0 ? true : false \r\n    }\r\n    return answer \r\n}\r\nexport const PhoneValidation = (field) => { \r\n    const answer = {\r\n        isValid: false\r\n    }\r\n    if(field !== undefined ) {\r\n        answer.isValid = !field.includes('_') && field.length > 0 \r\n    } \r\n    return answer \r\n}\r\n \r\n","import React, {useContext, useState} from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton,   \r\n} from '@material-ui/core';  \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\nimport InputMaskPhone from '../functions/InputMaskPhone'\r\nimport ValidationChip from '../utilits/ValidationChip'\r\n\r\nimport { getColorByPalette, getColorByPaletteForGradient} from '../functions/colorChanger/ColorCalculation'\r\n\r\nimport { NameValidation, PhoneValidation} from '../functions/formValidation'\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings, validationSettings } = useContext(SendFormContext)\r\n  const { target, open, handleClose } = useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = useState('')\r\n  const [formName, setFormName] = useState('') \r\n  const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n  const [isValidName, setIsValidName] = useState({isValid: true})\r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone \r\n\r\n  let colorGradient1, colorGradient2, inValidColorFade\r\n  let inValidColor = validationSettings.color \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n     \r\n    colorGradient1 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[0]\r\n    colorGradient2 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[1]\r\n    inValidColor = getColorByPalette(theme, validationSettings.color)   \r\n      \r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1, \r\n          // background: fade(colorGradient1, 0.05), \r\n          \"&:hover\": {\r\n              // background: fade(colorGradient1, 0.05), \r\n          },\r\n        },\r\n        '&:hover': {\r\n          backgroundColor: \"#7979792b\", \r\n        },\r\n         \r\n      },\r\n      inValidInput: {\r\n          borderColor: inValidColor, \r\n          background: inValidColorFade,  \r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n      \r\n    const valphone = PhoneValidation(formPhone) \r\n    const valname = NameValidation(formName) \r\n\r\n    if(valphone.isValid && valname.isValid) {\r\n      const sendForm = {\r\n        phone: formPhone,\r\n        name: formName,  \r\n        target: target,\r\n        place: 'modal',  \r\n        isCheck: false\r\n      }\r\n\r\n      sendRequests(sendForm)\r\n      \r\n      setFormPhone('')\r\n      setFormName('')\r\n      closeModal()\r\n    } else {\r\n      setIsValidName(valname)\r\n      setIsValidPhone(valphone)\r\n    }\r\n      \r\n  } \r\n    \r\n  const closeModal = () => { \r\n    setIsValidName({isValid: true})\r\n    setIsValidPhone({isValid: true})\r\n    handleClose()\r\n  }\r\n\r\n  const handleChangePhone = (value) => {\r\n    setFormPhone(value) \r\n    setIsValidPhone({isValid: true})\r\n  }\r\n  const handleChangeName = (value) => {\r\n    setFormName(value) \r\n    setIsValidName({isValid: true})\r\n  }\r\n\r\n  const handleCloseValidationChip = (place) => {\r\n    if(place === 'name') setIsValidName({isValid: true})\r\n    if(place === 'phone') setIsValidPhone({isValid: true})\r\n  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>  \r\n                      {\r\n                        !isValidName.isValid &&\r\n                        <ValidationChip  \r\n                          isValid={isValidName.isValid} \r\n                          handleClose={handleCloseValidationChip}\r\n                          place={'name'}\r\n                          absolute={false}\r\n                          style={{textAlign: 'center'}}\r\n                        />\r\n                      }\r\n                      {\r\n                        !isValidPhone.isValid &&\r\n                        <ValidationChip  \r\n                          isValid={isValidPhone.isValid}  \r\n                          handleClose={handleCloseValidationChip}\r\n                          place={'phone'}\r\n                          absolute={false}\r\n                          style={{textAlign: 'center'}}\r\n                        />\r\n                      }\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName}  \r\n                          variant='outlined' \r\n                          className={`${classes.input} ${!isValidName.isValid && classes.inValidInput}`} \r\n                          value={formName}\r\n                          onChange={ e => handleChangeName(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      \r\n                      <InputMaskPhone \r\n                          placeholder={`${inputPhone}`}   \r\n                          className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                          value={formPhone}\r\n                          setValue={handleChangePhone}\r\n                      /> \r\n                    </Box> \r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            // paddingBottom: 50,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n            overflowX: 'hidden',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,   \r\n\r\n            transform: 'translateX(-10px)', \r\n            width: 'calc(100% + 20px) ',  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderColor: '#0000',\r\n            borderStyle: `solid`,\r\n            borderWidth: 2,\r\n            borderRadius: '0 0 4px 4px', \r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        btnWithLabel: {\r\n            padding: 0, \r\n            '& label': {\r\n                padding: theme.spacing(1, 2), \r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            outlineOffset: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        responseValues: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            padding: theme.spacing(1, 2),\r\n            margin: theme.spacing(1, 0), \r\n            '& p': {\r\n                margin: 0\r\n            },\r\n            '& svg': {\r\n                marginRight: 8, \r\n            }\r\n        }, \r\n        responseTablets: { \r\n            border: `1px solid ${theme.palette.success.dark}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.dark \r\n            }\r\n        },\r\n        responseMobile: { \r\n            border: `1px solid ${theme.palette.success.light}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.light \r\n            }\r\n        },\r\n        mobileTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.light\r\n        },\r\n        tabletTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.dark\r\n        }, \r\n        dialogContentUnstyle: {\r\n            outline: 0, \r\n            padding: 0\r\n        }, \r\n        infoBlock: {\r\n            display: \"flex\", \r\n            alignItems: 'center', \r\n            padding: theme.spacing(1), \r\n            border: `1px solid ${theme.palette.divider}`, \r\n            '&:hover': {\r\n                borderColor: theme.palette.warning.light,  \r\n                '& $infoBtn': {\r\n                    backgroundColor: theme.palette.warning.main,   \r\n                    '& svg': {\r\n                        fill: theme.palette.getContrastText(theme.palette.warning.main)\r\n                    }\r\n                }\r\n            }, \r\n            '& h6': {\r\n                fontSize: 14, \r\n                lineHeight: 1.2\r\n            }\r\n             \r\n        },\r\n        infoBtn: {\r\n            backgroundColor: theme.palette.divider, \r\n            '&:hover': {\r\n                backgroundColor: theme.palette.warning.light,\r\n            }\r\n        },\r\n        tableSizeContainer: {\r\n            position: 'relative', \r\n            display: 'flex', \r\n            alignItems: 'center'\r\n        },\r\n        tableSizeBtn: {\r\n            margin: theme.spacing(0, 2), \r\n            paddingLeft: theme.spacing(1), \r\n            paddingRight: theme.spacing(1), \r\n            backgroundColor: theme.palette.info.main, \r\n            color: theme.palette.getContrastText(theme.palette.info.main), \r\n            textTransform: 'inherit', \r\n            '&:hover': {\r\n                backgroundColor: theme.palette.info.dark\r\n            }\r\n        }, \r\n        tableSizeAbsolute: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 60, \r\n            // left: 0, \r\n            // right: 0, \r\n            backgroundColor: theme.palette.background.paper,  \r\n        }\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React, { useState } from 'react'\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n\r\nconst AddItem = (props) => {\r\n\r\n    \r\n    const [newItemTitle, setNewItemTitle] = useState('')\r\n    const [newItemSlug, setNewItemSlug] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if(props.id !== null ) props.addItem(newItemTitle, newItemSlug, props.id)\r\n        else props.addItem(newItemTitle, newItemSlug)\r\n        \r\n        \r\n        setNewItemTitle('') \r\n        setNewItemSlug('')\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <Box mb={1}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label={`${props.title} title`} \r\n                        variant=\"outlined\" \r\n                        value={newItemTitle}\r\n                        onChange={(e) => { setNewItemTitle(e.target.value) }}\r\n                    />\r\n                </Box>\r\n                <Box mb={1} style={{position: 'relative'}}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label={`${props.title} slug`} \r\n                        variant=\"outlined\" \r\n                        value={newItemSlug}\r\n                        onChange={(e) => { setNewItemSlug( e.target.value)}}\r\n                            \r\n                    />\r\n                    <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                        <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                            <InfoOutlined color={'secondary'}/>\r\n                        </IconButton>\r\n                    </Tooltip> \r\n                </Box>\r\n                <Box mb={1}>\r\n                    <Button \r\n                        type='submit'\r\n                        color={'primary'} \r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                    >\r\n                        Add New {props.title}\r\n                    </Button> \r\n                </Box>\r\n            </FormGroup>\r\n\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n\r\n    const [value, setValue] = useState(props.itemPages.title)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdatePage(value, props.item.id, props.itemPages.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.itemPages.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Page ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.itemPages.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField \r\n                    required\r\n                    type='text' \r\n                    label=\"Page title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue( e.target.value )}}\r\n                />     \r\n                <TextField  \r\n                    type='text' \r\n                    label=\"Page slug\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.itemPages.slug} \r\n                    disabled={true}\r\n                />  \r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React, { memo, useState, useEffect } from \"react\";\r\n\r\nimport { TextField } from '@material-ui/core' \r\n \r\n\r\n\r\nconst InputChange = memo(({ id, fullWidth, disabled, required, multiline,  type, size, label, variant, value, setValue, setIsDisableBtn }) => {\r\n\r\n   \r\n    const [valueLocal, setValueLocal] = useState(value)   \r\n   \r\n    useEffect(() => {\r\n        if(valueLocal !== value) {\r\n            setValueLocal(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const save = () => { \r\n        if(valueLocal !== value) {\r\n            if(id !== null ) setValue(valueLocal, id)\r\n            else setValue(valueLocal)\r\n\r\n            setIsDisableBtn(false) \r\n        } \r\n    } \r\n    \r\n    const handleChange = (e) => {\r\n        type === 'number' ? setValueLocal(Number(e.target.value)) : setValueLocal(e.target.value)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n      \r\n    return ( \r\n        <TextField\r\n            disabled={disabled}\r\n            required={required}\r\n            fullWidth={fullWidth}\r\n            type={type}\r\n            multiline={multiline}\r\n            size={size}\r\n            label={label}\r\n            variant={variant}\r\n            value={valueLocal}\r\n            onChange={handleChange}\r\n            onBlur={save}\r\n        /> \r\n    )\r\n})\r\n\r\nexport default InputChange\r\n","\r\nimport React from 'react'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\n\r\nconst  Confirm = ({isVariable, show, setShow, title, text, removeText, handleRemoveClick}) => {\r\n \r\n    console.log(show)\r\n\r\n    const handleClose = () => {\r\n        if(isVariable) setShow({show: false, index: null }) \r\n        else setShow(false)\r\n         \r\n    };\r\n    const handleRemove = () => {\r\n        if(isVariable) {\r\n            handleRemoveClick(show.index)\r\n            setShow({show: false, index: null })\r\n        } \r\n        else { \r\n            handleRemoveClick()\r\n            setShow(false)\r\n        } \r\n    }\r\n  \r\n    return ( \r\n        <Dialog \r\n            maxWidth={'sm'}\r\n            open={isVariable ? show.show : show }\r\n            onClose={handleClose}\r\n            aria-labelledby=\"max-width-dialog-title\" \r\n        >\r\n            <DialogTitle style={{minWidth: 350}} id=\"max-width-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {text}\r\n                </DialogContentText>\r\n                \r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant='outlined'\r\n                    onClick={handleClose} \r\n                    color=\"primary\"\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Button \r\n                    variant={'contained'}\r\n                    onClick={handleRemove} \r\n                    color=\"secondary\">\r\n                    {removeText}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default Confirm\r\n","import React, { useContext, useState } from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport AddItem from './category/AddItem' \r\nimport ChangePage from './category/ChangePage'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid,\r\n    fade,\r\n    TextField,  \r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\nimport InputChange from '../../functions/InputChange';\r\nimport Confirm from '../../utilits/Confirm' \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n\r\n    console.log('Categories Changer')\r\n     \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = useContext(CategoryContext)    \r\n    const {layouts} = useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n  \r\n    const [open, setOpen] = useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true)\r\n\r\n    \r\n    const [isVisibleConfirmCategory, setIsVisibleConfirmCategory] = useState({show: false, index: null})   \r\n    const [isVisibleConfirmPage, setIsVisibleConfirmPage] = useState({show: false, index: null})   \r\n \r\n    const handleOpen = () => {  \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting , dialogContentUnstyle } = commonClasses\r\n       \r\n        return( { \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }}, \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,  \r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid ${theme.palette.divider}`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }, \r\n            pageBox: {\r\n                display: 'flex',  \r\n                justifyContent: 'space-between', \r\n                alignItems: 'center', \r\n                marginBottom: theme.spacing(2), \r\n            }, \r\n            pageBoxLi: {\r\n                padding: 5, \r\n                border: `1px solid ${fade(theme.palette.success.light, 0.3)}`\r\n\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (newTitle, newSlug) => {\r\n        let newList = categories.slice() \r\n        let newCategory = JSON.parse(JSON.stringify(categoryLayout)); \r\n\r\n        newCategory.id = uuid()\r\n        newCategory.title = newTitle\r\n        newCategory.slug = newSlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList) \r\n    }\r\n    const addPage = (newTitle, newSlug, id) => {  \r\n        \r\n        let newCategories = categories.slice()\r\n        \r\n        let newPage = JSON.parse(JSON.stringify(pageLayout));  \r\n        newPage.id = uuid()\r\n        newPage.title = newTitle\r\n        newPage.slug = newSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) {  \r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n    } \r\n     \r\n    const handleUpdateCategory = (value, id) => {  \r\n        let newCategories = categories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = categories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        // setCategories(localCategories)\r\n        setIsDisableBtn(true) \r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = JSON.parse(JSON.stringify(categories)) \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n          \r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        })  \r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        setIsVisibleConfirmCategory({show: true, index: id})  \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        setIsVisibleConfirmPage({show: true, index: {categoryId, pageId, slug}})  \r\n    }\r\n    const handleConfirmClickCategory = (id) => {\r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n    } \r\n    const handleConfirmClickPage = (data) => {\r\n        categories.map( category => {\r\n            if(category.id === data.categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== data.pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(data.slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Confirm\r\n                isVariable={true}\r\n                show={isVisibleConfirmCategory}\r\n                setShow={setIsVisibleConfirmCategory} \r\n                title={'Delete category?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"delete\"}\r\n                handleRemoveClick={handleConfirmClickCategory}\r\n            />\r\n            <Confirm\r\n                isVariable={true}\r\n                show={isVisibleConfirmPage}\r\n                setShow={setIsVisibleConfirmPage} \r\n                title={'Delete page?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"delete\"}\r\n                handleRemoveClick={handleConfirmClickPage}\r\n            />\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                               { !isDisableBtn && \"Close to save - \" } Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <AddItem title={'Category'} id={null} addItem={addCategory} />\r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    {\r\n                                                        item.slug === '/' ?\r\n                                                        <Tooltip title=\"You can't remove Home Category\" placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}  \r\n                                                            > \r\n                                                                <InfoOutlined style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button> \r\n                                                        </Tooltip>\r\n                                                        :\r\n                                                        <Tooltip title='Delete Category' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}\r\n                                                                onClick={() => { deleteCategory(item.id) }}\r\n                                                            > \r\n                                                                <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  >  \r\n                                                            <InputChange\r\n                                                                id={item.id}\r\n                                                                fullWidth={true}\r\n                                                                required={true}\r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Category title\"\r\n                                                                variant='filled'\r\n                                                                value={item.title}\r\n                                                                setValue={handleUpdateCategory}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            /> \r\n                                                            <TextField\r\n                                                                type='text' \r\n                                                                label=\"Category slug (read only)\"\r\n                                                                fullWidth\r\n                                                                variant='filled'\r\n                                                                value={item.slug} \r\n                                                                disabled={true} \r\n                                                            /> \r\n\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages}  className={classes.pageBoxLi}  >\r\n                                                                            <Box className={classes.pageBox}  >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            \r\n                                                                            <ChangePage handleUpdatePage={handleUpdatePage} item={item} itemPages={itemPages} /> \r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n\r\n                                                                    <Box mt={2} ml={'auto'} maxWidth={300}>\r\n                                                                        <Box mb={1} ><Typography variant='caption' gutterBottom >Add new page</Typography></Box>\r\n                                                                        <AddItem title={'Page'} id={item.id} addItem={addPage} />\r\n                                                                    </Box> \r\n                                                                 \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box mt={5} />\r\n                                    {/* <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState, useEffect } from \"react\";\r\nimport Draggable from 'react-draggable'; \r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip, Typography } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n    const [isDisableSaveIcon, setIsDisableSaveIcon] = useState(true); \r\n \r\n\r\n    const togglePicker = () => {\r\n        setIsOpen(prevOpen => !prevOpen)\r\n        setColor(initialColor)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const handleChange = (newColor) => {\r\n        setColor(newColor.hex)\r\n        setIsDisableSaveIcon(false)\r\n    }\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit') \r\n        setIsDisableSaveIcon(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(initialColor === 'inherit' ) setColor('#0000')\r\n    }, [initialColor])\r\n\r\n    const useStyles = makeStyles( theme => { \r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'warning' && \r\n            color !== 'error' && \r\n            color !== 'info' && \r\n            color !== 'success' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'contrast' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.short}ms ${theme.transitions.easing.easeInOut} `, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[2]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -290, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }, \r\n            iconButton: {\r\n                padding: theme.spacing(1)\r\n            }, \r\n            iconButtonDisabled: {\r\n                opacity: 0\r\n            }, \r\n            draggableColorTitle: {\r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                padding: theme.spacing(1, 2), \r\n                backgroundColor: theme.palette.background.default, \r\n                cursor: 'move'\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                   \r\n                        <Draggable  handle=\"#draggable-color\"  >\r\n                            <Box className={classes.boxPicker}> \r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.draggableColorTitle}\r\n                                    id=\"draggable-color\"\r\n                                >\r\n                                    Set color <OpenWithIcon/>\r\n                                </Typography>\r\n                                <ChromePicker \r\n                                    color={ color }\r\n                                    onChangeComplete={ handleChange } \r\n                                />\r\n                            </Box>\r\n                        </Draggable>\r\n                    \r\n                }\r\n                {\r\n                    isDisableSaveIcon ? \r\n                    <IconButton disabled={true} className={`${classes.iconButton} ${classes.iconButtonDisabled}`} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save}  color={'primary'} className={classes.iconButton} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react'\r\n\r\nimport { ColorPicker } from './ColorPicker'\r\n\r\nimport { FormControl, InputLabel, Select , MenuItem, Box, makeStyles } from '@material-ui/core'\r\n\r\nfunction ColorSelecter({label, colorSelect, setColorSelect, colorCustom , setColorCustom, setIsDisableBtn, position, noInherit, isContrastSelect }) {\r\n    \r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        block: {\r\n            position: 'absolute', \r\n            top: 'calc(50% - 12px)', \r\n            right: 7, \r\n            height: 24, \r\n            width: 24\r\n        },\r\n        primary: {\r\n            backgroundColor: theme.palette.primary.main\r\n        },\r\n        secondary: {\r\n            backgroundColor: theme.palette.secondary.main\r\n        },\r\n        warning: {\r\n            backgroundColor: theme.palette.warning.main\r\n        },\r\n        error: {\r\n            backgroundColor: theme.palette.error.main\r\n        },\r\n        info: {\r\n            backgroundColor: theme.palette.info.main\r\n        },\r\n        success: {\r\n            backgroundColor: theme.palette.success.main\r\n        },\r\n        defaultColor: {\r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        paper: { \r\n            backgroundColor: theme.palette.background.paper\r\n        }\r\n    }))\r\n    const { block, primary , secondary , warning , error , info, success, defaultColor , paper } = useStyles()\r\n    const colorCustomText = (colorCustom !== 'primary' && colorCustom !== 'secondary' &&  colorCustom !== 'warning' &&\r\n                            colorCustom !== 'error' && colorCustom !== 'info' && colorCustom !== 'success' ) ? ` - ${colorCustom}` : \" \"\r\n    return (\r\n        <Box display=\"flex\" alignItems='center'>\r\n            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                <InputLabel id=\"color-select-label\">{label}</InputLabel>\r\n                <Select\r\n                    labelId=\"color-select-label\"\r\n                    id=\"color-select\"\r\n                    value={colorSelect}\r\n                    onChange={(e) => { setIsDisableBtn(false); setColorSelect(e.target.value) }} \r\n                >\r\n                    <MenuItem style={{position: 'relative'}} value={'primary'}>\r\n                        Primary\r\n                        <Box className={`${block} ${primary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'secondary'}>\r\n                        Secondary \r\n                        <Box className={`${block} ${secondary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'warning'}>\r\n                        Warning\r\n                        <Box className={`${block} ${warning}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'error'}>\r\n                        Error\r\n                        <Box className={`${block} ${error}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'info'}>\r\n                        Info\r\n                        <Box className={`${block} ${info}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'success'}>\r\n                        Success\r\n                        <Box className={`${block} ${success}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'default'}>\r\n                        Default Background\r\n                        <Box className={`${block} ${defaultColor}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'paper'}>\r\n                        Paper Background\r\n                        <Box className={`${block} ${paper}`} />\r\n                    </MenuItem>\r\n                    {   \r\n                        isContrastSelect &&\r\n                        <MenuItem style={{position: 'relative'}} value={'contrast'}>\r\n                            Contrast (about Background)\r\n                        </MenuItem>\r\n                    }\r\n                    <MenuItem value={'custom'}>\r\n                        Custom  {colorCustomText}\r\n                    </MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <Box ml={1} >\r\n                {\r\n                    colorSelect === 'custom' &&\r\n                    <ColorPicker\r\n                        initialColor = {colorCustom}\r\n                        changeColor = {setColorCustom}\r\n                        setIsDisableBtn = {setIsDisableBtn}\r\n                        position = {position}\r\n                        noInherit={noInherit}\r\n                    />  \r\n                }\r\n                \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ColorSelecter\r\n","  \r\nimport firebase from '../../firebase/firebase'\r\n \r\nconst RemoveImage = async (name) => {  \r\n    if(name !== '') {\r\n        const storageRef = firebase.storage.ref();\r\n\r\n        const imageRef = storageRef.child(name)\r\n    \r\n        try {\r\n            await imageRef.delete().then(function() {\r\n                console.log('File deleted successfully')\r\n            }).catch(function(error) {\r\n                console.log(error) \r\n            }); \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }  \r\n} \r\n\r\nexport { RemoveImage }\r\n","import React, { useEffect, useState, useContext } from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch, \r\n} from '@material-ui/core' \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\nimport {DeleteOutline} from '@material-ui/icons'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nimport Confirm from '../../utilits/Confirm'\r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = useContext(CategoryContext)     \r\n    \r\n    const [isVisibleConfirm, setIsVisibleConfirm] = useState(false)    \r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n\r\n    const [mainText, setMainText] = useState(logo.mainText)\r\n    const [subText, setSubText] = useState(logo.subText)\r\n    const [imageUrl, setImageUrl] = useState(logo.imageUrl || '')\r\n    const [imageName, setImageName] = useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = useState(modal.isModal)  \r\n    const [modalText, setModalText] = useState(modal.text) \r\n    const [modalTarget, setModalTarget] = useState(modal.target || 'buy') \r\n\r\n    const [colorSelect,  setColorSelect] = useState(modal.color)\r\n    const [colorCustom, setColorCustom] = useState(modal.color)\r\n\r\n    \r\n    const colorTheme = isNoThemeColor(modal.color) \r\n\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [modal])\r\n\r\n    const handleOpen = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        \r\n        const { menu, menuTitle, btnSetting, btnSave, btnWithLabel, dialogContentUnstyle } = commonClasses\r\n\r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,  \r\n            btnWithLabel: {...btnWithLabel, ...{\r\n                '& label': {\r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    padding: theme.spacing(1, 2)\r\n                }\r\n            }},\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            imageUrl: imageUrl, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText, \r\n            target: modalTarget\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true) \r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        RemoveImage(logo.imageName) \r\n\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => { \r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImageUrl(url) \r\n                setImageName(imageData.name)\r\n                \r\n                setIsDisableBtn(false)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleRemoveImage = () => {\r\n        setIsVisibleConfirm(true)  \r\n    }\r\n    const handleConfirmClick = () => {\r\n        RemoveImage(imageName)\r\n\r\n        setImageUrl('')\r\n        setImageName('')\r\n        setIsDisableBtn(false)\r\n    } \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirm}\r\n                setShow={setIsVisibleConfirm} \r\n                title={'Remove icon?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClick}\r\n            />\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Logo/Modal Settings  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Box display='flex'>\r\n                                        <Button \r\n                                            color='primary'\r\n                                            variant='contained' \r\n                                            className={classes.btnWithLabel}\r\n                                        >  \r\n                                            <label htmlFor='image-input-label' style={{whiteSpace: 'nowrap'}}> <ImageIcon color=\"action\" /> Set Logo </label>\r\n                                            <input \r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\" \r\n                                                onChange={handleImageSetting} \r\n                                                style={{ display: \"none\" }}\r\n                                            />\r\n                                        </Button>\r\n                                        {\r\n                                            imageUrl.length > 0 && \r\n                                            <Box mx={1}>\r\n                                                <Tooltip title='Remove logo' placement='top' >\r\n                                                    <Button\r\n                                                        size='small'\r\n                                                        color='secondary'\r\n                                                        variant='contained'\r\n                                                        onClick={handleRemoveImage}\r\n                                                    >\r\n                                                        <DeleteOutline/>\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n                                            </Box>\r\n                                        }\r\n                                    </Box>\r\n                                   \r\n\r\n                                    {\r\n                                        imageUrl.length > 0 &&\r\n                                        <Box mt={1}>\r\n                                            <img\r\n                                                width={60}\r\n                                                src={imageUrl}\r\n                                                alt='logo'\r\n                                            /> \r\n                                        </Box>\r\n                                    }\r\n                                </Grid>\r\n                                <Grid item xs={7}> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    /> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <Box mr={1} display='inline'>\r\n                                                    <TextField\r\n                                                        type='text'\r\n                                                        label=\"Text for Button\"\r\n                                                        variant=\"outlined\"\r\n                                                        value={modalText}\r\n                                                        onChange={(e) => {\r\n                                                        setIsDisableBtn(false);\r\n                                                        setModalText(e.target.value)\r\n                                                    }}/>  \r\n                                                </Box> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Target for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalTarget}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalTarget(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <ColorSelecter\r\n                                                label={'Color for Button'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={true}\r\n                                            /> \r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box mt={5} /> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","import React from 'react'\r\n\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst SelectShadow =  ({variant, size, className, label, value, setValue, setIsDisableBtn}) => {\r\n    \r\n   \r\n    const theme = useTheme(); \r\n    const handleChange = (changedValue) => {\r\n        setValue(changedValue)\r\n        setIsDisableBtn(false)\r\n    }\r\n   \r\n    return ( \r\n        <FormControl  \r\n            variant={variant}\r\n            size={size}   \r\n            className={className}\r\n        >\r\n            <InputLabel id=\"Shadow-style-label\">{label}</InputLabel>\r\n            <Select\r\n                labelId=\"Shadow-label\"\r\n                id=\"Shadow-style\"\r\n                defaultValue={'none'}\r\n                value={value} \r\n                autoWidth={true}\r\n                MenuProps={{style: {maxHeight: 400}}}\r\n                onChange={(e) => {handleChange(e.target.value) }}\r\n            > \r\n                {\r\n                    theme.shadows.map( (item, index) => {\r\n                        const title = item === 'none' ? 'None' : `Shadow - ${index}`\r\n                        return <MenuItem key={index} value={item}>{title}</MenuItem>\r\n                    })\r\n                } \r\n            </Select>\r\n        </FormControl> \r\n    )\r\n}\r\n\r\nexport default SelectShadow\r\n","\r\nimport React, { useEffect, useState, useContext } from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport SelectShadow from '../../functions/SelectShadow'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n    IconButton\r\n} from '@material-ui/core' \r\n\r\nimport {InfoOutlined} from '@material-ui/icons'; \r\n  \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = useState(settings.classes.backgroundColor ||  'transparent')\r\n\r\n    \r\n    const colorTheme = isNoThemeColor(settings.classes.backgroundColor) \r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [settings])\r\n     \r\n    const handleOpen = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle, infoBtn, infoBlock } = commonClasses\r\n        \r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,  \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n            infoBlock: infoBlock,\r\n            infoBtn: infoBtn,\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true) \r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style Header</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                               { !isDisableBtn && \"Close to save - \" }  Header Style Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <SelectShadow\r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                        label='Header shadow'\r\n                                        value={settingBoxShadow}\r\n                                        setValue={setSettingBoxShadow}\r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                    />\r\n                                    \r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                        <ColorSelecter\r\n                                            label={'Background for Header'}\r\n                                            colorSelect={settingBackgroundSelect} \r\n                                            setColorSelect={setSettingBackgroundSelect}\r\n                                            colorCustom={settingBackgroundCustom}\r\n                                            setColorCustom={setSettingBackgroundCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        />\r\n                                             \r\n                                        </Box>\r\n                                        <Box className={classes.infoBlock} mt={2}> \r\n                                            <Box mr={1}>  \r\n                                                <IconButton className={classes.infoBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton> \r\n                                            </Box>\r\n                                            <Box>\r\n                                                <Typography variant='h6'>\r\n                                                    Max Width , Fixed  and Disable Gutters settings also share for footer \r\n                                                </Typography>   \r\n                                            </Box>\r\n                                        </Box>\r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box mt={5} /> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React, { useState, useContext } from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../functions/colorChanger/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = useState(themeDark.palette.secondary.main) \r\n\r\n    const [lightError, setLightError] = useState(themeLight.palette.error.main) \r\n    const [darkError, setDarkError] = useState(themeDark.palette.error.main) \r\n\r\n    const [lightWarning, setLightWarning] = useState(themeLight.palette.warning.main) \r\n    const [darkWarning, setDarkWarning] = useState(themeDark.palette.warning.main) \r\n\r\n    const [lightInfo, setLightInfo] = useState(themeLight.palette.info.main) \r\n    const [darkInfo, setDarkInfo] = useState(themeDark.palette.info.main) \r\n\r\n    const [lightSuccess, setLightSuccess] = useState(themeLight.palette.success.main) \r\n    const [darkSuccess, setDarkSuccess] = useState(themeDark.palette.success.main) \r\n \r\n    // text.primary\r\n    // text.secondary\r\n    // text.disabled\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, dialogContentUnstyle } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }, \r\n            dialogContentUnstyle: dialogContentUnstyle\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    const handleSave = () => {  \r\n \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                },\r\n                error: {\r\n                    main: lightError\r\n                },\r\n                warning: {\r\n                    main: lightWarning\r\n                },\r\n                info: {\r\n                    main: lightInfo\r\n                },\r\n                success: {\r\n                    main: lightSuccess\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                },\r\n                error: {\r\n                    main: darkError\r\n                },\r\n                warning: {\r\n                    main: darkWarning\r\n                },\r\n                info: {\r\n                    main: darkInfo\r\n                },\r\n                success: {\r\n                    main: darkSuccess\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                               { !isDisableBtn && \" Don't forget to save  - \" }Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={2}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Warning - { lightWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightWarning}\r\n                                        changeColor = {setLightWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Error - { lightError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightError}\r\n                                        changeColor = {setLightError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Info - { lightInfo }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightInfo}\r\n                                        changeColor = {setLightInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Success - { lightSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSuccess}\r\n                                        changeColor = {setLightSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Warning- { darkWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkWarning}\r\n                                        changeColor = {setDarkWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Error - { darkError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkError}\r\n                                        changeColor = {setDarkError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Info - { darkInfo}\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkInfo}\r\n                                        changeColor = {setDarkInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Succwss - { darkSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSuccess}\r\n                                        changeColor = {setDarkSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React, { useEffect, useState, useContext } from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n  \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors' \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport InputChange from '../../functions/InputChange'\r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n\r\n    const [heading, setHeading] = useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n     \r\n    const colorTheme = isNoThemeColor(modalSettings.colorButton)\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [modalSettings.colorButton])\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle } = commonClasses\r\n\r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                },\r\n                '&:hover': {\r\n                    backgroundColor: amber[700],  \r\n                }\r\n            }},  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true) \r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Modal Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}> \r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Heading\" \r\n                                    variant='outlined'\r\n                                    value={heading}\r\n                                    setValue={setHeading}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Sub Heading\"\r\n                                    variant='outlined'\r\n                                    value={subHeading}\r\n                                    setValue={setSubHeading}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Target text\" \r\n                                    variant='outlined'\r\n                                    value={targetText}\r\n                                    setValue={setTargetText}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Input Name text\" \r\n                                    variant='outlined'\r\n                                    value={inputName}\r\n                                    setValue={setInputName}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Input Phone text\" \r\n                                    variant='outlined'\r\n                                    value={inputPhone}\r\n                                    setValue={setInputPhone}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Button text\" \r\n                                    variant='outlined'\r\n                                    value={buttonText}\r\n                                    setValue={setButtonText}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />  \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label=\"Policy text\" \r\n                                    variant='outlined'\r\n                                    value={policy}\r\n                                    setValue={setPolicy}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />  \r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <ColorSelecter\r\n                                    label={'Color for Button'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={true}\r\n                                /> \r\n                            </Box>\r\n                             \r\n                            <Box mt={5} /> \r\n\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React, { useEffect, useContext, useState} from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport Confirm from '../../utilits/Confirm'\r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = useContext(LoadingContext)     \r\n    const { requests, updateRequests } = useContext(SendFormContext)     \r\n \r\n    const [isVisibleConfirm, setIsVisibleConfirm] = useState({show: false, index: null}) \r\n  \r\n    const [localRequests, setLocalRequests] = useState(requests)\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n\r\n    useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, dialogContentUnstyle } = commonClasses\r\n        \r\n        return ({ \r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                },\r\n                '&:hover': {\r\n                    backgroundColor: amber[700],  \r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {    \r\n        setIsVisibleConfirm({show: true, index: id})  \r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n \r\n    const handleConfirmClick = (id) => { \r\n        const filtered = localRequests.filter(item => ( item.time !== id ))\r\n    \r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false) \r\n    } \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            \r\n            <Confirm\r\n                isVariable={true}\r\n                show={isVisibleConfirm}\r\n                setShow={setIsVisibleConfirm} \r\n                title={'Remove request?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClick}\r\n            />\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \" Don't forget to save - \" } Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React, { useEffect, useState, useContext } from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    IconButton,\r\n    MenuItem, \r\n    FormControl,\r\n    Select, \r\n    InputLabel\r\n} from '@material-ui/core' \r\nimport {InfoOutlined} from '@material-ui/icons'; \r\n\r\nimport { blue } from '@material-ui/core/colors' \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\n\r\nimport InputChange from '../../functions/InputChange'\r\nimport ValidationChip from '../../utilits/ValidationChip'\r\n\r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = useContext(LoadingContext)     \r\n    const { validationSettings, updateValidationSettings } = useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n\r\n    const [mask, setMask] = useState(validationSettings.mask || '')  \r\n    const [name, setName] = useState(validationSettings.name || '')\r\n    const [phone, setPhone] = useState(validationSettings.phone || '')\r\n    const [variant, setVariant] = useState(validationSettings.variant || 'filled')\r\n    const [colorSelect,  setColorSelect] = useState(validationSettings.color || 'error')\r\n    const [colorCustom, setColorCustom] = useState(validationSettings.color || 'error')\r\n\r\n    const colorTheme = isNoThemeColor(validationSettings.color) \r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [validationSettings.color])  \r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    const handleChangeVariant = (value) => {\r\n        setVariant(value)\r\n    }\r\n         \r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        const { menu, menuTitle, btnSetting, dialogContentUnstyle, infoBlock, infoBtn } = commonClasses\r\n \r\n        return ({  \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: blue[700], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                },\r\n                '&:hover': {\r\n                    backgroundColor: blue[500], \r\n                },\r\n            }},  \r\n            infoBlock: infoBlock,\r\n            infoBtn: infoBtn,  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, validationSettings) \r\n         \r\n        newData.mask = mask \r\n        newData.name = name \r\n        newData.phone = phone \r\n        newData.variant = variant \r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true) \r\n\r\n        updateValidationSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Validation Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Validation</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}} > \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Validation Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label='Error text for Name input'\r\n                                    variant='outlined'\r\n                                    value={name}\r\n                                    setValue={setName}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />  \r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label='Error text for Phone input'\r\n                                    variant='outlined'\r\n                                    value={phone}\r\n                                    setValue={setPhone}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                            </Box> \r\n                            <Box my={2}>\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    type='text'\r\n                                    size=\"small\" \r\n                                    label='Mask Phone input'\r\n                                    variant='outlined'\r\n                                    value={mask}\r\n                                    setValue={setMask}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                /> \r\n                                \r\n                            </Box> \r\n                            <Box my={2}>\r\n                                <ColorSelecter\r\n                                    label={'Background'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'top'}\r\n                                    noInherit={true}\r\n                                />\r\n                            </Box> \r\n                            <Box my={2}>\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'    \r\n                                >\r\n                                    <InputLabel id=\"variant-style-label\">Variant</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"variant-label\"\r\n                                        id=\"variant-style\"\r\n                                        value={variant}\r\n                                        style={{minWidth: 180}}\r\n                                        onChange={(e) => {setIsDisableBtn(false); handleChangeVariant(e.target.value) }}\r\n                                    > \r\n                                        <MenuItem value={'filled'}>Filled</MenuItem> \r\n                                        <MenuItem value={'outlined'}>Outlined</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box> \r\n                            <Box className={classes.infoBlock}> \r\n                                <Box mr={1}>  \r\n                                    <IconButton className={classes.infoBtn} >\r\n                                        <InfoOutlined/>\r\n                                    </IconButton> \r\n                                </Box>\r\n                                <Box>\r\n                                    <Typography>\r\n                                        Validation Setting is common for all fields on site\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        Enter the mask in the format \"+7 (999) 999-99-99\", where 9 is any number  \r\n                                    </Typography> \r\n                                    <ValidationChip \r\n                                        textForView={name} \r\n                                        variantView={variant} \r\n                                        colorView={colorSelect === 'custom' ? colorCustom : colorSelect} \r\n                                        isValid={false} \r\n                                        handleClose={() => {}} \r\n                                        absolute={false} \r\n                                        closeOnFirstClick={false}\r\n                                    />\r\n                                    <ValidationChip \r\n                                        textForView={phone} \r\n                                        variantView={variant} \r\n                                        colorView={colorSelect === 'custom' ? colorCustom : colorSelect} \r\n                                        isValid={false} \r\n                                        handleClose={() => {}} \r\n                                        absolute={false} \r\n                                        closeOnFirstClick={false}\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                             \r\n                            <Box mt={5} /> \r\n\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","export default __webpack_public_path__ + \"static/media/half-moon.4946e6c2.svg\";","export default __webpack_public_path__ + \"static/media/sun.b7c92f87.svg\";","import React from 'react'\r\n\r\nimport {  \r\n    FormControlLabel, \r\n    Switch,\r\n    withStyles\r\n} from \"@material-ui/core\"; \r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\n \r\nimport darkThemeIcon from '../../../assets/icons/half-moon.svg'\r\nimport lightThemeIcon from '../../../assets/icons/sun.svg' \r\n\r\nfunction ThemeSwitcher() {\r\n\r\n    const { setThemeMode, themeMode} = React.useContext(CategoryContext)    \r\n  \r\n    const checked = themeMode === 'dark' ? true : false\r\n    \r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    const ThemeCustomSwitch = withStyles((theme) => ({\r\n        root: {\r\n          width: 60,\r\n          height: 28,\r\n          padding: 0, \r\n          marginRight: 5\r\n        },\r\n        switchBase: {\r\n          padding: 1,  \r\n          '&$checked': {\r\n            transform: 'translateX(32px)',\r\n            color: '#27536b',\r\n            '& + $track': {\r\n              backgroundColor: '#27536b',\r\n              opacity: 1,\r\n              border: 'none',\r\n            },\r\n            '&  $thumb': { \r\n              opacity: 1,\r\n              border: 'none',\r\n              backgroundImage: `url(${darkThemeIcon})`\r\n            },\r\n          },\r\n          '&$focusVisible $thumb': {\r\n            color: '#52d869', \r\n          },\r\n        },\r\n        thumb: {\r\n          width: 26,\r\n          height: 26,\r\n          backgroundImage: `url(${lightThemeIcon})`,\r\n          backgroundSize: '28px',\r\n          backgroundPosition: 'center',  \r\n        },\r\n        track: {\r\n          borderRadius: 28 / 2,\r\n          border: `1px solid #a3d4ff`,\r\n          backgroundColor: '#a3d4ff',\r\n          opacity: 1,\r\n          transition: theme.transitions.create(['background-color', 'border']),\r\n        },\r\n        checked: {},\r\n        focusVisible: {},\r\n      }))(({ classes, ...props }) => {\r\n        return (\r\n          <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n              root: classes.root,\r\n              switchBase: classes.switchBase,\r\n              thumb: classes.thumb,\r\n              track: classes.track,\r\n              checked: classes.checked,\r\n            }}\r\n            {...props}\r\n          />\r\n        );\r\n      });\r\n    return ( \r\n        <FormControlLabel\r\n            control={<ThemeCustomSwitch checked={checked} onChange={handleChange} name=\"checkedB\" />}\r\n            label={checked ? 'Night Mode' : 'Light Mode'}\r\n        /> \r\n    ) \r\n}\r\n\r\nexport default ThemeSwitcher\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                // paddingLeft: 10, \r\n                // paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n    Button\r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nconst Mobile = (props) => { \r\n \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: props.menuColor,\r\n                    color: props.iconColor\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            drawerHeader: {\r\n                margin: theme.spacing(1, 2), \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between', \r\n                '& .log-button': {\r\n                    minWidth: 100\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset, drawerHeader } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n    const handleModal = () => {\r\n        handleDrawerClose()\r\n        props.openModal()\r\n    }\r\n\r\n    return (\r\n        <Toolbar disableGutters style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box className={drawerHeader}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        {\r\n                            props.user ? \r\n                            <Button \r\n                                size='medium'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={ () => { props.handleSignOut(); handleDrawerClose()  } }\r\n                                className={'log-button'}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                            :\r\n                            <NavLink to='/login' onClick={handleDrawerClose}>\r\n                                <Button  \r\n                                    color='primary' \r\n                                    variant=\"contained\"\r\n                                    size='medium'\r\n                                    className={'log-button'} \r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </NavLink>\r\n                        }\r\n                        \r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box my={3} width={'100%'} clone={true} onClick={handleModal}>\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                    \r\n                    <Box px={3} my={2} >\r\n                        <Box  width={'100%'} clone={true} >\r\n                            <ThemeSwitcher/>\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                color: \"default\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon style={{color: props.iconColor}} />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n   \r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button, \r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\n\r\nimport { getColorByPalette } from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent() { \r\n\r\n    console.log('dumb header')\r\n\r\n    const { setCustomAlert } = React.useContext(SendFormContext)\r\n    const { user } = React.useContext(ModeContext)\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings } = React.useContext(CategoryContext)    \r\n    \r\n    const [mobileView, setMobileView] = useState(true); \r\n   \r\n    let backgroundHeader\r\n    let colorHeader \r\n    let hoverActiveLinkColor \r\n  \r\n    let modalBtnColor = modal.color  \r\n\r\n    let widthMobile \r\n     \r\n    const headerRef = React.useRef(null);\r\n    const topHeaderRef = React.useRef(null);\r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`] \r\n        modalBtnColor= getColorByPalette(theme, modal.color)  \r\n\r\n        backgroundHeader = getColorByPalette(theme, settings.classes.backgroundColor) \r\n\r\n        hoverActiveLinkColor = darken(backgroundHeader, 0.3)\r\n        colorHeader =  theme.palette.getContrastText(backgroundHeader)  \r\n \r\n        if(settings.classes.backgroundColor === 'paper' || settings.classes.backgroundColor === 'default') {  \r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n  \r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `, \r\n               \r\n                top: 0,  \r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n                '&.sticky' : {\r\n                    transform: \"translateY(-41px)\",\r\n                    [`@media (max-width: ${widthMobile}px)`]: {\r\n                        transform: \"translateY(0px)\",\r\n                    }\r\n                }\r\n            },\r\n            fixedPadding: { \r\n                minHeight: 100 + settings.classes.paddingY*2 , \r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    minHeight: 60 + settings.classes.paddingY , \r\n                },\r\n            },\r\n            topHeader: {   \r\n                height: '100%', \r\n                paddingTop: 5, \r\n                paddingBottom: 5,  \r\n                backgroundColor:  \"rgba(0, 0, 0, 0.16)\" , \r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `,  \r\n                '&.sticky' : {\r\n                    // transform: 'scaleY(0)',\r\n                    // transformOrigin: 'top', \r\n                    height: 0, \r\n                    opacity: 0\r\n                }\r\n            },\r\n            logoMain: { \r\n                fontWeight: 700,\r\n                fontSize: 22,\r\n                color: colorHeader , \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundColor: modalBtnColor,   \r\n                color: theme.palette.getContrastText(modalBtnColor), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': {  \r\n                    backgroundColor: darken(modalBtnColor, .3) , \r\n                }\r\n            }, \r\n            linkModal: {  \r\n                textTransform: 'inherit', \r\n                color: colorHeader, \r\n                padding: theme.spacing(0.5, 1.2),\r\n                '&:hover': { \r\n                    backgroundColor: modalBtnColor, \r\n                    color: theme.palette.getContrastText(modalBtnColor), \r\n                    cursor: 'pointer'\r\n                }\r\n            },\r\n            loginBtn: {\r\n                color: colorHeader,\r\n                borderColor: colorHeader\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal, linkModal, topHeader, loginBtn} = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {  \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        const setScrollHeader = () => { \r\n            if(mobileView) {\r\n                const headerTop =  window.pageYOffset \r\n                try {\r\n                    if( headerTop > 1 ) {\r\n                        headerRef.current.classList.add('sticky')\r\n                    } else {\r\n                        headerRef.current.classList.remove('sticky')\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.log(err)\r\n                } \r\n            }\r\n        } \r\n        setResponsiveness(); \r\n        setScrollHeader();\r\n\r\n        window.addEventListener(\"resize\", setResponsiveness);\r\n        window.addEventListener(\"scroll\", setScrollHeader);\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', setResponsiveness) \r\n            window.removeEventListener('scroll', setScrollHeader) \r\n        }\r\n        // eslint-disable-next-line \r\n    }, []);\r\n     \r\n\r\n    const openModal = () => { \r\n        handleOpen(modal.target) \r\n    }\r\n\r\n    const handleSignOut = () => { \r\n        firebase.logout()\r\n        setCustomAlert('warning', 'You are logged out successfully', 3000)\r\n    }\r\n  \r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                {\r\n                    logo.imageUrl.length > 0 && \r\n                    <img className={logoImage} src={logo.imageUrl} alt={'logo'}/> \r\n                }\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    {\r\n                        logo.mainText.length > 0 &&\r\n                        <Typography component=\"h1\" className={logoMain}>\r\n                            {logo.mainText}\r\n                        </Typography>\r\n                    }\r\n                    {\r\n                        logo.subText.length > 0 &&\r\n                        <Typography  component=\"p\" className={logoSub}>\r\n                            {logo.subText}\r\n                        </Typography>\r\n                    }\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button \r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n    const topHeaderModalBtn = () => ( \r\n        <Button\r\n            onClick={() => { openModal(modal.target) }} \r\n            className={linkModal}\r\n            size='small' \r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n                 \r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            } \r\n            <AppBar className={header} ref={headerRef}  id='header'>\r\n                    { \r\n                        !mobileView &&\r\n                        <Box className={topHeader} ref={topHeaderRef} >\r\n                            <Container \r\n                                disableGutters={settings.disableGutters}\r\n                                fixed={settings.fixed} \r\n                                maxWidth={settings.maxWidth}  \r\n                            > \r\n                                <Box display='flex' alignItems='center' justifyContent='space-between'>\r\n                                    {  modal.isModal ? topHeaderModalBtn() : ( <span></span> ) }\r\n                                    <Box display='flex' alignItems='center' >\r\n                                        \r\n                                        <ThemeSwitcher/>\r\n                                        \r\n                                        {\r\n                                            user ?\r\n                                            <Button \r\n                                                size='small'\r\n                                                color='secondary' \r\n                                                variant={'contained'} \r\n                                                onClick={handleSignOut}\r\n                                            >\r\n                                                Sign Out\r\n                                            </Button>\r\n                                            :\r\n                                            <NavLink to='/login'>\r\n                                                <Button \r\n                                                    color='default' \r\n                                                    variant=\"outlined\"\r\n                                                    size='small'\r\n                                                    className={loginBtn}\r\n                                                >\r\n                                                    Login\r\n                                                </Button>\r\n                                            </NavLink>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n                                </Box>\r\n                            </Container>\r\n                        </Box>\r\n                    }\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop   \r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            openModal={openModal}\r\n                            iconColor={colorHeader}  \r\n                            menuColor={backgroundHeader}  \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                            user={user}\r\n                            handleSignOut={handleSignOut}\r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","\r\nimport React, { useState } from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\nimport ValidationChanger from './headerHelpers/ValidationChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\n\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: open ? 1 : 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 10, \r\n            top: 5, \r\n            width: 60, \r\n            height: 60,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            textAlign: 'center' ,\r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.headerContainer}>\r\n  \r\n            <div>   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >   \r\n                    {open ? 'close' : 'open' }\r\n                    <br/>\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <RequestsChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ValidationChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { makeStyles, Box, Typography, Container, IconButton, Tooltip, darken } from '@material-ui/core'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nimport { getColorByPalette } from '../functions/colorChanger/ColorCalculation'\r\n\r\nfunction Footer() {\r\n\r\n    const { logo, settings } = React.useContext(CategoryContext)\r\n \r\n    let backgroundFooter = settings.classes.backgroundColor\r\n    let contrastFooter\r\n    let hoverActiveLinkColor\r\n     \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        backgroundFooter = getColorByPalette(theme, backgroundFooter) \r\n        contrastFooter = theme.palette.getContrastText(backgroundFooter)\r\n        hoverActiveLinkColor = darken(backgroundFooter, 0.3)\r\n\r\n        if(settings.classes.backgroundColor === 'paper' || settings.classes.backgroundColor === 'default') {  \r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n\r\n        return({ \r\n            footer: {\r\n                backgroundColor: backgroundFooter, \r\n                padding: theme.spacing(3, 0)\r\n            }, \r\n            logoMain: { \r\n                color: contrastFooter,\r\n                fontWeight: 700,\r\n                fontSize: 25, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                color: contrastFooter,\r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 70, \r\n                height: 50, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: 45, \r\n                    height: 30, \r\n                },\r\n            },  \r\n            buttonToTop: {\r\n                '&:hover': {\r\n                    backgroundColor: hoverActiveLinkColor\r\n                }\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n \r\n    const createLogo = () => (\r\n        <NavLink to={'/'} style={{textDecoration: 'none', display: 'inline-block'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                {\r\n                    logo.imageUrl.length > 0 && \r\n                    <img className={classes.logoImage} src={logo.imageUrl} alt={'logo'}/>\r\n                }\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    {\r\n                        logo.mainText.length > 0 &&\r\n                        <Typography component=\"h1\" className={classes.logoMain}>\r\n                            {logo.mainText}\r\n                        </Typography>\r\n                    }\r\n                    {\r\n                        logo.subText.length > 0 && \r\n                        <Typography  component=\"p\" className={classes.logoSub}>\r\n                            {logo.subText}\r\n                        </Typography>\r\n                    }\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n    const buttonToTop = () => (\r\n        <Tooltip title='To Top' placement='top' >\r\n            <IconButton \r\n                className={classes.buttonToTop}  \r\n                onClick={handleClickToTop}\r\n            >\r\n                <KeyboardArrowUpIcon style={{fill: contrastFooter}}/>\r\n            </IconButton>\r\n        </Tooltip>\r\n    )\r\n    const handleClickToTop = () => {\r\n        window.scrollTo({\r\n            top: 0, \r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container \r\n                maxWidth={settings.maxWidth}\r\n                fixed={settings.fixed}\r\n                disableGutters={settings.disableGutters}\r\n            > \r\n                <Box display='flex' alignItems=\"center\" justifyContent='space-between'>\r\n                    { createLogo() }\r\n                    { buttonToTop() }\r\n                </Box>\r\n                 \r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../../firebase/firebase' \r\n\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext' \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext' \r\n \r\nimport { Avatar, Button, TextField, Box, Container, CircularProgress, Typography, Tooltip } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert, AlertTitle } from '@material-ui/lab'; \r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setCustomAlert } = useContext(SendFormContext)\r\n    const { setIsLoading } = useContext(LoadingContext) \r\n    const { user } = useContext(ModeContext) \r\n \r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const [error, setError] = useState(null)\r\n    const [isRedirect, setIsRedirect] = useState(false)\r\n    \r\n    const [isSubmit, setIsSubmit] = useState(false)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n    \r\n    useEffect( () => {\r\n        setIsLoading(false) \r\n        if(user) setIsRedirect(true)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          marginBottom: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: isSubmit ? theme.palette.primary.main : theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', // Fix IE 11 issue.\r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submitBtn: {  \r\n            minHeight: 55\r\n        },\r\n        forgotTitle: {\r\n            textAlign: 'center'\r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n    const disableCheck = ({value1, value2}) => { \r\n        console.log(value1, value2)\r\n        if(value1 !== '' && value2 !== '') setIsDisableBtn(false)\r\n        else setIsDisableBtn(true)   \r\n    }\r\n\r\n    const handleChange = (value, place) => {\r\n        switch(place) {\r\n            case ('name') : { \r\n                setName(value)\r\n                break;\r\n            }\r\n            case ('password'): {\r\n                setPassword(value)\r\n                break;\r\n            }\r\n            default: break;\r\n        } \r\n        setError(null)\r\n        disableCheck({\r\n            value1: value, \r\n            value2: place === 'name' ? password : name\r\n        })\r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        setIsLoading(true)\r\n        setIsDisableBtn(true)\r\n        setIsSubmit(true)\r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n            setIsSubmit(false) \r\n            setCustomAlert('success', `Hello, ${res.user.email}. Now you can change site`, 7000)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n            setIsSubmit(false)\r\n            setIsLoading(false)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>  \r\n            {/* <Dumb/> */}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        { isSubmit ? <CircularProgress size={25} style={{color: '#fff'}} /> : <LockOutlinedIcon /> }\r\n                    </Avatar> \r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                id=\"text\"\r\n                                label=\"User\"\r\n                                name=\"user\"\r\n                                autoComplete='true'\r\n                                autoFocus\r\n                                value={name}\r\n                                onChange={  (e)=>{handleChange(e.target.value, 'name')} }\r\n                            />\r\n                        </Box>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\" \r\n                                value={password}\r\n                                onChange={  (e)=>{handleChange(e.target.value, 'password')} }\r\n                            />\r\n                        </Box>\r\n                        {\r\n                            error && \r\n                            <Box mb={2} >\r\n                                <Alert severity=\"error\"> \r\n                                    <AlertTitle>Error</AlertTitle>\r\n                                    {error.message}\r\n                                </Alert>\r\n                            </Box>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            size='medium'\r\n                            color=\"primary\"\r\n                            className={classes.submitBtn}\r\n                            disabled={isDisableBtn} \r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                        \r\n                    <Box mt={2} >\r\n                        <Tooltip title=\"It's your problem\" placement='top'>\r\n                            <Typography variant='caption' className={classes.forgotTitle}>\r\n                                Forgot Password? \r\n                            </Typography>\r\n                        </Tooltip>\r\n                    </Box>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React, { useEffect, useContext } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = useContext(LoadingContext)\r\n\r\n    useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/' style={{color: 'inherit'}}>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5, \r\n            display: 'flex', \r\n            alignItems: 'center'\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React, { useEffect, useState, useContext } from 'react' \r\nimport Draggable from 'react-draggable'; \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\n\r\nimport uuid from 'react-uuid' \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter' \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu, Tooltip,\r\n    FormControl, InputLabel,\r\n    Select, Typography, IconButton, \r\n    Modal, DialogContent, \r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\nimport SelectShadow from '../../functions/SelectShadow';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n    const libraryList = layouts.list\r\n\r\n  \r\n    const [padding, setPadding] = useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [colorSelect,  setColorSelect] = useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = useState(props.data.classes.color || 'inherit')\r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = useState(props.data.classes.backgroundColor || 'inherit')\r\n    const [backgroundCustom, setBackgroundCustom] = useState(props.data.classes.backgroundColor || 'inherit')\r\n\r\n    const [borderColorSelect,  setBorderColorSelect] = useState(props.data.classes.borderColor || 'inherit')\r\n    const [borderColorCustom, setBorderColorCustom] = useState(props.data.classes.borderColor || 'inherit')\r\n \r\n    const [shadow, setShadow] = useState(props.data.classes.boxShadow || 'none')\r\n \r\n    const [borderStyle, setBorderStyle] = useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = useState(props.data.classes.borderWidth ||  0)\r\n    const [borderRadius, setBorderRadius] = useState(props.data.classes.borderRadius ||  0)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n  \r\n\r\n    const [settingGutter, setSettingGutter] = useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = useState(props.data.innerContainer || false ) \r\n\r\n    const [anchorEl, setAnchorEl] = useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer\r\n    }\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor])\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem  } = commonStyle \r\n \r\n        \r\n        return ({   \r\n            dialogContentUnstyle:dialogContentUnstyle, \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                // maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                width: 600, \r\n            } },\r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip,\r\n            addItemBtn: {\r\n                marginBottom: theme.spacing(1), \r\n                marginRight: theme.spacing(2), \r\n                display: 'inline-block'\r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,  \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection  \r\n    }  \r\n     \r\n\r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.handleClose()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = props.data.children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = JSON.parse(JSON.stringify(libraryHeading)); \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraph)); \r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraphImage)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            case 'list' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryList)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n   \r\n        props.handleClose()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        if (backgroundSelect === 'custom') { myClassName.backgroundColor = backgroundCustom }\r\n        else { myClassName.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { myClassName.color = colorCustom } \r\n        else { myClassName.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { myClassName.borderColor = borderColorCustom } \r\n        else { myClassName.borderColor = borderColorSelect }\r\n\r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true);  \r\n    } \r\n\r\n    const handleClose = () => {\r\n        if(!isDisableBtn)reSaveClassesSettings()\r\n        props.handleClose()\r\n    } \r\n    \r\n    \r\n    \r\n \r\n    return (\r\n        <Box >    \r\n            \r\n            <Box style={{position: 'relative'}} >  \r\n                <Modal \r\n                    open={props.open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                     { !isDisableBtn && \"Close to save - \" } Container Settings<OpenWithIcon/>\r\n                                </Typography>\r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item to Container\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box className={classes.addItemBtn}  >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box className={classes.addItemBtn} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph');}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box className={classes.addItemBtn} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                            <Box className={classes.addItemBtn} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('list', 'list');  }}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    List\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n\r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                <TabletMacIcon/>\r\n                                <Box>   \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.8 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.8 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.8 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.8 }</b> \r\n                                    </p>     \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>  \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.5 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.5 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.5 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.5 }</b> \r\n                                    </p>        \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n                        {/* display */}\r\n                        <Box className={classes.inputGroup}>\r\n\r\n                            <Tooltip title=\"For correct margin inside conteiner recomended:   display: flex, flexDirection: column\"  >\r\n                                <IconButton>\r\n                                    <InfoOutlined/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"display-style-label\"\r\n                                        id=\"display-style\"\r\n                                        value={display}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'block'}>Block</MenuItem>  \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                                {\r\n                                    display === 'flex' &&\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"direction-style-label\"\r\n                                            id=\"direction-style\"\r\n                                            value={flexDirection}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={'row'}>Row</MenuItem>  \r\n                                            <MenuItem value={'column'}>Column</MenuItem>  \r\n                                            <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                            <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>   \r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* margin */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Top'\r\n                                        variant='filled'\r\n                                        value={margin.top}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Bottom'\r\n                                        variant='filled'\r\n                                        value={margin.bottom}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* padding */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Top\" \r\n                                        variant='filled'\r\n                                        value={padding.top}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Bottom\" \r\n                                        variant='filled'\r\n                                        value={padding.bottom}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n\r\n                        </Box>\r\n                        \r\n                        {/* bg-color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} > \r\n                                <ColorSelecter\r\n                                    label={'Background'}\r\n                                    colorSelect={backgroundSelect} \r\n                                    setColorSelect={setBackgroundSelect}\r\n                                    colorCustom={backgroundCustom}\r\n                                    setColorCustom={setBackgroundCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false}\r\n                                />  \r\n                            </Box>\r\n                        </Box>\r\n                        <Box  className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Color'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false}\r\n                                    isContrastSelect={true}\r\n                                />   \r\n                                {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                            </Box> \r\n                        </Box>\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Border Color'}\r\n                                    colorSelect={borderColorSelect} \r\n                                    setColorSelect={setBorderColorSelect}\r\n                                    colorCustom={borderColorCustom}\r\n                                    setColorCustom={setBorderColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false} \r\n                                />  \r\n                            </Box> \r\n                        </Box>\r\n                         \r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                            <SelectShadow\r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                                label='Shadow'\r\n                                value={shadow}\r\n                                setValue={setShadow}\r\n                                setIsDisableBtn={setIsDisableBtn}\r\n                            /> \r\n                        </Box>\r\n                            \r\n                        {/* border */}\r\n                        <Box className={classes.inputGroup}> \r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Radius\" \r\n                                        variant='filled'\r\n                                        value={borderRadius}\r\n                                        setValue={setBorderRadius}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Width\" \r\n                                        variant='filled'\r\n                                        value={borderWidth}\r\n                                        setValue={setBorderWidth}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Box mt={5} />\r\n                        {/* <Box  className={classes.btnSave}>\r\n                            <Button\r\n                                disabled={isDisableBtn}\r\n                            \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size={'medium'} \r\n                                onClick={reSaveClassesSettings}\r\n                            >\r\n                                Save\r\n                            </Button> \r\n                        </Box> */}\r\n                        \r\n                    </React.Fragment> \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                </Modal> \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} ,\r\n            resposiveFontSize: { \r\n                [`@media (max-width: 960px)`]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.8 : 20, \r\n                    marginTop: props.className.marginTop*0.8,\r\n                    marginBottom: props.className.marginBottom*0.8\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.6 : 20,\r\n                    lineHeight : 1.2, \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n             \r\n          })\r\n    } );\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const defaultSizeClass = props.data.defaultSize ? 'heading' : ''\r\n\r\n    const renderText = () => {\r\n        if(props.textChildren.length > 0) { \r\n            return props.textChildren\r\n        }\r\n        else {\r\n            return `(No text - ${props.data.variant})`\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             {/* <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp} ${defaultSizeClass}`} \r\n            >\r\n                { renderText() } \r\n\r\n            </Box> */}\r\n\r\n\r\n            <Typography variant={props.data.variant} className={`${classes.myClassName} ${classeForResp} ${defaultSizeClass}`}  >\r\n                { \r\n                    renderText()\r\n                }\r\n            </Typography> \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport {makeStyles } from '@material-ui/core/styles'\r\nimport { Box, Table, TableBody, TableCell, TableHead, TableRow, Typography } from '@material-ui/core'\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\nimport DesktopMacRoundedIcon from '@material-ui/icons/DesktopMacRounded';\r\n\r\nfunction TableFontSizeInfo({activeRow}) {\r\n  \r\n    const useStyles = makeStyles( theme => ({\r\n        defaultSizeInfo: {\r\n            padding: 8, \r\n            border: `1px solid ${theme.palette.info.main}`, \r\n            backgroundColor: theme.palette.background.paper\r\n        }, \r\n        activeRowColor: {   \r\n            backgroundColor: theme.palette.info.dark, \r\n            '& th, & td': {\r\n                paddingTop: 8, \r\n                paddingBottom: 8, \r\n                fontSize: \"1.2em\",  \r\n                color: theme.palette.getContrastText(theme.palette.info.dark),\r\n            }\r\n        }, \r\n        iconCell: {\r\n            display: 'inline-flex', \r\n            alignitems: 'center', \r\n            '& svg' : { \r\n                fill: theme.palette.info.main , \r\n                marginLeft: 3\r\n            }\r\n        }\r\n    }))\r\n    const { defaultSizeInfo, activeRowColor, iconCell } = useStyles()\r\n\r\n    return (\r\n        <Box className={defaultSizeInfo}> \r\n            <Box mb={1}>  \r\n                <Typography variant='caption'>\r\n                    1rem = 14px\r\n                </Typography> \r\n            </Box>\r\n            <Box mb={1}>  \r\n                <Typography variant='caption'>\r\n                    *  - h3 default variant for many blocks (table, accordion, about, banner, slider, blocks, ext.)\r\n                </Typography> \r\n            </Box>\r\n            <Box mb={1}>  \r\n            <Table size={'small'} >\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Variant</TableCell>\r\n                        <TableCell align=\"right\" >\r\n                            <Box className={iconCell}>\r\n                                {\"<600px\"} <PhoneIphoneIcon/>\r\n                            </Box>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" >\r\n                            <Box className={iconCell}>\r\n                                {'<960px'} <TabletMacIcon/>\r\n                            </Box>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" >\r\n                            <Box className={iconCell}>\r\n                                {'>960px'} <DesktopMacRoundedIcon/> \r\n                            </Box>\r\n                        </TableCell> \r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody> \r\n                    <TableRow className={activeRow === 'h1' ? activeRowColor : ''}  >\r\n                        <TableCell component=\"th\" scope=\"row\">h1</TableCell>\r\n                        <TableCell align=\"right\">3.5rem</TableCell>\r\n                        <TableCell align=\"right\">4.7rem</TableCell>\r\n                        <TableCell align=\"right\">5.35rem</TableCell> \r\n                    </TableRow>\r\n                    <TableRow className={activeRow === 'h2' ? activeRowColor : ''}>\r\n                        <TableCell component=\"th\" scope=\"row\">h2</TableCell>\r\n                        <TableCell align=\"right\">2.375rem</TableCell>\r\n                        <TableCell align=\"right\">2.9rem</TableCell>\r\n                        <TableCell align=\"right\">3.3rem</TableCell> \r\n                    </TableRow>\r\n                    <TableRow className={activeRow === 'h3' ? activeRowColor : ''}>\r\n                        <TableCell component=\"th\" scope=\"row\">h3*</TableCell>\r\n                        <TableCell align=\"right\">2rem</TableCell>\r\n                        <TableCell align=\"right\">2.57rem</TableCell>\r\n                        <TableCell align=\"right\">2.8rem</TableCell> \r\n                    </TableRow>\r\n                    <TableRow className={activeRow === 'h4' ? activeRowColor : ''}>\r\n                        <TableCell component=\"th\" scope=\"row\">h4</TableCell>\r\n                        <TableCell align=\"right\">1.5625rem</TableCell>\r\n                        <TableCell align=\"right\">1.8rem</TableCell>\r\n                        <TableCell align=\"right\">2rem</TableCell> \r\n                    </TableRow>\r\n                    <TableRow className={activeRow === 'h5' ? activeRowColor : ''}>\r\n                        <TableCell component=\"th\" scope=\"row\">h5</TableCell>\r\n                        <TableCell align=\"right\">1.25rem</TableCell>\r\n                        <TableCell align=\"right\">1.32rem</TableCell>\r\n                        <TableCell align=\"right\">1.5rem</TableCell> \r\n                    </TableRow>\r\n                    <TableRow className={activeRow === 'h6' ? activeRowColor : ''}>\r\n                        <TableCell component=\"th\" scope=\"row\">h6</TableCell>\r\n                        <TableCell align=\"right\">1.125rem</TableCell>\r\n                        <TableCell align=\"right\">1.25rem</TableCell>\r\n                        <TableCell align=\"right\">1.25rem</TableCell> \r\n                    </TableRow> \r\n                </TableBody>\r\n            </Table> \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TableFontSizeInfo\r\n","\r\nimport React from 'react'\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\n\r\nconst SelectHeadingVariant = ({variant, size, className, fullWidth, label, value, setValue, setIsDisableBtn}) => {\r\n\r\n    const handleChange = (event) => {\r\n        setIsDisableBtn(false); \r\n        setValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <FormControl\r\n            variant={variant} \r\n            size={size}   \r\n            className={className}\r\n            fullWidth={fullWidth}\r\n            style={{minWidth: 200}}\r\n        >\r\n            <InputLabel id=\"variant-style-label\">{label}</InputLabel>\r\n            <Select\r\n                labelId=\"variant-style-label\"\r\n                id=\"variant-style\"\r\n                value={value}\r\n                onChange={handleChange}\r\n            >\r\n                <MenuItem value={'h1'}>H1</MenuItem> \r\n                <MenuItem value={'h2'}>H2</MenuItem> \r\n                <MenuItem value={'h3'}>H3</MenuItem> \r\n                <MenuItem value={'h4'}>H4</MenuItem> \r\n                <MenuItem value={'h5'}>H5</MenuItem> \r\n                <MenuItem value={'h6'}>H6</MenuItem> \r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default SelectHeadingVariant\r\n","import React, { useEffect, useState } from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent,\r\n    ButtonGroup,\r\n    FormGroup,  \r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nimport Confirm from '../../utilits/Confirm' \r\nimport TableFontSizeInfo from '../../utilits/TableFontSizeInfo'\r\nimport SelectHeadingVariant from '../../functions/SelectHeadingVariant';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [isVisibleConfirm, setIsVisibleConfirm] = useState(false) \r\n\r\n    const [padding, setPadding] = useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    }) \r\n\r\n    const [borderColorSelect, setBorderColorSelect] = useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = useState(props.data.classes.borderRadius || 0)\r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = useState(props.data.classes.color || 'inherit')\r\n \r\n    const [textAlign, setTextAlign] = useState(props.data.classes.textAlign ||  'left')\r\n\r\n    const [defaultSize, setDefaultSize] = useState(props.data.defaultSize || false)\r\n    const [variant, setVariant] = useState(props.data.variant ||  'h3')\r\n    const [display, setDisplay] = useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n \r\n    const [open, setOpen] = useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n          \r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, responseValues, responseTablets, responseMobile, mobileTooltip, tabletTooltip, dialogContentUnstyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            // btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${margin.top * 0.8}px`,  \r\n                        height: `${margin.top * 0.8}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${margin.bottom * 0.8}px`,\r\n                        height: `${margin.bottom * 0.8 }px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${margin.bottom * 0.5}px`,\r\n                        height: `${margin.bottom * 0.5 }px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },    \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n            tooltipResponse: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.success.main\r\n            }, \r\n            tooltipDefault: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.info.main\r\n            }, \r\n            \r\n            defaultSizeCheck: {\r\n                color: theme.palette.info.main, \r\n            },\r\n            defaultSizeTrack: {\r\n                background: theme.palette.info.light, \r\n            },\r\n            responseCheck: { \r\n                color: theme.palette.success.main\r\n            }, \r\n            responseTrack: {\r\n                background: theme.palette.success.light, \r\n            }\r\n          })\r\n    });\r\n    \r\n    const myClassName = {  \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n \r\n\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        sentData.variant = variant\r\n        sentData.defaultSize = defaultSize\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    \r\n    const swapHeading = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const viewCorrect = props.data.classes.display !== 'block' ? `(uncorrect view for ${props.data.classes.display} display)` : ''\r\n\r\n    const removeItem = () => {  \r\n        setIsVisibleConfirm(true) \r\n    };\r\n    \r\n    const handleConfirmClick = () => {\r\n        props.removeItem(props.data.id)\r\n    }\r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Confirm\r\n                    isVariable={false}\r\n                    show={isVisibleConfirm}\r\n                    setShow={setIsVisibleConfirm} \r\n                    title={'Remove heading?'}\r\n                    text={\"You can't cancel this action.\"}\r\n                    removeText={\"remove\"}\r\n                    handleRemoveClick={handleConfirmClick}\r\n                />\r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    { !isDisableBtn && \"Close to save - \" } Heading - {props.data.variant} Settings <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <InputChange\r\n                                        id={null}\r\n                                        fullWidth={true}\r\n                                        multiline={true}\r\n                                        type='text'\r\n                                        size=\"medium\" \r\n                                        label=\"Text input\"\r\n                                        variant='standard'\r\n                                        value={textInDumb}\r\n                                        setValue={setTextInDumb}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    />      \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"default\"\r\n                                                    classes={{checked: classes.responseCheck, track: classes.responseTrack }}\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip classes={{tooltip: classes.tooltipResponse}}  title=\"If enabled, the type will be smaller on mobile devices and the alignment will be centered\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={defaultSize}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setDefaultSize(!defaultSize) }}\r\n                                                    name=\"checkedD\"\r\n                                                    color=\"default\"\r\n                                                    classes={{checked: classes.defaultSizeCheck, track: classes.defaultSizeTrack }}\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Default Font Size\"\r\n                                        />\r\n                                        <Tooltip classes={{tooltip: classes.tooltipDefault}}  title=\"If enabled, font size will be default\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n                                {\r\n                                    defaultSize && \r\n                                    <TableFontSizeInfo activeRow={variant} />\r\n                                }\r\n                                <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                        <TabletMacIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.8 }</b>; &nbsp; MarginBottom: <b>{margin.bottom * 0.8 }</b> </p>   \r\n                                                    <p>FontSize:  { defaultSize ? 'Look default table ' : <b>{ fontSize > 40 ? fontSize*0.8 : 20 }</b> } </p>   \r\n                                                    <p>TextAlign:  <b>center</b></p>\r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                \r\n                                <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                        <PhoneIphoneIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.5 }</b>; &nbsp; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p>  \r\n                                                    <p>  FontSize: { defaultSize ? 'Look default table ' : <b>{ fontSize > 40 ? fontSize*0.6 : 20 }</b> }  </p>   \r\n                                                    <p>TextAlign:  <b>center</b> ; &nbsp; LineHeight: <b>{1.2} </b>  </p>\r\n  \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={display}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'block'}>Block</MenuItem> \r\n                                            <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                            <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                            <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <SelectHeadingVariant\r\n                                            variant={'filled'} \r\n                                            size=\"small\"  \r\n                                            fullWidth={true}\r\n                                            className={classes.inputNumber} \r\n                                            label=\"Variant\" \r\n                                            value={variant} \r\n                                            setValue={setVariant} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Box>  \r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='filled'\r\n                                                value={margin.top}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={margin.bottom}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Left'\r\n                                                variant='filled'\r\n                                                value={margin.left}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Right'\r\n                                                variant='filled'\r\n                                                value={margin.right}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top\" \r\n                                                variant='filled'\r\n                                                value={padding.top}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Bottom\" \r\n                                                variant='filled'\r\n                                                value={padding.bottom}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Left\" \r\n                                                variant='filled'\r\n                                                value={padding.left}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Right\" \r\n                                                variant='filled'\r\n                                                value={padding.right}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Background'}\r\n                                            colorSelect={backgroundSelect} \r\n                                            setColorSelect={setBackgroundSelect}\r\n                                            colorCustom={backgroundCustom}\r\n                                            setColorCustom={setBackgroundCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                            isContrastSelect={true} \r\n                                        /> \r\n                                        {\r\n                                            backgroundCustom === 'inherit' &&\r\n                                            colorSelect === 'contrast' && \r\n                                            <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>\r\n                                        } \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                disabled={defaultSize}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Font Size\" \r\n                                                variant='filled'\r\n                                                value={fontSize}\r\n                                                setValue={setFontSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Line Height (em)\" \r\n                                                variant='filled'\r\n                                                value={lineHeight}\r\n                                                setValue={setLineHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                     \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={borderRadius}\r\n                                                setValue={setBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={borderWidth}\r\n                                                setValue={setBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber} >   \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={borderColorSelect} \r\n                                                setColorSelect={setBorderColorSelect}\r\n                                                colorCustom={borderColorCustom}\r\n                                                setColorCustom={setBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                                {/* <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box> */}\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                        \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb list') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        \r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: color,   \r\n            }},  \r\n            liClass: props.data.itemsStyle,\r\n            mobileClass: {\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: props.className.marginTop === 0 ? 0 : (props.className.marginTop > 30 ? props.className.marginTop*0.6 : 15), \r\n                    marginBottom: props.className.marginBottom === 0 ? 0 : (props.className.marginBottom > 30 ? props.className.marginBottom*0.6 : 15),  \r\n                    paddingLeft: props.className.paddingLeft === 0 ? 0 : (props.className.paddingLeft > 30 ? props.className.paddingLeft*0.6 : 15)\r\n                } \r\n            }\r\n          })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n           <ul className={`${classes.myClassName} ${classes.mobileClass}`}>\r\n                {\r\n                    props.data.items.map( (item, index) => (\r\n                        <li key={index} className={classes.liClass}>\r\n                            {item}\r\n                        </li>\r\n                    ))        \r\n                }\r\n                {\r\n                    props.data.items.length === 0 &&\r\n                    <li className={classes.liClass} >No items</li>\r\n                }\r\n           </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, { useEffect, useState } from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    Grid,  \r\n    Button, \r\n    ButtonGroup, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n  \r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';   \r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport Confirm from '../../utilits/Confirm' \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled list work')\r\n\r\n    const [isVisibleConfirmBlock, setIsVisibleConfirmBlock] = useState(false) \r\n    const [isVisibleConfirmItem, setIsVisibleConfirmItem] = useState({show: false, index : null}) \r\n\r\n    const [paddingLeft, setPaddingLeft] = useState( props.data.classes.paddingLeft || 15 )\r\n    const [margin, setMargin] = useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    }) \r\n     \r\n    const [colorSelect, setColorSelect] = useState(props.data.classes.color || 'inherit') \r\n    const [colorCustom, setColorCustom] = useState(props.data.classes.color || 'inherit') \r\n\r\n    const [fontSize, setFontSize] = useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [items, setItems] = useState(props.data.items || [])\r\n    const [itemsPadding, setItemsPadding] = useState(props.data.itemsStyle.paddingBottom || [])\r\n    const [itemsListStyle, setItemsListStyle] = useState(props.data.itemsStyle.listStyle || 'decimal')\r\n    const [newItem, setNewItem] = useState('') \r\n\r\n    const mobileMarginTopComputed = margin.top === 0 ? 0 : (margin.top > 30 ? margin.top*0.6 : 15)\r\n    const mobileMarginBottomComputed = margin.bottom === 0 ? 0 : (margin.bottom > 30 ? margin.bottom*0.6 : 15)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n \r\n    const [open, setOpen] = useState(false);\r\n         \r\n    \r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { mtView, mbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({ \r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }   \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            }}, \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            movingPageBtn: {  \r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = {  \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        paddingLeft: paddingLeft,  \r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight \r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.itemsStyle = {\r\n            paddingBottom: itemsPadding, \r\n            listStyle: itemsListStyle\r\n        }\r\n        sentData.items = items\r\n        if(colorSelect === 'custom') {\r\n            sentData.classes.color = colorCustom\r\n        } else {\r\n            sentData.classes.color = colorSelect\r\n        }\r\n \r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        setIsVisibleConfirmBlock(true)  \r\n    };\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleItemChange = (value, index) => {\r\n        let newItems = items.slice()\r\n        newItems[index] = value\r\n        setItems(newItems)\r\n        setIsDisableBtn(false)\r\n    }\r\n    const swapItem = (direction, index) => {\r\n        let newItems = items.slice() \r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex - 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex + 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const deleteItemList = (index) => { \r\n        setIsVisibleConfirmItem({show: true, index: index}) \r\n    } \r\n    const handleAddItem = () => {\r\n        let newItems = items.slice()\r\n        \r\n        newItems.push(newItem)\r\n \r\n        setItems(newItems)\r\n        \r\n        setNewItem('') \r\n        setIsDisableBtn(false)\r\n    } \r\n    const swapList = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    const handleConfirmClickBlock = () => {\r\n        props.removeItem(props.data.id)\r\n    }\r\n    const handleConfirmClickItem = (index) => { \r\n        let newItems = items.slice()\r\n        newItems.splice(index, 1)\r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Confirm\r\n                    isVariable={false}\r\n                    show={isVisibleConfirmBlock}\r\n                    setShow={setIsVisibleConfirmBlock} \r\n                    title={'Remove block advantages?'}\r\n                    text={\"You can't cancel this action.\"}\r\n                    removeText={\"remove\"}\r\n                    handleRemoveClick={handleConfirmClickBlock}\r\n                />\r\n                <Confirm\r\n                    isVariable={true}\r\n                    show={isVisibleConfirmItem}\r\n                    setShow={setIsVisibleConfirmItem} \r\n                    title={'Delete item?'}\r\n                    text={\"You can't cancel this action.\"}\r\n                    removeText={\"delete\"}\r\n                    handleRemoveClick={handleConfirmClickItem}\r\n                />\r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } List Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>\r\n                                        <p>\r\n                                            MarginTop: <b>{mobileMarginTopComputed}</b>; &nbsp;\r\n                                            MarginBottom: <b>{mobileMarginBottomComputed}</b> \r\n                                        </p> \r\n                                        <p>PaddingLeft:  <b>{paddingLeft === 0 ? 0 : (paddingLeft > 30 ? paddingLeft*0.6 : 15)}</b></p>\r\n                                    </Box>\r\n                                </Box> \r\n                            </Tooltip> \r\n                               \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>  \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Block Padding Left\" \r\n                                            variant='filled'\r\n                                            value={paddingLeft}\r\n                                            setValue={setPaddingLeft}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Item Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={itemsPadding}\r\n                                            setValue={setItemsPadding}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                </Box>\r\n                                 \r\n                            </Box>\r\n                           \r\n                                     \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup} mt={2}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl> \r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">List Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={itemsListStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setItemsListStyle((e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={'circle'}>Circle</MenuItem>\r\n                                            <MenuItem value={'disc'}>Disc</MenuItem>\r\n                                            <MenuItem value={'square'}>Square</MenuItem>\r\n                                            <MenuItem value={'decimal'}>Numbers</MenuItem>\r\n                                            <MenuItem value={'lower-alpha'}>lower-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-alpha'}>upper-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-roman'}>upper-roman</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n \r\n                                       \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >\r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"left\"\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n\r\n                            {/* items */}\r\n                            <Box className={classes.inputGroup} mt={3}>  \r\n                                {\r\n                                    items.map( (item, index) => {\r\n                                        return (\r\n                                            <Box key={index} display={'flex'} alignItems='flex-start' p={1} > \r\n                                                <InputChange\r\n                                                    id={index}\r\n                                                    fullWidth={true}\r\n                                                    multiline={true}\r\n                                                    type='text'\r\n                                                    size=\"small\" \r\n                                                    label={`Item ${index+1}`} \r\n                                                    variant='outlined'\r\n                                                    value={item}\r\n                                                    setValue={handleItemChange}\r\n                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                />  \r\n                                                <Box mr={0.5} />\r\n                                                <ButtonGroup \r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingPageBtn}\r\n                                                    >  \r\n                                                        {\r\n                                                            items.indexOf(item) !== 0 &&\r\n                                                            <Tooltip title='Get Up' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('up', index) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                        {\r\n                                                            items.indexOf(item) !== items.length - 1 &&\r\n                                                            <Tooltip title='Get Down' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('down', index) }} \r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                            \r\n                                                        <Tooltip title='Delete Item' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"secondary\"\r\n                                                                disableElevation={true} \r\n                                                                onClick={() => { deleteItemList(index) }}\r\n                                                            > \r\n                                                                <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup> \r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                } \r\n                                <Box px={1}>\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='text'\r\n                                        label={`New Item`} \r\n                                        variant=\"outlined\" \r\n                                        size='small'  \r\n                                        value={newItem}\r\n                                        onChange={ (e) => {setNewItem(e.target.value)} }     \r\n                                    />\r\n                                    <Box my={1}>\r\n                                        <Button \r\n                                            onClick={handleAddItem}\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            disabled={newItem.length > 0 ? false : true}\r\n                                        >\r\n                                            Add new item\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box mt={5} />\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` list margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` list margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                               \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}   \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                            \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete List\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)   \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes}  \r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n \r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor) \r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }}   \r\n        })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren.length !== 0 ? props.textChildren : '(No text - paragraph)'\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, { useEffect, useState } from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    ButtonGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport InputChange from '../../functions/InputChange';\r\nimport Confirm from '../../utilits/Confirm' \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n\r\n    const [isVisibleConfirm, setIsVisibleConfirm] = useState(false)       \r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = useState(props.data.classes.color || 'inherit')\r\n\r\n    const [borderColorSelect, setBorderColorSelect] = useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = useState(props.data.classes.borderColor ||  'transperent') \r\n\r\n    const [borderStyle, setBorderStyle] = useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n\r\n    \r\n    const [open, setOpen] = useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    \r\n    useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)     \r\n\r\n        const { menu, menuTitle, responseValues, responseMobile, dialogContentUnstyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right, \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n      \r\n     \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)   \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)   \r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    \r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const handleConfirmClick = () => {\r\n        props.removeItem(props.data.id)\r\n    } \r\n\r\n    const removeItem = () => {  \r\n        setIsVisibleConfirm(true)  \r\n    };\r\n     \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Confirm\r\n                    isVariable={false}\r\n                    show={isVisibleConfirm}\r\n                    setShow={setIsVisibleConfirm} \r\n                    title={'Remove paragraph?'}\r\n                    text={\"You can't cancel this action.\"}\r\n                    removeText={\"remove\"}\r\n                    handleRemoveClick={handleConfirmClick}\r\n                />\r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />     \r\n                            </Box>  \r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>   \r\n                                    <p>Paragraph don`t have any response values</p>   \r\n                                </Box>\r\n                            </Box>\r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >   \r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                        isContrastSelect={true} \r\n                                    />  \r\n                                    {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                                </Box> \r\n                                    \r\n                            </Box>\r\n\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                            </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                              \r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box> */}\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n                </Grid>\r\n            </Grid>\r\n            \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)   \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        let  imageBorderColor = getColorByPalette(theme, props.imageClassName.borderColor)\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} , \r\n            imageStyle: props.imageClassName ? {...props.imageClassName, ...{ \r\n                borderColor: imageBorderColor,\r\n                height: props.imageClassName.height === 0 ? 'auto' : props.imageClassName.height\r\n            }} : {} ,  \r\n            imageStabilization: {\r\n                maxWidth: '100%', \r\n                maxHeight: '100%',  \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    height: 'auto'\r\n                }, \r\n                // [theme.breakpoints.down('md')]: { \r\n                // }\r\n            },\r\n            mobileClass: {\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    textAlign: 'center', \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5,\r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n            }\r\n          })\r\n    }); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={`${classes.imageStyle} ${classes.imageStabilization}`}  alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, { useEffect, useState, useContext } from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext'  \r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\n\r\nimport { \r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    ButtonGroup, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\nimport Confirm from '../../utilits/Confirm' \r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = useContext(LoadingContext) \r\n \r\n    const [padding, setPadding] = useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [isVisibleConfirmBlock, setIsVisibleConfirmBlock] = useState(false) \r\n    const [isVisibleConfirmImage, setIsVisibleConfirmImage] = useState(false) \r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = useState(props.data.classes.color || 'inherit') \r\n    const [borderColorSelect, setBorderColorSelect] = useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = useState(props.data.classes.borderColor ||  'transperent') \r\n    const [imageBorderColorSelect, setImageBorderColorSelect] = useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderColorCustom, setImageBorderColorCustom] = useState(props.data.image.classes.borderColor ||  'transperent')\r\n  \r\n    // eslint-disable-next-line\r\n    const [image, setImage] = useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = useState(props.data.image.url || '')\r\n    const [imageName, setImageName] = useState(props.data.image.imageName || '')\r\n    const [imageTitle, setImageTitle] = useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = useState(props.data.image.imagePlacement || 'top')\r\n     \r\n    const [borderStyle, setBorderStyle] = useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = useState(props.data.classes.lineHeight ||  1.38)\r\n \r\n    const [imageWidth, setImageWidth] = useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = useState(props.data.image.classes.height )\r\n    const [imageBorderStyle, setImageBorderStyle] = useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n\r\n \r\n    const [open, setOpen] = useState(false);\r\n         \r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    const imageBorderTheme = isNoThemeColor(props.data.image.classes.borderColor)\r\n    useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        if(imageBorderTheme) {  \r\n            setImageBorderColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor, props.data.image.classes.borderColor ]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip, dialogContentUnstyle  } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                zIndex: 11, \r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.bottom * 0.5}px`,  \r\n                        height: `${margin.bottom * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,   \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : {...dumbItemDelete, ...{\r\n                zIndex: 12\r\n            }},  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }, \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius,  \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n   \r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl,\r\n            imageName: imageName\r\n        })\r\n        if (imageBorderColorSelect === 'custom') { sentData.classes.borderColor = imageBorderColorCustom } \r\n        else { sentData.classes.borderColor = imageBorderColorSelect }\r\n\r\n\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }\r\n     \r\n    \r\n    const handleImageUpload = async (e) => { \r\n        RemoveImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n        \r\n        setIsLoading(false) \r\n    }\r\n\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n     \r\n    const removeItem = () => {\r\n        setIsVisibleConfirmBlock(true)           \r\n    }\r\n    const handleRemoveImage = () => {\r\n        setIsVisibleConfirmImage(true)\r\n    }\r\n\r\n    const handleConfirmClickBlock = () => {\r\n        RemoveImage(imageName)\r\n        props.removeItem(props.data.id)\r\n    }\r\n    const handleConfirmClickImage = () => {\r\n        RemoveImage(imageName)\r\n\r\n        setImageUrl('')\r\n        setImageName('')\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Confirm\r\n                    isVariable={false}\r\n                    show={isVisibleConfirmBlock}\r\n                    setShow={setIsVisibleConfirmBlock} \r\n                    title={'Remove paragraph-image?'}\r\n                    text={\"You can't cancel this action.\"}\r\n                    removeText={\"remove\"}\r\n                    handleRemoveClick={handleConfirmClickBlock}\r\n                />\r\n                <Confirm\r\n                    isVariable={false}\r\n                    show={isVisibleConfirmImage}\r\n                    setShow={setIsVisibleConfirmImage} \r\n                    title={'Delete image?'}\r\n                    text={\"You can't cancel this action.\"}\r\n                    removeText={\"delete\"}\r\n                    handleRemoveClick={handleConfirmClickImage}\r\n                />\r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Image Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />   \r\n                            </Box> \r\n\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>   \r\n                                        <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p> \r\n                                        <p>flexDirection: <b> column</b>; alignItems: <b>center</b> </p>  \r\n                                        <p>TextAlign:  <b>center</b> </p>     \r\n                                    </Box>\r\n                                </Box>\r\n                            </Tooltip> \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageUpload} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <InputChange\r\n                                                    id={null} \r\n                                                    fullWidth={true}\r\n                                                    type='text'\r\n                                                    size=\"small\" \r\n                                                    label=\"Image title\" \r\n                                                    variant='filled'\r\n                                                    value={imageTitle}\r\n                                                    setValue={setImageTitle}\r\n                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                /> \r\n                                                 \r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid> \r\n                                    {\r\n                                        imageUrl.length > 0 &&\r\n                                        <Box mt={1}>\r\n                                            <Button\r\n                                                color='secondary' \r\n                                                variant='contained' \r\n                                                onClick={handleRemoveImage}\r\n                                            > \r\n                                            Remove image\r\n                                            </Button>\r\n                                        </Box>\r\n                                    } \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Top'\r\n                                                variant='filled'\r\n                                                value={imageMargin.top}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={imageMargin.bottom}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Left'\r\n                                                variant='filled'\r\n                                                value={imageMargin.left}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Right'\r\n                                                variant='filled'\r\n                                                value={imageMargin.right}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Typography variant={'caption'} display='block' align={\"center\"} color={'error'} gutterBottom>\r\n                                        { imageHeight === 'auto' &&  <span> set only width, height will set auto</span> } \r\n                                    </Typography>\r\n                                    <Typography variant={'caption'} display='block' align={\"center\"} color={'error'}> \r\n                                        if height = 0, height will be auto \r\n                                    </Typography>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Width'\r\n                                                variant='filled'\r\n                                                value={imageWidth}\r\n                                                setValue={setImageWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Height'\r\n                                                variant='filled'\r\n                                                value={imageHeight}\r\n                                                setValue={setImageHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} > \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={imageBorderColorSelect} \r\n                                                setColorSelect={setImageBorderColorSelect}\r\n                                                colorCustom={imageBorderColorCustom}\r\n                                                setColorCustom={setImageBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={imageBorderRadius}\r\n                                                setValue={setImageBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={imageBorderWidth}\r\n                                                setValue={setImageBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                             \r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                 \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                        isContrastSelect={true} \r\n                                    />  \r\n                                    {colorSelect === 'contrast' && <Typography variant='caption' color='secondary' >Contast color don`t work with \"inherit\" background </Typography>}\r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            \r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            F = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                                 \r\n\r\n\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            \r\n                            <Box mt={5} />\r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                 */}\r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer } onClick={handleOpen}>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem } \r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)    \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useContext} from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n  \r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ListCreator from '../list/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n\r\n    const {modeDev} = useContext(ModeContext)\r\n \r\n    console.log('dumb container work') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.classes.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.classes.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.classes.borderColor)\r\n\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n             myClassName: {...props.classes, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor \r\n            }} ,   \r\n            styleClass: { \r\n                [`@media (max-width: 960px)`]: { \r\n                    marginTop: props.classes.marginTop*0.8,\r\n                    marginBottom: props.classes.marginBottom*0.8, \r\n                    paddingTop: props.classes.paddingTop*0.8,\r\n                    paddingBottom: props.classes.paddingBottom*0.8,\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    marginTop: props.classes.marginTop*0.5,\r\n                    marginBottom: props.classes.marginBottom*0.5,  \r\n                    paddingTop: props.classes.paddingTop*0.5,\r\n                    paddingBottom: props.classes.paddingBottom*0.5,\r\n                },\r\n            }, \r\n        })\r\n    });\r\n    const classes = useStyles(); \r\n \r\n    const renderItems = () => { \r\n        return (\r\n            modeDev ?\r\n            props.data.children.map((item) => {   \r\n                // eslint-disable-next-line\r\n                let orderFirst = props.data.children.indexOf(item) == 0 ? true : false\r\n                // eslint-disable-next-line\r\n                let orderLast = props.data.children.indexOf(item) == props.data.children.length - 1 ? true : false\r\n\r\n                switch(item.type) {  \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens} \r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )\r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )  \r\n                    default: break;\r\n                }  \r\n                return null\r\n            })\r\n            :\r\n            props.data.children.map((item) => {  \r\n                switch(item.type) { \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    default: break;\r\n                }  \r\n                return null\r\n            }) \r\n        )\r\n    }\r\n    return ( \r\n        <Container  \r\n            maxWidth={props.settings.maxWidth} \r\n            fixed={props.settings.fixed} \r\n            disableGutters={props.settings.disableGutters} \r\n            className={`${classes.myClassName} ${classes.styleClass}  `}\r\n        > \r\n            {  \r\n                props.settings.innerContainer && \r\n                <Container\r\n                    maxWidth={props.settings.innerContainer}\r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                >\r\n                        { renderItems() }\r\n                </Container>\r\n            }\r\n            {  \r\n                !props.settings.innerContainer && \r\n                <React.Fragment>\r\n                        { renderItems() }\r\n                </React.Fragment>\r\n            }\r\n            \r\n        </Container>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, {useState} from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport Modal from \"./Modal\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n  \r\n \r\nimport Confirm from '../../utilits/Confirm' \r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nfunction StyledComponent(props) {\r\n \r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [isVisibleConfirm, setIsVisibleConfirm] = useState(false)  \r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer, \r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n             \r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    zIndex: 25,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n\r\n            \r\n\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => { \r\n\r\n        let filtered = props.data.children.filter((item) => (item.id !== id))   \r\n        // save in firestore \r\n        props.reSaveContainer(props.data.id, filtered)   \r\n    }\r\n\r\n    const handleClose =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        setIsVisibleConfirm(true) \r\n    }\r\n\r\n    const handleConfirmClick = () => {\r\n        let images = createArrayImages() \r\n        images.forEach( imageName => {\r\n            RemoveImage(imageName)\r\n        })\r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const swapChildrens = (direction, id) => {  \r\n\r\n        let newChildren = props.data.children.slice() \r\n        let activeIndex  \r\n        newChildren.map( (item) => { \r\n            if(item.id === id) {\r\n              activeIndex = newChildren.indexOf(item) \r\n            }\r\n            return 0 \r\n        }) \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newChildren.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex - 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex + 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex + 1 ] = movedItem  \r\n        } \r\n \r\n        props.reSaveContainer(props.data.id, newChildren)\r\n    }\r\n\r\n    const createArrayImages = () => {\r\n        let images = []\r\n        props.data.children.forEach( item => {\r\n            if(item.type === 'paragraphImage') {\r\n                images.push(item.image.imageName)\r\n            }\r\n        })\r\n        return images\r\n    } \r\n\r\n    return (     \r\n        <Box className={classes.containerWrapper}>\r\n            \r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirm}\r\n                setShow={setIsVisibleConfirm} \r\n                title={'Remove container'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClick}\r\n            />\r\n            <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box className={classes.btnDrawerStyle}> \r\n                <ButtonGroup\r\n                    orientation=\"vertical\"\r\n                    color=\"secondary\"\r\n                    aria-label=\"vertical contained primary button group\"\r\n                    variant=\"contained\"\r\n                > \r\n                    <Tooltip title='Container Settings' placement='right'>\r\n                        <Button  \r\n                            onClick={handleClose} \r\n                            size='medium'\r\n                            variant='contained' \r\n                            className={classes.btnDrawerItem}\r\n                        >   \r\n                            <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                        </Button>\r\n                    </Tooltip> \r\n                    { \r\n                        !props.isFirst  &&\r\n                        <Tooltip title='Get Up' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                size='medium'\r\n                                color='secondary'\r\n                                variant='contained' \r\n                                className={classes.btnDrawerItem}\r\n                            >  \r\n                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                            </Button>\r\n                        </Tooltip> \r\n                    }\r\n                    {\r\n                        !props.isLast && \r\n                        <Tooltip title='Get Down' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained' \r\n                                className={classes.btnDrawerItem}\r\n                            >     \r\n                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip> \r\n                    }\r\n                        \r\n\r\n                </ButtonGroup>\r\n\r\n                <Box mt={1}>\r\n                    <Tooltip title='Remove' placement='right'>\r\n                        <Button \r\n                            onClick={ removeContainer }\r\n                            size='medium'\r\n                            variant='contained' \r\n                            className={classes.btnDrawerItem}\r\n                        >     \r\n                            <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                        </Button>\r\n                    </Tooltip> \r\n                </Box>\r\n            </Box>\r\n\r\n            <Modal   \r\n                data={props.data} \r\n                reSaveContainer={props.reSaveContainer}\r\n                reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                swapContainer={props.swapContainer}\r\n                propsSettings={propsSettings}\r\n                open={open}\r\n                handleClose={handleClose}\r\n            />\r\n            <DumbComponent \r\n                data={props.data}  \r\n                classes={props.data.classes}\r\n                reSaveContainer={props.reSaveContainer} \r\n                settings={propsSettings}\r\n                reSaveChildren={reSaveChildren}\r\n                removeItem={removeItem}   \r\n                swapChildrens={swapChildrens}\r\n            />\r\n        </Box>\r\n            \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer, \r\n    } \r\n\r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data} \r\n                    reSaveContainer={props.reSaveContainer}\r\n                    reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, { useState, useContext} from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, darken, fade, lighten, Typography } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { PhoneValidation} from '../../functions/formValidation'\r\nimport InputMaskPhone from '../../functions/InputMaskPhone'\r\n\r\nimport ValidationChip from '../../utilits/ValidationChip'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests, validationSettings } = useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = useState(false)\r\n    const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n\r\n    const variant = props.data.variantHeading\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput, inValidColor\r\n  \r\n    \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n    \r\n    const useStyles = makeStyles( (theme) => { \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n        inValidColor = getColorByPalette(theme, validationSettings.color) \r\n          \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput, \r\n                    background: fade(colorFocusInput, 0.07),\r\n                    \"&:hover\": {\r\n                        background: fade(colorFocusInput, 0.07), \r\n                    },\r\n                }, \r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                }\r\n            },\r\n            inValidInput: {\r\n                borderColor: lighten(inValidColor, 0.2),\r\n                background: fade(inValidColor, 0.15), \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } ,\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('md')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 30),\r\n                }\r\n            }\r\n        } )\r\n    })\r\n \r\n    \r\n    const classes = useStyles() \r\n     \r\n \r\n    const handleSubmit = (event) => {\r\n        \r\n        event.preventDefault() \r\n          \r\n        const valphone = PhoneValidation(formPhone)  \r\n        if(valphone.isValid) {\r\n            const sendForm = {\r\n                phone: formPhone,\r\n                place: 'main page',  \r\n                isCheck: false\r\n            }\r\n    \r\n            sendRequests(sendForm)\r\n            \r\n            setIsDisableBtn(false) \r\n            setFormPhone('')\r\n        } else {\r\n            setIsValidPhone(valphone)\r\n        }\r\n        \r\n    }\r\n    const handleChangePhone = (value) => {\r\n        setFormPhone(value) \r\n        setIsValidPhone({isValid: true})\r\n    }\r\n    const handleCloseValidationChip = (place) => { \r\n        if(place === 'phone') setIsValidPhone({isValid: true})\r\n      } \r\n    return (\r\n        <div className={`bulder-main-banner ${classes.styleClass} `}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={imageUrl.length > 0 ? 7 : 12} >\r\n                        <div className={`bulder-main-banner_content`}>\r\n                            {\r\n                                titleMain.length > 0 &&\r\n                                <Typography variant={variant} className={`heading`}>\r\n                                    { titleMain }\r\n                                </Typography> \r\n                            } \r\n                            <h5 className={`${classes.subHeading} subheading`}>  \r\n                                {\r\n                                    titleSubIcon &&\r\n                                    <svg>       \r\n                                        <image xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                    </svg>\r\n                                }\r\n                                \r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5> \r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"bulder-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"bulder-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            {\r\n                                                !isValidPhone.isValid && \r\n                                                <ValidationChip \r\n                                                    isValid={isValidPhone.isValid} \r\n                                                    handleClose={handleCloseValidationChip}\r\n                                                    place={'phone'}\r\n                                                    absolute={true} \r\n                                                    closeOnFirstClick={true}\r\n                                                />\r\n                                            }\r\n                                            \r\n                                            <InputMaskPhone \r\n                                                placeholder={`${inputLabel}`}   \r\n                                                className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                                                value={formPhone}\r\n                                                setValue={handleChangePhone}\r\n                                            /> \r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    {\r\n                        imageUrl.length > 0 &&\r\n                        <Grid item md={5} > \r\n                            <div className=\"bulder-main-banner-image d-none d-lg-block\">\r\n                            <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                            </div>\r\n                        </Grid>\r\n                    }\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, { useEffect, useState } from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'    \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline , InfoOutlined } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nimport Confirm from '../../utilits/Confirm' \r\nimport TableFontSizeInfo from '../../utilits/TableFontSizeInfo'\r\nimport SelectHeadingVariant from '../../functions/SelectHeadingVariant';\r\n\r\nfunction StyledComponent(props) { \r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [isVisibleConfirmBlock, setIsVisibleConfirmBlock] = useState(false) \r\n    const [isVisibleConfirmImage, setIsVisibleConfirmImage] = useState(false) \r\n    const [isVisibleConfirmIcon, setIsVisibleConfirmIcon] = useState(false) \r\n\r\n    const [variant, setVariant] = useState(props.data.variantHeading || 'h2')\r\n    const [isTableSizeVisible, setIsTableSizeVisible] = useState(false)\r\n\r\n    const [heading, setHeading] = useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = useState(props.data.image)\r\n    const [imageName, setImageName] = useState(props.data.imageName || '')\r\n\r\n    const [iconUrl, setIconUrl] = useState(props.data.headingIcon.icon)\r\n    const [iconName, setIconName] = useState(props.data.headingIcon.iconName || '')\r\n \r\n    const [marginTop, setMarginTop] = useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 40)\r\n    const tabletMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50)\r\n    const tabletMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, dialogContentUnstyle, \r\n            responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip, tableSizeContainer, tableSizeBtn, tableSizeAbsolute } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            tableSizeContainer: tableSizeContainer,\r\n            tableSizeBtn: tableSizeBtn, \r\n            tableSizeAbsolute: tableSizeAbsolute,\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }},   \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,   \r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${tabletMarginTopComputed}px`,  \r\n                        height: `${tabletMarginTopComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px `,  \r\n                        height: `${mobileMarginTopComputed}px `,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`,  \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${tabletMarginBottomComputed}px`,  \r\n                        height: `${tabletMarginBottomComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px `,  \r\n                        height: `${mobileMarginBottomComputed}px `,\r\n                    }\r\n                } \r\n            }, \r\n            infoBlock: {\r\n                padding: 8, \r\n                border: `1px solid ${theme.palette.info.main}`\r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleImageUpload = async (e, imageType) => {  \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        if( imageType === 'mainImage')  { \r\n            RemoveImage(imageName)   \r\n        }\r\n        if( imageType === 'icon') {\r\n            RemoveImage(iconName)   \r\n        }\r\n \r\n          \r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        if( imageType === 'mainImage')  { \r\n            setImageName(generateImageName)\r\n            setImageUrl(downloadURL)  \r\n        }\r\n        if( imageType === 'icon') {\r\n            setIconName(generateImageName)\r\n            setIconUrl(downloadURL)\r\n        }\r\n          \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.variantHeading = variant \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl,\r\n            iconName : iconName\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => { \r\n        setIsVisibleConfirmBlock(true)  \r\n    }\r\n    const handleRemoveImage = () => {\r\n        setIsVisibleConfirmImage(true) \r\n    }\r\n    const handleRemoveIcon = () => {\r\n        setIsVisibleConfirmIcon(true)  \r\n    }\r\n \r\n    // const handleRemoveImage = () => {\r\n    //     setIsVisibleConfirmImage(true)\r\n    // }\r\n\r\n    const handleConfirmClickBlock = () => {\r\n        RemoveImage(imageName) \r\n        RemoveImage(iconName) \r\n        props.removeContainer(props.data.id)\r\n    }\r\n    const handleConfirmClickImage = () => {\r\n        RemoveImage(imageName)\r\n\r\n        setImageUrl('')\r\n        setImageName('')\r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleConfirmClickIcon = () => {\r\n        RemoveImage(iconName)\r\n\r\n        setIconUrl('')\r\n        setIconName('')\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmBlock}\r\n                setShow={setIsVisibleConfirmBlock} \r\n                title={'Remove main block?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClickBlock}\r\n            />\r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmImage}\r\n                setShow={setIsVisibleConfirmImage} \r\n                title={'Delete image?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"delete\"}\r\n                handleRemoveClick={handleConfirmClickImage}\r\n            />\r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmIcon}\r\n                setShow={setIsVisibleConfirmIcon} \r\n                title={'Delete image?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"delete\"}\r\n                handleRemoveClick={handleConfirmClickIcon}\r\n            />\r\n\r\n            <Tooltip  title={`Main Banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Main Banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (<960px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                                <TabletMacIcon/>\r\n                                                <Box>   \r\n                                                    <p> \r\n                                                        MarginTop: <b>{tabletMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{tabletMarginBottomComputed}</b> \r\n                                                    </p>     \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    \r\n                                    <Box className={classes.infoBlock}> \r\n                                        <span>You can use block without image. In this state you can set background color for block and contrast text</span>    \r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <Box mt={3} mb={1} className={classes.tableSizeContainer}>   \r\n                                        <SelectHeadingVariant\r\n                                            variant={'filled'} \r\n                                            size=\"small\"  \r\n                                            fullWidth={false} \r\n                                            label=\"Main Heading Variant\" \r\n                                            value={variant} \r\n                                            setValue={setVariant} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                        />\r\n                                        <Button \r\n                                            className={classes.tableSizeBtn}\r\n                                            size={'medium'}\r\n                                            startIcon={<InfoOutlined/>}\r\n                                            onClick={() => {setIsTableSizeVisible(!isTableSizeVisible)}}\r\n                                        >\r\n                                            {isTableSizeVisible ? 'Hide' : 'Show' } variants info\r\n                                        </Button> \r\n                                    </Box>\r\n                                    {\r\n                                        isTableSizeVisible && \r\n                                        <Box className={classes.tableSizeAbsolute}>\r\n                                            <TableFontSizeInfo activeRow={variant} /> \r\n                                        </Box>\r\n                                    }\r\n\r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Box display='flex' flexDirection='column' >\r\n                                                <Button color='primary' variant={'contained'} className={classes.btnWithLabel} > \r\n                                                    <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                    <input \r\n                                                        id=\"imageIcon-input-label\"\r\n                                                        type=\"file\" \r\n                                                        onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                        style={{ display: \"none\" }}\r\n                                                    />\r\n                                                </Button>\r\n                                                {\r\n                                                    iconUrl.length > 0 &&\r\n                                                    <Box mt={1}>\r\n                                                        <Button\r\n                                                            size='small'\r\n                                                            color='secondary' \r\n                                                            variant='contained' \r\n                                                            onClick={handleRemoveIcon}\r\n                                                            style={{whiteSpace: 'nowrap'}}\r\n                                                        > \r\n                                                            Remove icon\r\n                                                        </Button>\r\n                                                    </Box>\r\n                                                }\r\n                                            </Box>\r\n                                            \r\n                                            {\r\n                                                iconUrl &&\r\n                                                <Box ml={1}>\r\n                                                    <img src={iconUrl} alt='icon' width={35} />\r\n                                                </Box>\r\n                                            }\r\n                                            \r\n                                        </Box> \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Sub Heading'\r\n                                            variant='outlined'\r\n                                            value={subHeading}\r\n                                            setValue={setSubHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                         \r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >  \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Input Label\" \r\n                                                variant='outlined'\r\n                                                value={inputLabel}\r\n                                                setValue={setInputLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Button Label\" \r\n                                                variant='outlined'\r\n                                                value={buttonLabel}\r\n                                                setValue={setButtonLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Form Policy\" \r\n                                            variant='outlined'\r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />   \r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Form and SubHeading'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'>  \r\n                                            <Button color='primary' variant='contained' className={classes.btnWithLabel} > \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        {\r\n                                            imageUrl &&\r\n                                            <Box ml={1} maxWidth={300}>\r\n                                                <img src={imageUrl} alt='main' width={'100%'} />\r\n                                            </Box>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n\r\n                                    {\r\n                                        imageUrl.length > 0 &&\r\n                                        <Button\r\n                                            color='secondary' \r\n                                            variant='contained' \r\n                                            onClick={handleRemoveImage}\r\n                                        > \r\n                                        Remove image\r\n                                        </Button>\r\n                                    }\r\n\r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles , Typography} from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\nimport '../../../assets/style/headingCenter.scss'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const variant = props.data.variantHeading\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n  \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className={`${classes.styleClass} bulder-accordion`}>\r\n            <Container maxWidth={maxWidthContainer} className={classes.disableMobileGutters}>\r\n\r\n                {\r\n                    heading.length > 0 &&\r\n                    <Typography variant={variant} className={'heading heading-center'}>\r\n                        { heading }\r\n                    </Typography>\r\n                }\r\n                \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"bulder-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"bulder-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React , { useState} from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = useState('')\r\n    const [newItemBody, setNewItemBody] = useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemBody)\r\n        setNewItemTitle('')\r\n        setNewItemBody('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} mt={3} mb={2}>\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new item</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item head\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item body\" \r\n                            variant=\"outlined\" \r\n                            value={newItemBody}\r\n                            onChange={(e) => { setNewItemBody(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Item\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, { useEffect, useState } from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter' \r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n \r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\" \r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport Confirm from '../../utilits/Confirm' \r\nimport TableFontSizeInfo from '../../utilits/TableFontSizeInfo'\r\nimport SelectHeadingVariant from '../../functions/SelectHeadingVariant';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [isVisibleConfirmBlock, setIsVisibleConfirmBlock] = useState(false) \r\n    const [isVisibleConfirmItem, setIsVisibleConfirmItem] = useState({show: false, index : null}) \r\n    \r\n    const [variant, setVariant] = useState(props.data.variantHeading || 'h3')\r\n    const [isTableSizeVisible, setIsTableSizeVisible] = useState(false)\r\n\r\n    const [items, setItems] = useState(props.data.items)   \r\n    const [heading, setHeading] = useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = useState(props.data.color)\r\n\r\n    const [marginTop, setMarginTop] = useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = useState(props.data.maxWidthContainer || 'lg')\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n        \r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, dialogContentUnstyle, \r\n            containerWrapper, responseValues ,responseMobile , mobileTooltip , tableSizeContainer, tableSizeBtn, tableSizeAbsolute\r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            tableSizeContainer: tableSizeContainer,\r\n            tableSizeBtn: tableSizeBtn, \r\n            tableSizeAbsolute: tableSizeAbsolute,\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   } ,\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.variantHeading = variant\r\n        newData.heading = heading\r\n        newData.items = items\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeAccordion = () => {\r\n        setIsVisibleConfirmBlock(true) \r\n    }\r\n\r\n    const handleUpdateItemHead = (head, index) => { \r\n        const newItems = items.slice()\r\n        newItems[index].head = head \r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const handleUpdateItemBody = (body, index) => { \r\n        const newItems = items.slice() \r\n        newItems[index].body = body\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = (head, body) => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: head,\r\n            body: body\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        setIsVisibleConfirmItem({show: true, index: index})\r\n    }\r\n    const handleConfirmClickItem = (index) => { \r\n        const newItems = items.slice()\r\n        newItems.splice(index, 1) \r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const handleConfirmClickBlock = () => {\r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}> \r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmBlock}\r\n                setShow={setIsVisibleConfirmBlock} \r\n                title={'Remove accordion?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClickBlock}\r\n            />\r\n            <Confirm\r\n                isVariable={true}\r\n                show={isVisibleConfirmItem}\r\n                setShow={setIsVisibleConfirmItem} \r\n                title={'Delete item?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"delete\"}\r\n                handleRemoveClick={handleConfirmClickItem}\r\n            />\r\n            <Tooltip  title={`accordion margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`accordion margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >   \r\n                <Box className={classes.btnDrawerStyle}> \r\n\r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Accordion Settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                             \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={3} mb={1} className={classes.tableSizeContainer}>   \r\n                                        <SelectHeadingVariant\r\n                                            variant={'filled'} \r\n                                            size=\"small\"  \r\n                                            fullWidth={false} \r\n                                            label=\"Main Heading Variant\" \r\n                                            value={variant} \r\n                                            setValue={setVariant} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                        />\r\n                                        <Button \r\n                                            className={classes.tableSizeBtn}\r\n                                            size={'medium'}\r\n                                            startIcon={<InfoOutlined/>}\r\n                                            onClick={() => {setIsTableSizeVisible(!isTableSizeVisible)}}\r\n                                        >\r\n                                            {isTableSizeVisible ? 'Hide' : 'Show' } variants info\r\n                                        </Button> \r\n                                    </Box>\r\n                                    {\r\n                                        isTableSizeVisible && \r\n                                        <Box className={classes.tableSizeAbsolute}>\r\n                                            <TableFontSizeInfo activeRow={variant} /> \r\n                                        </Box>\r\n                                    }\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={2}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Item' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                                \r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label='Head'\r\n                                                            variant='outlined'\r\n                                                            value={item.head}\r\n                                                            setValue={handleUpdateItemHead}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />\r\n                                                        <Box mt={1} />\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label='Body'\r\n                                                            variant='outlined'\r\n                                                            value={item.body}\r\n                                                            setValue={handleUpdateItemBody}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        /> \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <AddItem addItem={addItem} />\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Accordion'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />\r\n                                    </Box>\r\n \r\n                                    <Box mt={5} />  \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                     \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, { useContext } from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","export const Location = () => (\r\n    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 511.999 511.999\" style={{enableBackground: 'new 0 0 511.999 511.999'}} xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n            <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                    c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                    c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                    M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                    S306.457,272.806,255.999,272.806z\" />\r\n            </g>\r\n        </g> \r\n    </svg>\r\n\r\n) ","export const Phone = () => ( \r\n    <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n    <g>\r\n        <g>\r\n        <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n        </g>\r\n    </g> \r\n    </svg> \r\n)","import React, {useState, useContext} from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box, darken, fade, lighten } from '@material-ui/core'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation' \r\nimport { NameValidation, PhoneValidation} from '../../functions/formValidation'\r\nimport InputMaskPhone from '../../functions/InputMaskPhone' \r\nimport ValidationChip from '../../utilits/ValidationChip'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\n\r\nimport {Location} from '../../../assets/icons/location.js'\r\nimport {Phone} from '../../../assets/icons/phone.js'\r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests, validationSettings } = useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = useState('')\r\n    const [formName, setFormName] = useState('')\r\n    const [formComment, setFormComment] = useState('')\r\n\r\n    const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n    const [isValidName, setIsValidName] = useState({isValid: true})\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload  \r\n    let color = props.data.color || 'primary'\r\n    let colorFocusInput, inValidColor\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n        inValidColor = getColorByPalette(theme, validationSettings.color) \r\n \r\n        return ({\r\n            svg: {\r\n                fill: colorFocusInput, \r\n                marginRight: 15,\r\n                maxWidth: 25,\r\n                minWidth: 25,\r\n                height: 25,\r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '& svg': {\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                }\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`,  \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput, \r\n                    background: fade(colorFocusInput, 0.07), \r\n                    \"&:hover\": {\r\n                        background: fade(colorFocusInput, 0.07), \r\n                    },\r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n            },\r\n            inValidInput: {\r\n                borderColor: lighten(inValidColor, 0.2),\r\n                background: fade(inValidColor, 0.15), \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n            },\r\n            button: {\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                color: '#fff',\r\n                 \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${color} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }, \r\n            styleClass: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),  \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),  \r\n                }\r\n            }, \r\n            validationChipsContainer: {\r\n                display: 'flex', \r\n                [theme.breakpoints.down('sm')]: {\r\n                    flexDirection: 'column',\r\n                    '& >*' : {\r\n                        marginLeft: 0, \r\n                        marginTop: `0px !important`\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n        const valphone = PhoneValidation(formPhone) \r\n        const valname = NameValidation(formName) \r\n    \r\n        if(valphone.isValid && valname.isValid) {\r\n            const sendForm = {\r\n                phone: formPhone,\r\n                name: formName, \r\n                comment: formComment,\r\n                place: 'contact',  \r\n                isCheck: false\r\n            }\r\n    \r\n            sendRequests(sendForm)\r\n            \r\n            setFormPhone('')\r\n            setFormName('')\r\n            setFormComment('')\r\n        } else {\r\n            setIsValidName(valname)\r\n            setIsValidPhone(valphone)\r\n        } \r\n    }\r\n    const handleChangePhone = (value) => {\r\n        setFormPhone(value) \r\n        setIsValidPhone({isValid: true})\r\n    }\r\n    const handleChangeName = (value) => {\r\n        setFormName(value) \r\n        setIsValidName({isValid: true})\r\n    }\r\n\r\n    const handleCloseValidationChip = (place) => {\r\n        if(place === 'name') setIsValidName({isValid: true})\r\n        if(place === 'phone') setIsValidPhone({isValid: true})\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className={`bulder-contact ${classes.styleClass}`}> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`bulder-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <div className={classes.svg} > \r\n                                                <Location/>\r\n                                            </div>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\" >\r\n                                            <div className={classes.svg}> \r\n                                                 <Phone/>\r\n                                            </div>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <Box className={classes.validationChipsContainer}> \r\n                                            {\r\n                                                !isValidName.isValid &&\r\n                                                <Box flexGrow={1}  >\r\n                                                    <ValidationChip  \r\n                                                        isValid={isValidName.isValid} \r\n                                                        handleClose={handleCloseValidationChip}\r\n                                                        place={'name'}\r\n                                                        absolute={false}\r\n                                                        style={{marginTop: 0}}\r\n                                                        closeOnFirstClick={true}\r\n                                                    />\r\n                                                </Box>\r\n                                            } \r\n                                            { !isValidName.isValid && !isValidPhone.isValid && <Box mr={1} /> }\r\n                                            {\r\n                                                !isValidPhone.isValid &&\r\n                                                <Box flexGrow={1} >\r\n                                                    <ValidationChip  \r\n                                                        isValid={isValidPhone.isValid}  \r\n                                                        handleClose={handleCloseValidationChip}\r\n                                                        place={'phone'}\r\n                                                        absolute={false}\r\n                                                        style={{ marginTop: 0 }}\r\n                                                        closeOnFirstClick={true}\r\n                                                    />\r\n                                                </Box>\r\n                                            } \r\n                                        </Box>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName}  \r\n                                                    className={`${classes.input} ${!isValidName.isValid && classes.inValidInput}`} \r\n                                                    value={formName}\r\n                                                    onChange={e => {handleChangeName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <InputMaskPhone \r\n                                                    placeholder={`${inputPhone}`}  \r\n                                                    className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                                                    value={formPhone}\r\n                                                    setValue={handleChangePhone}\r\n                                                /> \r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"bulder-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, { useEffect, useState } from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, \r\n    ButtonGroup, makeStyles, Modal, DialogContent, Switch, \r\n    FormControlLabel, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport Confirm from '../../utilits/Confirm' \r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) { \r\n \r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [isVisibleConfirm, setIsVisibleConfirm] = useState(false)       \r\n\r\n    const [location, setLocation] = useState(props.data.location)\r\n    const [phone, setPhone] = useState(props.data.phone)\r\n    const [paragraph, setParagraph] = useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = useState(props.data.mapFrame === null ? false : true)\r\n    \r\n    const [colorSelect,  setColorSelect] = useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = useState(props.data.maxWidthContainer || 'lg') \r\n \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.color])\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n        \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData)  \r\n        setIsDisableBtn(true)\r\n    }\r\n    \r\n    const removeItem = () => {  \r\n        setIsVisibleConfirm(true) \r\n    };\r\n    \r\n    const handleConfirmClick = () => {\r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            \r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirm}\r\n                setShow={setIsVisibleConfirm} \r\n                title={'Remove contacts map?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClick}\r\n            />\r\n            <Tooltip  title={`Contact Map margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Contact Map margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Contacts Map Settings  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p>  \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                         \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Location'\r\n                                            variant='outlined'\r\n                                            value={location}\r\n                                            setValue={setLocation}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Phone'\r\n                                            variant='outlined'  \r\n                                            value={phone}\r\n                                            setValue={setPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} > \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Comment Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputComment}\r\n                                            setValue={setInputComment}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >       \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                  \r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={true} \r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Map Frame\" \r\n                                                        variant='outlined'  \r\n                                                        value={mapFrame}\r\n                                                        setValue={setMapFrame}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />  \r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button and Inputs'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n  \r\n                                    <Box my={5} />\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, { useContext } from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, darken, fade, Typography } from '@material-ui/core'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext' \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = useContext(ModalContext) \r\n      \r\n    const imageUrl = props.data.image\r\n\r\n    const variant = props.data.variantHeading\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    // let imageName = props.data.imageName\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    let colorButton = props.data.colorButton || '#f00'\r\n   \r\n    const useStyles = makeStyles((theme) => {   \r\n\r\n        colorButton = getColorByPalette(theme, colorButton) \r\n\r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(colorButton, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth={maxWidthContainer} >\r\n                <div className={`${classes.styleClass} bulder-about`}>\r\n                    <Grid container> \r\n                        <Grid item xs={12} md={imageUrl.length > 0 ? 6 : 12} >\r\n                            <div className=\"bulder-about_item\">\r\n                                {\r\n                                   heading.length > 0 && \r\n                                   <Typography variant={variant} className={'heading'}>\r\n                                       { heading }\r\n                                   </Typography>\r\n                                }\r\n                                {\r\n                                   paragraph.length > 0 && \r\n                                   <p>\r\n                                       { paragraph }\r\n                                   </p>\r\n                                } \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        {\r\n                            imageUrl.length > 0 && \r\n                            <Grid item xs={12} md={6} >\r\n                                <Box clone={true}>\r\n                                    <div className=\"bulder-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                                </Box> \r\n                            </Grid>\r\n                        }\r\n                        \r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, { useEffect, useState } from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers' \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nimport Confirm from '../../utilits/Confirm' \r\nimport TableFontSizeInfo from '../../utilits/TableFontSizeInfo'\r\nimport SelectHeadingVariant from '../../functions/SelectHeadingVariant';\r\n\r\nfunction StyledComponent(props) { \r\n      \r\n    const [isDisableBtn, setIsDisableBtn] = useState(true)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    \r\n    const [isVisibleConfirmBlock, setIsVisibleConfirmBlock] = useState(false) \r\n    const [isVisibleConfirmImage, setIsVisibleConfirmImage] = useState(false) \r\n\r\n    const [variant, setVariant] = useState(props.data.variantHeading || 'h3')\r\n    const [isTableSizeVisible, setIsTableSizeVisible] = useState(false)\r\n\r\n    const [heading, setHeading] = useState(props.data.heading)\r\n    const [paragraph, setParagraph] = useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = useState(props.data.image)\r\n    const [imageName, setImageName] = useState(props.data.imageName || '')\r\n\r\n    const [isButton, setIsButton] = useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = useState(props.data.colorButton || '')\r\n\r\n    const [marginTop, setMarginTop] = useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorButton)\r\n\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem,  dialogContentUnstyle, \r\n            containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip, \r\n            tableSizeContainer, tableSizeBtn, tableSizeAbsolute\r\n        } = commonClasses \r\n\r\n        \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            tableSizeContainer: tableSizeContainer,\r\n            tableSizeBtn: tableSizeBtn, \r\n            tableSizeAbsolute: tableSizeAbsolute,\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave, \r\n            btnWithLabel: btnWithLabel,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            infoBlock: {\r\n                padding: 8, \r\n                border: `1px solid ${theme.palette.info.main}`\r\n            }\r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n  \r\n    const handleImageUpload = async (e) => {\r\n  \r\n        RemoveImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => { \r\n        const newData = Object.assign({}, props.data)\r\n        newData.variantHeading = variant\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        setIsVisibleConfirmBlock(true)           \r\n    }\r\n    const handleRemoveImage = () => {\r\n        setIsVisibleConfirmImage(true)\r\n    }\r\n\r\n    const handleConfirmClickBlock = () => {\r\n        RemoveImage(imageName)\r\n        props.removeContainer(props.data.id)\r\n    }\r\n    const handleConfirmClickImage = () => {\r\n        RemoveImage(imageName)\r\n\r\n        setImageUrl('')\r\n        setImageName('')\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            \r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmBlock}\r\n                setShow={setIsVisibleConfirmBlock} \r\n                title={'Remove about?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClickBlock}\r\n            />\r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmImage}\r\n                setShow={setIsVisibleConfirmImage} \r\n                title={'Delete image?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"delete\"}\r\n                handleRemoveClick={handleConfirmClickImage}\r\n            />\r\n            <Tooltip  title={`about margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`about margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{ position: 'relative' }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }  Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                        <Box className={classes.infoBlock}>  \r\n                                            <span>You can use block without image. Block will be full width</span>       \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n                                    <Box mt={3} mb={1} className={classes.tableSizeContainer}>   \r\n                                        <SelectHeadingVariant\r\n                                            variant={'filled'} \r\n                                            size=\"small\"  \r\n                                            fullWidth={false} \r\n                                            label=\"Main Heading Variant\" \r\n                                            value={variant} \r\n                                            setValue={setVariant} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                        />\r\n                                        <Button \r\n                                            className={classes.tableSizeBtn}\r\n                                            size={'medium'}\r\n                                            startIcon={<InfoOutlined/>}\r\n                                            onClick={() => {setIsTableSizeVisible(!isTableSizeVisible)}}\r\n                                        >\r\n                                            {isTableSizeVisible ? 'Hide' : 'Show' } variants info\r\n                                        </Button> \r\n                                    </Box>\r\n                                    {\r\n                                        isTableSizeVisible && \r\n                                        <Box className={classes.tableSizeAbsolute}>\r\n                                            <TableFontSizeInfo activeRow={variant} /> \r\n                                        </Box>\r\n                                    }\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />   \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />  \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'right'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n                                    {\r\n                                        imageUrl.length > 0 &&\r\n                                        <Button\r\n                                            color='secondary' \r\n                                            variant='contained' \r\n                                            onClick={handleRemoveImage}\r\n                                        > \r\n                                        Remove image\r\n                                        </Button>\r\n                                    }\r\n\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, { useContext } from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, { useContext } from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { darken, fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n  \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        colorMain = getColorByPalette(theme, colorMain) \r\n \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorMain, 0.5) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    paddingTop: \".4em\",\r\n                    paddingBottom: \".4em\",\r\n                    '&:hover' : {\r\n                        backgroundColor: colorMain , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorMain, 0.3) ,  \r\n                    }\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0),  \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            },\r\n            styleClass: {\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={`${classes.containerColored} ${classes.styleClass}`}> \r\n            <Container maxWidth={maxWidthContainer} > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, { useEffect, useState } from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\nimport Confirm from '../../utilits/Confirm' \r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true)\r\n    const [open, setOpen] = useState(false)\r\n    const [isVisibleConfirm, setIsVisibleConfirm] = useState(false) \r\n\r\n    const [heading, setHeading] = useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = useState(props.data.colorMain || '')\r\n    const [marginTop, setMarginTop] = useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorMain)\r\n\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, dialogContentUnstyle,\r\n            btnDrawerItem, containerWrapper , responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        \r\n        return ({\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n     \r\n    const removeItem = () => {  \r\n        setIsVisibleConfirm(true) \r\n    };\r\n    \r\n    const handleConfirmClick = () => {\r\n        props.removeContainer(props.data.id)\r\n    } \r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Confirm\r\n                show={isVisibleConfirm}\r\n                setShow={setIsVisibleConfirm} \r\n                title={'Remove action line?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClick}\r\n            />\r\n            <Tooltip  title={`Action Line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Action Line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Action Line \r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Heading Size\"\r\n                                                variant='outlined'\r\n                                                value={headingSize}\r\n                                                setValue={setHeadingSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>{ headingSize*0.65 }</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n \r\n                                    </Box>\r\n                                   \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                            <ColorSelecter\r\n                                                label={'Color for Block'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'top'}\r\n                                                noInherit={true}\r\n                                            />\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />   \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React , {useState, useContext} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box,    \r\n    Typography\r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport '../../../assets/style/headingCenter.scss'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const tableMinWidth = props.data.tableMinWidth\r\n    const isButton = props.data.isButton\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const variant = props.data.variantHeading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isButtonShowMore = rows.length - visibleRows > 0 ? true : false  \r\n    const [isButtonClick, setIsButtonClick] = useState(false)\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        \r\n        mainColor = getColorByPalette(theme, mainColor)\r\n \r\n        return ({\r\n            table: { \r\n                minWidth: tableMinWidth,\r\n            },\r\n            \r\n            tableCell: {\r\n                paddingTop: theme.spacing(2), \r\n                paddingBottom: theme.spacing(2),  \r\n                [theme.breakpoints.down('md')]: { \r\n                    paddingTop: theme.spacing(1), \r\n                    paddingBottom: theme.spacing(1), \r\n                },\r\n            },\r\n            tableButtonCell: { \r\n                maxWidth: 300,\r\n                width: 300,\r\n                [theme.breakpoints.down('md')]: {\r\n                    width: 'auto', \r\n                },\r\n            },\r\n            tableButton: { \r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                fontSize: 14, \r\n                lineHeight: 1.2, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    padding: theme.spacing(1), \r\n                },\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsButtonClick(!isButtonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(isButtonClick)\r\n            return (\r\n                rows.map((row, index) => { \r\n                    return (\r\n                        OnceRow(row, index)\r\n                    )\r\n                })\r\n            )\r\n        else\r\n            return (\r\n                rows.map((row, index) => {\r\n                    if(index < visibleRows)\r\n                    return (\r\n                        OnceRow(row, index)\r\n                    )\r\n                    return false\r\n                })\r\n            )\r\n       \r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true}  >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableCell}>\r\n                {row.price}\r\n            </TableCell> \r\n            {\r\n                isButton && \r\n                <TableCell align=\"right\" className={`${classes.tableButtonCell} ${classes.tableCell}`}> \r\n                    <Button \r\n                        variant='contained'   \r\n                        className={classes.tableButton}\r\n                        onClick={() => { handleOpenModal(row.name) }}\r\n                    >\r\n                        { buttonText }\r\n                    </Button>\r\n                </TableCell>\r\n            }\r\n        </StyledTableRow> \r\n    )\r\n    const renderButton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isButtonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth={maxWidthContainer} className={`${classes.tableContainer}`} >\r\n            {\r\n                heading.length > 0 &&\r\n                <Typography variant={variant} className={`heading heading-center`}>\r\n                    { heading }\r\n                </Typography> \r\n            }\r\n            <TableContainer component={Paper}>\r\n                \r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead> \r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={`${classes.tableHeader} ${classes.tableCell}` }\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            {\r\n                                isButton &&\r\n                                <TableCell align=\"right\" className={`${classes.tableHeader} ${classes.tableCell}` } ></TableCell>\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    \r\n                        <TableBody>\r\n                            {\r\n                                renderRows()\r\n                            }\r\n                        </TableBody> \r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isButtonShowMore &&\r\n                renderButton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React, {useState} from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = useState('')\r\n    const [newItemPrice, setNewItemPrice] = useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemPrice)\r\n        setNewItemTitle('')\r\n        setNewItemPrice('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new row</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item title\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item price\" \r\n                            variant=\"outlined\" \r\n                            value={newItemPrice}\r\n                            onChange={(e) => { setNewItemPrice(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Row\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n    FormControlLabel, \r\n    Switch, \r\n    IconButton\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\" \r\n\r\nimport InputChange from '../../functions/InputChange'; \r\n\r\nimport Confirm from '../../utilits/Confirm' \r\nimport TableFontSizeInfo from '../../utilits/TableFontSizeInfo'\r\nimport SelectHeadingVariant from '../../functions/SelectHeadingVariant';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [isVisibleConfirmBlock, setIsVisibleConfirmBlock] = useState(false) \r\n    const [isVisibleConfirmItem, setIsVisibleConfirmItem] = useState({show: false, index : null}) \r\n\r\n    const [variant, setVariant] = useState(props.data.variantHeading || 'h3')\r\n    const [isTableSizeVisible, setIsTableSizeVisible] = useState(false)\r\n\r\n    const [heading, setHeading] = useState(props.data.heading)  \r\n \r\n    const [isButton, setIsButton] = useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = useState(props.data.color || '')\r\n    const [rows, setRows] = useState(props.data.rows)\r\n    const [tableRow, setTableRow] = useState(props.data.tableRow)\r\n\r\n    const [tableMinWidth, setTableMinWidth] = useState(props.data.tableMinWidth || 200 )\r\n\r\n    const [visibleRows, setVisibleRows] = useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = useState(props.data.visibleBottonTextClick || 'Show less') \r\n    \r\n    const [marginTop, setMarginTop] = useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper ,\r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle, tableSizeContainer, tableSizeBtn, tableSizeAbsolute} = commonClasses   \r\n\r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            tableSizeContainer: tableSizeContainer,\r\n            tableSizeBtn: tableSizeBtn, \r\n            tableSizeAbsolute: tableSizeAbsolute,\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }},   \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,   \r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,  \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.variantHeading = variant \r\n        newData.heading = heading \r\n        newData.tableMinWidth = tableMinWidth \r\n        newData.isButton = isButton \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n    }\r\n    const handleTableHeadChange = (value, index) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChangeName = (name, index) => {\r\n        const newRows = rows.slice() \r\n        newRows[index].name = name \r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const handleRowChangePrice = (price, index) => {\r\n        const newRows = rows.slice() \r\n        newRows[index].price = price\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false);  \r\n    }\r\n    const addRow = (title, body) => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: title, \r\n            price: body \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        setIsVisibleConfirmItem({show: true, index: index}) \r\n    }\r\n    const removeTable = () => {\r\n        setIsVisibleConfirmBlock(true)  \r\n    }\r\n      \r\n    const handleConfirmClickBlock = () => {\r\n        props.removeContainer(props.data.id)\r\n    }\r\n    const handleConfirmClickItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmBlock}\r\n                setShow={setIsVisibleConfirmBlock} \r\n                title={'Remove table?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClickBlock}\r\n            />\r\n            <Confirm\r\n                isVariable={true}\r\n                show={isVisibleConfirmItem}\r\n                setShow={setIsVisibleConfirmItem} \r\n                title={'Delete row?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"delete\"}\r\n                handleRemoveClick={handleConfirmClickItem}\r\n            />\r\n\r\n            <Tooltip  title={`Table margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Table margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}} >\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        \r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    \r\n                                    <Box mt={3} mb={1} className={classes.tableSizeContainer}>   \r\n                                        <SelectHeadingVariant\r\n                                            variant={'filled'} \r\n                                            size=\"small\"  \r\n                                            fullWidth={false} \r\n                                            label=\"Main Heading Variant\" \r\n                                            value={variant} \r\n                                            setValue={setVariant} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                        />\r\n                                        <Button \r\n                                            className={classes.tableSizeBtn}\r\n                                            size={'medium'}\r\n                                            startIcon={<InfoOutlined/>}\r\n                                            onClick={() => {setIsTableSizeVisible(!isTableSizeVisible)}}\r\n                                        >\r\n                                            {isTableSizeVisible ? 'Hide' : 'Show' } variants info\r\n                                        </Button> \r\n                                    </Box>\r\n                                    {\r\n                                        isTableSizeVisible && \r\n                                        <Box className={classes.tableSizeAbsolute}>\r\n                                            <TableFontSizeInfo activeRow={variant} /> \r\n                                        </Box>\r\n                                    }\r\n\r\n\r\n                                    <Box my={2} display={'flex'}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box flexGrow={1}> \r\n                                                    <InputChange\r\n                                                        id={null} \r\n                                                        fullWidth={true}\r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Text for Button\"\r\n                                                        variant='outlined'\r\n                                                        value={textButton}\r\n                                                        setValue={setTextButton}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box my={3} display='flex' alignItems='center'>\r\n                                        <Box mr={1}> \r\n                                            <Tooltip  title=\"The table will scroll horizontally with a smaller width\" >\r\n                                                <IconButton className={classes.warningBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            fullWidth={true}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Table Min Width\"\r\n                                            variant='outlined'\r\n                                            value={tableMinWidth}\r\n                                            setValue={setTableMinWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <InputChange\r\n                                                            id={index} \r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item}\r\n                                                            setValue={handleTableHeadChange}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n  \r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Row' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Row Name ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item.name}\r\n                                                            setValue={handleRowChangeName}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                        <Box mr={1} />\r\n                                                        <InputChange\r\n                                                            id={index}\r\n                                                            fullWidth={false}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Row Price ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item.price}\r\n                                                            setValue={handleRowChangePrice}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                        {/* <ChangeItem handleRowChange={handleRowChange} item={item} index={index} /> */}\r\n\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n                                    \r\n                                    <AddItem addItem={addRow} />\r\n                                     \r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <ColorSelecter\r\n                                            label={'Color for Table'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label={`Quantity to show`}\r\n                                                variant='outlined'\r\n                                                value={visibleRows}\r\n                                                setValue={setVisibleRows}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label={`Text for botton`}\r\n                                                variant='outlined'\r\n                                                value={visibleBottonText}\r\n                                                setValue={setVisibleBottonText}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <InputChange\r\n                                            id={null}  \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label={`Text for botton clicked`}\r\n                                            variant='outlined'\r\n                                            value={visibleBottonTextClick}\r\n                                            setValue={setVisibleBottonTextClick}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                        \r\n                                    </Box>\r\n                                                \r\n                                    <Box mt={5} />\r\n \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, { useState, useContext} from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, makeStyles, Button, Box, Grid, fade, darken, lighten, Typography } from '@material-ui/core'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport '../../../assets/style/lineForm.scss'  \r\n\r\nimport ValidationChip from '../../utilits/ValidationChip'\r\nimport {NameValidation, PhoneValidation} from '../../functions/formValidation'\r\nimport InputMaskPhone from '../../functions/InputMaskPhone'\r\n\r\nfunction DumbComponent(props) {  \r\n    const { sendRequests, validationSettings } = useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = useState('')\r\n    const [formName, setFormName] = useState('') \r\n    \r\n    const [isValidPhone, setIsValidPhone] = useState({isValid: true})\r\n    const [isValidName, setIsValidName] = useState({isValid: true})\r\n   \r\n    const variant = props.data.variantHeading\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone \r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n      \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    let color = props.data.color\r\n    let colorFocusInput, inValidColor\r\n  \r\n    const useStyles = makeStyles((theme) => {    \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n        inValidColor = getColorByPalette(theme, validationSettings.color) \r\n\r\n        return ({ \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper,  \r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            },\r\n            lineDecor: {\r\n                position: \"absolute\",\r\n                top: 8,\r\n                left: 8,\r\n                right: 8,\r\n                bottom: 8,\r\n                border: `1px solid ${fade(color, 0.25)}`,\r\n                borderRadius: 4,\r\n            },\r\n            input: {\r\n                width: '100%',\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: 'inherit',\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                height: 50,\r\n                paddingLeft: 45,\r\n                paddingRight: 25, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput,\r\n                    background: fade(colorFocusInput, 0.07), \r\n                    \"&:hover\": {\r\n                        background: fade(colorFocusInput, 0.07), \r\n                    },\r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center' ,\r\n                    paddingLeft: 20,\r\n                    paddingRight: 20, \r\n                }\r\n            },\r\n            inValidInput: {\r\n                borderColor: lighten(inValidColor, 0.2),\r\n                background: fade(inValidColor, 0.15), \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: lighten(inValidColor, 0.2),\r\n                },\r\n            },\r\n            button: {\r\n                width: '100%',\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                height: 50,\r\n                textTransform: 'inherit', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \r\n                color: theme.palette.getContrastText(color),\r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: 0,  \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.getContrastText(theme.palette.background.paper),\r\n                    }\r\n                }, \r\n            }, \r\n            gridItem: {\r\n                position: 'relative',\r\n                paddingRight: theme.spacing(1), \r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginBottom: 10,  \r\n                }\r\n            },\r\n            gridValidation: {\r\n                position: 'relative', \r\n                height: 45, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    height: 35\r\n                }\r\n            },\r\n            policy: {\r\n                height: \"100%\", \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                fontSize: 12,\r\n                lineHeight: 1.2,\r\n                fontWeight: 300, \r\n                [theme.breakpoints.down('md')]: {\r\n                    marginTop: 10, \r\n                    textAlign: 'center', \r\n                    justifyContent: 'center'\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const valphone = PhoneValidation(formPhone) \r\n        const valname = NameValidation(formName) \r\n\r\n        if(valphone.isValid && valname.isValid) {\r\n            const sendForm = {\r\n                phone: formPhone,\r\n                name: formName,  \r\n                place: 'line Form',  \r\n                isCheck: false\r\n            }\r\n    \r\n            sendRequests(sendForm)\r\n            \r\n            setFormPhone('')\r\n            setFormName('')\r\n        } else {\r\n          setIsValidName(valname)\r\n          setIsValidPhone(valphone)\r\n        }\r\n         \r\n\r\n    }\r\n    const handleChangePhone = (value) => {\r\n        setFormPhone(value) \r\n        setIsValidPhone({isValid: true})\r\n      }\r\n      const handleChangeName = (value) => {\r\n        setFormName(value) \r\n        setIsValidName({isValid: true})\r\n      }\r\n    \r\n      const handleCloseValidationChip = (place) => {\r\n        if(place === 'name') setIsValidName({isValid: true})\r\n        if(place === 'phone') setIsValidPhone({isValid: true})\r\n      }\r\n    return ( \r\n        <div className={classes.itemBackground}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className=\"line-form\"> \r\n                    <Box className={classes.lineDecor} ></Box>\r\n                    {\r\n                        heading.length > 0 &&\r\n                        <Typography variant={variant} className={`heading`}>\r\n                            { heading }\r\n                        </Typography> \r\n                    }\r\n                      \r\n                    {\r\n                        paragraph.length > 0 &&\r\n                        <p>\r\n                            {paragraph}\r\n                        </p>\r\n                    } \r\n\r\n                    <form onSubmit={handleSubmit} style={{position: 'relative', zIndex: 5}}>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}  >\r\n                            {\r\n                                !isValidName.isValid && \r\n                                <Box className={classes.gridValidation}>\r\n                                    <ValidationChip \r\n                                        isValid={isValidName.isValid}  \r\n                                        handleClose={handleCloseValidationChip}\r\n                                        place={'name'}\r\n                                        absolute={true} \r\n                                        closeOnFirstClick={true}\r\n                                        style={{width: 'calc(100% - 10px)', top: 'auto', bottom: 0}}\r\n                                    />\r\n                                </Box>\r\n                            }\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3}  >\r\n                            {\r\n                                !isValidPhone.isValid && \r\n                                <Box className={classes.gridValidation}>\r\n                                    <ValidationChip  \r\n                                        isValid={isValidPhone.isValid}  \r\n                                        handleClose={handleCloseValidationChip}\r\n                                        place={'phone'}\r\n                                        absolute={true} \r\n                                        closeOnFirstClick={true}\r\n                                        style={{width: 'calc(100% - 10px)', top: 'auto', bottom: 0}}\r\n                                    />\r\n                                </Box>\r\n                                \r\n                            }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name={`name-${props.data.id}`}  \r\n                                    placeholder={inputName} \r\n                                    value={formName}\r\n                                    onChange={(e) => {handleChangeName(e.target.value)}} \r\n                                    className={`${classes.input} ${!isValidName.isValid && classes.inValidInput}`} \r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                 \r\n                                <InputMaskPhone \r\n                                    placeholder={`${inputPhone}`}   \r\n                                    className={`${classes.input} ${!isValidPhone.isValid && classes.inValidInput}`} \r\n                                    value={formPhone}\r\n                                    setValue={handleChangePhone}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4} lg={3} className={classes.gridItem}>\r\n                                <Button \r\n                                    type=\"submit\"\r\n                                    className={classes.button} \r\n                                >\r\n                                    <span>\r\n                                       { buttonText}\r\n                                    </span>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={3} >\r\n                                <span className={classes.policy}>\r\n                                    { policy }\r\n                                </span> \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                    </form>\r\n                </div> \r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, { useEffect, useState } from 'react'\r\n \r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, ButtonGroup, makeStyles, Modal, DialogContent, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport Confirm from '../../utilits/Confirm' \r\nimport TableFontSizeInfo from '../../utilits/TableFontSizeInfo'\r\nimport SelectHeadingVariant from '../../functions/SelectHeadingVariant';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n    const [open, setOpen] = useState(false)\r\n    \r\n    const [isVisibleConfirm, setIsVisibleConfirm] = useState(false) \r\n\r\n    const [variant, setVariant] = useState(props.data.variantHeading || 'h4')\r\n    const [isTableSizeVisible, setIsTableSizeVisible] = useState(false)\r\n \r\n    const [heading, setHeading] = useState(props.data.heading || '')\r\n    const [paragraph, setParagraph] = useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = useState(props.data.inputPhone || '') \r\n    const [buttonText, setButtonText] = useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = useState(props.data.policy || '')\r\n \r\n    const [colorSelect,  setColorSelect] = useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = useState(props.data.color || '')\r\n    \r\n    const [marginTop, setMarginTop] = useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = useState(props.data.marginBottom )\r\n    const [maxWidthContainer, setMaxWidthContainer] = useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    useEffect(() => {\r\n        if (colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        // eslint-disable-next-line\r\n    }, [props.data.color])\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n     \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n         \r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, dialogContentUnstyle, \r\n            responseValues ,responseMobile , mobileTooltip, tableSizeContainer, tableSizeBtn, tableSizeAbsolute } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            tableSizeContainer: tableSizeContainer,\r\n            tableSizeBtn: tableSizeBtn, \r\n            tableSizeAbsolute: tableSizeAbsolute,\r\n            dialogContentUnstyle: dialogContentUnstyle, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)  \r\n        \r\n        newData.variantHeading = variant   \r\n        newData.heading = heading \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone  \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy  \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {  \r\n        setIsVisibleConfirm(true) \r\n    };\r\n    \r\n    const handleConfirmClick = () => {\r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            \r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirm}\r\n                setShow={setIsVisibleConfirm} \r\n                title={'Remove form line?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClick}\r\n            />\r\n\r\n            <Tooltip  title={`Form line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Form line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Form Line Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Form line  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    \r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select> \r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={1} className={classes.tableSizeContainer}>   \r\n                                        <SelectHeadingVariant\r\n                                            variant={'filled'} \r\n                                            size=\"small\"  \r\n                                            fullWidth={false} \r\n                                            label=\"Main Heading Variant\" \r\n                                            value={variant} \r\n                                            setValue={setVariant} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                        />\r\n                                        <Button \r\n                                            className={classes.tableSizeBtn}\r\n                                            size={'medium'}\r\n                                            startIcon={<InfoOutlined/>}\r\n                                            onClick={() => {setIsTableSizeVisible(!isTableSizeVisible)}}\r\n                                        >\r\n                                            {isTableSizeVisible ? 'Hide' : 'Show' } variants info\r\n                                        </Button> \r\n                                    </Box>\r\n                                    {\r\n                                        isTableSizeVisible && \r\n                                        <Box className={classes.tableSizeAbsolute}>\r\n                                            <TableFontSizeInfo activeRow={variant} /> \r\n                                        </Box>\r\n                                    }\r\n\r\n                                      \r\n                                    <Box mt={2} >   \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>  \r\n                                    <Box mt={2} >        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >      \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        />\r\n                                        \r\n                                    </Box>\r\n                                    <Box mt={5} />\r\n \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }  \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, { useEffect, useState, useContext, useRef } from 'react'\r\n  \r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles, Typography, Container, Box, fade } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\nimport '../../../assets/style/headingCenter.scss'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) { \r\n    \r\n    const { handleOpen } = useContext(ModalContext) \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const variant = props.data.variantHeading\r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = useState(0)  \r\n\r\n    const slideRef = useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({  \r\n            swiper: {\r\n                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                    }\r\n                },  \r\n            },\r\n            activeSlide: {\r\n                cursor: 'pointer', \r\n                '&:hover': {\r\n                    '& $slideImg': {\r\n                        transform: \"scale(1.03)\"\r\n                    },\r\n                    '& $slideTitle': { \r\n                        backgroundColor: theme.palette.background.default\r\n                    },\r\n                }\r\n            }, \r\n            slide: {\r\n                position: 'relative',  \r\n                height: slideHeight,   \r\n                overflow: 'hidden', \r\n                '& a': {\r\n                    color: 'inherit'\r\n                }\r\n            },\r\n            slideBox: {\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }, \r\n            slideImg: {\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n            },\r\n            slideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: '3vw', \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2), \r\n                borderBottom: `2px solid ${color}`,\r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 20\r\n                }\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 300, \r\n                    marginLeft: spaceBetween,\r\n                    marginRigth: spaceBetween,\r\n                    marginBottom: spaceBetween, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 0, \r\n                        marginRight: 0, \r\n                        maxWidth: '100%',   \r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n     \r\n  \r\n    useEffect(() => {   \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('swiper resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current.clientWidth\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n \r\n    const handleSlideClick = (slide) => {\r\n        if(slide.isButton) {\r\n            handleOpen(slide.targetButton)\r\n        } \r\n    }\r\n\r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key} \r\n            ref={slideRef} \r\n            className={`${classes.slide} ${(slide.isButton || slide.isUrl) ? classes.activeSlide : '' } `}\r\n            onClick={() => { handleSlideClick(slide) }}\r\n        >\r\n            {\r\n                slide.isUrl ? \r\n                <NavLink to={slide.activePage.slug}>\r\n                    <Box className={classes.slideBox}>\r\n                        <Box \r\n                            style={{backgroundImage: `url(${slide.imageUrl})`}}\r\n                            className={classes.slideImg}\r\n                        />\r\n                        {\r\n                            slide.title.length > 0 &&\r\n                            <Typography\r\n                                component='h6'\r\n                                className={classes.slideTitle}\r\n                            >\r\n                                {slide.title}\r\n                            </Typography>\r\n                        }\r\n                        \r\n                    </Box>\r\n                </NavLink>\r\n                :\r\n                <Box className={classes.slideBox}>\r\n                    <Box \r\n                        style={{backgroundImage: `url(${slide.imageUrl})`}}\r\n                        className={classes.slideImg}\r\n                    />\r\n                    {\r\n                        slide.title.length > 0 &&\r\n                        <Typography\r\n                            component='h6'\r\n                            className={classes.slideTitle}\r\n                        >\r\n                            {slide.title}\r\n                        </Typography>\r\n                    }\r\n                    \r\n                </Box>\r\n            }\r\n            \r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass}`} maxWidth={maxWidthContainer} >\r\n            {\r\n                heading.length > 0 &&\r\n                <Typography variant={variant} className={`heading heading-center`}>\r\n                    { heading }\r\n                </Typography> \r\n            }\r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( (slide, key) => {\r\n                            return renderSlide(slide, key)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( (slide, key) => {\r\n                            return renderSlide(slide, key)\r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, {useState} from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,  \r\n    Typography, \r\n    makeStyles\r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newImageName, setNewImageName] = useState('')\r\n    const [newImageUrl, setNewImageUrl] = useState('')\r\n    const [newImageTitle, setNewImageTitle] = useState('')\r\n\r\n    const handleImageUpload = async (e) => { \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setNewImageUrl(downloadURL)\r\n        setNewImageName(generateImageName)   \r\n    }\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newImageUrl, newImageName, newImageTitle)\r\n        setNewImageName('')\r\n        setNewImageUrl('') \r\n        setNewImageTitle('') \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n            <Button color='primary' variant='contained' className={props.btnWithLabel}  >\r\n                <label htmlFor='image-input-label'>\r\n                    Set image\r\n                </label>\r\n                <input\r\n                    id=\"image-input-label\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {  handleImageUpload(e) }}\r\n                    style={{\r\n                    display: \"none\"\r\n                }}/>\r\n            </Button> \r\n            <Box ml={2} display='inline-block'>\r\n                <Typography variant='caption' > Image: { newImageName.replace(`-${props.id}`, '') }</Typography>\r\n            </Box>\r\n            <Box my={1}>\r\n                <TextField \r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Title'\r\n                    variant=\"outlined\"\r\n                    value={newImageTitle}\r\n                    onChange={(e) => { setNewImageTitle(e.target.value) }}\r\n                />\r\n                <Box my={1}>\r\n                    <Button\r\n                        disabled={newImageName !== '' ? false : true }\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useContext, useState, useEffect, memo} from 'react'\r\n\r\nimport {   \r\n    Box,   \r\n    FormControl, \r\n    InputLabel, \r\n    Select,  \r\n    MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nconst SelectPage = memo( ({value, setValue, index}) => {\r\n    \r\n    const { categories } = useContext(CategoryContext)\r\n\r\n    const [pages, SetPages] = useState([]) \r\n    const [selectValue, setSelectValue] = useState(value)\r\n\r\n    useEffect( () => {\r\n        createPages() \r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {\r\n        if(selectValue !== value && value !== null) {\r\n            setSelectValue(value) \r\n        }\r\n        // eslint-disable-next-line\r\n    }, [value])\r\n\r\n    const createPages = () => {\r\n        let pagesArray = []\r\n        categories.forEach( item => { \r\n            pagesArray.push(item)\r\n            if(item.pages.length > 0) {\r\n                item.pages.forEach( innerItem => {\r\n                    let page = JSON.parse(JSON.stringify(innerItem))\r\n                    page.categorySlug = item.slug\r\n                    pagesArray.push(page)\r\n                })\r\n            }\r\n        })\r\n        SetPages(pagesArray) \r\n    }\r\n    \r\n    const handleChange = (id) => { \r\n        const activePage = {\r\n            id: id\r\n        }\r\n        pages.forEach( page => {\r\n            if(page.id === id) {\r\n                activePage.title = page.title\r\n                activePage.slug = (page.type === 'page') ? (`/${page.categorySlug}/${page.slug}`) : (`/${page.slug}`)\r\n            }\r\n        })\r\n        setSelectValue(id) \r\n        if(index !== undefined) { \r\n            setValue(activePage, index)\r\n        }\r\n        else {\r\n            setValue(activePage)\r\n        }\r\n    }\r\n\r\n    const renderLinkList = () => { \r\n        return pages.map( link => {\r\n            switch(link.type) {\r\n                case('category') : {\r\n                    return <MenuItem key={link.id} value={link.id} >{link.title } - { link.slug}</MenuItem> \r\n                }\r\n                case('page'): {\r\n                    return <MenuItem key={link.id} value={link.id} >{link.title } - {`${link.categorySlug}/${link.slug}`}</MenuItem>\r\n                }\r\n                default: break;\r\n            } \r\n            return false\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <Box> \r\n            <FormControl \r\n                variant='filled' \r\n                size='small'    \r\n                // style={{width: '100%'}}\r\n                fullWidth\r\n            >\r\n                <InputLabel id={`url-pages`}>Choice page</InputLabel>\r\n                {\r\n                    pages.length > 0 && \r\n                    <Select\r\n                        labelId={`url-pages`}\r\n                        id=\"url-select\"\r\n                        value={selectValue}  \r\n                        fullWidth\r\n                        style={{maxWidth: '100%'}}\r\n                        onChange={(e) => { handleChange(e.target.value) }}\r\n                    >   \r\n                        {\r\n                            renderLinkList()\r\n                        }\r\n                        {\r\n                            value === 'none' &&\r\n                            <MenuItem value={'none'} style={{display: 'none'}} >None</MenuItem>\r\n                        }\r\n                            \r\n                    </Select>\r\n                }\r\n            </FormControl>\r\n        </Box> \r\n    )\r\n})\r\n\r\nexport default SelectPage\r\n","import React, { useEffect, useState } from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent, \r\n    fade, \r\n    FormControlLabel, \r\n    Switch\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport SelectPage from '../../functions/SelectPage';\r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n \r\nimport Confirm from '../../utilits/Confirm' \r\nimport TableFontSizeInfo from '../../utilits/TableFontSizeInfo'\r\nimport SelectHeadingVariant from '../../functions/SelectHeadingVariant';\r\n\r\nfunction StyledComponent(props) {\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = useState(true)\r\n    const [open, setOpen] = useState(false)\r\n  \r\n    const [isVisibleConfirmBlock, setIsVisibleConfirmBlock] = useState(false) \r\n    const [isVisibleConfirmItem, setIsVisibleConfirmItem] = useState({show: false, index : null}) \r\n\r\n    const [variant, setVariant] = useState(props.data.variantHeading || 'h3')\r\n    const [isTableSizeVisible, setIsTableSizeVisible] = useState(false)\r\n\r\n    const [heading, setHeading] = useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = useState(props.data.speed || 200)\r\n    const [loop, setLoop] = useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const [imageForDelete, setImageForDelete] = useState([])\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues \r\n            ,responseMobile , mobileTooltip, dialogContentUnstyle, infoBtn, infoBlock ,  tableSizeContainer, tableSizeBtn, tableSizeAbsolute } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            tableSizeContainer: tableSizeContainer,\r\n            tableSizeBtn: tableSizeBtn, \r\n            tableSizeAbsolute: tableSizeAbsolute,\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }},  \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-block', \r\n                width: 250, \r\n                height: 250, \r\n                position: 'relative', \r\n                \"& img\": {\r\n                    width: '100%', \r\n                    height: '100%'\r\n                },\r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: 14, \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2)\r\n            }, \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            infoBlock: infoBlock,\r\n            infoBtn: infoBtn\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.variantHeading = variant \r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        if(imageForDelete.length > 0) {\r\n            imageForDelete.forEach( name => {\r\n                RemoveImage(name)\r\n            })\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n        setImageForDelete([])\r\n    }\r\n\r\n    const handleSlideTitle = (title, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].title = title \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsUrl = (value, index) => { \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].isUrl = !value \r\n        newSlides[index].isButton = false \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeUrl = (activePage, index) => {  \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].activePage = activePage  \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsButton = (value, index) => { \r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].isButton = !value \r\n        newSlides[index].isUrl = false\r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleChangeIsButtonTarget = (value, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].targetButton = value \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false) \r\n    }\r\n\r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const addSlide = ( url, name, title ) => {\r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            imageUrl: url, \r\n            imageName: name, \r\n            title: title, \r\n            isUrl: false, \r\n            activePage: {id: 'none'},\r\n            isButton: false, \r\n            targetButton: \"\"\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {   \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>\r\n                    {\r\n                        !item.isUrl &&\r\n                        <React.Fragment>\r\n                            <FormControlLabel\r\n                                control={\r\n                                        <Switch checked = { item.isButton }\r\n                                            onChange = { () => {handleChangeIsButton(item.isButton, index)} }\r\n                                            name={`checkedB-${index}`} \r\n                                            color = \"primary\"\r\n                                        />\r\n                                    }\r\n                                label=\"Set Modal Button\"\r\n                            /> \r\n                            {\r\n                                item.isButton &&  \r\n                                <Box my={1}>  \r\n                                    <InputChange\r\n                                        id={index}\r\n                                        fullWidth={true}\r\n                                        type='text'\r\n                                        size=\"small\"  \r\n                                        label=\"Target for Modal\"\r\n                                        variant='outlined'\r\n                                        value={item.targetButton}\r\n                                        setValue={handleChangeIsButtonTarget}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    />  \r\n                                </Box> \r\n                            }\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        !item.isButton &&\r\n                        <React.Fragment>\r\n                            <FormControlLabel\r\n                                control={\r\n                                        <Switch checked = { item.isUrl }\r\n                                            onChange = { () => {handleChangeIsUrl(item.isUrl, index)} }\r\n                                            name={`checkedB-${index}`} \r\n                                            color = \"primary\"\r\n                                        />\r\n                                    }\r\n                                label=\"Set Link\"\r\n                            /> \r\n                            {\r\n                                item.isUrl &&  \r\n                                <Box my={1}>\r\n                                    <SelectPage value={item.activePage.id} setValue={handleChangeUrl} index={index} />\r\n                                </Box> \r\n                            }\r\n                        </React.Fragment>\r\n                    }\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box>\r\n                        <img src={item.imageUrl} alt={item.imageName}/>\r\n                        <Box className={classes.dumbSlideTitle}>  \r\n                            <InputChange\r\n                                id={index}\r\n                                fullWidth={true}\r\n                                type='text'\r\n                                size=\"small\"  \r\n                                variant='outlined'\r\n                                value={item.title}\r\n                                setValue={handleSlideTitle}\r\n                                setIsDisableBtn={setIsDisableBtn} \r\n                            /> \r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n    \r\n    const removeBlock = () => {\r\n         setIsVisibleConfirmBlock(true) \r\n    }\r\n    \r\n    const removeSlide = (index) => {\r\n        setIsVisibleConfirmItem({show: true, index: index})  \r\n    }\r\n    const handleConfirmClickBlock = () => {\r\n        let imgArray = []\r\n        slides.forEach( slide => {\r\n            if(slide.imageName !== 'ImageExample') imgArray.push(slide.imageName)\r\n        })\r\n        if(imgArray.length > 0) {\r\n            imgArray.forEach( name => {\r\n                RemoveImage(name)\r\n            })\r\n        }\r\n\r\n        props.removeContainer(props.data.id)\r\n    }\r\n    const handleConfirmClickItem = (index) => { \r\n        const newImageForDelete = imageForDelete.slice()\r\n        const newSlides = slides.slice()\r\n        const deletedImageName = newSlides[index].imageName\r\n\r\n        if(deletedImageName !== 'imageExample') newImageForDelete.push(deletedImageName)\r\n\r\n        newSlides.splice(index, 1)\r\n        setSlides(newSlides)\r\n        setImageForDelete(newImageForDelete)\r\n        setIsDisableBtn(false)  \r\n    }\r\n \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmBlock}\r\n                setShow={setIsVisibleConfirmBlock} \r\n                title={'Remove swiper?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClickBlock}\r\n            />\r\n            <Confirm\r\n                isVariable={true}\r\n                show={isVisibleConfirmItem}\r\n                setShow={setIsVisibleConfirmItem} \r\n                title={'Delete item?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"delete\"}\r\n                handleRemoveClick={handleConfirmClickItem}\r\n            />\r\n            <Tooltip  title={`Swiper margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Swiper margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Swiper Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeBlock}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Swiper\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={1} className={classes.tableSizeContainer}>   \r\n                                        <SelectHeadingVariant\r\n                                            variant={'filled'} \r\n                                            size=\"small\"  \r\n                                            fullWidth={false} \r\n                                            label=\"Main Heading Variant\" \r\n                                            value={variant} \r\n                                            setValue={setVariant} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                        />\r\n                                        <Button \r\n                                            className={classes.tableSizeBtn}\r\n                                            size={'medium'}\r\n                                            startIcon={<InfoOutlined/>}\r\n                                            onClick={() => {setIsTableSizeVisible(!isTableSizeVisible)}}\r\n                                        >\r\n                                            {isTableSizeVisible ? 'Hide' : 'Show' } variants info\r\n                                        </Button> \r\n                                    </Box>\r\n                                    {\r\n                                        isTableSizeVisible && \r\n                                        <Box className={classes.tableSizeAbsolute}>\r\n                                            <TableFontSizeInfo activeRow={variant} /> \r\n                                        </Box>\r\n                                    }\r\n\r\n\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    \r\n                                    <Box className={classes.infoBlock}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.infoBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Arrows'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} btnWithLabel={classes.btnWithLabel} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useContext} from 'react'\r\n\r\nimport { makeStyles, Container, Grid, Box, Button, darken , Typography } from '@material-ui/core'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n\r\n    const { handleOpen } = useContext(ModalContext) \r\n  \r\n    const variant = props.data.variantHeading\r\n    const heading = props.data.heading  \r\n    const paragraph = props.data.paragraph   \r\n     \r\n    const minHeight =  props.data.minHeight \r\n    const imageUrl =  props.data.imageUrl  \r\n \r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorBackground = props.data.background || 'paper'\r\n    let colorButton = props.data.colorButton || '#f00'\r\n    let colorText = props.data.colorText || 'inherit'\r\n\r\n    const paddingVertical = props.data.paddingVertical  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n \r\n    const useStyles = makeStyles((theme) => {   \r\n\r\n        \r\n\r\n        colorButton = getColorByPalette(theme, colorButton) \r\n        colorText = getColorByPalette(theme, colorText) \r\n        colorBackground = getColorByPalette(theme, colorBackground) \r\n\r\n        function computedContrastColor() {\r\n            if(colorText !== 'contrast') return colorText\r\n            if(colorBackground !== 'inherit') return theme.palette.getContrastText(colorBackground)\r\n            return colorText\r\n        }\r\n             \r\n        return ({ \r\n            bannerBackground: {\r\n                backgroundColor: colorBackground, \r\n                backgroundImage: `url(${imageUrl})`, \r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            bannerContent: {\r\n                display: 'flex',\r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                paddingTop: paddingVertical,\r\n                paddingBottom: paddingVertical,\r\n                minHeight: minHeight, \r\n                maxHeight: \"100vh\", \r\n                [theme.breakpoints.down('sm')]: { \r\n                    paddingTop: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20), \r\n                    paddingBottom: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20),\r\n                }\r\n            },\r\n            heading: {  \r\n                marginTop: 0, \r\n                marginBottom: theme.spacing(3), \r\n                textAlign: 'center',  \r\n                fontWeight: 500, \r\n                color: computedContrastColor(),\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginBottom: theme.spacing(1.5),  \r\n                }\r\n            },\r\n            paragraph: {  \r\n                marginTop: heading.length ? 0 : 10, \r\n                marginBottom: 20,  \r\n                lineHeight: 1.5, \r\n                fontWeight: 400, \r\n                textAlign: 'center',  \r\n                fontSize: 15 , \r\n                color: computedContrastColor(),\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: 0, \r\n                    lineHeight: 1.1\r\n                }\r\n            },\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: 14,  \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorButton, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorButton, 0.2) , \r\n                    }\r\n                }, \r\n            },\r\n             \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (  \r\n        <div className={classes.bannerBackground}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Box className={classes.bannerContent} > \r\n                    <Grid item xs={12} sm={6} className=\"info\">\r\n                        { \r\n                            heading.length > 0 && \r\n                            <Typography variant={variant} className={`${classes.heading} heading` }>\r\n                                { heading }\r\n                            </Typography> \r\n                        }\r\n                        { paragraph.length > 0 && <p className={classes.paragraph} > {paragraph} </p> } \r\n                        {\r\n                                isButton && \r\n                                <Box display={'flex'} justifyContent='center'>\r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button>\r\n                                </Box> \r\n                            }\r\n                    </Grid> \r\n                </Box> \r\n            </Container>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, { useEffect, useState } from 'react' \r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline , InfoOutlined } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange'; \r\n\r\nimport Confirm from '../../utilits/Confirm' \r\nimport TableFontSizeInfo from '../../utilits/TableFontSizeInfo'\r\nimport SelectHeadingVariant from '../../functions/SelectHeadingVariant';\r\n\r\nimport {RemoveImage} from '../../functions/RemoveImage' \r\n\r\nfunction StyledComponent(props) { \r\n     \r\n    const [isDisableBtn, setIsDisableBtn] = useState(true)\r\n    const [open, setOpen] = useState(false)\r\n    \r\n    const [isVisibleConfirmBlock, setIsVisibleConfirmBlock] = useState(false) \r\n    const [isVisibleConfirmImage, setIsVisibleConfirmImage] = useState(false) \r\n\r\n    const [variant, setVariant] = useState(props.data.variantHeading || 'h3')\r\n    const [isTableSizeVisible, setIsTableSizeVisible] = useState(false)\r\n\r\n    const [heading, setHeading] = useState(props.data.heading)  \r\n    const [paragraph, setParagraph] = useState(props.data.paragraph)  \r\n    const [minHeight, setMinHeight] = useState(props.data.minHeight)  \r\n \r\n    const [isButton, setIsButton] = useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = useState(props.data.targetButton || '')\r\n    const [imageUrl, setImageUrl] = useState(props.data.imageUrl)\r\n    const [imageName, setImageName] = useState(props.data.imageName || '')\r\n\r\n    const [colorSelect,  setColorSelect] = useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = useState(props.data.colorButton || '')\r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = useState(props.data.background || 'paper')\r\n    const [backgroundCustom, setBackgroundCustom] = useState(props.data.background || 'paper')\r\n\r\n    const [colorTextSelect,  setColorTextSelect] = useState(props.data.colorText || 'inherit')\r\n    const [colorTextCustom, setColorTextCustom] = useState(props.data.colorText || 'inherit') \r\n\r\n    const [paddingVertical, setPaddingVertical] = useState(props.data.paddingVertical || 80)\r\n    const [marginTop, setMarginTop] = useState(props.data.marginTop || 0)\r\n    const [marginBottom, setMarginBottom] = useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    const paddingVerticalComputed = paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20)\r\n \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    \r\n    const colorButtonTheme = isNoThemeColor(props.data.colorButton)\r\n    const colorTextTheme = isNoThemeColor(props.data.colorText)\r\n\r\n    useEffect(() => {\r\n        if(colorButtonTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        if(colorTextTheme) {  \r\n            setColorTextSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.colorButton, props.data.colorText])  \r\n   \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel , \r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle,\r\n            tableSizeContainer, tableSizeBtn, tableSizeAbsolute } = commonClasses \r\n        \r\n        const { mtView, mbView, ptView, pbView  } = commonStyle \r\n        return ({\r\n            tableSizeContainer: tableSizeContainer,\r\n            tableSizeBtn: tableSizeBtn, \r\n            tableSizeAbsolute: tableSizeAbsolute,\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $ptView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $pbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            },\r\n            \r\n            infoBlock: {\r\n                padding: 8, \r\n                border: `1px solid ${theme.palette.info.main}`\r\n            }\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e) => {\r\n  \r\n        RemoveImage(imageName)\r\n        \r\n        if(colorTextSelect === 'contrast') {\r\n            setColorTextSelect('custom')\r\n            setColorTextCustom('inherit')\r\n        }\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n        \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n\r\n        newData.variantHeading = variant   \r\n        newData.heading = heading   \r\n        newData.paragraph = paragraph   \r\n        newData.minHeight = minHeight   \r\n        newData.isButton = isButton   \r\n        newData.textButton = textButton   \r\n        newData.targetButton = targetButton     \r\n        newData.imageUrl = imageUrl   \r\n        newData.imageName = imageName\r\n        newData.paddingVertical = paddingVertical\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        if (colorTextSelect === 'custom') {\r\n            newData.colorText = colorTextCustom\r\n        } else {\r\n            newData.colorText = colorTextSelect\r\n        }\r\n\r\n        if (backgroundSelect === 'custom') {\r\n            newData.background = backgroundCustom\r\n        } else {\r\n            newData.background = backgroundSelect\r\n        }\r\n        \r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        setIsVisibleConfirmBlock(true)           \r\n    }\r\n    const handleRemoveImage = () => {\r\n        setIsVisibleConfirmImage(true)\r\n    }\r\n    \r\n    const handleConfirmClickBlock = () => {\r\n        RemoveImage(imageName)\r\n        props.removeContainer(props.data.id)\r\n    }\r\n    const handleConfirmClickImage = () => {\r\n        RemoveImage(imageName)\r\n\r\n        setImageUrl('')\r\n        setImageName('')\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmBlock}\r\n                setShow={setIsVisibleConfirmBlock} \r\n                title={'Remove banner?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClickBlock}\r\n            />\r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmImage}\r\n                setShow={setIsVisibleConfirmImage} \r\n                title={'Delete image?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"delete\"}\r\n                handleRemoveClick={handleConfirmClickImage}\r\n            />\r\n            <Tooltip  title={`banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` banner padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` banner padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Banner Settings ' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                         { !isDisableBtn && \"Close to save - \" }  Settings Banner\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Min Height for block\"\r\n                                                variant='outlined'\r\n                                                value={minHeight}\r\n                                                setValue={setMinHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top/Bottom\"\r\n                                                variant='outlined'\r\n                                                value={paddingVertical}\r\n                                                setValue={setPaddingVertical}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />    \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        Padding Top/Bottom: <b>{paddingVerticalComputed }</b> ; MinHeight: <b>{minHeight}</b>\r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                        <Box className={classes.infoBlock}> \r\n                                            <span>You can use block without image. In this state you can set background color for block and contrast text</span>    \r\n                                        </Box>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={1} className={classes.tableSizeContainer}>   \r\n                                        <SelectHeadingVariant\r\n                                            variant={'filled'} \r\n                                            size=\"small\"  \r\n                                            fullWidth={false} \r\n                                            label=\"Main Heading Variant\" \r\n                                            value={variant} \r\n                                            setValue={setVariant} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                        />\r\n                                        <Button \r\n                                            className={classes.tableSizeBtn}\r\n                                            size={'medium'}\r\n                                            startIcon={<InfoOutlined/>}\r\n                                            onClick={() => {setIsTableSizeVisible(!isTableSizeVisible)}}\r\n                                        >\r\n                                            {isTableSizeVisible ? 'Hide' : 'Show' } variants info\r\n                                        </Button> \r\n                                    </Box>\r\n                                    {\r\n                                        isTableSizeVisible && \r\n                                        <Box className={classes.tableSizeAbsolute}>\r\n                                            <TableFontSizeInfo activeRow={variant} /> \r\n                                        </Box>\r\n                                    }\r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Text'}\r\n                                            colorSelect={colorTextSelect} \r\n                                            setColorSelect={setColorTextSelect}\r\n                                            colorCustom={colorTextCustom}\r\n                                            setColorCustom={setColorTextCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={false}\r\n                                            isContrastSelect={imageUrl.length === 0} \r\n                                        /> \r\n                                    </Box>\r\n                                    {\r\n                                        imageUrl.length === 0 &&\r\n                                        <Box mt={2} display=\"flex\" >\r\n                                            <ColorSelecter\r\n                                                label={'Background color '}\r\n                                                colorSelect={backgroundSelect} \r\n                                                setColorSelect={setBackgroundSelect}\r\n                                                colorCustom={backgroundCustom}\r\n                                                setColorCustom={setBackgroundCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'top'}\r\n                                                noInherit={false}\r\n                                            /> \r\n                                        </Box>\r\n                                    }\r\n                                   \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            /> \r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box> \r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'top'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    {\r\n                                        imageUrl.length > 0 &&\r\n                                        <Button\r\n                                            color='secondary' \r\n                                            variant='contained' \r\n                                            onClick={handleRemoveImage}\r\n                                        > \r\n                                        Remove image\r\n                                        </Button>\r\n                                    }\r\n \r\n                                   \r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, { useContext } from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ?\r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                : \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState, useEffect, useRef } from 'react'\r\n  \r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles, Typography, Container, Box } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\nimport '../../../assets/style/headingCenter.scss'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\n\r\nSwiperCore.use([Navigation]); \r\n  \r\nfunction DumbComponent(props) {\r\n \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const variant = props.data.variantHeading\r\n\r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = useState(0)  \r\n\r\n    const slideRef = useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n         \r\n        return ({  \r\n            swiper: {                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,\r\n                        left: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,  \r\n                        right: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                        paddingTop: 30\r\n                    }\r\n                },  \r\n            },\r\n            \r\n            slide: { \r\n                boxSizing: 'border-box !important', \r\n                position: 'relative',   \r\n                height: slideHeight > 300 ? 300 : (slideHeight - 30) ,   \r\n                cursor: 'pointer',   \r\n                backgroundColor: theme.palette.background.paper,\r\n                '& a': {\r\n                    color: 'inherit'\r\n                },\r\n                [theme.breakpoints.down('xs')]: {  \r\n                    height: 'auto'\r\n                }\r\n            },\r\n            slideBox: {\r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                maxWidth: '100%', \r\n                height: \"100%\",\r\n                padding: 15,\r\n                boxShadow: theme.shadows['10'], \r\n                borderRadius: theme.shape.borderRadius, \r\n                transition: `${theme.transitions.duration.standard}ms ${theme.transitions.easing.easeInOut}`,\r\n                \r\n                [theme.breakpoints.up('sm')]: {\r\n                    overflow: 'hidden', \r\n                    '&:hover': { \r\n                        // backgroundColor: color, \r\n                        boxShadow: theme.shadows[\"2\"], \r\n                        '& $slideImg': {\r\n                            // width: 500, \r\n                            // height: 500, \r\n                            \r\n                            // backgroundColor: theme.palette.getContrastText(color), \r\n                            \"& svg\": { \r\n                                // fill: color\r\n                            }, \r\n                            \"&::after\": {\r\n                                transform: 'scale(10)'\r\n                            },\r\n                        },\r\n                        '& $slideTitle': {\r\n                            color: theme.palette.getContrastText(color)\r\n                        } \r\n                    }, \r\n                }, \r\n                \r\n                [theme.breakpoints.down('xs')]: {\r\n                    position: 'relative',  \r\n                    paddingTop: 25, \r\n                    paddingLeft: 10, \r\n                    paddingRight: 10, \r\n                    paddingBottom: 10, \r\n                    '& $slideImg': {\r\n                        position: 'absolute', \r\n                        top: -25, \r\n                        left: 'calc(50% - 25px)',\r\n                        width: 50, \r\n                        height: 50,\r\n                        \"&::after\": { \r\n                            width: 50, \r\n                            height: 50,\r\n                        },\r\n                        \"& svg\": {\r\n                            width: 30, \r\n                            height: 30,\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }, \r\n            slideImg: { \r\n                display: 'flex', \r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                position: 'relative', \r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: '50%',    \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                \"&::after\": { \r\n                    position: 'absolute',\r\n                    zIndex: 3, \r\n                    top: 0, \r\n                    left: 0,  \r\n                    content: \"''\", \r\n                    width: 70, \r\n                    height: 70, \r\n                    borderRadius: '50%',  \r\n                    backgroundColor: color, \r\n                    transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                },\r\n                '& span': { \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                },\r\n                \"& svg\": {\r\n                    position: 'relative', \r\n                    zIndex: 10,  \r\n                    width: 40,\r\n                    height: 40,\r\n                    fill: theme.palette.getContrastText(color)\r\n                }, \r\n                 \r\n            },\r\n            slideTitle: { \r\n                position: 'relative', \r\n                zIndex: 15, \r\n                fontSize: 18, \r\n                lineHeight: 1.1,  \r\n                textAlign: 'center',  \r\n                marginTop: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                width: \"100%\", \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16\r\n                }\r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 200, \r\n                    marginLeft: spaceBetween,\r\n                    marginRight: spaceBetween,\r\n                    marginBottom: spaceBetween*2, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 10, \r\n                        marginRight: 10, \r\n                        marginBottom: 20, \r\n                        // maxWidth: '100%',   \r\n                    }\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n    \r\n     \r\n    useEffect(() => {  \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('blocks resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current ? slideRef.current.clientWidth : 0\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n  \r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key}  \r\n            ref={slideRef} \r\n            className={`${classes.slide}`}\r\n        >\r\n            <NavLink to={slide.activePage.slug}>\r\n                <Box className={classes.slideBox}> \r\n                    <Box className={classes.slideImg}>\r\n                        <span dangerouslySetInnerHTML={{__html: slide.svg}}></span>\r\n                    </Box> \r\n                    <Typography\r\n                        component='h6'\r\n                        className={classes.slideTitle}\r\n                    >\r\n                        {slide.activePage.title} \r\n                    </Typography> \r\n                </Box>\r\n            </NavLink>\r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass}`} maxWidth={maxWidthContainer} >\r\n            {\r\n                heading.length > 0 &&\r\n                <Typography variant={variant} className={`heading heading-center`}>\r\n                    { heading }\r\n                </Typography> \r\n            }\r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( (slide, key) => {\r\n                            return  renderSlide(slide, key) \r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                         items.map( (slide, key) => {\r\n                            return renderSlide(slide, key) \r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, { useState } from 'react' \r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,   \r\n    makeStyles\r\n} from '@material-ui/core'\r\n\r\nimport SelectPage from '../../functions/SelectPage'\r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newSvg, setNewSvg] = useState('') \r\n    const [idActive, setIdActive] = useState('none') \r\n    const [activePage, setActivePage] = useState({}) \r\n \r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newSvg, activePage)\r\n        setNewSvg('') \r\n        setIdActive('')\r\n        setActivePage({})\r\n    }\r\n    function handleChangeUrl(selectedPage) {  \r\n     \r\n        setIdActive(selectedPage.id)\r\n        setActivePage(selectedPage)\r\n      \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n             \r\n            \r\n            <Box my={1} maxWidth={300} >\r\n                <TextField \r\n                    fullWidth\r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Svg'\r\n                    variant=\"outlined\"\r\n                    value={newSvg}\r\n                    onChange={(e) => { setNewSvg(e.target.value) }}\r\n                />\r\n                <Box my={1}> \r\n                    <SelectPage value={idActive} setValue={handleChangeUrl} />\r\n                </Box> \r\n                <Box my={1}>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, { useEffect, useState } from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,   \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n  \r\nimport SelectPage from '../../functions/SelectPage';\r\n\r\nimport Confirm from '../../utilits/Confirm' \r\nimport TableFontSizeInfo from '../../utilits/TableFontSizeInfo'\r\nimport SelectHeadingVariant from '../../functions/SelectHeadingVariant';\r\n\r\nfunction StyledComponent(props) {\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = useState(true)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [isVisibleConfirmBlock, setIsVisibleConfirmBlock] = useState(false) \r\n    const [isVisibleConfirmItem, setIsVisibleConfirmItem] = useState({show: false, index : null}) \r\n\r\n    const [variant, setVariant] = useState(props.data.variantHeading || 'h3')\r\n    const [isTableSizeVisible, setIsTableSizeVisible] = useState(false)\r\n  \r\n    const [heading, setHeading] = useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = useState(props.data.speed || 200)\r\n    const [loop, setLoop] = useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = useState(props.data.maxWidthContainer || 'lg') \r\n  \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,\r\n            responseMobile , mobileTooltip, dialogContentUnstyle, infoBlock, infoBtn, tableSizeContainer, tableSizeBtn, tableSizeAbsolute } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            tableSizeContainer: tableSizeContainer,\r\n            tableSizeBtn: tableSizeBtn, \r\n            tableSizeAbsolute: tableSizeAbsolute,\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }},  \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264,  \r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-flex',\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                width: 250,   \r\n                position: 'relative'\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: { \r\n                fontSize: 14, \r\n                lineHeight: 1.1,  \r\n            }, \r\n            dumbSlideSvg: {\r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: 35, \r\n                padding: 10, \r\n                backgroundColor: theme.palette.text.disabled, \r\n                \"& svg\": {\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    fill: theme.palette.text.primary\r\n                }\r\n            },\r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            infoBlock: infoBlock,\r\n            infoBtn: infoBtn\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.variantHeading = variant   \r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n \r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true) \r\n    }\r\n   \r\n\r\n    const handleSlideSvg = (svg, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].svg = svg \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n     \r\n    const handleChangeUrl = (activePage, index) => {  \r\n        let newSlides = slides.slice()\r\n   \r\n        newSlides[index].activePage = activePage \r\n         \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n      \r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    } \r\n    const addSlide = ( svg, activePage ) => {\r\n         \r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            svg: svg,  \r\n            activePage: activePage,   \r\n            inner: []\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {   \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>  \r\n                    <Box my={1}> \r\n                        <SelectPage value={item.activePage.id} setValue={handleChangeUrl} index={index} /> \r\n                    </Box> \r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set svg as html\"\r\n                            variant='outlined'\r\n                            value={item.svg}\r\n                            setValue={handleSlideSvg}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n\r\n                    {/* view */}\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box> \r\n                        \r\n\r\n                        <Box className={classes.dumbSlideSvg}>  \r\n                            <span dangerouslySetInnerHTML={{__html: item.svg}}></span>\r\n                        </Box>\r\n                        <Box my={1} className={classes.dumbSlideTitle}>  \r\n                             { item.activePage.title }\r\n                        </Box>\r\n                         \r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n    const removeBlock = () => { \r\n        setIsVisibleConfirmBlock(true)  \r\n    }\r\n    const removeSlide = (index) => {  \r\n        setIsVisibleConfirmItem({show: true, index: index}) \r\n    }\r\n    const handleConfirmClickBlock = () => {\r\n        props.removeContainer(props.data.id)\r\n    }\r\n    const handleConfirmClickItem = (index) => { \r\n        const newSlides = slides.slice() \r\n\r\n        newSlides.splice(index, 1)\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false) \r\n    }\r\n     \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            \r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmBlock}\r\n                setShow={setIsVisibleConfirmBlock} \r\n                title={'Remove block pages?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClickBlock}\r\n            />\r\n            <Confirm\r\n                isVariable={true}\r\n                show={isVisibleConfirmItem}\r\n                setShow={setIsVisibleConfirmItem} \r\n                title={'Delete item?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"delete\"}\r\n                handleRemoveClick={handleConfirmClickItem}\r\n            />\r\n            <Tooltip  title={`Block Pages margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Block Pages margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Block Pages Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeBlock}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Block Pages\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n\r\n\r\n                                    <Box mt={3} mb={1} className={classes.tableSizeContainer}>   \r\n                                        <SelectHeadingVariant\r\n                                            variant={'filled'} \r\n                                            size=\"small\"  \r\n                                            fullWidth={false} \r\n                                            label=\"Main Heading Variant\" \r\n                                            value={variant} \r\n                                            setValue={setVariant} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                        />\r\n                                        <Button \r\n                                            className={classes.tableSizeBtn}\r\n                                            size={'medium'}\r\n                                            startIcon={<InfoOutlined/>}\r\n                                            onClick={() => {setIsTableSizeVisible(!isTableSizeVisible)}}\r\n                                        >\r\n                                            {isTableSizeVisible ? 'Hide' : 'Show' } variants info\r\n                                        </Button> \r\n                                    </Box>\r\n                                    {\r\n                                        isTableSizeVisible && \r\n                                        <Box className={classes.tableSizeAbsolute}>\r\n                                            <TableFontSizeInfo activeRow={variant} /> \r\n                                        </Box>\r\n                                    }\r\n\r\n\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                      \r\n                                    <Box className={classes.infoBlock}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.infoBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Block'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React, {useState, useContext, useEffect, useRef} from 'react' \r\n\r\nimport { makeStyles, Typography, Container, Box } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\nimport '../../../assets/style/headingCenter.scss'\r\n\r\nimport {getColorByPalette} from '../../functions/colorChanger/ColorCalculation'\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n \r\n    const { handleOpen } = useContext(ModalContext) \r\n\r\n    const [isSwiper, setIsSwiper] = useState(true) \r\n    \r\n    const variant = props.data.variantHeading\r\n    const heading = props.data.heading  \r\n    const isButton = props.data.isButton  \r\n    const targetButton = props.data.targetButton \r\n    let color = props.data.color\r\n\r\n    const slidesForViewDesktop = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = useState(0)  \r\n\r\n    const slideRef = useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n         \r\n        return ({   \r\n            swiper: {  \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,\r\n                        left: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        marginTop: 0,  \r\n                        right: -5,\r\n                        \"&:after\": { \r\n                            fontSize: `${14}px !important`\r\n                        },\r\n                    }\r\n                }, \r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                        paddingTop: 30\r\n                    }\r\n                },  \r\n            },\r\n            \r\n            slide: { \r\n                boxSizing: 'border-box !important', \r\n                position: 'relative',   \r\n                height: slideHeight > 300 ? 300 : (slideHeight - 30) ,    \r\n                backgroundColor: theme.palette.background.paper,\r\n                '& a': {\r\n                    color: 'inherit'\r\n                },\r\n                [theme.breakpoints.down('xs')]: {  \r\n                    height: 'auto'\r\n                }\r\n            },\r\n            slideBox: {\r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                justifyContent: 'center',\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                maxWidth: '100%', \r\n                height: \"100%\",\r\n                padding: 15,\r\n                boxShadow: theme.shadows['10'], \r\n                borderRadius: theme.shape.borderRadius, \r\n                transition: `${theme.transitions.duration.standard}ms ${theme.transitions.easing.easeInOut}`,\r\n\r\n                cursor: isButton ? 'pointer' : 'default', \r\n                \r\n                [theme.breakpoints.up('sm')]: {\r\n                    overflow: 'hidden', \r\n                    '&:hover': { \r\n                        // backgroundColor: color, \r\n                        boxShadow: theme.shadows[\"2\"], \r\n                        '& $slideImg': {\r\n                            // width: 500, \r\n                            // height: 500, \r\n                            \r\n                            // backgroundColor: theme.palette.getContrastText(color), \r\n                            \"& svg\": { \r\n                                // fill: color\r\n                            }, \r\n                            \"&::after\": {\r\n                                transform: 'scale(10)'\r\n                            },\r\n                        },\r\n                        '& $slideTitle': {\r\n                            color: theme.palette.getContrastText(color)\r\n                        } \r\n                    }, \r\n                }, \r\n                \r\n                [theme.breakpoints.down('xs')]: {\r\n                    position: 'relative',  \r\n                    paddingTop: 25, \r\n                    paddingLeft: 10, \r\n                    paddingRight: 10, \r\n                    paddingBottom: 15, \r\n                    '& $slideImg': {\r\n                        position: 'absolute', \r\n                        top: -25, \r\n                        left: 'calc(50% - 25px)',\r\n                        width: 50, \r\n                        height: 50,\r\n                        \"&::after\": { \r\n                            width: 50, \r\n                            height: 50,\r\n                        },\r\n                        \"& svg\": {\r\n                            width: 30, \r\n                            height: 30,\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }, \r\n            slideImg: { \r\n                display: 'flex', \r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                position: 'relative', \r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: '50%',    \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                \"&::after\": { \r\n                    position: 'absolute',\r\n                    zIndex: 3, \r\n                    top: 0, \r\n                    left: 0,  \r\n                    content: \"''\", \r\n                    width: 70, \r\n                    height: 70, \r\n                    borderRadius: '50%',  \r\n                    backgroundColor: color, \r\n                    transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                },\r\n                '& span': { \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                },\r\n                \"& svg\": {\r\n                    position: 'relative', \r\n                    zIndex: 10,  \r\n                    width: 40,\r\n                    height: 40,\r\n                    fill: theme.palette.getContrastText(color)\r\n                }, \r\n                 \r\n            },\r\n            slideTitle: { \r\n                position: 'relative', \r\n                zIndex: 15, \r\n                fontSize: 18, \r\n                lineHeight: 1.1,  \r\n                textAlign: 'center',  \r\n                marginTop: 8, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                width: \"100%\", \r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16\r\n                }\r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n            gallery: {\r\n                display: \"flex\",\r\n                justifyContent: 'center',\r\n                flexWrap: 'wrap', \r\n                '& $slide': {\r\n                    maxWidth: 200, \r\n                    marginLeft: spaceBetween,\r\n                    marginRight: spaceBetween,\r\n                    marginBottom: spaceBetween*2, \r\n                    \r\n                },\r\n                '& $slideImg': {\r\n                    maxWidth: '100%',  \r\n                },\r\n                [theme.breakpoints.down('xs')]: {\r\n                    '& $slide': {\r\n                        marginLeft: 10, \r\n                        marginRight: 10, \r\n                        marginBottom: 20, \r\n                        maxWidth: 400,   \r\n                    },\r\n                    '& $slideBox': {\r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        flexDirection: 'row', \r\n                        padding: 10\r\n                    },\r\n                    '& $slideImg': {\r\n                        position: 'relative', \r\n                        top: 'auto',\r\n                        left: 'auto',\r\n                        minWidth: 50\r\n                    },\r\n                    '& $slideTitle': {\r\n                        marginTop: 0, \r\n                        marginLeft: 8\r\n                    },\r\n                }\r\n            }\r\n        })\r\n    });  \r\n    const classes  = useStyles(); \r\n    \r\n     \r\n    useEffect(() => {  \r\n\r\n        const getWidthViewport = () => {  \r\n            \r\n            let actualWidth = window.innerWidth\r\n\r\n            console.log('blocks resize', actualWidth)  \r\n\r\n            if(actualWidth <= 600) {\r\n                if(items.length > slidesForViewMobile) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 600 && actualWidth <= 960) {\r\n                if(items.length > slidesForViewTablet) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n            if(actualWidth > 960) {\r\n                if(items.length > slidesForViewDesktop) setIsSwiper(true)\r\n                else setIsSwiper(false)\r\n            }\r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current ? slideRef.current.clientWidth : 0\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n  \r\n    const handleSlideClick = () => { \r\n        if(isButton) handleOpen(targetButton) \r\n    }\r\n\r\n    const renderSlide = (slide, key) => (\r\n        <SwiperSlide \r\n            key={key}  \r\n            ref={slideRef} \r\n            className={`${classes.slide}`} \r\n            onClick={handleSlideClick}\r\n        > \r\n            <Box className={classes.slideBox}> \r\n                <Box className={classes.slideImg}>\r\n                    <span dangerouslySetInnerHTML={{__html: slide.svg}}></span>\r\n                </Box> \r\n                <Typography\r\n                    component='h6'\r\n                    className={classes.slideTitle}\r\n                >\r\n                    {slide.title} \r\n                </Typography> \r\n            </Box> \r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} `} maxWidth={maxWidthContainer} >\r\n            {\r\n                heading.length > 0 &&\r\n                <Typography variant={variant} className={`heading heading-center`}>\r\n                    { heading }\r\n                </Typography> \r\n            }\r\n            \r\n            {\r\n                isSwiper ?     \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForViewDesktop,\r\n                        },\r\n                    }} \r\n                    navigation   \r\n                >\r\n                    {\r\n                        items.map( (slide, key) => {\r\n                            return renderSlide(slide, key) \r\n                        } )\r\n                    }\r\n                </Swiper> \r\n                :\r\n                <Box className={classes.gallery}>\r\n                    {\r\n                        items.map( (slide, key) => {\r\n                            return  renderSlide(slide, key) \r\n                        } )\r\n                    }\r\n                </Box>   \r\n                \r\n            }\r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, {useState} from 'react' \r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,   \r\n    makeStyles\r\n} from '@material-ui/core'\r\n \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newSvg, setNewSvg] = useState('') \r\n    const [newTitle, setNewTitle] = useState('') \r\n    \r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newSvg, newTitle)\r\n        setNewSvg('') \r\n        setNewTitle('') \r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n             \r\n            \r\n            <Box my={1} maxWidth={300} >\r\n                <Box my={1}>\r\n                    <TextField \r\n                        fullWidth\r\n                        type='text'\r\n                        size=\"small\" \r\n                        label='Set Title'\r\n                        variant=\"outlined\"\r\n                        value={newTitle}\r\n                        onChange={(e) => { setNewTitle(e.target.value) }}\r\n                    /> \r\n                </Box>\r\n                <Box my={1}>\r\n                    <TextField \r\n                        fullWidth\r\n                        type='text'\r\n                        size=\"small\" \r\n                        label='Set Svg'\r\n                        variant=\"outlined\"\r\n                        value={newSvg}\r\n                        onChange={(e) => { setNewSvg(e.target.value) }}\r\n                    /> \r\n                </Box>\r\n                \r\n                <Box my={1}>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useState, useEffect} from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../../functions/colorChanger/ColorSelecter'\r\nimport {isNoThemeColor} from '../../functions/colorChanger/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,   \r\n    FormControlLabel, \r\n    Switch\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem' \r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport Confirm from '../../utilits/Confirm' \r\nimport TableFontSizeInfo from '../../utilits/TableFontSizeInfo'\r\nimport SelectHeadingVariant from '../../functions/SelectHeadingVariant';\r\n    \r\nfunction StyledComponent(props) {\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = useState(true)\r\n    const [open, setOpen] = useState(false)\r\n    \r\n    const [isVisibleConfirmBlock, setIsVisibleConfirmBlock] = useState(false) \r\n    const [isVisibleConfirmItem, setIsVisibleConfirmItem] = useState({show: false, index : null}) \r\n\r\n    const [variant, setVariant] = useState(props.data.variantHeading || 'h3')\r\n    const [isTableSizeVisible, setIsTableSizeVisible] = useState(false)\r\n  \r\n    const [heading, setHeading] = useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = useState(props.data.speed || 200)\r\n    const [loop, setLoop] = useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = useState(props.data.color || 'primary')\r\n    \r\n    const [isButton, setIsButton] = useState(props.data.isButton || false)\r\n    const [targetButton, setTargetButton] = useState(props.data.targetButton || '')\r\n\r\n    const [marginTop, setMarginTop] = useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = useState(props.data.maxWidthContainer || 'lg') \r\n  \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, \r\n            responseValues ,responseMobile , mobileTooltip, dialogContentUnstyle, infoBtn, infoBlock, tableSizeContainer, tableSizeBtn, tableSizeAbsolute\r\n         } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            tableSizeContainer: tableSizeContainer,\r\n            tableSizeBtn: tableSizeBtn, \r\n            tableSizeAbsolute: tableSizeAbsolute,\r\n            dialogContentUnstyle: dialogContentUnstyle,\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }},  \r\n            menuTitle: {...menuTitle, ...{ \r\n                borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n            }},\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            slideContainer: { \r\n                display: 'inline-flex', \r\n                flexDirection: 'column', \r\n\r\n                padding: theme.spacing(1), \r\n                border: `1px solid ${theme.palette.divider}`, \r\n                marginRight: theme.spacing(0.5),\r\n                marginBottom: theme.spacing(0.5), \r\n                maxWidth: 264,  \r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },\r\n            dumbSlide: {\r\n                display: 'inline-flex',\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                width: 250,   \r\n                position: 'relative'\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: { \r\n                fontSize: 14, \r\n                lineHeight: 1.1,  \r\n            }, \r\n            dumbSlideSvg: {\r\n                width: 70, \r\n                height: 70, \r\n                borderRadius: 35, \r\n                padding: 10, \r\n                backgroundColor: theme.palette.text.disabled, \r\n                \"& svg\": {\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    fill: theme.palette.text.primary\r\n                }\r\n            },\r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            },\r\n            infoBlock: infoBlock,\r\n            infoBtn: infoBtn\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n\r\n        newData.variantHeading = variant   \r\n        newData.heading = heading   \r\n        newData.isButton = isButton   \r\n        newData.targetButton = targetButton   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n \r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true) \r\n    }\r\n    \r\n\r\n    const handleSlideSvg = (svg, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].svg = svg \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSlideTitle = (title, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].title = title \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n      \r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const addSlide = ( svg, title ) => {\r\n         \r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            svg: svg,  \r\n            title: title\r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n\r\n    const slidesRender = () => (\r\n        slides.map((item, index) => {   \r\n            return (\r\n                <Box key={index} className={classes.slideContainer}>\r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set title\"\r\n                            variant='outlined'\r\n                            value={item.title}\r\n                            setValue={handleSlideTitle}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n                    <Box my={2}>\r\n                        <InputChange\r\n                            id={index}\r\n                            fullWidth={true}\r\n                            type='text'\r\n                            size=\"small\"  \r\n                            label=\"Set svg as html\"\r\n                            variant='outlined'\r\n                            value={item.svg}\r\n                            setValue={handleSlideSvg}\r\n                            setIsDisableBtn={setIsDisableBtn} \r\n                        />  \r\n                    </Box> \r\n\r\n                    {/* view */}\r\n                    <Box  className={classes.dumbSlide}>\r\n                        <Box className={classes.dumbSlideButtons}>\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\"\r\n                            >   \r\n                                { \r\n                                    index !== 0  && \r\n                                    <Tooltip title='Get Left' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => {  swipeSlide('up', index) }}\r\n                                            size='medium'\r\n                                            variant='contained' \r\n                                        >\r\n                                            <KeyboardArrowLeftIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    index !== slides.length - 1 && \r\n                                    <Tooltip title='Get Right' placement='top'>\r\n                                        <Button\r\n                                            onClick={() => { swipeSlide('down', index) }}\r\n                                            size='medium'\r\n                                            variant='contained'\r\n                                        >\r\n                                            <KeyboardArrowRightIcon\r\n                                                style={{\r\n                                                color: '#fff'\r\n                                            }}\r\n                                                fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                <Tooltip title='Remove slide' placement='top'>\r\n                                    <Button\r\n                                        onClick={() => { removeSlide(index) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained'\r\n                                    >\r\n                                        <DeleteOutline\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                \r\n                            </ButtonGroup>\r\n                        </Box> \r\n                        \r\n\r\n                        <Box className={classes.dumbSlideSvg}>  \r\n                            <span dangerouslySetInnerHTML={{__html: item.svg}}></span>\r\n                        </Box>\r\n                        <Box my={1} className={classes.dumbSlideTitle}>  \r\n                             { item.title }\r\n                        </Box>\r\n                         \r\n                    </Box>\r\n                </Box>\r\n                \r\n            )\r\n        })\r\n    )\r\n    const removeBlock = () => { \r\n        setIsVisibleConfirmBlock(true)  \r\n    }\r\n    const removeSlide = (index) => {  \r\n        setIsVisibleConfirmItem({show: true, index: index}) \r\n    }\r\n    const handleConfirmClickBlock = () => {\r\n        props.removeContainer(props.data.id)\r\n    }\r\n    const handleConfirmClickItem = (index) => { \r\n        const newSlides = slides.slice() \r\n\r\n        newSlides.splice(index, 1)\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false) \r\n    }\r\n     \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Confirm\r\n                isVariable={false}\r\n                show={isVisibleConfirmBlock}\r\n                setShow={setIsVisibleConfirmBlock} \r\n                title={'Remove block advantages?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"remove\"}\r\n                handleRemoveClick={handleConfirmClickBlock}\r\n            />\r\n            <Confirm\r\n                isVariable={true}\r\n                show={isVisibleConfirmItem}\r\n                setShow={setIsVisibleConfirmItem} \r\n                title={'Delete item?'}\r\n                text={\"You can't cancel this action.\"}\r\n                removeText={\"delete\"}\r\n                handleRemoveClick={handleConfirmClickItem}\r\n            />\r\n\r\n            <Tooltip  title={`Advantages margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Advantages margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Advantages Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeBlock}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent classes={{root: classes.dialogContentUnstyle}}>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Advantages\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Box display='flex' mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Open Modal by click\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box flexGrow={1} > \r\n                                                    <InputChange\r\n                                                        id={null} \r\n                                                        fullWidth={true}\r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Target for Button\"\r\n                                                        variant='outlined'\r\n                                                        value={targetButton}\r\n                                                        setValue={setTargetButton}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />   \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n                                    <Box mt={3} mb={1} className={classes.tableSizeContainer}>   \r\n                                        <SelectHeadingVariant\r\n                                            variant={'filled'} \r\n                                            size=\"small\"  \r\n                                            fullWidth={false} \r\n                                            label=\"Main Heading Variant\" \r\n                                            value={variant} \r\n                                            setValue={setVariant} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                        />\r\n                                        <Button \r\n                                            className={classes.tableSizeBtn}\r\n                                            size={'medium'}\r\n                                            startIcon={<InfoOutlined/>}\r\n                                            onClick={() => {setIsTableSizeVisible(!isTableSizeVisible)}}\r\n                                        >\r\n                                            {isTableSizeVisible ? 'Hide' : 'Show' } variants info\r\n                                        </Button> \r\n                                    </Box>\r\n                                    {\r\n                                        isTableSizeVisible && \r\n                                        <Box className={classes.tableSizeAbsolute}>\r\n                                            <TableFontSizeInfo activeRow={variant} /> \r\n                                        </Box>\r\n                                    }\r\n\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (<600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box className={classes.infoBlock}> \r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change this settings you need to reloading page\" >\r\n                                                <IconButton className={classes.infoBtn} >\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                                \r\n                                            <Box my={2} display='flex'> \r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Desktop\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerView}\r\n                                                        setValue={setSlidesPerView}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Tablet\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewTablet}\r\n                                                        setValue={setSlidesPerViewTablet}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Slides Per View Mobile\"\r\n                                                        variant='outlined'\r\n                                                        value={slidesPerViewMobile}\r\n                                                        setValue={setSlidesPerViewMobile}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />   \r\n                                                </Box>\r\n                                                \r\n                                            </Box>\r\n                                            <Box mb={2} display='flex'>\r\n                                                <Box mr={1}>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Space Between\"\r\n                                                        variant='outlined'\r\n                                                        value={spaceBetween}\r\n                                                        setValue={setSpaceBetween}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    /> \r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={false}\r\n                                                        type='number'\r\n                                                        size=\"small\" \r\n                                                        label=\"Speed (ms)\"\r\n                                                        variant='outlined'\r\n                                                        value={speed}\r\n                                                        setValue={setSpeed}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='row'\r\n                                                    />  \r\n                                                </Box>\r\n                                            </Box>\r\n\r\n                                            <Box mt={2} mb={1} display='flex'>\r\n                                                \r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        style={{minWidth: 200}}\r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={loop}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box mr={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'   \r\n                                                        style={{minWidth: 200}} \r\n                                                    >\r\n                                                        <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"align-select-label\"\r\n                                                            id=\"align-select\"\r\n                                                            value={freeMode}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                        >\r\n                                                            <MenuItem value={true}>True</MenuItem>\r\n                                                            <MenuItem value={false}>False</MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                <Box>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                    >\r\n                                                        <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"maxWidth-label\"\r\n                                                            id=\"maxWidth-style\"\r\n                                                            value={maxWidthContainer}\r\n                                                            style={{minWidth: 180}}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={false}>False</MenuItem>\r\n                                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n                                     \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Block'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slidesRender()\r\n                                    }\r\n\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React , { useContext } from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '20px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                margin: '10px 0', \r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (   \r\n        <Container\r\n            disableGutters={settings.disableGutters}\r\n            fixed={settings.fixed} \r\n            maxWidth={settings.maxWidth} \r\n        >\r\n            <Paper className={classes.breadcrumbsContainer} >\r\n            \r\n                <Breadcrumbs  \r\n                    separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                    aria-label=\"breadcrumb\"\r\n                >\r\n                    \r\n                    <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                        <HomeIcon fontSize=\"small\" />\r\n                    </Link>\r\n                    {    \r\n                        props.breadcrumbs.map((crumb, index) => {\r\n                            if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                            return(\r\n                                <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                    {crumb.title}\r\n                                </Link>\r\n                            )\r\n                            else return (\r\n                            <Typography key={index} >\r\n                                {crumb.title}\r\n                            </Typography> \r\n                            )  \r\n                        })\r\n                    }\r\n                    \r\n                </Breadcrumbs>\r\n            \r\n            </Paper>\r\n        </Container>   \r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React, { useContext, useState, useEffect } from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport MetaTags from 'react-meta-tags';\r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n \r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent, Divider } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\nimport FormLineElement from '../library/formLine/ElementCreator'  \r\nimport SwiperElement from '../library/swiper/ElementCreator'  \r\nimport BannerElement from '../library/banner/ElementCreator'  \r\nimport BlocksPagesElement from '../library/blocksPages/ElementCreator'   \r\nimport BlocksAdvElement from '../library/blocksAdv/ElementCreator'   \r\n\r\nimport SkeletonPage from '../utilits/SkeletonPage'\r\nimport Breadcrumbs from '../utilits/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nimport InputChange from '../functions/InputChange'\r\n\r\n\r\nfunction StyledSinlePage(props) {\r\n\r\n  const location = useLocation() \r\n \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = useContext(ModeContext)\r\n  const { setIsLoading } = useContext(LoadingContext)\r\n  const { layouts } = useContext(LibraryContext)\r\n\r\n  const [data, setData] = useState({})\r\n  const [items, setItems] = useState([]) \r\n  const [metaTitle, setMetaTitle] = useState('initial')\r\n  const [metaDescription, setMetaDescription] = useState('')\r\n  const [isDisableBtn, setIsDisableBtn] = useState(true) \r\n\r\n  const [open, setOpen] = useState(false)\r\n  \r\n\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n  const FormLineLayout = layouts.formLine \r\n  const SwiperLayout = layouts.swiper \r\n  const BannerLayout = layouts.banner \r\n  const BlocksPagesLayout = layouts.blocksPages \r\n  const BlocksAdvLayout = layouts.blocksAdv \r\n\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => { \r\n    if(!isDisableBtn) handleSave()\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setIsLoading(true)\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({ \r\n      title: metaTitle, \r\n      description: metaDescription\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => { \r\n\r\n    const classesRef = StylesChangers()\r\n    const commonClasses = classesRef(theme)\r\n\r\n    const { menu, menuTitle, dialogContentUnstyle } = commonClasses \r\n\r\n    return ({ \r\n      dialogContentUnstyle: dialogContentUnstyle, \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 70,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38,  \r\n          opacity: 0, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 600, \r\n        left: \"calc(50% - 300px)\",\r\n      }},     \r\n      menuTitle: {...menuTitle, ...{ \r\n          borderColor: isDisableBtn ? '#0000' : theme.palette.secondary.main\r\n      }},\r\n      tooltip: {\r\n        fontSize: 14\r\n      }, \r\n      boxMenuItem : { \r\n        display: 'inline-block',\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n      }\r\n \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  useEffect( () => { \r\n    setIsLoading(true) \r\n    fetchData()\r\n    if(metaTitle === 'initial') setMetaTitle(props.metaTitle) \r\n    // eslint-disable-next-line\r\n  }, [location])\r\n   \r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n      setMetaTitle(doc.data().title)\r\n      setMetaDescription(doc.data().description || '')\r\n      \r\n      \r\n      console.log(doc.data().title)\r\n\r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    // newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n   \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer  \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container')   newCont = JSON.parse(JSON.stringify(ContainerLayout))\r\n    if(type === 'mainBanner')  newCont = JSON.parse(JSON.stringify(MainBannerLayout))\r\n    if(type === 'accordion')   newCont = JSON.parse(JSON.stringify(AccordionLayout))\r\n    if(type === 'contactMap')  newCont = JSON.parse(JSON.stringify(СontactMapLayout))\r\n    if(type === 'about')       newCont = JSON.parse(JSON.stringify(AboutLayout))\r\n    if(type === 'actionLine')  newCont = JSON.parse(JSON.stringify(ActionLineLayout))\r\n    if(type === 'table')       newCont = JSON.parse(JSON.stringify(TableLayout))\r\n    if(type === 'formLine')    newCont = JSON.parse(JSON.stringify(FormLineLayout))\r\n    if(type === 'swiper')      newCont = JSON.parse(JSON.stringify(SwiperLayout))\r\n    if(type === 'banner')      newCont = JSON.parse(JSON.stringify(BannerLayout))\r\n    if(type === 'blocksPages') newCont = JSON.parse(JSON.stringify(BlocksPagesLayout))\r\n    if(type === 'blocksAdv')   newCont = JSON.parse(JSON.stringify(BlocksAdvLayout))\r\n  \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n\r\n    window.scrollTo({\r\n      top: window.innerHeight \r\n    })\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems,  \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n        \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n    \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'formLine') { \r\n          return(\r\n              <FormLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'swiper') { \r\n          return(\r\n              <SwiperElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'banner') { \r\n          return(\r\n              <BannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'blocksPages') { \r\n          return(\r\n              <BlocksPagesElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'blocksAdv') { \r\n          return(\r\n              <BlocksAdvElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <Box className={classes.btnContainer}> \r\n\r\n        <MetaTags>\r\n          <title>{ metaTitle }</title>\r\n          <meta name=\"description\" content={metaDescription} /> \r\n        </MetaTags>\r\n\r\n        { \r\n          props.breadcrumbs &&\r\n          <Breadcrumbs \r\n            breadcrumbs={props.breadcrumbs} \r\n          />\r\n        } \r\n\r\n        { \r\n          modeDev &&  \r\n          <React.Fragment>\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent classes={{root: classes.dialogContentUnstyle}}> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                              { !isDisableBtn && \"Close to save - \" } Page Settings <OpenWithIcon/>\r\n                            </Typography> \r\n                            \r\n                            <Box mb={2}>\r\n                              <InputChange\r\n                                  id={null}\r\n                                  fullWidth={true} \r\n                                  type='text'\r\n                                  size=\"small\" \r\n                                  label=\"Meta Title for page\"\r\n                                  variant='standard'\r\n                                  value={metaTitle}\r\n                                  setValue={setMetaTitle}\r\n                                  setIsDisableBtn={setIsDisableBtn} \r\n                              />  \r\n                            </Box>\r\n                            <Box mb={2}> \r\n                              <InputChange\r\n                                  id={null}\r\n                                  fullWidth={true} \r\n                                  type='text'\r\n                                  size=\"small\" \r\n                                  label=\"Meta Description for page\"\r\n                                  variant='standard'\r\n                                  value={metaDescription}\r\n                                  setValue={setMetaDescription}\r\n                                  setIsDisableBtn={setIsDisableBtn} \r\n                              /> \r\n                            </Box> \r\n                             \r\n                            <Box mb={2}> \r\n                              <Typography variant='caption' >\r\n                                  Add Block to Page  \r\n                              </Typography>\r\n                            </Box>\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Container for heading, paragraph, image-paragraph, list' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                    Container\r\n                                </Button> \r\n                              </Tooltip> \r\n                            </Box> \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Paper cart with svg icon, contain link to page. Has be slider' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('blocksPages') }}>\r\n                                    Blocks with Links\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Paper cart with svg icon. Has be slider' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('blocksAdv') }}>\r\n                                    Blocks without Links\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With form\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block to start the page. Contain: text, form, image(desktop only)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                    Main Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                           \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Contain: location and phone view, contact form, map. Has two different displays, with and without a map' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                    Contacts with Map\r\n                                </Button>  \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Small contact form with optional heading and paragrapher' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('formLine') }}>\r\n                                    Add Form Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Accordion with heading on top' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                    Accordion\r\n                                </Button> \r\n                              </Tooltip>  \r\n                            </Box>\r\n                            \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Line for small text paragrapher with ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                    Colored Action Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Table with heading on top. Has ability to add \"Show More Botton \" on bottom' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                    Add Table \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With image\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block with heading, paragraph and image. Image on desktop - 50% vieport width. Image on mobile - 50% vieport width . Has the ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                    About\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Simple slider with square images. Has be blocks' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('swiper') }}>\r\n                                    Swiper\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Banner with background image, heading, paragraph and modal button (optional)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('banner') }}>\r\n                                    Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </React.Fragment>\r\n        }\r\n\r\n        { \r\n          renderContainers()  \r\n        } \r\n \r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default StyledSinlePage\r\n","import React, { useEffect, useState, useContext} from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\nimport MetaTags from 'react-meta-tags';\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\nimport FormLineElement from '../library/formLine/ElementCreator'  \r\nimport SwiperElement from '../library/swiper/ElementCreator'  \r\nimport BannerElement from '../library/banner/ElementCreator'  \r\nimport BlocksPagesElement from '../library/blocksPages/ElementCreator'   \r\nimport BlocksAdvElement from '../library/blocksAdv/ElementCreator'  \r\n\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nimport SkeletonPage from '../utilits/SkeletonPage'\r\nimport Breadcrumbs from '../utilits/Breadcrumbs'\r\n\r\nconst  DumbComponent = (props) => {\r\n  \r\n    const { setIsLoading } = useContext(LoadingContext)\r\n    const { layouts } = useContext(LibraryContext)\r\n    \r\n    const location = useLocation() \r\n    const pageSlug = props.slugForUpdate\r\n\r\n    // const [data, setData] = useState({})\r\n    const [items, setItems] = useState([]) \r\n    const [metaTitle, setMetaTitle] = useState('initial')\r\n    const [metaDescription, setMetaDescription] = useState('')\r\n\r\n    const pageLayout = layouts.page\r\n\r\n    useEffect( () => { \r\n        setIsLoading(true) \r\n        fetchData()\r\n        if(metaTitle === 'initial') setMetaTitle(props.metaTitle) \r\n        // eslint-disable-next-line\r\n    }, [location])\r\n       \r\n      \r\n    const fetchData = async () => {  \r\n        \r\n        const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n        const doc = await pageRef.get();\r\n        \r\n        if (!doc.exists) {\r\n            console.log('No such page!'); \r\n\r\n            let newPage = Object.assign({}, pageLayout) \r\n            newPage.id = uuid()\r\n            newPage.slug = pageSlug\r\n            newPage.items = []\r\n\r\n            await pageRef.set(newPage)\r\n\r\n            // setData(newPage)  \r\n            setItems(newPage.items || [])  \r\n            setIsLoading(false)\r\n\r\n        } else { \r\n            // setData(doc.data())  \r\n            setItems(doc.data().items)  \r\n            setMetaTitle(doc.data().title)\r\n            setMetaDescription(doc.data().description || '')\r\n            \r\n            \r\n            console.log(doc.data().title)\r\n\r\n            setIsLoading(false)\r\n        }\r\n    \r\n    }  \r\n    function renderContainers () {   \r\n        if(items.length > 0) {\r\n          return Object.keys(items).map( (key) => {    \r\n            if(items[key].type === 'container') {\r\n              return ( \r\n                  <ContainerElement \r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  /> \r\n              ) \r\n            }\r\n            if(items[key].type === 'mainBanner') { \r\n              return(\r\n                  <MainBannerElement\r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  />\r\n              )\r\n            } \r\n            if(items[key].type === 'accordion') { \r\n              return(\r\n                  <AccordionElement\r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  />\r\n              )\r\n            } \r\n            if(items[key].type === 'contactMap') { \r\n              return(\r\n                  <ContactMapElement\r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  />\r\n              )\r\n            } \r\n            if(items[key].type === 'about') { \r\n              return(\r\n                  <AboutElement\r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  />\r\n              )\r\n            } \r\n            if(items[key].type === 'actionLine') { \r\n              return(\r\n                  <ActionLineElement\r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  />\r\n              )\r\n            } \r\n            if(items[key].type === 'table') { \r\n              return(\r\n                  <TableElement\r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  />\r\n              )\r\n            } \r\n            if(items[key].type === 'formLine') { \r\n              return(\r\n                  <FormLineElement\r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  />\r\n              )\r\n            } \r\n            if(items[key].type === 'swiper') { \r\n              return(\r\n                  <SwiperElement\r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  />\r\n              )\r\n            } \r\n            if(items[key].type === 'banner') { \r\n              return(\r\n                  <BannerElement\r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  />\r\n              )\r\n            } \r\n            if(items[key].type === 'blocksPages') { \r\n              return(\r\n                  <BlocksPagesElement\r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  />\r\n              )\r\n            } \r\n            if(items[key].type === 'blocksAdv') { \r\n              return(\r\n                  <BlocksAdvElement\r\n                    key={items[key].id} \r\n                    data={items[key]}  \r\n                  />\r\n              )\r\n            } \r\n            return false\r\n          })\r\n        }\r\n        else {\r\n          return ( \r\n            <SkeletonPage/> \r\n          ) \r\n        }\r\n        \r\n      }\r\n\r\n\r\n    return (\r\n        <div> \r\n            <MetaTags>\r\n                <title>{ metaTitle }</title>\r\n                <meta name=\"description\" content={metaDescription} /> \r\n            </MetaTags>\r\n\r\n            { \r\n                props.breadcrumbs &&\r\n                <Breadcrumbs \r\n                    breadcrumbs={props.breadcrumbs} \r\n                />\r\n            } \r\n            { \r\n                renderContainers()  \r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React, {useContext} from 'react'\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\n\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\n\r\nconst  SinglePageCreator = (props) => {\r\n\r\n    const {modeDev} = useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ?\r\n                <StyledComponent {...props} />\r\n                :\r\n                <DumbComponent {...props} />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n} \r\n\r\nexport default SinglePageCreator\r\n","import React, { useState, useEffect, useContext } from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/functions/ScrollToTop'  \r\n    \r\nimport LoadingProgress from '../components/utilits/LoadingProgress'\r\nimport PreloaderThumbnail from '../components/utilits/PreloaderThumbnail'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/single/Login'\r\nimport Error from '../components/single/Error'\r\nimport SinglePage from '../components/page/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n \r\n    const {categories} = useContext(CategoryContext) \r\n    const {isLoading} = useContext(LoadingContext)  \r\n\r\n    const [preloaderStatus, setPreloaderStatus] = useState('loading')\r\n\r\n    useEffect(() => {\r\n        if(categories.length > 0) {\r\n            setPreloaderStatus('ready') \r\n            document.body.style.overflow = 'hidden'\r\n            setTimeout(() => {\r\n                setPreloaderStatus('delete') \r\n                document.body.style.overflow = 'visible'\r\n            }, 2000);\r\n            setTimeout(() => {\r\n                setPreloaderStatus('hide') \r\n            }, 2500);\r\n        } \r\n    }, [categories])\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n             \r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            <PreloaderThumbnail status={preloaderStatus} />  \r\n\r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Modal/>\r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    } \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React, {useContext} from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\n\r\nconst  AlertComponent = () => { \r\n    \r\n    const { isShowAlert, closeAlert, alertText  } = useContext(SendFormContext)  \r\n\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        closeAlert() \r\n    }\r\n   \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={isShowAlert} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React, {useContext} from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Alert from '../components/utilits/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = useContext(CategoryContext) \r\n    const { isShowAlert } = useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert  /> \r\n            } \r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider'  \nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n \n  return (\n    <ModalProvider>\n      <SendFormProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n \n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}