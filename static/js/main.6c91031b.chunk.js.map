{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/functions/ScrollToTop.js","components/functions/ImageRemover.js","components/placeholders/LoadingProgress.js","styles/changers.js","components/header/headerHelpers/CategoriesChanger.js","components/library/colorPicker/ColorPicker.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/headerHelpers/RequestsChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/Login.js","components/Error.js","styles/inputs.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/list/DumbComponent.js","components/library/list/StyledComponent.js","components/library/list/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/DumbComponent.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/library/formLine/DumbComponent.js","components/library/formLine/StyledComponent.js","components/library/formLine/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","idArrayForDelete","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","clearArrayForDelete","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","name","storageRef","ref","imageRef","child","images","removeImage","removeImagesFromArray","SendFormContext","SendFormProvider","requests","modalSettings","isShowAlert","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","setTimeout","req","newList","slice","newReq","Object","assign","time","getCurrentDate","push","closeAlertFromTimeout","updateRequests","updateModalSettings","sendRequests","closeAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","StylesChangers","theme","menu","palette","background","paper","paddingLeft","paddingRight","paddingBottom","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","fontSize","fontWeight","borderBottom","divider","default","padding","marginBottom","cursor","btnSetting","deepOrange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","btnSave","bottom","paddingTop","opacity","btnWithLabel","spacing","btnDrawerStyle","easeIn","btnDrawerItem","secondary","containerWrapper","outline","outlineColor","main","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","commonClasses","classesRef","maxWidth","listPages","marginTop","listStyle","titlePages","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","indexOf","length","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","dumbWrapper","Tooltip","title","placement","Button","onClick","size","variant","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","xs","onSubmit","e","preventDefault","newCategory","uuid","FormGroup","Box","mb","TextField","required","label","onChange","IconButton","fullWidth","index","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","ColorPicker","memo","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","save","contrastColor","getContrastText","primary","boxColor","flexGrow","marginRight","border","borderRadius","shape","shortest","boxShadow","shadows","boxPicker","prevOpen","onChangeComplete","newColor","hex","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","colorSelect","setColorSelect","colorCustom","setColorCustom","uploadHandler","imageData","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","Divider","margin","FormControlLabel","control","Switch","checked","FormControl","InputLabel","Select","labelId","MenuItem","newLogo","newModal","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","row","Number","newSettings","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","colorPreview","colorItem","flexWrap","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","innerIndex","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","my","content","indexPage","borderTop","px","edge","DumbComponent","modalBtnColor1","modalBtnColor2","widthMobile","headerHeight","setHeaderHeight","backgroundHeader","modalBtnColor","darken","header","fixedPadding","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","buttonModal","setResponsiveness","headHeight","document","querySelector","clientHeight","setMobileView","removeEventListener","addEventListener","mobileView","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","RequestsChanger","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","amber","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","String","CardActions","isCheck","handleOnceCheck","handleRemove","Checkbox","request","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","ml","newData","AdminHeader","buttonSettings","settingsContainer","wrapper","providerData","ModalChanger","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ElementCreator","Header","Footer","fill","footer","footerHeading","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","handleChange","place","Avatar","loginWithEmail","res","err","autoComplete","autoFocus","Alert","severity","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","libraryList","setPadding","setMargin","setDisplay","setFlexDirection","setBackgroundColor","shadow","setShadow","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","addHeading","a","newChildren","newItem","JSON","parse","stringify","reSaveContainer","mr","aria-haspopup","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","resposiveFontSize","down","mobileClass","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","focus","sentData","reSaveChildren","prop","confirm","removeItem","liClass","itemsStyle","items","setPaddingLeft","setItems","itemsPadding","setItemsPadding","itemsListStyle","setItemsListStyle","setNewItem","swapItem","newItems","handleItemChange","splice","deleteItem","multiline","rowsMax","imageStyle","imageClassName","imageStabilization","sm","imageUrl","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageAccordion","imagePreview","imageLabel","handleImageMargin","handleImageUpload","generateImageName","downloadURL","pt","pb","align","classForResp","renderItems","createArrayImages","forEach","isFirst","swapContainer","isLast","removeContainer","newArr","colorFocusInput","formPhone","setFormPhone","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","input","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","md","xlinkHref","phone","placeholder","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","iconName","setIconName","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","handleUpdateItem","colorMapOnload","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","fontFamily","link","boxForFlex","heightRegular","linksContainer","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","cols","rows","setLocation","setPhone","setInputComment","setMapFrame","isButton","setIsButton","imageList","textButton","targetButton","setTextButton","setTargetButton","colorTheme","headingSize","colorMain","fade","containerColored","containerFlexed","setHeadingSize","CustomizedTables","mainColor","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isBotton","isBottonClick","setIsBottonClick","StyledTableRow","withStyles","TableRow","table","tableCell","tableButtonCell","tableButton","tableContainer","tableHeader","handleVisible","OnceRow","hover","TableCell","scope","price","TableContainer","Table","TableHead","TableBody","setRows","setTableRow","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","handleRowChange","newRows","newRow","handleTableHeadChange","lineDecor","gridItem","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","FormLineLayout","formLine","setData","btnContainer","tooltip","boxMenuItem","fetchData","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","history","key","orderFirst","orderLast","RouterComponent","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","closeBtn","targetContainer","targetLabel","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6c91031b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 959) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        idArrayForDelete: [],\r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n        \r\n        // imageList: [], \r\n    }\r\n    \r\n \r\n    \r\n\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n        // this.fetchListFromStorage()\r\n    } \r\n    // fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .then( () => {\r\n    //         this.setState({\r\n    //             imageList: imagesArray\r\n    //         })\r\n    //     })\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n        \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 700);\r\n        \r\n    // }\r\n\r\n    async updateCategories(data) { \r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {    \r\n        // const pageRef = firebase.db.collection(\"site1\").doc(slug)\r\n        // const doc = await pageRef.get();\r\n        \r\n        // let idArray = []\r\n\r\n        // if (!doc.exists) {\r\n        //     console.log('No such page!');  \r\n        // } else { \r\n        //     const items = doc.data().items\r\n        //     items.forEach(item => {\r\n        //         if(item.type === 'container') { \r\n        //             item.children.forEach( child => {\r\n        //                 if(child.type === 'paragraphImage') {\r\n        //                     idArray.push(child.id)\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //         else {  \r\n        //             idArray.push(item.id)\r\n        //         }\r\n        //     });\r\n        // }\r\n        // this.setState({\r\n        //     idArrayForDelete: idArray\r\n        // })\r\n\r\n        // await pageRef.delete()\r\n        // // .then( () => {\r\n        // //     setTimeout(() => {\r\n        // //         this.setState({\r\n        // //             idArrayForDelete: []\r\n        // //         })\r\n        // //     }, 1000);\r\n        // // })\r\n        // .then( () => {\r\n        //     this.state.imageList.forEach( imageName => {\r\n        //         idArray.forEach(id => {\r\n        //             if(imageName.includes(id)) this.removeImage(imageName)\r\n        //         })\r\n        //     })\r\n        // })\r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n    // async removeImage(name) { \r\n    //     if(name !== '') {\r\n    //         const storageRef = firebase.storage.ref();\r\n \r\n    //         const imageRef = storageRef.child(name)\r\n        \r\n    //         try {\r\n    //             await imageRef.delete().then(function() {\r\n    //                 console.log('File deleted successfully')\r\n    //             }).catch(function(error) {\r\n    //                 console.log(error) \r\n    //             }); \r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    idArrayForDelete: this.state.idArrayForDelete, \r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    clearArrayForDelete: () => {\r\n                        this.setState({\r\n                            idArrayForDelete: []\r\n                        })\r\n                    }, \r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    // state = {  \r\n    //     imageList: [], \r\n    // } \r\n\r\n    // async componentDidMount() { \r\n    //       this.fetchListFromStorage()\r\n    //     //   this.fetchListFromFirestore()\r\n    // }\r\n\r\n    // async fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     await listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n    //     this.setState({\r\n    //         imageList: imagesArray\r\n    //     }) \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 500);\r\n        \r\n    // }\r\n\r\n    // async addImageToList(newImage, oldName) {\r\n    //     const newList = this.state.imageList.slice()\r\n    //     let newItem\r\n    //     let isNew = true\r\n    //     let isNeedUpdate = newImage.name === oldName ? false : true \r\n    //     if(isNeedUpdate) { \r\n    //         for(let i = 0; i < newList.length; i++) {\r\n    //             if(newList[i].name === newImage.name) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity++ \r\n    //                 isNew = false\r\n    //             }\r\n    //             if(newList[i].name === oldName) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity--  \r\n    //                 if( newList[i].quantity === 0 ) { \r\n    //                     this.removeImage(oldName) \r\n    //                     newList.splice(i, 1)\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //         if(isNew) {\r\n    //             newItem = {\r\n    //                 name: newImage.name, \r\n    //                 url: newImage.url, \r\n    //                 quantity: 1\r\n    //             }\r\n    //             newList.push(newItem)\r\n    //         }\r\n    //     }\r\n    //     else { \r\n    //         console.log(newImage, oldName)\r\n    //     }\r\n         \r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })\r\n \r\n    //     console.log(this.state.imageList, oldName)\r\n\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    // async fetchListFromFirestore() {\r\n    //     const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n    //     const doc = await listRef.get();\r\n      \r\n    //     if (!doc.exists) {\r\n    //         console.log('No such page!');  \r\n\r\n    //     } else { \r\n    //         this.setState({\r\n    //             imageList: doc.data().list\r\n    //         }) \r\n    //     }\r\n    // }\r\n    // async uploadImage(imageData, oldName) { \r\n    //     const storageRef = await firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n    //     const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n    //     const newImage = {\r\n    //         url: downloadURL, \r\n    //         name: imageData.name, \r\n    //         quantity: 1\r\n    //     }\r\n    //     this.addImageToList(newImage, oldName)\r\n  \r\n    // }\r\n    // async updateList(newList) {\r\n    //     await firebase.db.collection(\"site1category\").doc(\"imageList\").update({\r\n    //         list: newList, \r\n    //     }).then(() => { \r\n    //         this.setState({\r\n    //             imageList: newList\r\n    //         })\r\n    //     })\r\n    // }\r\n \r\n    // removeImageFromStoreAndList(name) {\r\n    //     console.log(name)\r\n    //     const newList = this.state.imageList.slice()\r\n    //     newList.map( (item, index) => {\r\n    //         if(item.name === name) {\r\n    //             item.quantity--\r\n    //             if(item.quantity === 0) newList.splice(index, 1)\r\n    //         }\r\n    //     })\r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })  \r\n    //     this.removeImage(name)\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    async removeImage(name) { \r\n        if(name !== '') {\r\n            const storageRef = firebase.storage.ref();\r\n \r\n            const imageRef = storageRef.child(name)\r\n        \r\n            try {\r\n                await imageRef.delete().then(function() {\r\n                    console.log('File deleted successfully')\r\n                }).catch(function(error) {\r\n                    console.log(error) \r\n                }); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n    removeImagesFromArray(images) {\r\n        console.log(images)\r\n    }\r\n   \r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    // imageList: this.state.imageList, \r\n                    // nameList: this.state.nameList ,\r\n                    \r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    },\r\n                    removeImagesFromArray: (array) => {\r\n                        this.removeImagesFromArray(array)\r\n                    },\r\n                    // removeImageFromStoreAndList: (name) => {\r\n                    //     this.removeImageFromStoreAndList(name)\r\n                    // },\r\n                    // uploadImage: (data, name) => {\r\n                    //     this.uploadImage(data, name)\r\n                    // }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isShowAlert: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            }) \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout() {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isShowAlert: null\r\n            })\r\n        }, 7000);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isShowAlert: 'info'\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isShowAlert: 'success'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isShowAlert: 'error'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isShowAlert, \r\n                    modalSettings: this.state.modalSettings, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isShowAlert: null\r\n                        })\r\n\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React, { useEffect, useContext, memo } from 'react'\r\n\r\nimport ImageContext from '../../context/imageContext/ImageContext' \r\n\r\nconst ImageRemover = memo(({ idArrayForDelete, clearArrayForDelete }) => {\r\n\r\n    const { removeImagesFromArray } = useContext(ImageContext)\r\n\r\n    useEffect( () => { \r\n        if(idArrayForDelete !== []) removeImages()\r\n        \r\n        console.log('effect') \r\n        \r\n    }, [idArrayForDelete])\r\n\r\n    const removeImages = () => { \r\n        removeImagesFromArray(idArrayForDelete) \r\n    }\r\n\r\n    return null\r\n})\r\n\r\nexport default ImageRemover\r\n \r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            paddingBottom: 0,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        btnWithLabel: {\r\n            padding: 0, \r\n            '& label': {\r\n                padding: theme.spacing(1, 2), \r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                 \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            }\r\n        },\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\nimport ImageContext from '../../../context/imageContext/ImageContext'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n    \r\n    const { removeImagesFromArray } = React.useContext(ImageContext)    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n    \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n       \r\n        return( { \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 350px)\",\r\n                maxWidth: 700,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,\r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid #eee`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) {  \r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => {  \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n          \r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        })  \r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n \r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    {\r\n                                                        item.slug === '/' ?\r\n                                                        <Tooltip title=\"You can't remove Home  Category\" placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}  \r\n                                                            > \r\n                                                                <InfoOutlined style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button> \r\n                                                        </Tooltip>\r\n                                                        :\r\n                                                        <Tooltip title='Delete Category' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}\r\n                                                                onClick={() => { deleteCategory(item.id) }}\r\n                                                            > \r\n                                                                <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState, useEffect } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n\r\n    const togglePicker = () => setIsOpen(prevOpen => !prevOpen);\r\n    const handleChange = (newColor) => setColor(newColor.hex);\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit')\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(initialColor === 'inherit' ) setColor('#000')\r\n    }, [initialColor])\r\n\r\n    const useStyles = makeStyles( theme => {\r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.shortest} ${theme.transitions.easing.easeInOut}ms`, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[4]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    initialColor === color ? \r\n                    <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch,\r\n    FormControl,\r\n    InputLabel, \r\n    Select, \r\n    MenuItem\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n\r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    React.useEffect(() => {\r\n        if(modal.color !== 'primary' && modal.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [modal])\r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n                \r\n                setIsDisableBtn(false)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Logo/Modal  changer  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Text for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalText}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalText(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={colorSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    colorSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {colorCustom}\r\n                                                        changeColor = {setColorCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'right'}\r\n                                                        noInherit={true} \r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n \r\n    React.useEffect(() => {\r\n        if( settings.classes.backgroundColor !== 'default' && \r\n            settings.classes.backgroundColor !== 'paper' && \r\n            settings.classes.backgroundColor !== 'primary' &&  \r\n            settings.classes.backgroundColor !== 'secondary' ) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n    }, [settings])\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                maxWidth: 400,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Style changer <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl    variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Background Color for Header</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={settingBackgroundSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setSettingBackgroundSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Theme Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Theme Secondary</MenuItem>\r\n                                                    <MenuItem value={'default'}>Theme BG default</MenuItem>\r\n                                                    <MenuItem value={'paper'}>Theme BG paper</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    settingBackgroundSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {settingBackgroundCustom}\r\n                                                        changeColor = {setSettingBackgroundCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'left'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box  my={4} width={'100%'} clone={true}>\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                // color: \"textPrimary\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button\r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\nfunction DumbComponent() {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings} = React.useContext(CategoryContext)    \r\n  \r\n    const [headerHeight, setHeaderHeight] = useState(0)\r\n   \r\n    let backgroundHeader = settings.classes.backgroundColor\r\n    let colorHeader \r\n    let hoverActiveLinkColor\r\n\r\n\r\n    let modalBtnColor = modal.color\r\n    let modalBtnColor1 \r\n    let modalBtnColor2 \r\n\r\n    let widthMobile \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`]\r\n        if(modalBtnColor === 'primary') {\r\n            modalBtnColor1 = theme.palette.primary.main\r\n            modalBtnColor2 = theme.palette.primary.dark\r\n        }\r\n        if(modalBtnColor === 'secondary') {\r\n            modalBtnColor1 = theme.palette.secondary.main\r\n            modalBtnColor2 = theme.palette.secondary.dark\r\n        }\r\n        if(modalBtnColor !== 'primary' && modalBtnColor !== 'secondary' ) {\r\n            modalBtnColor1 = modal.color\r\n            modalBtnColor2 = darken(modal.color, 0.4) \r\n        } \r\n        if(backgroundHeader === 'primary') {\r\n            backgroundHeader = theme.palette.primary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.primary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.primary.main, 0.3)\r\n        }\r\n        if(backgroundHeader === 'secondary') {\r\n            backgroundHeader = theme.palette.secondary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.secondary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.secondary.main, 0.3)\r\n        }\r\n        \r\n        if( backgroundHeader !== 'default' && \r\n            backgroundHeader !== 'paper' && \r\n            backgroundHeader !== 'primary' && \r\n            backgroundHeader !== 'secondary' ) {  \r\n                colorHeader = theme.palette.getContrastText(backgroundHeader)\r\n                hoverActiveLinkColor = darken(backgroundHeader, 0.5) \r\n        }   \r\n        if(backgroundHeader === 'paper') { \r\n            backgroundHeader = theme.palette.background.paper\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.paper)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n        if(backgroundHeader === 'default') { \r\n            backgroundHeader = theme.palette.background.default\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.default)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n\r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                top: 0, \r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: colorHeader ,\r\n                // color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundImage: `linear-gradient(180deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`,  \r\n                color: theme.palette.getContrastText(modalBtnColor2), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': { \r\n                    color: theme.palette.getContrastText(modalBtnColor2) ,\r\n                    backgroundImage: `linear-gradient(200deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`, \r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal } = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  document.querySelector('#header').clientHeight\r\n            \r\n            // console.log(headHeight)\r\n            setHeaderHeight(headHeight + 5)\r\n            \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n        // eslint-disable-next-line\r\n    }, []);\r\n     \r\n    const [mobileView, setMobileView] = useState(false); \r\n\r\n    const openModal = () => {\r\n        handleOpen('')\r\n    }\r\n\r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button\r\n            onClick={openModal}\r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            }\r\n            <AppBar className={header}  id='header'>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({ \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {  \r\n\r\n        const newReq = localRequests.slice()\r\n        const filtered = newReq.filter(item => ( item.time !== id ))\r\n\r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false)\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,  \r\n    FormControl, \r\n    Select,\r\n    MenuItem, \r\n    InputLabel\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n     \r\n   \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Modal Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                    <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"color-select-label\"\r\n                                        id=\"color-select\"\r\n                                        value={colorSelect}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                    >\r\n                                        <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                        <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                        <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Box ml={1} >\r\n                                    {\r\n                                        colorSelect === 'custom' &&\r\n                                        <ColorPicker\r\n                                            initialColor = {colorCustom}\r\n                                            changeColor = {setColorCustom}\r\n                                            setIsDisableBtn = {setIsDisableBtn}\r\n                                            position = {'right'}\r\n                                        /> \r\n                                    }\r\n                                    \r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                             \r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, makeStyles, Tooltip} from '@material-ui/core'\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)  \r\n \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { \r\n                    isOpen && \r\n                    <Box className={classes.settingsContainer} >\r\n                        <Typography component='span' >\r\n                            hello, { user.providerData[0].email } \r\n                        </Typography>\r\n\r\n                        <Box display='flex'>\r\n                            <RequestsChanger/>  &nbsp;\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    \r\n                        <Box> \r\n                            <Button \r\n                                size='small'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={handleSignOut}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container, Switch , FormControlLabel } from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nfunction Footer() {\r\n\r\n    const { setThemeMode, themeMode } = React.useContext(CategoryContext)\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: theme.palette.primary.dark, \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    const checked = themeMode === 'dark' ? true : false\r\n\r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                <Typography \r\n                    variant='h6'\r\n                    className={classes.footerHeading} \r\n                > \r\n                    Footer\r\n                </Typography>\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n\r\n                <Box>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Dark Theme\"\r\n                    />\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\n// import Dumb from '../components/library/table/DumbComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const disableCheck = () => {\r\n        if(name !== '' && password !== '') setIsDisableBtn(false)\r\n        else setIsDisableBtn(true)\r\n    }\r\n\r\n    const handleChange = (value, place) => {\r\n        switch(place) {\r\n            case ('name') : { \r\n                setName(value)\r\n                break;\r\n            }\r\n            case ('password'): {\r\n                setPassword(value)\r\n                break;\r\n            }\r\n            default: break;\r\n        } \r\n        disableCheck()\r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        setIsDisableBtn(true)\r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>  \r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Вход\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"text\"\r\n                            label=\"User\"\r\n                            name=\"user\"\r\n                            autoComplete='true'\r\n                            autoFocus\r\n                            value={name}\r\n                            onChange={  (e)=>{handleChange(e.target.value, \"name\")} }\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\" \r\n                            value={password}\r\n                            onChange={  (e)=>{handleChange(e.target.value, \"password\")} }\r\n                        />\r\n                        {\r\n                            error && \r\n                            <Alert severity=\"error\">{error.message}</Alert>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            size='medium'\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={isDisableBtn} \r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport uuid from 'react-uuid' \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu, Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select, Typography, IconButton, \r\n    Modal, DialogContent, \r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n    const libraryList = layouts.list\r\n\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem } = commonStyle \r\n \r\n\r\n        return ({   \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                width: 600, \r\n            } },\r\n            menuTitle: menuTitle,\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.handleClose()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = props.data.children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraphImage)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            case 'list' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryList)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n   \r\n        props.handleClose()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n        props.handleClose()\r\n    } \r\n     \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} >  \r\n                <Modal \r\n                    open={props.open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={props.handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Container Settings<OpenWithIcon/>\r\n                                </Typography>\r\n                    <FormGroup > \r\n                        <Typography  variant={'h6'} gutterBottom  >\r\n                            Add item from libs\r\n                        </Typography>\r\n                        <Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button \r\n                                        aria-controls=\"heading-menu\" \r\n                                        aria-haspopup=\"true\" \r\n                                        onClick={handleHeadingMenuClick}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Heading\r\n                                    </Button>\r\n                                </Box>\r\n                                \r\n                                <Menu\r\n                                    id=\"heading-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleHeadingMenuClose}\r\n                                >\r\n                                    <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                    <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                    <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                    <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                    <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                    <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                </Menu>\r\n\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraph');}}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Paragraph\r\n                                    </Button>\r\n                                </Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        Paragraph-Image\r\n                                    </Button>\r\n                                </Box> \r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('list', 'list');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        List\r\n                                    </Button>\r\n                                </Box> \r\n                        </Box>\r\n\r\n                    </FormGroup>\r\n\r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Settings \r\n                    </Typography>\r\n                    <FormGroup row>\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                            <Select\r\n                                labelId=\"dis-gutters-label\"\r\n                                id=\"dis-gutters-style\"\r\n                                value={settingGutter}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        \r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                            <Select\r\n                                labelId=\"fixed-label\"\r\n                                id=\"fixed-style\"\r\n                                value={settingFixed}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>  \r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup row> \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                            <Select\r\n                                labelId=\"maxWidth-label\"\r\n                                id=\"maxWidth-style\"\r\n                                value={settingMaxWidth}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-container-label\"\r\n                                id=\"inner-container-style\"\r\n                                value={settingInnerContainer}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup row> \r\n                            \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-paper-label\"\r\n                                id=\"inner-paper-style\"\r\n                                value={settingIsPaper}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    \r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Styles \r\n                    </Typography>\r\n                    <React.Fragment>\r\n                        {/* display */}\r\n                        <Box className={classes.inputGroup}>\r\n\r\n                            <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                <IconButton>\r\n                                    <InfoOutlined/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"display-style-label\"\r\n                                        id=\"display-style\"\r\n                                        value={display}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'block'}>Block</MenuItem>  \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                                {\r\n                                    display === 'flex' &&\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"direction-style-label\"\r\n                                            id=\"direction-style\"\r\n                                            value={flexDirection}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={'row'}>Row</MenuItem>  \r\n                                            <MenuItem value={'column'}>Column</MenuItem>  \r\n                                            <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                            <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>   \r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* margin */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Margin Top\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={margin.top}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                />\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Margin Bottom\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={margin.bottom}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* padding */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Padding Top\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={padding.top}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                />\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Padding Bottom\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={padding.bottom}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                />\r\n                            </Box>\r\n                            \r\n\r\n                        </Box>\r\n                        \r\n                        {/* bg-color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                            <Box className={classes.inputNumber} >\r\n                                <Typography  component={'p'} gutterBottom  >\r\n                                    Background  -  { backgroundColor }\r\n                                </Typography> \r\n                                <ColorPicker \r\n                                    initialColor={backgroundColor} \r\n                                    changeColor={setBackgroundColor} \r\n                                    setIsDisableBtn={setIsDisableBtn}\r\n                                    position={'left'}\r\n                                /> \r\n                            </Box>\r\n                            <Box className={classes.inputNumber} >\r\n                                <Typography  component={'p'} gutterBottom  >\r\n                                    Color  -  { color }\r\n                                </Typography> \r\n                                <ColorPicker \r\n                                    initialColor={color} \r\n                                    changeColor={setColor} \r\n                                    setIsDisableBtn={setIsDisableBtn}\r\n                                    position={'right'}\r\n                                /> \r\n                            </Box>\r\n                                \r\n                        </Box>\r\n                        \r\n                        {/* color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                <Select\r\n                                    labelId=\"shadow-style-label\"\r\n                                    id=\"shadow-style\"\r\n                                    value={shadow}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                    0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                    <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                    0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                    <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                    0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                </Select>\r\n                            </FormControl> \r\n                            \r\n                        </Box>\r\n                            \r\n                        {/* border */}\r\n                        <Box className={classes.inputGroup}> \r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Border Color  -  { borderColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={borderColor} \r\n                                        changeColor={setBorderColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box> \r\n                                <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Border Radius\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={borderRadius}\r\n                                        onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                />\r\n\r\n                            </Box>\r\n                            <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                            <TextField \r\n                                className={classes.inputNumber}\r\n                                type='number'\r\n                                label=\"Border Width\" \r\n                                variant=\"filled\" \r\n                                size='small'  \r\n                                value={borderWidth}\r\n                                onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                            />\r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                <Select\r\n                                    labelId=\"border-style-label\"\r\n                                    id=\"border-style\"\r\n                                    value={borderStyle}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                        </Box>\r\n\r\n                        <Box  className={classes.btnSave}>\r\n                            <Button\r\n                                disabled={isDisableBtn}\r\n                            \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size={'medium'} \r\n                                onClick={reSaveClassesSettings}\r\n                            >\r\n                                Save\r\n                            </Button> \r\n                        </Box>\r\n                        \r\n                    </React.Fragment> \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                </Modal> \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n                marginTop: props.className.marginTop*0.8,\r\n                marginBottom: props.className.marginBottom*0.8\r\n            },\r\n            [theme.breakpoints.down('sm')]: {\r\n                fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.6 : 20,\r\n                lineHeight : 1.2, \r\n                marginTop: props.className.marginTop*0.5, \r\n                marginBottom: props.className.marginBottom*0.5, \r\n                textAlign: 'center'\r\n            },\r\n        },\r\n        mobileClass: {\r\n            [theme.breakpoints.down('sm')]: {\r\n                marginTop: props.className.marginTop > 30 ? props.className.marginTop * 0.6 : 15,\r\n                marginBottom: props.className.marginBottom > 30 ? props.className.marginBottom * 0.6 : 15,\r\n                paddingLeft: props.className.paddingLeft > 30 ? props.className.paddingLeft * 0.6 : 15\r\n            } \r\n        }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, то на мобильных устройствах шрифт будет меньше и выравнивание будет по центру  \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography>\r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb list') \r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,  \r\n        liClass: props.data.itemsStyle,\r\n        mobileClass: {\r\n            [theme.breakpoints.down('sm')]: {\r\n                marginTop: props.className.marginTop > 30 ? props.className.marginTop * 0.6 : 15,\r\n                marginBottom: props.className.marginBottom > 30 ? props.className.marginBottom * 0.6 : 15,\r\n                paddingLeft: props.className.paddingLeft > 30 ? props.className.paddingLeft * 0.6 : 15\r\n            } \r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n           <ul className={`${classes.myClassName} ${classes.mobileClass}`}>\r\n                {\r\n                    props.data.items.map( (item, index) => (\r\n                        <li key={index} className={classes.liClass}>\r\n                            {item}\r\n                        </li>\r\n                    ))        \r\n                }\r\n           </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    ButtonGroup, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n  \r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';   \r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled list work')\r\n\r\n    const [paddingLeft, setPaddingLeft] = React.useState( props.data.classes.paddingLeft || 15 )\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    }) \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit') \r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [items, setItems] = React.useState(props.data.items || [])\r\n    const [itemsPadding, setItemsPadding] = React.useState(props.data.itemsStyle.paddingBottom || [])\r\n    const [itemsListStyle, setItemsListStyle] = React.useState(props.data.itemsStyle.listStyle || 'decimal')\r\n    const [newItem, setNewItem] = React.useState('')\r\n\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({ \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }   \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n            movingPageBtn: {  \r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = {  \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        paddingLeft: paddingLeft, \r\n        color: color, \r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight \r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.itemsStyle = {\r\n            paddingBottom: itemsPadding, \r\n            listStyle: itemsListStyle\r\n        }\r\n        sentData.items = items\r\n \r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleItemChange = (index, value) => {\r\n        let newItems = items.slice()\r\n        newItems[index] = value\r\n        setItems(newItems)\r\n        setIsDisableBtn(false)\r\n    }\r\n    const swapItem = (direction, index) => {\r\n        let newItems = items.slice() \r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex - 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex + 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const deleteItem = (index) => {  \r\n        let newItems = items.slice()\r\n        newItems.splice(index, 1)\r\n         \r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const handleAddItem = () => {\r\n        let newItems = items.slice()\r\n        \r\n        newItems.push(newItem)\r\n \r\n        setItems(newItems)\r\n        \r\n        setNewItem('') \r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                List Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                               \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box> \r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={paddingLeft}\r\n                                        onChange={ (e) => { setPaddingLeft(e.target.value) } }     \r\n                                    /> \r\n                                </Box>\r\n                                 \r\n            \r\n                            </Box>\r\n                           \r\n                                     \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup} mt={2}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl> \r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    /> \r\n                                     <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Item Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={itemsPadding}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setItemsPadding(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">List Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={itemsListStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setItemsListStyle((e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={'circle'}>Circle</MenuItem>\r\n                                            <MenuItem value={'disc'}>Disc</MenuItem>\r\n                                            <MenuItem value={'square'}>Square</MenuItem>\r\n                                            <MenuItem value={'decimal'}>Numbers</MenuItem>\r\n                                            <MenuItem value={'lower-alpha'}>lower-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-alpha'}>upper-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-roman'}>upper-roman</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n\r\n                            {/* items */}\r\n                            <Box className={classes.inputGroup} mt={3}>  \r\n                                {\r\n                                    items.map( (item, index) => {\r\n                                        return (\r\n                                            <Box key={index} display={'flex'} p={1} > \r\n                                                <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='text'\r\n                                                    label={`Item ${index+1}`} \r\n                                                    variant=\"outlined\" \r\n                                                    size='small'  \r\n                                                    value={item}\r\n                                                    onChange={ (e) => {handleItemChange(index, e.target.value)} }     \r\n                                                /> \r\n                                                <ButtonGroup \r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingPageBtn}\r\n                                                    >  \r\n                                                        {\r\n                                                            items.indexOf(item) !== 0 &&\r\n                                                            <Tooltip title='Get Up' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('up', index) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                        {\r\n                                                            items.indexOf(item) !== items.length - 1 &&\r\n                                                            <Tooltip title='Get Down' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('down', index) }} \r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                            \r\n                                                        <Tooltip title='Delete Item' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"secondary\"\r\n                                                                disableElevation={true} \r\n                                                                onClick={() => { deleteItem(index) }}\r\n                                                            > \r\n                                                                <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup> \r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                } \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='text'\r\n                                    label={`New Item`} \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    value={newItem}\r\n                                    onChange={ (e) => {setNewItem(e.target.value)} }     \r\n                                />\r\n                                <Box my={1}>\r\n                                    <Button \r\n                                        onClick={handleAddItem}\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                    >\r\n                                        Add new item\r\n                                    </Button>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                               \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}   \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete List\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes}  \r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,  \r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n     \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Background   -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box> \r\n                                      \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border Color  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                     \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) { \r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {},\r\n        imageStabilization: {\r\n            maxWidth: '100%', \r\n            maxHeight: '100%',  \r\n            [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                height: 'auto'\r\n            }, \r\n            // [theme.breakpoints.down('md')]: { \r\n            // }\r\n        },\r\n        mobileClass: {\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                alignItems: 'center', \r\n                textAlign: 'center', \r\n                '& span': {\r\n                    marginTop: theme.spacing(1)\r\n                }\r\n            }, \r\n            [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                '& span': {\r\n                    marginTop: theme.spacing(1)\r\n                }\r\n            }, \r\n        }\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={`${classes.imageStyle} ${classes.imageStabilization}`}  alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { removeImage } = React.useContext(ImageContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageName, setImageName] = React.useState(props.data.image.imageName || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n\r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n   \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl,\r\n            imageName: imageName\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) { \r\n            removeImage(imageName)\r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    // const handleImageSetting = (event) => {    \r\n    //     uploadHandler(event.target.files[0])\r\n    //     setIsLoading(true)\r\n    // }\r\n    \r\n    const handleImageUpload = async (e) => { \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n        \r\n        setIsLoading(false) \r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageUpload} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Typography variant={'caption'} display='block' align={\"center\"} color={'error'}>\r\n                                        !! set only width, height will set auto\r\n                                    </Typography>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Border  -  { imageBorderColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={imageBorderColor} \r\n                                                changeColor={setImageBorderColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Background  -  { backgroundColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={backgroundColor} \r\n                                        changeColor={setBackgroundColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'left'}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Color  -  { color }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={color} \r\n                                        changeColor={setColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>   \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ListCreator from '../list/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n\r\n    console.log('dumb container work')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: { \r\n                marginTop: props.classes.marginTop*0.8,\r\n                marginBottom: props.classes.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                marginTop: props.classes.marginTop*0.45,\r\n                marginBottom: props.classes.marginBottom*0.45\r\n            },\r\n        }\r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n    const classForResp = classes.resposiveFontSize \r\n \r\n    const renderItems = () => ( \r\n        modeDev ?\r\n        props.data.children.map((item) => {   \r\n            switch(item.type) { \r\n                case 'heading' :  \r\n                    return ( \r\n                        <HeadingCreator \r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    ) \r\n                case 'paragraph' :  \r\n                    return (\r\n                        <ParagraphCreator\r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    ) \r\n                case 'paragraphImage' :  \r\n                    return (\r\n                        <ParagraphImageCreator\r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    )\r\n                case 'list' :  \r\n                    return (\r\n                        <ListCreator\r\n                            key={item.id} \r\n                            item={item}\r\n                            reSaveChildren={props.reSaveChildren}\r\n                            removeItem={props.removeItem}\r\n                        />\r\n                    )  \r\n                default: break;\r\n            }  \r\n            return null\r\n        })\r\n        :\r\n        props.data.children.map((item) => {  \r\n            switch(item.type) { \r\n                case 'heading' :  \r\n                    return ( \r\n                        <HeadingCreator \r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                case 'paragraph' :  \r\n                    return (\r\n                        <ParagraphCreator\r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                case 'paragraphImage' :  \r\n                    return (\r\n                        <ParagraphImageCreator\r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                case 'list' :  \r\n                    return (\r\n                        <ListCreator\r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ) \r\n                default: break;\r\n            }  \r\n            return null\r\n        })\r\n        \r\n    )\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classForResp}`}\r\n                > \r\n                    <Paper style={{padding: '0 15px'}}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classForResp}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                 { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\nimport ImageContext from '../../../context/imageContext/ImageContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    const {removeImage} = React.useContext(ImageContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => { \r\n\r\n        let filtered = props.data.children.filter((item) => (item.id !== id))   \r\n        // save in firestore \r\n        props.reSaveContainer(props.data.id, filtered)   \r\n    }\r\n\r\n    const handleClose =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) {\r\n            let images = createArrayImages() \r\n            images.forEach( imageName => {\r\n                removeImage(imageName)\r\n            })\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n    const createArrayImages = () => {\r\n        let images = []\r\n        props.data.children.forEach( item => {\r\n            if(item.type === 'paragraphImage') {\r\n                images.push(item.image.imageName)\r\n            }\r\n        })\r\n        return images\r\n    }\r\n    createArrayImages()\r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleClose} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        handleClose={handleClose}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        if(color === 'primary') { \r\n            color = theme.palette.primary.main\r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n        if(color === 'secondary') {\r\n            color = theme.palette.secondary.main \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n        if(color === 'custom') { \r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                '&:hover' : {\r\n                    background: 'none', \r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } \r\n        } )\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                {\r\n                                    titleSubIcon &&\r\n                                    <svg style={{fill: '#fff'}}>       \r\n                                        <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                    </svg>\r\n                                }\r\n                                \r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\nimport StylesChangers from '../../../styles/changers'    \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const { removeImage } = React.useContext(ImageContext)\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n    const [iconName, setIconName] = React.useState(props.data.headingIcon.iconName || '')\r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        } \r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleImageUpload = async (e, imageType) => {  \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        if( imageType === 'mainImage')  { \r\n            removeImage(imageName)   \r\n        }\r\n        if( imageType === 'icon') {\r\n            removeImage(iconName)   \r\n        }\r\n \r\n          \r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        if( imageType === 'mainImage')  { \r\n            setImageName(generateImageName)\r\n            setImageUrl(downloadURL)  \r\n        }\r\n        if( imageType === 'icon') {\r\n            setIconName(generateImageName)\r\n            setIconUrl(downloadURL)\r\n        }\r\n          \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl,\r\n            iconName : iconName\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) { \r\n            removeImage(imageName) \r\n            removeImage(iconName) \r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button color='primary' variant={'contained'} className={classes.btnWithLabel} > \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            {\r\n                                                iconUrl &&\r\n                                                <img src={iconUrl} alt='icon' width={35} />\r\n                                            }\r\n                                            \r\n                                        </Box> \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Sub Heading\" \r\n                                            variant=\"outlined\" \r\n                                            size='small'  \r\n                                            value={subHeading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Input Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={inputLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setInputLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Button Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={buttonLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setButtonLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                        <TextField   \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Form Policy\" \r\n                                            size='small'  \r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                /> \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'>  \r\n                                            <Button color='primary' variant='contained' className={classes.btnWithLabel} > \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        {\r\n                                            imageUrl &&\r\n                                            <Box ml={1} maxWidth={300}>\r\n                                                <img src={imageUrl} alt='main' width={'100%'} />\r\n                                            </Box>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        if(color === 'primary')  color = theme.palette.primary.main\r\n        if(color === 'secondary') color = theme.palette.secondary.main \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className=\"mac-accordion heading\">\r\n            <Container maxWidth={'lg'} className={classes.disableMobileGutters}>\r\n\r\n                {\r\n                    heading.length > 0 &&\r\n                    <h3> { heading } </h3> \r\n                }\r\n                \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"mac-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"mac-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n \r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        \r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItem = (index, value, place) => { \r\n        const newItems = items.slice()\r\n        newItems[index][place] = value\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = () => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: \"heading\",\r\n            body: \"body\"\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newItems = items.slice()\r\n        newItems.splice(index, 1) \r\n \r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки аккордиона  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={3}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n\r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Head\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.head}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'head') } }     \r\n                                                            /> \r\n                                                        </Box>\r\n                                                        \r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Body\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.body}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'body') } }     \r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <Box my={2}>\r\n                                            <Button \r\n                                                variant='contained' \r\n                                                color='primary'\r\n                                                onClick={addItem}\r\n                                            >\r\n                                                Add item\r\n                                            </Button>\r\n                                        </Box>\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                />   \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n        return ({\r\n            svg: {\r\n                fill: theme.palette.secondary.main\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${theme.palette.primary.main}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: theme.palette.secondary.light\r\n                }\r\n            },\r\n            button: {\r\n                backgroundColor: theme.palette.primary.main ,\r\n                border: `2px solid ${theme.palette.primary.main}`, \r\n                color: '#fff',\r\n                '&:hover' : {\r\n                    background: 'none', \r\n                }\r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${theme.palette.primary.main} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth='lg'>\r\n                <div className=\"ln-contact\"> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`ln-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"ln-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Switch, FormControlLabel\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.mapFrame === null ? false : true)\r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 250px )',\r\n                maxWidth: 500,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки контактов  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Location\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={location}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setLocation(e.target.value) } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Phone\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={phone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Comment Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\" \r\n                                            value={inputComment}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputComment(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                    <TextField  \r\n                                                        multiline\r\n                                                        fullWidth\r\n                                                        type='text'\r\n                                                        label=\"Map Frame\" \r\n                                                        variant=\"outlined\"  \r\n                                                        value={mapFrame}\r\n                                                        onChange={ (e) => { setIsDisableBtn(false);  setMapFrame(e.target.value)  } }     \r\n                                                    />\r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n  \r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const { imageList } = React.useContext(ImageContext)\r\n      \r\n    const imageUrl = props.data.image\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    let imageName = props.data.imageName\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    let colorButton = props.data.colorButton || '#f00'\r\n \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorButton === 'primary')  colorButton = theme.palette.primary.main\r\n        if(colorButton === 'secondary') colorButton = theme.palette.secondary.main  \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                '&:hover' : { \r\n                    background: 'none',\r\n                    color: theme.palette.text.primary\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400\r\n                }, \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth=\"lg\" >\r\n                <div className=\"electro-about heading\">\r\n                    <Grid container> \r\n                        <Grid item md={6} >\r\n                            <div className=\"electro-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"electro-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n      \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(props.data.colorButton !== 'primary' && props.data.colorButton !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave, \r\n            btnWithLabel: btnWithLabel\r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n  \r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf)  {\r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n           \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                            <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                            <Select\r\n                                                                labelId=\"color-select-label\"\r\n                                                                id=\"color-select\"\r\n                                                                value={colorSelect}\r\n                                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                            >\r\n                                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        <Box ml={1} >\r\n                                                            {\r\n                                                                colorSelect === 'custom' &&\r\n                                                                <ColorPicker\r\n                                                                    initialColor = {colorCustom}\r\n                                                                    changeColor = {setColorCustom}\r\n                                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                                    position = {'right'}\r\n                                                                />  \r\n                                                            }\r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorMain === 'primary')  colorMain = theme.palette.primary.main\r\n        if(colorMain === 'secondary') colorMain = theme.palette.secondary.main  \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain,\r\n                border: `1px solid ${colorMain}`, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n                '&:hover' : { \r\n                    background: 'none',\r\n                    color: theme.palette.text.primary\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0), \r\n                margin: theme.spacing(6, 0), \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.containerColored}> \r\n            <Container maxWidth=\"lg\" > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    React.useEffect(() => {\r\n        if(props.data.colorMain !== 'primary' && props.data.colorMain !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Action Line\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='number'\r\n                                            label=\"Heading Size\"\r\n                                            variant=\"outlined\"\r\n                                            value={headingSize}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeadingSize(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Block</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'top'}\r\n                                                    noInherit={true}\r\n                                                />  \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React , {useState} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box\r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isBotton = rows.length - visibleRows > 0 ? true : false  \r\n    const [isBottonClick, setIsBottonClick] = useState(false)\r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        if(mainColor === 'primary')  mainColor = theme.palette.primary.main\r\n        if(mainColor === 'secondary') mainColor = theme.palette.secondary.main  \r\n        return ({\r\n            table: {\r\n                minWidth: 200,\r\n            },\r\n            \r\n            tableCell: {\r\n                paddingTop: theme.spacing(2), \r\n                paddingBottom: theme.spacing(2),  \r\n                [theme.breakpoints.down('md')]: { \r\n                    paddingTop: theme.spacing(1), \r\n                    paddingBottom: theme.spacing(1), \r\n                },\r\n            },\r\n            tableButtonCell: { \r\n                maxWidth: 300,\r\n                width: 300,\r\n                [theme.breakpoints.down('md')]: {\r\n                    width: 'auto', \r\n                },\r\n            },\r\n            tableButton: { \r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                fontSize: 14, \r\n                lineHeight: 1.2, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    padding: theme.spacing(1), \r\n                },\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: 50, \r\n                marginBottom: 50, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    marginTop: 30, \r\n                    marginBottom: 30, \r\n\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsBottonClick(!isBottonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(!isBottonClick)\r\n        return (\r\n            rows.map((row, index) => {\r\n                if(index < visibleRows)\r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n                return false\r\n            })\r\n        )\r\n        if(isBottonClick)\r\n        return (\r\n            rows.map((row, index) => { \r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n            })\r\n        )\r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true}  >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableCell}>\r\n                {row.price}\r\n            </TableCell> \r\n            <TableCell align=\"right\" className={`${classes.tableButtonCell} ${classes.tableCell}`}> \r\n                <Button \r\n                    variant='contained'   \r\n                    className={classes.tableButton}\r\n                    onClick={() => { handleOpenModal(row.name) }}\r\n                >\r\n                    { buttonText }\r\n                </Button>\r\n            </TableCell>\r\n        </StyledTableRow>\r\n    )\r\n    const renderBotton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isBottonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth='lg' className={`${classes.tableContainer} heading`} >\r\n            {\r\n                heading.length > 0 &&\r\n                <h3> { heading } </h3> \r\n            }\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={`${classes.tableHeader} ${classes.tableCell}` }\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            <TableCell align=\"right\" className={`${classes.tableHeader} ${classes.tableCell}` } ></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            renderRows()\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isBotton &&\r\n                renderBotton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n \r\n    const [textButton,  setTextButton] = React.useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    const [rows, setRows] = React.useState(props.data.rows)\r\n    const [tableRow, setTableRow] = React.useState(props.data.tableRow)\r\n\r\n    const [visibleRows, setVisibleRows] = React.useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = React.useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = React.useState(props.data.visibleBottonTextClick || 'Show less')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n     \r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeTable = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleTableHeadChange = (index, value) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChange = (index, place, value) => {\r\n        const newRows = rows.slice()\r\n        newRows[index][place] = value\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addRow = () => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: \"Table Row\", \r\n            price: 100 \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Text Button\"\r\n                                            variant=\"outlined\"\r\n                                            value={textButton}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setTextButton(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <TextField \r\n                                                            fullWidth\r\n                                                            type='text'\r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant=\"outlined\"\r\n                                                            value={item}\r\n                                                            onChange={(e) => {\r\n                                                            setIsDisableBtn(false);\r\n                                                            handleTableHeadChange(index, e.target.value)\r\n                                                        }}/>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n\r\n                                                            <Box mr={0.5}>\r\n                                                                <Typography variant='caption'>\r\n                                                                    Row {index + 1}\r\n                                                                </Typography>\r\n                                                            </Box>\r\n\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                        <Box mr={1} flexGrow={1}>\r\n                                                            <TextField \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label={`Table Row Name ${index + 1}`}\r\n                                                                variant=\"outlined\"\r\n                                                                value={item.name}\r\n                                                                onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    handleRowChange(index, 'name', e.target.value)\r\n                                                                }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                        <Box >\r\n                                                            <TextField \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label={`Table Row Price ${index + 1}`}\r\n                                                                variant=\"outlined\"\r\n                                                                value={item.price}\r\n                                                                onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    handleRowChange(index, 'price', e.target.value)\r\n                                                                }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Button\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        onClick={addRow}\r\n                                    >\r\n                                        Add Row\r\n                                    </Button>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <Box  display=\"flex\" >\r\n                                            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Color for Table</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={colorSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box ml={1} >\r\n                                                {\r\n                                                    colorSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {colorCustom}\r\n                                                        changeColor = {setColorCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        noInherit={true}\r\n                                                        position = {'right'}\r\n                                                    />  \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='number'\r\n                                                label={`Quantity to show`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleRows}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleRows(Number(e.target.value))\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <TextField  \r\n                                                type='text'\r\n                                                label={`Text for botton`}\r\n                                                variant=\"outlined\"\r\n                                                value={visibleBottonText}\r\n                                                onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setVisibleBottonText(e.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                        <TextField  \r\n                                            type='text'\r\n                                            label={`Text for botton clicked`}\r\n                                            variant=\"outlined\"\r\n                                            value={visibleBottonTextClick}\r\n                                            onChange={(e) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setVisibleBottonTextClick(e.target.value)\r\n                                            }}\r\n                                        />\r\n                                    </Box>\r\n                                                \r\n                                    \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, makeStyles, Button, Box, Grid, fade } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/lineForm.scss' \r\n\r\nfunction DumbComponent(props) { \r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('') \r\n  \r\n    console.log(props)\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone \r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let color = props.data.color\r\n    let colorFocusInput\r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        if(color === 'primary') { \r\n            color = theme.palette.primary.main\r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n        if(color === 'secondary') {\r\n            color = theme.palette.secondary.main \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n        if(color === 'custom') { \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n\r\n        return ({ \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper,  \r\n            },\r\n            lineDecor: {\r\n                position: \"absolute\",\r\n                top: 8,\r\n                left: 8,\r\n                right: 8,\r\n                bottom: 8,\r\n                border: `1px solid ${fade(color, 0.25)}`,\r\n                borderRadius: 4,\r\n            },\r\n            input: {\r\n                width: '100%',\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: 'inherit',\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                height: 50,\r\n                paddingLeft: 45,\r\n                paddingRight: 25, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center' \r\n                }\r\n            },\r\n            button: {\r\n                width: '100%',\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                height: 50,\r\n                textTransform: 'inherit', \r\n                \r\n                color: theme.palette.getContrastText(color),\r\n                '&:hover' : {\r\n                    background: 'none',\r\n                    color: theme.palette.getContrastText(theme.palette.background.paper),\r\n                },\r\n                [theme.breakpoints.down('md')]: {\r\n                    // marginTop: 10,  \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: 0,  \r\n                }\r\n            }, \r\n            gridItem: {\r\n                paddingRight: theme.spacing(1),\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginBottom: 10,  \r\n                }\r\n            },\r\n            policy: {\r\n                height: \"100%\", \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                fontSize: 12,\r\n                lineHeight: 1.2,\r\n                fontWeight: 300, \r\n                [theme.breakpoints.down('md')]: {\r\n                    marginTop: 10, \r\n                    textAlign: 'center', \r\n                    justifyContent: 'center'\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName,  \r\n            place: 'line Form',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('') \r\n\r\n    }\r\n    return ( \r\n        <div className={classes.itemBackground}> \r\n            <Container maxWidth='lg'>\r\n                <div className=\"line-form\"> \r\n                    <Box className={classes.lineDecor} ></Box>\r\n                    {\r\n                        heading.length > 0 &&\r\n                        <h5>\r\n                            {heading}\r\n                        </h5>\r\n                    }\r\n                    {\r\n                        paragraph.length > 0 &&\r\n                        <p>\r\n                            {paragraph}\r\n                        </p>\r\n                    } \r\n\r\n                    <form onSubmit={handleSubmit} style={{position: 'relative', zIndex: 5}}>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name={`name-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputName} \r\n                                    value={formName}\r\n                                    onChange={(e) => {setFormName(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"tel\" \r\n                                    name={`phone-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputPhone} \r\n                                    value={formPhone}\r\n                                    onChange={(e) => {setFormPhone(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4} lg={3} className={classes.gridItem}>\r\n                                <Button \r\n                                    type=\"submit\"\r\n                                    className={classes.button} \r\n                                >\r\n                                    <span>\r\n                                       { buttonText}\r\n                                    </span>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={3} >\r\n                                <span className={classes.policy}>\r\n                                    { policy }\r\n                                </span> \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        {/* <div className=\"line-form_content form-styled\"> \r\n                            <span className=\"input-container\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name={`name-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputName} \r\n                                    value={formName}\r\n                                    onChange={(e) => {setFormName(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </span>\r\n                            <span className=\"input-container\">\r\n                                <input \r\n                                    type=\"tel\" \r\n                                    name={`phone-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputPhone} \r\n                                    value={formPhone}\r\n                                    onChange={(e) => {setFormPhone(e.target.value)}}\r\n                                    className={classes.input}\r\n                                />  \r\n                            </span> \r\n                            <div className=\"bt-main_content__btn\">\r\n                                \r\n                            </div>\r\n                            <span className=\"info\">\r\n                                { policy }\r\n                            </span> \r\n                        </div> */}\r\n                    </form>\r\n                </div> \r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, ButtonGroup, makeStyles, Modal, DialogContent, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n \r\n    const [heading, setHeading] = React.useState(props.data.heading || '')\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '') \r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n     \r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.color])\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n     \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 250px )',\r\n                maxWidth: 500,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)  \r\n        newData.heading = heading \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone  \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy  \r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Form Line Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Settings Form line  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                      \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                    noInherit={true}\r\n                                                />  \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }  \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent, Divider } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\nimport FormLineElement from '../library/formLine/ElementCreator'  \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n  const FormLineLayout = layouts.formLine \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => {\r\n    const classesRef = StylesChangers()\r\n  const commonClasses = classesRef(theme)\r\n\r\n  const { menu, menuTitle } = commonClasses \r\n    return ({ \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 80,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 600, \r\n        left: \"calc(50% - 300px)\",\r\n      }},     \r\n      menuTitle: menuTitle,\r\n      tooltip: {\r\n        fontSize: 14\r\n      }, \r\n      boxMenuItem : { \r\n        display: 'inline-block',\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n      }\r\n\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    // newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n   \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container') newCont = Object.assign({}, ContainerLayout) \r\n    if(type === 'mainBanner') newCont = Object.assign({}, MainBannerLayout) \r\n    if(type === 'accordion') newCont = Object.assign({}, AccordionLayout) \r\n    if(type === 'contactMap') newCont = Object.assign({}, СontactMapLayout) \r\n    if(type === 'about') newCont = Object.assign({}, AboutLayout) \r\n    if(type === 'actionLine') newCont = Object.assign({}, ActionLineLayout) \r\n    if(type === 'table') newCont = Object.assign({}, TableLayout) \r\n    if(type === 'formLine') newCont = Object.assign({}, FormLineLayout) \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n        \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n    \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'formLine') { \r\n          return(\r\n              <FormLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <React.Fragment> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <Box className={classes.btnContainer}  >\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Add Block for Page <OpenWithIcon/>\r\n                            </Typography> \r\n                            \r\n                            \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Container for heading, paragraph, image-paragraph, list' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                    Container\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With form\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block to start the page. Contain: text, form, image(desktop only)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                    Main Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                           \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Contain: location and phone view, contact form, map. Has two different displays, with and without a map' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                    Contacts with Map\r\n                                </Button>  \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Small contact form with optional heading and paragrapher' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('formLine') }}>\r\n                                    Add Form Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Accordion with heading on top' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                    Accordion\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip title='Line for small text paragrapher with ability to add a button modal  ' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                    Colored Action Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Table with heading on top. Has ability to add \"Show More Botton \" on bottom' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                    Add Table \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With image\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block with heading, paragraph and image. Image on desktop - 50% vieport width. Image on mobile - 50% vieport width . Has the ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                    About\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </Box>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/functions/ScrollToTop' \r\nimport ImageRemover from '../components/functions/ImageRemover' \r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n \r\n    const {categories, idArrayForDelete, clearArrayForDelete } = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    \r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            {/* <ImageRemover\r\n                idArrayForDelete={idArrayForDelete}\r\n                clearArrayForDelete={clearArrayForDelete}\r\n            /> */}\r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton\r\n} from '@material-ui/core'; \r\nimport { darken } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, \r\n    // handleOpen, \r\n    handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2  \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n\r\n    if(colorButton === 'primary') {\r\n        colorGradient1 = theme.palette.primary.main\r\n        colorGradient2 = theme.palette.primary.dark\r\n    }\r\n    if(colorButton === 'secondary') {\r\n        colorGradient1 = theme.palette.secondary.main\r\n        colorGradient2 = theme.palette.secondary.dark\r\n    }\r\n    if(colorButton !== 'primary' && colorButton !== 'secondary' ) {\r\n      if(modalSettings.colorButton) {\r\n        colorGradient1 = modalSettings.colorButton\r\n        colorGradient2 = darken(modalSettings.colorButton, 0.4)\r\n      } \r\n    } \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        }\r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n\r\n  // const openModal = () => {\r\n  //   handleOpen('')\r\n  // }\r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <button type=\"button\" onClick={ openModal }>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nconst  AlertComponent = (props) => {\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        props.closeAlert()\r\n    }\r\n\r\n    const alertText = () => {\r\n        if(props.severity === 'success') return \"Your request was accepted successfully\"\r\n        if(props.severity === 'info') return \"Your request is being processed\"\r\n        if(props.severity === 'error') return \"An error has occurred :(\"\r\n        if(props.severity === 'warning') return \"Warning!\"\r\n    }\r\n      \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={props.severity} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText() }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert, closeAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert severity={isShowAlert} closeAlert={closeAlert} /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}