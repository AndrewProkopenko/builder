{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","components/ScrollToTop.js","components/placeholders/LoadingProgress.js","components/header/headerHelpers/CategoriesChanger.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/header/headerHelpers/ImageManager.js","components/Login.js","components/Error.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/StyledComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","categories","logo","image","mainText","subText","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","dark","light","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","imageList","nameList","fetchListFromStorage","fetchListFromFirestore","listRef","ref","imagesArray","listAll","res","items","forEach","itemRef","push","fullPath","name","child","removeImage","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","open","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","handleClose","theme","listPages","marginTop","paddingLeft","listStyle","marginBottom","titlePages","fontSize","fontWeight","borderBottom","menu","palette","background","paper","padding","paddingBottom","maxWidth","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","cursor","btnSetting","orange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","dumbWrapper","opacity","btnSave","bottom","paddingTop","accordionContainer","accordionHeader","paddingRight","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","slice","indexOf","length","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","Tooltip","title","placement","Button","onClick","size","variant","color","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","spacing","xs","onSubmit","e","preventDefault","newList","newCategory","Object","assign","uuid","FormGroup","Box","mb","TextField","required","label","onChange","target","IconButton","fullWidth","index","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","LogoChanger","updateImageNameList","setMainText","setSubText","setImage","imageName","setImageName","amber","uploadHandler","imageData","storageRef","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","boxShadow","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackground","settingsItem","marginRight","flexGrow","row","FormControl","InputLabel","Select","labelId","MenuItem","Number","ThemeChanger","default","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","primary","main","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","secondary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","deepOrange","colorPreview","borderRadius","flexWrap","mr","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","text","textDecoration","easeIn","menuButtonInnerLi","shortest","toolbar","listUnstyle","margin","Toolbar","clone","exact","to","pl","List","disablePadding","Paper","innerItem","innerIndex","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","mx","my","content","indexPage","borderTop","edge","DumbComponent","widthMobile","headerHeight","setHeaderHeight","header","fixedPadding","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","setResponsiveness","headHeight","document","querySelector","clientHeight","setMobileView","removeEventListener","addEventListener","mobileView","createLogo","Fragment","AppBar","Container","AdminHeader","isOpen","setIsOpen","buttonSettings","settingsContainer","wrapper","providerData","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","marginLeft","ElementCreator","Header","Footer","subHeading","fill","footer","footerHeading","checked","FormControlLabel","control","Switch","ImageManager","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","Avatar","loginWithEmail","err","autoComplete","autoFocus","Alert","severity","Error","myClassName","resposiveFontSize","sm","classeForResp","isResponsiveFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setPadding","setMargin","setColor","setBackgroundColor","setTextAlign","setFontSize","setFontWeight","setLineHeight","responseFont","setIsResponsiveFont","textInDumb","setTextInDumb","inputNumber","inputGroup","border","divider","tooltip","dumbItemContainer","outline","shadows","outlineColor","mtView","mbView","ptView","pbView","dumbItem","dumbItemDelete","showInput","dataNew","handlePadding","newPadding","handleMargin","newMargin","focus","triangle","colors","onChangeComplete","newColor","hex","sentData","reSaveChildren","aria-haspopup","prop","removeItem","imageStyle","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","setDisplay","imageAccordion","imagePreview","multiline","rowsMax","imageClassName","imageUrl","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageLabel","handleImageMargin","px","pt","pb","ml","isPaper","innerContainer","ContainerElement","libraryHeading","heading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","setFlexDirection","shadow","setShadow","setChildren","settingInnerContainer","setSettingInnerContainer","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","btnDrawerStyle","btnDrawerItem","containerWrapper","toggleDrawer","handleHeadingMenuClose","addHeading","a","newChildren","newItem","reSaveContainer","slicedChild","key","confirm","swapContainer","removeContainer","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","titleMain","titleSubText","headingIcon","inputLabel","buttonLabel","policy","input","md","viewBox","d","placeholder","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","location","pageSlug","useTheme","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","setData","setItems","btnContainer","fetchData","metaTitle","pageRef","set","childrenContainer","newData","keys","elem","addContainer","newItems","newCont","history","m","RouterComponent","basename","path","render","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.95070e6f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 959) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n      \r\n    } \r\n\r\n    async updateCategories(data) {\r\n        console.log('firebase update')\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {   \r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    setThemeMode: (mode) => {\r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (data) => { \r\n                        this.setState({\r\n                            logo: data\r\n                        })\r\n                        this.updateLogo(data) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    state = { \r\n        imageList: [],\r\n        nameList: []\r\n    } \r\n\r\n    async componentDidMount() { \r\n          this.fetchListFromStorage()\r\n          this.fetchListFromFirestore()\r\n    }\r\n\r\n    async fetchListFromStorage() {\r\n        const listRef = firebase.storage.ref(); \r\n        \r\n        let imagesArray = []\r\n\r\n        await listRef.listAll().then(function(res) {\r\n            res.items.forEach(function(itemRef) { \r\n                imagesArray.push(itemRef.fullPath) \r\n            });\r\n          }).catch(function(error) {\r\n              console.log(error) \r\n          });\r\n          this.setState({\r\n            imageList: imagesArray\r\n          }) \r\n    }\r\n\r\n    async fetchListFromFirestore() {\r\n        const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n        const doc = await listRef.get();\r\n      \r\n        if (!doc.exists) {\r\n            console.log('No such page!');  \r\n\r\n        } else { \r\n            this.setState({\r\n                nameList: doc.data().list\r\n            }) \r\n        }\r\n    }\r\n\r\n    removeImage(name) { \r\n        const storageRef = firebase.storage.ref();\r\n \r\n        const imageRef = storageRef.child(name)\r\n     \r\n        imageRef.delete().then(function() {\r\n            console.log('File deleted successfully')\r\n        }).catch(function(error) {\r\n            console.log(error) \r\n        }); \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    imageList: this.state.imageList, \r\n                    nameList: this.state.nameList ,\r\n                    // updateImageNameList: (name) => {\r\n                    //     let newList = this.state.nameList.slice()\r\n                    //     let isUnic = true\r\n                    //     newList.map((item) => {\r\n                    //         if( item === name ) isUnic = false\r\n                    //     })\r\n                    //     if(isUnic) newList.push(name)\r\n\r\n                    //     this.setState({\r\n                    //         nameList: newList\r\n                    //     }) \r\n                    //     firebase.db.collection(\"site1category\").doc('imageList').update({\r\n                    //         list: newList\r\n                    //     })\r\n                    // },\r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n\r\nimport { orange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n// import DumbComponent from './DumbComponent'\r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() {\r\n    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        listPages : {\r\n            marginTop: 20, \r\n            paddingLeft: 25, \r\n            '&>li' : { \r\n                listStyle: 'none',\r\n                marginBottom: 5\r\n            }\r\n        },\r\n        titlePages: {\r\n            fontSize: 14, \r\n            fontWeight: 600, \r\n            borderBottom: `1px solid #eee`,\r\n            marginBottom: 12\r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 350px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 700,  \r\n            width: 700,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // left: 2,\r\n            backgroundColor: orange[700], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: orange[900], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        },\r\n        accordionHeader: {\r\n            paddingRight: 30, \r\n            paddingLeft: 25,     \r\n        },\r\n        deleteBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 5, \r\n            right: 5, \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25,\r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 0, \r\n            left: -5,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        },\r\n        deletePageBtn: {  \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingPageBtn: { \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) { \r\n                console.log(newPage)\r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => { \r\n        console.log('update')\r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n         \r\n        console.log(activeIndex)\r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        }) \r\n        console.log(newCategories)\r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать список категорий  <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    <Tooltip title='Delete Category' placement='top'>\r\n                                                        <Button\r\n                                                            variant='contained'\r\n                                                            color=\"default\"\r\n                                                            disableElevation={true}\r\n                                                            className={classes.deleteBtn}\r\n                                                            onClick={() => { deleteCategory(item.id) }}\r\n                                                        > \r\n                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        <Tooltip title='Get Up' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('up', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                            >  \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                            </Button>\r\n                                                        </Tooltip> \r\n                                                        <Tooltip title='Get Down' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('down', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                        >  \r\n                                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                        </Button>\r\n                                                                                    </Tooltip> \r\n                                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                        >     \r\n                                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, updateLogo } = React.useContext(CategoryContext)     \r\n\r\n    const { removeImage , updateImageNameList } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n      \r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // right: 2,\r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        }, \r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        updateLogo(newLogo)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать логотип  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={2}>\r\n                                        <img\r\n                                            width={100}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\nimport { TwitterPicker } from 'react-color';\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackground, setSettingBackground] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: { \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        }, \r\n        settingsItem: {\r\n            width: '100%',\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1, \r\n        },\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition,\r\n                backgroundColor: settingBackground,\r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Изменить настройки  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {/* <Box \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[   'transparent', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setSettingBackground(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  */}\r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormGroup\r\n} from '@material-ui/core' \r\n\r\nimport { deepOrange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction ThemeChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { themeMode, themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 450px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 900,  \r\n            width: 900,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n         \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        \r\n        colorPreview: { \r\n            width: '100%',\r\n            height: 8,  \r\n            borderRadius: 3, \r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Отредактировать тему  <OpenWithIcon/>\r\n                            </Typography>\r\n                                \r\n                            <Box display='flex' flexWrap='nowrap'  mt={2}>\r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightBackgroundDefault}\r\n                                        label='Light Background Default'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightBackgroundDefault(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightBackgroundDefault}}></Box>\r\n                                </Box> \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightBackgroundPaper}\r\n                                        label='Light Background Paper'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightBackgroundPaper(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightBackgroundPaper}}></Box>\r\n                                </Box>  \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightPrimary}\r\n                                        label='Light Primary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightPrimary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightPrimary}}></Box>\r\n                                </Box>  \r\n                                <Box> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightSecondary}\r\n                                        label='Light Secondary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightSecondary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightSecondary}}></Box>\r\n                                </Box>  \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={3}>\r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkBackgroundDefault}\r\n                                        label='Dark Background Default'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkBackgroundDefault(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkBackgroundDefault}}></Box>\r\n                                </Box> \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkBackgroundPaper}\r\n                                        label='Dark Background Paper'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkBackgroundPaper(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkBackgroundPaper}}></Box>\r\n                                </Box>  \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkPrimary}\r\n                                        label='Dark Primary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkPrimary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkPrimary}}></Box>\r\n                                </Box>  \r\n                                <Box> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkSecondary}\r\n                                        label='Dark Secondary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkSecondary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkSecondary}}></Box>\r\n                                </Box>  \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`,\r\n\r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n            },\r\n             \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , listUnstyle  } = useStyles();\r\n  \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n            {props.logo}  \r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={menuLink} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles,\r\n    Button,\r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar disableGutters={true} style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  >\r\n                        <Button \r\n                            variant='outlined'\r\n                            color='default'\r\n                            onClick={handleDrawerClose}\r\n                        >\r\n                            <ArrowRightAltIcon/>\r\n                        </Button>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                // color: \"textPrimary\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n} from \"@material-ui/core\"; \r\nfunction DumbComponent() {\r\n\r\n    const {categories, logo, settings} = React.useContext(CategoryContext)    \r\n  \r\n   const [headerHeight, setHeaderHeight] = useState(0)\r\n\r\n  \r\n\r\n    let widthMobile \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`]\r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: theme.palette.background.paper, \r\n\r\n                position: settings.classes.position,  \r\n                // paddingTop: settings.classes.paddingY,  \r\n                // paddingBottom: settings.classes.paddingY,  \r\n                // backgroundColor: settings.classes.backgroundColor, \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                top: 0, \r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n               \r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub,  fixedPadding} = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  document.querySelector('#header').clientHeight\r\n            \r\n            setHeaderHeight(headHeight)\r\n            \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n       \r\n    }, []);\r\n     \r\n    const [mobileView, setMobileView] = useState(false); \r\n      \r\n\r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n   \r\n    \r\n  \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            }\r\n            <AppBar className={header}  id='header'>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop logo={createLogo}  categories={categories} settings={settings}/> \r\n                        : \r\n                        <Mobile logo={createLogo}  categories={categories}  /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, makeStyles, Tooltip} from '@material-ui/core'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)  \r\n \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { \r\n                    isOpen && \r\n                    <Box className={classes.settingsContainer} >\r\n                        <Typography component='span' >\r\n                            hello, { user.providerData[0].email } \r\n                        </Typography>\r\n                    \r\n                        <Box> \r\n                            <Button \r\n                                size='small'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={handleSignOut}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container, Switch , FormControlLabel } from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nfunction Footer() {\r\n\r\n    const { setThemeMode, themeMode } = React.useContext(CategoryContext)\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: theme.palette.primary.dark, \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    const checked = themeMode === 'dark' ? true : false\r\n\r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                <Typography \r\n                    variant='h6'\r\n                    className={classes.footerHeading} \r\n                > \r\n                    Footer\r\n                </Typography>\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n\r\n                <Box>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Dark Theme\"\r\n                    />\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nfunction ImageManager() {\r\n    \r\n    const { imageList, nameList, updateImageNameList } = React.useContext(ImageContext)     \r\n\r\n    console.log(imageList, nameList)\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {\r\n                    imageList.map( (item, index) => {\r\n                        return <li key={index}> { item } </li>\r\n                    }) \r\n                }\r\n            </ul>\r\n            <ul>\r\n                {\r\n                    nameList.map( (item, index) => {\r\n                        return <li key={index}> { item } </li>\r\n                    }) \r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageManager\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase'\r\n\r\nimport ImageManager from './header/headerHelpers/ImageManager'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\nimport ImageContext from '../context/imageContext/ImageContext'\r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { imageList } = React.useContext(ImageContext)\r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n        console.log(imageList)\r\n    }, [])\r\n\r\n    const hendlerSubmit = (e) => {\r\n        e.preventDefault() \r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n    \r\n            {/* Redirect при авторизации */}\r\n            { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n \r\n            {/* <ImageManager/> */}\r\n     \r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Вход\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={hendlerSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"text\"\r\n                        label=\"User\"\r\n                        name=\"user\"\r\n                        autoComplete='true'\r\n                        autoFocus\r\n                        value={name}\r\n                        onChange={ (e)=>{setName(e.target.value)} }\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={(e)=>{setPassword(e.target.value)}}\r\n                    />\r\n                    {\r\n                        error && \r\n                        <Alert severity=\"error\">{error.message}</Alert>\r\n                    }\r\n                \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                \r\n                </form>\r\n            </div>\r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                fontSize: props.className.fontSize*0.6, \r\n            },\r\n        }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.isResponsiveFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        }, \r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }  ,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50,  \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        showInput: {\r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, шрифт будет меньше размером на мобильных устройствах. \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}\r\n                                isResponsiveFont={isResponsiveFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n     \r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            // height: '100%'\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 100, \r\n            height: 100, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {}\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={classes.imageStyle} alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  '0px')\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            marginTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        }, \r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },  \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 105, \r\n            height: 105, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        },\r\n        imageLabel: {\r\n            position: 'absolute',\r\n            zIndex: 10, \r\n            top: 0, \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0, \r\n            width: \"100%\", \r\n            maxWidth: \"100%\", \r\n            height: \"100%\", \r\n            maxHeight: \"100%\", \r\n            cursor: 'pointer'\r\n        }\r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName,\r\n    }} \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImageUrl(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageSetting} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={dataNew.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='color'\r\n                                                label=\"Border Color\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderColor}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderColor(e.target.value)} }     \r\n                                        />\r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Background  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        color={backgroundColor}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setBackgroundColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box> \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Color  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        color={color}\r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                imageClassName={imageClassName}\r\n                                imageUrl={imageUrl}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n \r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={classes.myClassName}\r\n                > \r\n                    <Paper style={{padding: '0 15px'}}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={classes.myClassName}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport uuid from 'react-uuid' \r\nimport { TwitterPicker } from 'react-color';\r\n \r\nimport DumbComponent from './DumbComponent' \r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select,  Container, Typography, ButtonGroup, IconButton\r\n} from '@material-ui/core'\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n  \r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false)\r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({  \r\n        btnDrawerStyle : {\r\n            backgroundColor: theme.palette.error.dark, \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\", \r\n            maxWidth: '50%'\r\n        }, \r\n        inputGroup: {\r\n            border: \"1px solid #f5f5f5\", \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 20, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        }\r\n    })\r\n    )\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n     \r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n\r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        toggleDrawer()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid() \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        setChildren(newChildren) \r\n\r\n        toggleDrawer()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n        toggleDrawer()\r\n    } \r\n    \r\n    const reSaveChildren = async (id, data) => {   \r\n        let slicedChild = children.slice()\r\n        slicedChild.forEach((item) => {\r\n            if(item.id === id) {\r\n                for( let key in item) { \r\n                    item[key] = data[key]\r\n                } \r\n            }\r\n        })  \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, slicedChild)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => {\r\n        let conf = window.confirm(\"Delete ?\");\r\n \r\n        if(conf) { \r\n            let filtered = children.filter((item) => (item.id !== id))  \r\n            setChildren(filtered) \r\n  \r\n            // save in firestore \r\n            props.reSaveContainer(props.data.id, filtered)  \r\n        }\r\n    }\r\n\r\n    const removeContainer = () => { \r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const swapContainer = (direction, id) => { \r\n        props.swapContainer(direction, id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Container \r\n            maxWidth={propsSettings.maxWidth} \r\n            fixed={propsSettings.fixed} \r\n            disableGutters={true}\r\n            className={classes.containerWrapper} \r\n        >    \r\n            <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip> \r\n\r\n            <Box style={{position: 'relative'}} > \r\n                {/*  DrawerContainer */}\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    \r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"secondary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\"\r\n                    > \r\n                        <Tooltip title='Container Settings' placement='right'>\r\n                            <Button  \r\n                                onClick={toggleDrawer} \r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >   \r\n                                <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title='Get Up' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('up', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >  \r\n                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                            </Button>\r\n                        </Tooltip> \r\n                        <Tooltip title='Get Down' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('down', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >     \r\n                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip> \r\n \r\n                    </ButtonGroup>\r\n                </Box>\r\n                     \r\n                    <Drawer anchor={'left'} open={open} onClose={toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                                <FormGroup> \r\n                                    <Typography   variant={'h6'} gutterBottom  >\r\n                                        Container actions \r\n                                    </Typography>\r\n                                   <Box mb={2}>  \r\n                                        <Button\r\n                                            onClick={removeContainer}\r\n                                            variant='outlined'\r\n                                            color=\"secondary\"  \r\n                                        >\r\n                                            Remove Container\r\n                                        </Button> \r\n                                   </Box>\r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph');}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-paper-label\"\r\n                                            id=\"inner-paper-style\"\r\n                                            value={settingIsPaper}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography  component={'h6'} gutterBottom  >\r\n                                                Background  \r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setBackgroundColor(newColor.hex) \r\n                                                }}\r\n\r\n                                            /> \r\n                                        </Box> \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography component={'h6'} gutterBottom  >\r\n                                                Color text\r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setColor(newColor.hex) \r\n                                                }} \r\n                                            /> \r\n                                        </Box> \r\n                                      \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='color'\r\n                                                    label=\"Border Color\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderColor}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                            />\r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n                <DumbComponent\r\n                    reSaveChildren={reSaveChildren}\r\n                    removeItem={removeItem}\r\n                    data={props.data} \r\n                    classes={myClassName}\r\n                    settings={propsSettings}\r\n                />  \r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    }\r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev && \r\n                <StyledComponent   \r\n                    data={props.data} \r\n                    reSaveContainer={props.reSaveContainer}\r\n                    reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                    removeContainer={props.removeContainer}    \r\n                    swapContainer={props.swapContainer}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev &&  \r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles } from '@material-ui/core'\r\n\r\nimport '../../../assets/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    // const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        input: { \r\n            border: `2px solid ${theme.palette.primary.main}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            color: theme.palette.text.primary\r\n        },\r\n        button: {\r\n            border: `2px solid ${theme.palette.primary.main} !important`, \r\n            backgroundColor: theme.palette.primary.main, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n            '&:hover' : {\r\n                background: 'none',\r\n                color: theme.palette.primary.light\r\n            }\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n    return (\r\n        <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>\r\n                                <svg viewBox=\"0 0 511.987 511.987\" > \r\n                                    <g><path d=\"m207.993 123.993c-13.233 0-24-10.767-24-24s10.767-24 24-24 24 10.767 24 24-10.766 24-24 24z\"/><path d=\"m511.477 439.169-39-259.997c-3.4-22.702-22.532-39.18-45.493-39.18h-148.555c13.072-24.73 12.843-53.822-.828-78.611-13.822-25.065-38.887-40.523-67.054-41.352-1.686-.049-3.418-.049-5.115 0-28.161.828-53.226 16.287-67.048 41.352-13.665 24.779-13.899 53.858-.826 78.611h-52.555c-22.961 0-42.093 16.478-45.493 39.176l-39 260.001c-1.987 13.256 1.89 26.684 10.637 36.84 8.748 10.157 21.452 15.982 34.856 15.982h419.98c13.404 0 26.108-5.825 34.856-15.982 8.748-10.154 12.625-23.582 10.638-36.84zm-345.07-362.334c8.423-15.273 22.99-24.319 39.962-24.818.536-.016 1.08-.023 1.625-.023s1.089.008 1.619.023c16.978.499 31.545 9.545 39.968 24.818 8.798 15.954 8.554 34.79-.651 50.392l-40.936 68.92-40.924-68.9c-9.217-15.606-9.465-34.452-.663-50.412zm310.186 378.294c-1.564 1.816-5.023 4.864-10.609 4.864h-289.876c.747-7.5 4.218-18.771 17.343-25.973 7.747-4.251 10.581-13.977 6.33-21.724s-13.979-10.581-21.725-6.33c-16.945 9.298-28.116 23.897-32.305 42.216-.979 4.279-1.452 8.29-1.643 11.811h-98.105c-5.586 0-9.045-3.048-10.609-4.864-1.564-1.817-4.065-5.689-3.237-11.212l39-260.003c1.035-6.907 6.858-11.92 13.847-11.92h71.425l31.046 52.271c4.348 7.343 12.018 11.727 20.519 11.727s16.171-4.384 20.506-11.707l31.059-52.291h167.426c6.988 0 12.812 5.013 13.847 11.923l39 259.999c.826 5.523-1.674 9.396-3.239 11.213z\"/><path d=\"m277.053 220.814c-8.385-2.797-17.444 1.737-20.238 10.119-2.795 8.383 1.736 17.444 10.119 20.238.164.055 16.56 5.917 21.881 21.881 2.234 6.705 8.478 10.945 15.177 10.945 1.677 0 3.384-.266 5.062-.826 8.383-2.794 12.914-11.855 10.119-20.238-10.411-31.23-40.83-41.689-42.12-42.119z\"/><path d=\"m290.621 321.587c-8.334-2.941-17.473 1.43-20.413 9.763-9.03 25.585-39.982 36.575-40.632 36.801-8.349 2.815-12.854 11.855-10.064 20.22 2.234 6.705 8.478 10.945 15.177 10.945 1.677 0 3.384-.266 5.062-.826 1.883-.627 46.287-15.841 60.634-56.49 2.94-8.333-1.431-17.472-9.764-20.413z\"/></g>\r\n                                </svg> \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form onSubmit={(e) => { e.preventDefault() }}>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n    return (\r\n        <div>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper\r\n        },\r\n        breadcrumbLink: {\r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, CircularProgress, Tooltip , Container,  Modal, DialogContent  } from \"@material-ui/core\"; \r\n \r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext'\r\n\r\nfunction SinglePage(props) {\r\n\r\n    const location = useLocation()\r\n    const theme = useTheme(); \r\n\r\n    const pageSlug = props.slugForUpdate\r\n\r\n    const { modeDev } = React.useContext(ModeContext)\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const ContainerLayout = layouts.container \r\n    const MainBannerLayout = layouts.mainBanner \r\n  \r\n    const [data, setData] = React.useState({})\r\n    const [items, setItems] = React.useState([]) \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n   \r\n    const handleOpen = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n      \r\n      btnSetting: {\r\n          // opacity: isHideSettings ? '0.15' : '1',\r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 45,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      } ,\r\n       \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      menu: {    \r\n        position: \"absolute\", \r\n        left: \"calc(50% - 200px)\",\r\n        top: 50, \r\n        backgroundColor: theme.palette.background.paper, \r\n        padding: 10 , \r\n        paddingBottom: 0, \r\n        maxWidth: 400,  \r\n        width: 400,\r\n        maxHeight: 'calc(100vh - 100px)', \r\n        minHeight: 500,\r\n        overflowY: 'scroll',  \r\n    },\r\n    menuTitle: {\r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between', \r\n        fontSize: 14, \r\n        borderBottom: '1px solid #eaeaea',\r\n        paddingBottom: 6,\r\n        marginBottom: 10, \r\n        cursor: 'move'\r\n    },\r\n  \r\n  }))\r\n  \r\n  const classes = useStyles();\r\n    React.useEffect( () => { \r\n      setIsLoading(true)\r\n      fetchData()\r\n      document.title = props.metaTitle\r\n    }, [location])\r\n  \r\n    const fetchData = async () => {  \r\n       \r\n      const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n      const doc = await pageRef.get();\r\n      \r\n      if (!doc.exists) {\r\n        console.log('No such page!'); \r\n\r\n        // задать шаблон страницы\r\n        let newPage = Object.assign({}, pageLayout) \r\n        newPage.id = uuid()\r\n        newPage.slug = pageSlug\r\n        newPage.items = []\r\n\r\n        await pageRef.set(newPage)\r\n\r\n        setData(newPage)  \r\n        setItems(newPage.items || [])  \r\n        setIsLoading(false)\r\n\r\n      } else { \r\n        setData(doc.data())  \r\n        setItems(doc.data().items)  \r\n         \r\n        setIsLoading(false)\r\n      }\r\n   \r\n    }  \r\n    \r\n    const reSaveContainer = async (id, childrenContainer) => {  \r\n   \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem].children = childrenContainer \r\n        }\r\n        return 0 \r\n      })\r\n   \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      }).then( () => {\r\n          if(childrenContainer.length === 0) {\r\n            removeContainer(id)\r\n          }\r\n      })\r\n    } \r\n    const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n      let newData = Object.assign({}, data)\r\n        \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n          newData.items[elem].classes = classes \r\n          newData.items[elem].disableGutters = settings.disableGutters \r\n          newData.items[elem].fixed = settings.fixed \r\n          newData.items[elem].maxWidth = settings.maxWidth \r\n          newData.items[elem].innerContainer = settings.innerContainer \r\n          newData.items[elem].isPaper = settings.isPaper \r\n        }\r\n        return 0 \r\n      }) \r\n  \r\n      setData(newData)\r\n      setItems(newData.items)  \r\n      setIsLoading(true)\r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items\r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      }) \r\n    } \r\n   \r\n    const addContainer = async (type) => {   \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n  \r\n      let newCont\r\n      if(type === 'container') newCont = Object.assign({}, ContainerLayout) \r\n      if(type === 'mainBanner') newCont = Object.assign({}, MainBannerLayout) \r\n\r\n      newCont.id = uuid()\r\n   \r\n      newItems.push(newCont) \r\n   \r\n      newData.items = newItems\r\n          \r\n      setData(newData)\r\n      setItems(newItems) \r\n      setIsLoading(true)\r\n      handleClose()\r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      });  \r\n    }\r\n  \r\n    const removeContainer = async (id) => {  \r\n      let newData = Object.assign({}, data)\r\n      const filtered = items.filter((item) => (item.id !== id))  \r\n  \r\n      newData.items = filtered\r\n          \r\n      setData(newData)\r\n      setItems(filtered)  \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: filtered\r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      }); \r\n    }\r\n  \r\n    const swapContainer = async (direction, id) => { \r\n      let newData = Object.assign({}, data)\r\n      let newItems = items.slice()\r\n      let activeIndex   \r\n   \r\n      newItems.map( (item) => { \r\n        if(item.id === id) {\r\n          activeIndex = newItems.indexOf(item) \r\n        }\r\n        return 0 \r\n      }) \r\n   \r\n      if(direction === 'up' && activeIndex === 0) return  \r\n      if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n      \r\n      if(direction === 'up') { \r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex - 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex - 1 ] = movedItem  \r\n      }\r\n      if(direction === 'down') {\r\n        const movedItem = newItems[activeIndex]\r\n        const placeItem = newItems[activeIndex + 1]\r\n  \r\n        newItems[activeIndex] = placeItem\r\n        newItems[activeIndex + 1 ] = movedItem  \r\n      }\r\n  \r\n      newData.items = newItems\r\n         \r\n      setItems(newItems)\r\n      setData(newData) \r\n      setIsLoading(true)\r\n   \r\n  \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newItems\r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      }) \r\n    }\r\n  \r\n    function renderContainers () {   \r\n      if(items.length > 0) {\r\n        return Object.keys(items).map( (key) => {  \r\n          if(items[key].type === 'container') {\r\n            return ( \r\n                <ContainerElement \r\n                  key={items[key].id} \r\n                  data={items[key]} \r\n                  reSaveContainer={reSaveContainer}\r\n                  reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                  removeContainer={removeContainer}\r\n                  swapContainer={swapContainer}\r\n                /> \r\n            ) \r\n          }\r\n          if(items[key].type === 'mainBanner') { \r\n            return(\r\n                <MainBannerElement\r\n                  key={items[key].id} \r\n                  data={items[key]} \r\n                />\r\n            )\r\n          }\r\n          \r\n       })\r\n      }\r\n      else {\r\n        return ( \r\n          <SkeletonPage/> \r\n        ) \r\n      }\r\n      \r\n    } \r\n\r\n    return (\r\n        <React.Fragment> \r\n\r\n          <Breadcrumbs \r\n            breadcrumbs={props.breadcrumbs}\r\n            history={props.history}\r\n          />\r\n\r\n          { \r\n            modeDev &&  \r\n            <Box className={classes.btnContainer}  >\r\n               \r\n              <Tooltip title='Page Settings' placement='bottom'>\r\n                  <Button  \r\n                      onClick={handleOpen} \r\n                      size='medium'\r\n                      variant='contained'\r\n                      color={'primary'}\r\n                      className={classes.btnSetting}\r\n                  >   \r\n                      <span>Page</span>\r\n                      <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                  </Button>\r\n              </Tooltip>  \r\n              <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n              > \r\n                  <DialogContent> \r\n                      <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                          <div className={classes.menu}>\r\n                            <Typography \r\n                                  component='p' \r\n                                  className={classes.menuTitle}\r\n                                  id=\"draggable-dialog-title\"\r\n                              >\r\n                                  Действия для страницы  <OpenWithIcon/>\r\n                              </Typography> \r\n                              <Box m={1}>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                    Add new container\r\n                                </Button> \r\n                              </Box>\r\n                              <Box m={1}>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                    Add Main Banner\r\n                                </Button> \r\n                              </Box>\r\n                              <Box m={1}>\r\n                                <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                    More settings\r\n                                </Button> \r\n                              </Box> \r\n                          </div>\r\n                      </Draggable>\r\n                  </DialogContent> \r\n              </Modal>  \r\n            </Box>\r\n          }\r\n   \r\n          { \r\n            renderContainers()  \r\n          } \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/ScrollToTop'\r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n\r\n// import Home from '../components/Home'\r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n  \r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            {\r\n                isLoading && \r\n                <LoadingProgress/>\r\n            }\r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                    <Switch>\r\n                        { \r\n                            categories.map( category => {\r\n                                const breadcrumbs = [\r\n                                    {\r\n                                        title: category.title,\r\n                                        slug: category.slug\r\n                                    } \r\n                                ]\r\n                                return (\r\n                                    <Route \r\n                                        key={category.id}\r\n                                        exact\r\n                                        path={`/${category.slug}`}\r\n                                        render={\r\n                                            (props) => {\r\n                                                if(category.slug === '/') { \r\n                                                    return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                }\r\n                                                //if === concacts => return contacts .... \r\n                                                return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        }\r\n                                    />  \r\n                                ) \r\n                            })\r\n                        }\r\n                        { \r\n                            categories.map( category => (\r\n                                category.pages.length > 0 &&\r\n                                category.pages.map( page => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        }, \r\n                                        {\r\n                                            title: page.title,\r\n                                            slug: `${category.slug}/${page.slug}`\r\n                                        }\r\n                                    ]\r\n                                    return(\r\n                                        <Route \r\n                                            key={page.id}\r\n                                            exact\r\n                                            path={`/${category.slug}/${page.slug}`}\r\n                                            render = {\r\n                                                (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        />\r\n                                        )\r\n                                })\r\n                            ))\r\n                        }\r\n         \r\n                        <Route path='/login' render={ () => <Login/> } />\r\n\r\n                        <Route path='*' render={ () => <Error/> } />\r\n                         \r\n                    </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n// import theme from './theme/theme.js'\nimport './assets/style.scss'\n\n\n\n\n\n  \nconst App = () => {   \n\n  return (\n      <ImageProvider> \n\n        <CategoryProvider>\n          <LibraryProvider>\n              <ModeProvider> \n                  <LoadingProvider>\n                      <div className=\"App\">  \n                        <ThemeComponent/> \n                      </div>\n                  </LoadingProvider> \n              </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n      </ImageProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}