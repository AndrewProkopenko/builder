{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/ScrollToTop.js","styles/changers.js","components/placeholders/LoadingProgress.js","components/header/headerHelpers/CategoriesChanger.js","components/library/colorPicker/ColorPicker.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/headerHelpers/RequestsChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/Login.js","components/Error.js","styles/inputs.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","imageList","name","url","quantity","nameList","fetchListFromStorage","fetchListFromFirestore","listRef","ref","imagesArray","listAll","res","items","forEach","itemRef","push","fullPath","imageData","storageRef","put","on","snapshot","message","getDownloadURL","answerUrl","child","removeImage","SendFormContext","SendFormProvider","requests","modalSettings","isShowAlert","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","setTimeout","req","newList","slice","newReq","Object","assign","time","getCurrentDate","closeAlertFromTimeout","updateRequests","updateModalSettings","sendRequests","closeAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","StylesChangers","theme","menu","position","backgroundColor","palette","background","paper","padding","paddingBottom","width","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","fontSize","borderBottom","divider","marginBottom","cursor","btnSetting","deepOrange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","btnSave","zIndex","bottom","left","right","height","paddingTop","opacity","paddingLeft","paddingRight","btnDrawerStyle","easeIn","btnDrawerItem","secondary","containerWrapper","outline","outlineColor","main","LoadingProgress","classes","makeStyles","root","lineStyle","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","commonClasses","classesRef","maxWidth","listPages","marginTop","listStyle","titlePages","fontWeight","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","indexOf","length","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","dumbWrapper","Tooltip","title","placement","Button","onClick","size","variant","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","spacing","xs","onSubmit","e","preventDefault","newCategory","uuid","FormGroup","Box","mb","TextField","required","label","onChange","IconButton","fullWidth","index","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","ColorPicker","memo","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","save","contrastColor","getContrastText","primary","boxColor","flexGrow","marginRight","border","borderRadius","shape","shortest","boxShadow","shadows","boxPicker","prevOpen","onChangeComplete","newColor","hex","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","colorSelect","setColorSelect","colorCustom","setColorCustom","uploadHandler","htmlFor","event","files","src","alt","Divider","margin","FormControlLabel","control","Switch","checked","FormControl","InputLabel","Select","labelId","MenuItem","newLogo","newModal","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","row","Number","newSettings","ThemeChanger","default","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","colorPreview","colorItem","flexWrap","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","buttonModal","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","innerIndex","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","my","content","indexPage","borderTop","px","edge","DumbComponent","modalBtnColor1","modalBtnColor2","widthMobile","headerHeight","setHeaderHeight","backgroundHeader","modalBtnColor","darken","header","fixedPadding","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","setResponsiveness","headHeight","document","querySelector","clientHeight","setMobileView","removeEventListener","addEventListener","mobileView","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","RequestsChanger","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","amber","cardRoot","checkbox","marginLeft","handleOnceCheck","isCheck","handleRemove","Checkbox","request","Card","CardContent","keys","String","CardActions","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","ml","newData","AdminHeader","buttonSettings","settingsContainer","wrapper","providerData","ModalChanger","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ElementCreator","Header","Footer","fill","footer","footerHeading","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","Avatar","loginWithEmail","err","autoComplete","autoFocus","Alert","severity","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","setPadding","setMargin","setDisplay","setFlexDirection","setBackgroundColor","shadow","setShadow","borderColor","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","setChildren","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","toggleDrawer","addHeading","a","newChildren","newItem","reSaveContainer","pt","pb","mr","aria-haspopup","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","resposiveFontSize","sm","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","renderText","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","focus","sentData","reSaveChildren","prop","removeItem","imageStyle","multiline","rowsMax","imageClassName","mobileClass","imageUrl","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageAccordion","imagePreview","imageLabel","handleImageMargin","classForResp","confirm","isFirst","swapContainer","isLast","removeContainer","newArr","colorFocusInput","formPhone","setFormPhone","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","input","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","md","xlinkHref","phone","place","placeholder","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","handleImageUpload","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","setItems","handleUpdateItem","newItems","swapItem","splice","colorMapOnload","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","fontFamily","link","boxForFlex","heightRegular","linksContainer","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","cols","rows","setLocation","setPhone","setInputComment","setMapFrame","isButton","textButton","targetButton","setIsButton","setTextButton","setTargetButton","colorTheme","headingSize","colorMain","fade","containerColored","containerFlexed","setHeadingSize","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","setData","btnContainer","fetchData","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","history","m","key","orderFirst","orderLast","RouterComponent","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","closeBtn","targetContainer","targetLabel","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8f30f136.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 959) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n      \r\n    } \r\n\r\n    async updateCategories(data) {\r\n        console.log('firebase update')\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {   \r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    state = { \r\n        imageList: [ \r\n            {\r\n                name: 'name' , \r\n                url: 'url', \r\n                quantity: 2, \r\n\r\n            }\r\n        ],\r\n        nameList: []\r\n    } \r\n\r\n    async componentDidMount() { \r\n          this.fetchListFromStorage()\r\n          this.fetchListFromFirestore()\r\n    }\r\n\r\n    async fetchListFromStorage() {\r\n        const listRef = firebase.storage.ref(); \r\n        \r\n        let imagesArray = []\r\n\r\n        await listRef.listAll().then(function(res) {\r\n            res.items.forEach(function(itemRef) { \r\n                imagesArray.push(itemRef.fullPath) \r\n            });\r\n          }).catch(function(error) {\r\n              console.log(error) \r\n          });\r\n          this.setState({\r\n            imageList: imagesArray\r\n          }) \r\n    }\r\n\r\n    async fetchListFromFirestore() {\r\n        const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n        const doc = await listRef.get();\r\n      \r\n        if (!doc.exists) {\r\n            console.log('No such page!');  \r\n\r\n        } else { \r\n            this.setState({\r\n                nameList: doc.data().list\r\n            }) \r\n        }\r\n    }\r\n    async uploadImage(imageData) {\r\n        let answerUrl\r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log(\"image uploaded\")\r\n            // console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => { \r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                answerUrl = url \r\n              })\r\n          }\r\n        )\r\n        return answerUrl\r\n    }\r\n\r\n    removeImage(name) { \r\n        const storageRef = firebase.storage.ref();\r\n \r\n        const imageRef = storageRef.child(name)\r\n     \r\n        imageRef.delete().then(function() {\r\n            console.log('File deleted successfully')\r\n        }).catch(function(error) {\r\n            console.log(error) \r\n        }); \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    imageList: this.state.imageList, \r\n                    nameList: this.state.nameList ,\r\n                    // updateImageNameList: (name) => {\r\n                    //     let newList = this.state.nameList.slice()\r\n                    //     let isUnic = true\r\n                    //     newList.map((item) => {\r\n                    //         if( item === name ) isUnic = false\r\n                    //     })\r\n                    //     if(isUnic) newList.push(name)\r\n\r\n                    //     this.setState({\r\n                    //         nameList: newList\r\n                    //     }) \r\n                    //     firebase.db.collection(\"site1category\").doc('imageList').update({\r\n                    //         list: newList\r\n                    //     })\r\n                    // },\r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isShowAlert: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            }) \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout() {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isShowAlert: null\r\n            })\r\n        }, 7000);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isShowAlert: 'info'\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isShowAlert: 'success'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isShowAlert: 'error'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isShowAlert, \r\n                    modalSettings: this.state.modalSettings, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isShowAlert: null\r\n                        })\r\n\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0,  \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                 \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            }\r\n        },\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n    \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n       \r\n        return( { \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 350px)\",\r\n                maxWidth: 700,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,\r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid #eee`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) { \r\n                console.log(newPage)\r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => { \r\n        console.log('update')\r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n         \r\n        console.log(activeIndex)\r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        }) \r\n        console.log(newCategories)\r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    <Tooltip title='Delete Category' placement='top'>\r\n                                                        <Button\r\n                                                            variant='contained'\r\n                                                            color=\"default\"\r\n                                                            disableElevation={true}\r\n                                                            className={classes.deleteBtn}\r\n                                                            onClick={() => { deleteCategory(item.id) }}\r\n                                                        > \r\n                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n\r\n    const togglePicker = () => setIsOpen(prevOpen => !prevOpen);\r\n    const handleChange = (newColor) => setColor(newColor.hex);\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit')\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles( theme => {\r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.shortest} ${theme.transitions.easing.easeInOut}ms`, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[4]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    initialColor === color ? \r\n                    <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save} disabled={initialColor === color} color={'primary'} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch,\r\n    FormControl,\r\n    InputLabel, \r\n    Select, \r\n    MenuItem\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n\r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    React.useEffect(() => {\r\n        if(modal.color !== 'primary' && modal.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [modal])\r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Logo/Modal  changer  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Text for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalText}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalText(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={colorSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    colorSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {colorCustom}\r\n                                                        changeColor = {setColorCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'right'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n \r\n    React.useEffect(() => {\r\n        if( settings.classes.backgroundColor !== 'default' && \r\n            settings.classes.backgroundColor !== 'paper' && \r\n            settings.classes.backgroundColor !== 'primary' &&  \r\n            settings.classes.backgroundColor !== 'secondary' ) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n    }, [settings])\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                maxWidth: 400,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Style changer <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl    variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Background Color for Header</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={settingBackgroundSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setSettingBackgroundSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Theme Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Theme Secondary</MenuItem>\r\n                                                    <MenuItem value={'default'}>Theme BG default</MenuItem>\r\n                                                    <MenuItem value={'paper'}>Theme BG paper</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    settingBackgroundSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {settingBackgroundCustom}\r\n                                                        changeColor = {setSettingBackgroundCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'left'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle, buttonModal  } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box  my={4} width={'100%'} clone={true}>\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                // color: \"textPrimary\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button\r\n} from \"@material-ui/core\"; \r\nimport { darken } from '@material-ui/core/styles';\r\n\r\nfunction DumbComponent() {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings} = React.useContext(CategoryContext)    \r\n  \r\n    const [headerHeight, setHeaderHeight] = useState(0)\r\n   \r\n    let backgroundHeader = settings.classes.backgroundColor\r\n    let colorHeader \r\n    let hoverActiveLinkColor\r\n\r\n\r\n    let modalBtnColor = modal.color\r\n    let modalBtnColor1 \r\n    let modalBtnColor2 \r\n\r\n    let widthMobile \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`]\r\n        if(modalBtnColor === 'primary') {\r\n            modalBtnColor1 = theme.palette.primary.main\r\n            modalBtnColor2 = theme.palette.primary.dark\r\n        }\r\n        if(modalBtnColor === 'secondary') {\r\n            modalBtnColor1 = theme.palette.secondary.main\r\n            modalBtnColor2 = theme.palette.secondary.dark\r\n        }\r\n        if(modalBtnColor !== 'primary' && modalBtnColor !== 'secondary' ) {\r\n            modalBtnColor1 = modal.color\r\n            modalBtnColor2 = darken(modal.color, 0.4) \r\n        } \r\n        if(backgroundHeader === 'primary') {\r\n            backgroundHeader = theme.palette.primary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.primary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.primary.main, 0.3)\r\n        }\r\n        if(backgroundHeader === 'secondary') {\r\n            backgroundHeader = theme.palette.secondary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.secondary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.secondary.main, 0.3)\r\n        }\r\n        \r\n        if( backgroundHeader !== 'default' && \r\n            backgroundHeader !== 'paper' && \r\n            backgroundHeader !== 'primary' && \r\n            backgroundHeader !== 'secondary' ) {  \r\n                colorHeader = theme.palette.getContrastText(backgroundHeader)\r\n                hoverActiveLinkColor = darken(backgroundHeader, 0.3) \r\n        }   \r\n        if(backgroundHeader === 'paper') { \r\n            backgroundHeader = theme.palette.background.paper\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.paper)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n        if(backgroundHeader === 'default') { \r\n            backgroundHeader = theme.palette.background.default\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.default)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n\r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                top: 0, \r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: colorHeader ,\r\n                // color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundImage: `linear-gradient(180deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`,  \r\n                color: theme.palette.getContrastText(modalBtnColor2), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': { \r\n                    color: theme.palette.getContrastText(modalBtnColor2) ,\r\n                    backgroundImage: `linear-gradient(200deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`, \r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal } = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  document.querySelector('#header').clientHeight\r\n            \r\n            // console.log(headHeight)\r\n            setHeaderHeight(headHeight + 5)\r\n            \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n        // eslint-disable-next-line\r\n    }, []);\r\n     \r\n    const [mobileView, setMobileView] = useState(false); \r\n\r\n    const openModal = () => {\r\n        handleOpen('')\r\n    }\r\n\r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button\r\n            onClick={openModal}\r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            }\r\n            <AppBar className={header}  id='header'>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({ \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {  \r\n\r\n        const newReq = localRequests.slice()\r\n        const filtered = newReq.filter(item => ( item.time !== id ))\r\n\r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false)\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        <Card key={index} className={classes.cardRoot} >\r\n                            <CardContent>\r\n                                {\r\n                                    Object.keys(request).map((item, innerIndex) => { \r\n    \r\n                                        return(\r\n                                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                                {item} &nbsp;  -  &nbsp;\r\n                                                <Typography component='span' color=\"textSecondary\">\r\n                                                     { String(request[item]) }\r\n                                                </Typography> \r\n                                            </Typography>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button variant='outlined' size=\"small\" onClick={() => {handleOnceCheck(request.time)}}>\r\n                                    { \r\n                                        request.isCheck &&\r\n                                        <span>Uncheck</span>\r\n                                    }\r\n                                    { \r\n                                        !request.isCheck &&\r\n                                        <span>Check</span>\r\n                                    }\r\n                                </Button>\r\n                                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => {handleRemove(request.time)}}>\r\n                                    Remove\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        <Card key={index} className={classes.cardRoot} >\r\n                            <CardContent>\r\n                                {\r\n                                    Object.keys(request).map((item, innerIndex) => { \r\n    \r\n                                        return(\r\n                                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                                {item} &nbsp;  -  &nbsp;\r\n                                                <Typography component='span' color=\"textSecondary\">\r\n                                                     { String(request[item]) }\r\n                                                </Typography> \r\n                                            </Typography>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button variant='outlined' size=\"small\" onClick={() => {handleOnceCheck(request.time)}}>\r\n                                    { \r\n                                        request.isCheck &&\r\n                                        <span>Uncheck</span>\r\n                                    }\r\n                                    { \r\n                                        !request.isCheck &&\r\n                                        <span>Check</span>\r\n                                    }\r\n                                </Button>\r\n                                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => {handleRemove(request.time)}}>\r\n                                    Remove\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,  \r\n    FormControl, \r\n    Select,\r\n    MenuItem, \r\n    InputLabel\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n     \r\n   \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                    <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"color-select-label\"\r\n                                        id=\"color-select\"\r\n                                        value={colorSelect}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                    >\r\n                                        <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                        <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                        <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Box ml={1} >\r\n                                    {\r\n                                        colorSelect === 'custom' &&\r\n                                        <ColorPicker\r\n                                            initialColor = {colorCustom}\r\n                                            changeColor = {setColorCustom}\r\n                                            setIsDisableBtn = {setIsDisableBtn}\r\n                                            position = {'right'}\r\n                                        /> \r\n                                    }\r\n                                    \r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                             \r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, makeStyles, Tooltip} from '@material-ui/core'\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)  \r\n \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { \r\n                    isOpen && \r\n                    <Box className={classes.settingsContainer} >\r\n                        <Typography component='span' >\r\n                            hello, { user.providerData[0].email } \r\n                        </Typography>\r\n\r\n                        <Box display='flex'>\r\n                            <RequestsChanger/>  &nbsp;\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    \r\n                        <Box> \r\n                            <Button \r\n                                size='small'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={handleSignOut}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container, Switch , FormControlLabel } from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nfunction Footer() {\r\n\r\n    const { setThemeMode, themeMode } = React.useContext(CategoryContext)\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: theme.palette.primary.dark, \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    const checked = themeMode === 'dark' ? true : false\r\n\r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                <Typography \r\n                    variant='h6'\r\n                    className={classes.footerHeading} \r\n                > \r\n                    Footer\r\n                </Typography>\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n\r\n                <Box>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Dark Theme\"\r\n                    />\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n \r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const hendlerSubmit = (e) => {\r\n        e.preventDefault() \r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment> \r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Вход\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={hendlerSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"text\"\r\n                            label=\"User\"\r\n                            name=\"user\"\r\n                            autoComplete='true'\r\n                            autoFocus\r\n                            value={name}\r\n                            onChange={ (e)=>{setName(e.target.value)} }\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\" \r\n                            value={password}\r\n                            onChange={(e)=>{setPassword(e.target.value)}}\r\n                        />\r\n                        {\r\n                            error && \r\n                            <Alert severity=\"error\">{error.message}</Alert>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport uuid from 'react-uuid' \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select, Typography, IconButton\r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem } = commonStyle \r\n\r\n        return ({   \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.toggleDrawer()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid() \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        setChildren(newChildren) \r\n\r\n        props.toggleDrawer()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n        props.toggleDrawer()\r\n    } \r\n     \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} > \r\n                 \r\n                {/*  DrawerContainer */}\r\n                    <Drawer anchor={'left'} open={props.open} onClose={props.toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                               \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph');}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-paper-label\"\r\n                                            id=\"inner-paper-style\"\r\n                                            value={settingIsPaper}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                            \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Background  -  { backgroundColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={backgroundColor} \r\n                                                changeColor={setBackgroundColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Color  -  { color }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={color} \r\n                                                changeColor={setColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'right'}\r\n                                            /> \r\n                                        </Box>\r\n                                          \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <Box className={classes.inputNumber} >\r\n                                                <Typography  component={'p'} gutterBottom  >\r\n                                                    Border Color  -  { borderColor }\r\n                                                </Typography> \r\n                                                <ColorPicker \r\n                                                    initialColor={borderColor} \r\n                                                    changeColor={setBorderColor} \r\n                                                    setIsDisableBtn={setIsDisableBtn}\r\n                                                    position={'right'}\r\n                                                /> \r\n                                            </Box> \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n                marginTop: props.className.marginTop*0.8,\r\n                marginBottom: props.className.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                fontSize: props.className.fontSize*0.6,\r\n                lineHeight : 1.2, \r\n                marginTop: props.className.marginTop*0.5, \r\n                marginBottom: props.className.marginBottom*0.5, \r\n                textAlign: 'center'\r\n            },\r\n        }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, то на мобильных устройствах шрифт будет меньше и выравнивание будет по центру  \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography>\r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n     \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName\r\n    // }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Background   -  { backgroundColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={backgroundColor} \r\n                                            changeColor={setBackgroundColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Color  -  { color }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={color} \r\n                                            changeColor={setColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box> \r\n                                      \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border Color  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'left'}\r\n                                        /> \r\n                                    </Box> \r\n                                     \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {},\r\n        mobileClass: {\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                display: \"flex !important\",\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }, \r\n        }\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={classes.imageStyle} alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n\r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '&>button' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                width: 400, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    // const dataNew = {...props.data, ...{\r\n    //     classes: myClassName,\r\n    // }} \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImageUrl(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageSetting} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} >\r\n                                            <Typography  component={'p'} gutterBottom  >\r\n                                                Border  -  { imageBorderColor }\r\n                                            </Typography> \r\n                                            <ColorPicker \r\n                                                initialColor={imageBorderColor} \r\n                                                changeColor={setImageBorderColor} \r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                position={'left'}\r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Background  -  { backgroundColor }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={backgroundColor} \r\n                                        changeColor={setBackgroundColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'left'}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.inputNumber} >\r\n                                    <Typography  component={'p'} gutterBottom  >\r\n                                        Color  -  { color }\r\n                                    </Typography> \r\n                                    <ColorPicker \r\n                                        initialColor={color} \r\n                                        changeColor={setColor} \r\n                                        setIsDisableBtn={setIsDisableBtn}\r\n                                        position={'right'}\r\n                                    /> \r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >\r\n                                        <Typography  component={'p'} gutterBottom  >\r\n                                            Border  -  { borderColor }\r\n                                        </Typography> \r\n                                        <ColorPicker \r\n                                            initialColor={borderColor} \r\n                                            changeColor={setBorderColor} \r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            position={'right'}\r\n                                        /> \r\n                                    </Box>   \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n\r\n    console.log('dumb container work')\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: { \r\n                marginTop: props.classes.marginTop*0.8,\r\n                marginBottom: props.classes.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                marginTop: props.classes.marginTop*0.45,\r\n                marginBottom: props.classes.marginBottom*0.45\r\n            },\r\n        }\r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n    const classForResp = classes.resposiveFontSize \r\n \r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classForResp}`}\r\n                > \r\n                    <Paper style={{padding: '0 15px'}}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classForResp}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        // let slicedChild = props.data.children.slice()\r\n        // slicedChild.forEach((item) => {\r\n        //     if(item.id === id) {\r\n        //         for( let key in item) { \r\n        //             item[key] = data[key]\r\n        //         } \r\n        //     }\r\n        // })  \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => {\r\n        let conf = window.confirm(\"Delete ?\");\r\n \r\n        if(conf) { \r\n            let filtered = props.data.children.filter((item) => (item.id !== id))  \r\n            // setChildren(filtered) \r\n  \r\n            // save in firestore \r\n            props.reSaveContainer(props.data.id, filtered)  \r\n        }\r\n    }\r\n\r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={toggleDrawer} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        toggleDrawer={toggleDrawer}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        if(color === 'primary') { \r\n            color = theme.palette.primary.main\r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n        if(color === 'secondary') {\r\n            color = theme.palette.secondary.main \r\n            colorFocusInput = theme.palette.primary.main\r\n        }\r\n        if(color === 'custom') { \r\n            colorFocusInput = theme.palette.secondary.main\r\n        }\r\n \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput\r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                '&:hover' : {\r\n                    background: 'none', \r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } \r\n        } )\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                <svg style={{fill: '#fff'}}>       \r\n                                    <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                </svg>\r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';  \r\n\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 50,\r\n                maxWidth: '100% ',\r\n                width: 'calc( 100% - 100px )',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e, imageType) => { \r\n        const imageData = e.target.files[0]\r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => {  \r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                  if(imageType === 'icon') setIconUrl(url)\r\n\r\n                  if(imageType === 'mainImage') setImageUrl(url) \r\n              })\r\n          }\r\n        ) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки банера <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button> \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <img src={iconUrl} alt='icon' width={35} />\r\n                                            \r\n                                        </Box> \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Sub Heading\" \r\n                                            variant=\"outlined\" \r\n                                            size='small'  \r\n                                            value={subHeading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Форма\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Input Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={inputLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setInputLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Button Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={buttonLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setButtonLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                        <TextField   \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Form Policy\" \r\n                                            size='small'  \r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                /> \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'> \r\n                                            <Button color='primary' variant='contained'> \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            <img src={imageUrl} alt='main' width={'100%'} />\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/accordion.scss'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        if(color === 'primary')  color = theme.palette.primary.main\r\n        if(color === 'secondary') color = theme.palette.secondary.main \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className=\"mac-accordion heading\">\r\n            <Container maxWidth={'lg'} className={classes.disableMobileGutters}>\r\n\r\n                <h3> { heading } </h3> \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"mac-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"mac-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n \r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 50,\r\n                maxWidth: '100% ',\r\n                width: 'calc( 100% - 100px )',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        \r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItem = (index, value, place) => { \r\n        const newItems = items.slice()\r\n        newItems[index][place] = value\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = () => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: \"heading\",\r\n            body: \"body\"\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newItems = items.slice()\r\n        newItems.splice(index, 1) \r\n \r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки аккордиона  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={3}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n\r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Head\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.head}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'head') } }     \r\n                                                            /> \r\n                                                        </Box>\r\n                                                        \r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Body\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.body}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'body') } }     \r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <Box my={2}>\r\n                                            <Button \r\n                                                variant='contained' \r\n                                                color='primary'\r\n                                                onClick={addItem}\r\n                                            >\r\n                                                Add item\r\n                                            </Button>\r\n                                        </Box>\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'right'}\r\n                                                />   \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box } from '@material-ui/core'\r\n\r\nimport '../../../assets/contactMap.scss' \r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n        return ({\r\n            svg: {\r\n                fill: theme.palette.secondary.main\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${theme.palette.primary.main}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: theme.palette.secondary.light\r\n                }\r\n            },\r\n            button: {\r\n                backgroundColor: theme.palette.primary.main ,\r\n                border: `2px solid ${theme.palette.primary.main}`, \r\n                color: '#fff',\r\n                '&:hover' : {\r\n                    background: 'none',\r\n                    '&>span': { \r\n                        color: theme.palette.primary.main\r\n                    }\r\n                }\r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${theme.palette.primary.main} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth='lg'>\r\n                <div className=\"ln-contact\"> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`ln-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"ln-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 50,\r\n                maxWidth: '100% ',\r\n                width: 'calc( 100% - 100px )',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = mapFrame === '' ? null : mapFrame \r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки контактов  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Location\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={location}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setLocation(e.target.value) } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Phone\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={phone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } } \r\n                                              \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Name Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"      \r\n                                            value={inputName}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputName(e.target.value)  } }   \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Phone Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={inputPhone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Input Comment Placeholder\" \r\n                                            size='small'\r\n                                            variant=\"outlined\" \r\n                                            value={inputComment}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setInputComment(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Button Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={buttonText}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setButtonText(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Policy Text\" \r\n                                            size='small'\r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} mb={2}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Map Frame\" \r\n                                            variant=\"outlined\"  \r\n                                            value={mapFrame}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setMapFrame(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    { \r\n                                        !mapFrame && \r\n                                        <Typography color='secondary'>\r\n                                            If <b>Map Frame</b> is null layout have another view!\r\n                                        </Typography>\r\n                                    } \r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const imageUrl = props.data.image\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    let colorButton = props.data.colorButton || '#f00'\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorButton === 'primary')  colorButton = theme.palette.primary.main\r\n        if(colorButton === 'secondary') colorButton = theme.palette.secondary.main  \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                '&:hover' : { \r\n                    background: 'none',\r\n                    color: theme.palette.text.primary\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400\r\n                }, \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth=\"lg\" >\r\n                <div className=\"electro-about heading\">\r\n                    <Grid container> \r\n                        <Grid item md={6} >\r\n                            <div className=\"electro-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"electro-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(!isDisableBtn)\r\n    }\r\n    React.useEffect(() => {\r\n        if(props.data.colorButton !== 'primary' && props.data.colorButton !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 50,\r\n                maxWidth: '100% ',\r\n                width: 'calc( 100% - 100px )',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async(e) => {\r\n        const imageData = e.target.files[0]\r\n        const storageRef = firebase\r\n            .storage\r\n            .ref(`${imageData.name}`)\r\n            .put(imageData)\r\n        storageRef.on('state-changed', snapshot => {\r\n            console.log(snapshot)\r\n        }, error => {\r\n            console.log(error.message)\r\n        }, () => {\r\n            storageRef\r\n                .snapshot\r\n                .ref\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    setImageUrl(url)\r\n                })\r\n        })\r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\"\r\n                                            variant=\"outlined\"\r\n                                            value={paragraph}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setParagraph(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                                            <InputLabel id=\"color-select-label\">Color for Button</InputLabel>\r\n                                                            <Select\r\n                                                                labelId=\"color-select-label\"\r\n                                                                id=\"color-select\"\r\n                                                                value={colorSelect}\r\n                                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                                            >\r\n                                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        <Box ml={1} >\r\n                                                            {\r\n                                                                colorSelect === 'custom' &&\r\n                                                                <ColorPicker\r\n                                                                    initialColor = {colorCustom}\r\n                                                                    changeColor = {setColorCustom}\r\n                                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                                    position = {'right'}\r\n                                                                />  \r\n                                                            }\r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained'>\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            <img src={imageUrl} alt='main' width={'100%'}/>\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        if(colorMain === 'primary')  colorMain = theme.palette.primary.main\r\n        if(colorMain === 'secondary') colorMain = theme.palette.secondary.main  \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorMain,\r\n                border: `1px solid ${colorMain}`, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n                '&:hover' : { \r\n                    background: 'none',\r\n                    color: theme.palette.text.primary\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(3, 0), \r\n                margin: theme.spacing(6, 0), \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.containerColored}> \r\n            <Container maxWidth=\"lg\" > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport {ColorPicker} from '../colorPicker/ColorPicker'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(!isDisableBtn)\r\n    }\r\n    React.useEffect(() => {\r\n        if(props.data.colorMain !== 'primary' && props.data.colorMain !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnDrawerStyle, btnDrawerItem, containerWrapper } = commonClasses \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: containerWrapper,\r\n            menu: {...menu, ...{\r\n                left: 50,\r\n                maxWidth: '100% ',\r\n                width: 'calc( 100% - 100px )',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            btnSave: btnSave,\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = headingSize  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        Settings Action Line\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Heading\"\r\n                                            variant=\"outlined\"\r\n                                            value={heading}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeading(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            type='number'\r\n                                            label=\"Heading Size\"\r\n                                            variant=\"outlined\"\r\n                                            value={headingSize}\r\n                                            onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setHeadingSize(e.target.value)\r\n                                        }}/>\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Block</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <ColorPicker\r\n                                                    initialColor = {colorCustom}\r\n                                                    changeColor = {setColorCustom}\r\n                                                    setIsDisableBtn = {setIsDisableBtn}\r\n                                                    position = {'top'}\r\n                                                    noInherit={true}\r\n                                                />  \r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <TextField\r\n                                                                    type='text'\r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    value={textButton}\r\n                                                                    onChange={(e) => {\r\n                                                                    setIsDisableBtn(false);\r\n                                                                    setTextButton(e.target.value)\r\n                                                                }}/>\r\n                                                            </Box>\r\n                                                            <TextField\r\n                                                                type='text'\r\n                                                                label=\"Target for Button\"\r\n                                                                variant=\"outlined\"\r\n                                                                value={targetButton}\r\n                                                                onChange={(e) => { setIsDisableBtn(false); setTargetButton(e.target.value) }}\r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent  } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext'\r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => {\r\n    const classesRef = StylesChangers()\r\n  const commonClasses = classesRef(theme)\r\n\r\n  const { menu, menuTitle } = commonClasses \r\n    return ({ \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 80,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 400, \r\n        left: \"calc(50% - 200px)\",\r\n      }},     \r\n      menuTitle: menuTitle\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n  \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container') newCont = Object.assign({}, ContainerLayout) \r\n    if(type === 'mainBanner') newCont = Object.assign({}, MainBannerLayout) \r\n    if(type === 'accordion') newCont = Object.assign({}, AccordionLayout) \r\n    if(type === 'contactMap') newCont = Object.assign({}, СontactMapLayout) \r\n    if(type === 'about') newCont = Object.assign({}, AboutLayout) \r\n    if(type === 'actionLine') newCont = Object.assign({}, ActionLineLayout) \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n      \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <React.Fragment> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <Box className={classes.btnContainer}  >\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                          <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Действия для страницы  <OpenWithIcon/>\r\n                            </Typography> \r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                  Add new container\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                  Add Main Banner\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                  Add Accordion\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                  Add Contacts with Map\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                  Add About\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                  Add Colored Action Line \r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </Box>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react'\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/ScrollToTop'\r\n\r\nimport StylesChangers from '../styles/changers'\r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    // const theme = useTheme();\r\n\r\n    // const cls = StylesChangers(theme)\r\n\r\n    // console.log(cls(theme))\r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton\r\n} from '@material-ui/core'; \r\nimport { darken } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, \r\n    // handleOpen, \r\n    handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2  \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n\r\n    if(colorButton === 'primary') {\r\n        colorGradient1 = theme.palette.primary.main\r\n        colorGradient2 = theme.palette.primary.dark\r\n    }\r\n    if(colorButton === 'secondary') {\r\n        colorGradient1 = theme.palette.secondary.main\r\n        colorGradient2 = theme.palette.secondary.dark\r\n    }\r\n    if(colorButton !== 'primary' && colorButton !== 'secondary' ) {\r\n      if(modalSettings.colorButton) {\r\n        colorGradient1 = modalSettings.colorButton\r\n        colorGradient2 = darken(modalSettings.colorButton, 0.4)\r\n      } \r\n    } \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        }\r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n\r\n  // const openModal = () => {\r\n  //   handleOpen('')\r\n  // }\r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <button type=\"button\" onClick={ openModal }>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nfunction AlertComponent(props) {\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        props.closeAlert()\r\n    }\r\n\r\n    const alertText = () => {\r\n        if(props.severity === 'success') return \"Your request was accepted successfully\"\r\n        if(props.severity === 'info') return \"Your request is being processed\"\r\n        if(props.severity === 'error') return \"An error has occurred :(\"\r\n    }\r\n    const severityText = () => { \r\n        return props.severity\r\n    }\r\n\r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={props.severity} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText() }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert, closeAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert severity={isShowAlert} closeAlert={closeAlert} /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}