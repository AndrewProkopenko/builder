{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","components/ScrollToTop.js","components/placeholders/LoadingProgress.js","components/header/headerHelpers/CategoriesChanger.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/header/dumb/DumbComponent.js","components/header/headerHelpers/RequestsChanger.js","components/header/AdminHeader.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/library/about/DumbComponent.js","components/library/contactMap/DumbComponent.js","components/Login.js","components/Error.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/StyledComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","categories","logo","image","mainText","subText","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","dark","light","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","imageList","nameList","fetchListFromStorage","fetchListFromFirestore","listRef","ref","imagesArray","listAll","res","items","forEach","itemRef","push","fullPath","name","child","removeImage","SendFormContext","SendFormProvider","requests","isShowAlert","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","req","newList","slice","newReq","Object","assign","time","getCurrentDate","closeAlertFromTimeout","setTimeout","updateRequests","sendRequests","closeAlert","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","useState","localCategories","setLocalCategories","open","setOpen","isDisableBtn","setIsDisableBtn","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","handleClose","theme","listPages","marginTop","paddingLeft","listStyle","marginBottom","titlePages","fontSize","fontWeight","borderBottom","menu","palette","background","paper","padding","paddingBottom","maxWidth","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","cursor","btnSetting","orange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","dumbWrapper","opacity","btnSave","bottom","paddingTop","accordionContainer","accordionHeader","paddingRight","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","handleNewCategory","type","handleNewPage","swapCategory","direction","id","activeIndex","newCategories","indexOf","length","movedItem","placeItem","swapPage","categoryId","pageId","activeCategory","pages","Tooltip","title","placement","Button","onClick","size","variant","color","style","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","Typography","component","Grid","container","spacing","xs","onSubmit","e","preventDefault","newCategory","uuid","FormGroup","Box","mb","TextField","required","label","onChange","target","IconButton","fullWidth","index","disableElevation","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","disabled","Accordion","AccordionSummary","expandIcon","aria-controls","p","handleUpdateCategory","itemPages","indexPages","handleUpdatePage","gutterBottom","newPage","addPage","mt","startIcon","LogoChanger","updateImageNameList","setMainText","setSubText","setImage","imageName","setImageName","amber","uploadHandler","imageData","storageRef","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","boxShadow","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackground","settingsItem","marginRight","flexGrow","row","FormControl","InputLabel","Select","labelId","MenuItem","Number","ThemeChanger","default","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","primary","main","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","secondary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","deepOrange","colorPreview","borderRadius","flexWrap","mr","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","text","textDecoration","easeIn","menuButtonInnerLi","shortest","toolbar","listUnstyle","margin","Toolbar","clone","exact","to","pl","List","disablePadding","Paper","innerItem","innerIndex","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","mx","my","content","indexPage","borderTop","edge","DumbComponent","widthMobile","headerHeight","setHeaderHeight","header","fixedPadding","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","setResponsiveness","headHeight","document","querySelector","clientHeight","setMobileView","removeEventListener","addEventListener","mobileView","createLogo","Fragment","AppBar","Container","RequestsChanger","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","cardRoot","checkbox","marginLeft","divider","handleOnceCheck","isCheck","handleRemove","FormControlLabel","control","Checkbox","checked","request","Card","CardContent","keys","String","CardActions","AdminHeader","isOpen","setIsOpen","buttonSettings","settingsContainer","wrapper","providerData","logout","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ElementCreator","Header","Footer","subHeading","fill","footer","footerHeading","Switch","heading","paragraph","imageUrl","md","colorMapOnload","formPhone","setFormPhone","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","phone","svg","itemBackground","input","fontFamily","border","borderColor","link","boxForFlex","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","place","placeholder","cols","rows","defaultValue","dangerouslySetInnerHTML","__html","avatar","form","submit","Login","setName","setPassword","setError","isRedirect","setIsRedirect","Avatar","loginWithEmail","err","autoComplete","autoFocus","Alert","severity","Error","myClassName","resposiveFontSize","sm","classeForResp","responseFont","textChildren","renderText","setPadding","setMargin","setColor","setBackgroundColor","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","inputNumber","inputGroup","tooltip","dumbItemContainer","outline","shadows","outlineColor","mtView","mbView","ptView","pbView","dumbItem","dumbItemDelete","showInput","dataNew","handlePadding","newPadding","handleMargin","newMargin","focus","triangle","colors","onChangeComplete","newColor","hex","sentData","reSaveChildren","aria-haspopup","prop","removeItem","imageStyle","setBorderColor","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","setDisplay","imageAccordion","imagePreview","multiline","rowsMax","imageClassName","titleImg","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderColor","setImageBorderColor","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageLabel","handleImageMargin","px","pt","pb","ml","classForResp","isPaper","innerContainer","ContainerElement","libraryHeading","libraryParagraph","libraryParagraphImage","paragraphImage","setFlexDirection","shadow","setShadow","setChildren","settingInnerContainer","setSettingInnerContainer","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","btnDrawerStyle","btnDrawerItem","containerWrapper","toggleDrawer","handleHeadingMenuClose","addHeading","a","newChildren","newItem","reSaveContainer","slicedChild","key","confirm","swapContainer","removeContainer","currentTarget","keepMounted","Boolean","reSaveContainerStyleSettings","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","policy","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","xlinkHref","setHeading","setSubHeading","setParagraph","setInputLabel","setButtonLabel","setPolicy","colorSelect","setColorSelect","colorCustom","setColorCustom","iconUrl","setIconUrl","handleImageUpload","imageType","newData","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","setItems","handleUpdateItem","newItems","swapItem","Divider","splice","setLocation","setPhone","setMapFrame","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","useTheme","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","setData","btnContainer","fetchData","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","history","m","RouterComponent","basename","path","render","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.339675e0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 959) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n      \r\n    } \r\n\r\n    async updateCategories(data) {\r\n        console.log('firebase update')\r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {   \r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    setThemeMode: (mode) => {\r\n                        console.log(mode)\r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (data) => { \r\n                        this.setState({\r\n                            logo: data\r\n                        })\r\n                        this.updateLogo(data) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    state = { \r\n        imageList: [],\r\n        nameList: []\r\n    } \r\n\r\n    async componentDidMount() { \r\n          this.fetchListFromStorage()\r\n          this.fetchListFromFirestore()\r\n    }\r\n\r\n    async fetchListFromStorage() {\r\n        const listRef = firebase.storage.ref(); \r\n        \r\n        let imagesArray = []\r\n\r\n        await listRef.listAll().then(function(res) {\r\n            res.items.forEach(function(itemRef) { \r\n                imagesArray.push(itemRef.fullPath) \r\n            });\r\n          }).catch(function(error) {\r\n              console.log(error) \r\n          });\r\n          this.setState({\r\n            imageList: imagesArray\r\n          }) \r\n    }\r\n\r\n    async fetchListFromFirestore() {\r\n        const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n        const doc = await listRef.get();\r\n      \r\n        if (!doc.exists) {\r\n            console.log('No such page!');  \r\n\r\n        } else { \r\n            this.setState({\r\n                nameList: doc.data().list\r\n            }) \r\n        }\r\n    }\r\n\r\n    removeImage(name) { \r\n        const storageRef = firebase.storage.ref();\r\n \r\n        const imageRef = storageRef.child(name)\r\n     \r\n        imageRef.delete().then(function() {\r\n            console.log('File deleted successfully')\r\n        }).catch(function(error) {\r\n            console.log(error) \r\n        }); \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    imageList: this.state.imageList, \r\n                    nameList: this.state.nameList ,\r\n                    // updateImageNameList: (name) => {\r\n                    //     let newList = this.state.nameList.slice()\r\n                    //     let isUnic = true\r\n                    //     newList.map((item) => {\r\n                    //         if( item === name ) isUnic = false\r\n                    //     })\r\n                    //     if(isUnic) newList.push(name)\r\n\r\n                    //     this.setState({\r\n                    //         nameList: newList\r\n                    //     }) \r\n                    //     firebase.db.collection(\"site1category\").doc('imageList').update({\r\n                    //         list: newList\r\n                    //     })\r\n                    // },\r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        isShowAlert: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n            }) \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isShowAlert: 'success'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isShowAlert: 'error'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n          })\r\n    }\r\n\r\n    closeAlertFromTimeout() {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isShowAlert: null\r\n            })\r\n        }, 5000);\r\n    }\r\n\r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isShowAlert, \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isShowAlert: null\r\n                        })\r\n\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext'\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField, \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n\r\nimport { orange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n// import DumbComponent from './DumbComponent'\r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() {\r\n    \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        listPages : {\r\n            marginTop: 20, \r\n            paddingLeft: 25, \r\n            '&>li' : { \r\n                listStyle: 'none',\r\n                marginBottom: 5\r\n            }\r\n        },\r\n        titlePages: {\r\n            fontSize: 14, \r\n            fontWeight: 600, \r\n            borderBottom: `1px solid #eee`,\r\n            marginBottom: 12\r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 350px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 700,  \r\n            width: 700,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // left: 2,\r\n            backgroundColor: orange[700], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: orange[900], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        },\r\n        accordionHeader: {\r\n            paddingRight: 30, \r\n            paddingLeft: 25,     \r\n        },\r\n        deleteBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 5, \r\n            right: 5, \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25,\r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingBtn: {\r\n            position: 'absolute', \r\n            zIndex: 10,\r\n            top: 0, \r\n            left: -5,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        },\r\n        deletePageBtn: {  \r\n            backgroundColor: '#e83b3b', \r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            minWidth: 25, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&:hover ': { \r\n                backgroundColor: '#c40b0b' \r\n            }\r\n        },\r\n        movingPageBtn: { \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n            '&>button' : {\r\n                paddingLeft: 3,\r\n                paddingRight: 3,\r\n                minWidth: 22\r\n            }\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (e) => {\r\n        e.preventDefault()\r\n        let newList = categories.slice()\r\n        let newCategory = Object.assign({}, categoryLayout)\r\n        newCategory.id = uuid()\r\n        newCategory.title = newCategoryTitle\r\n        newCategory.slug = newCategorySlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    const addPage = (e, id) => { \r\n        e.preventDefault()\r\n        \r\n        let newCategories = categories.slice()\r\n        let newPage = Object.assign({}, pageLayout)\r\n        newPage.id = uuid()\r\n        newPage.title = newPageTitle\r\n        newPage.slug = newPageSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) { \r\n                console.log(newPage)\r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n        setNewPageTitle('')\r\n        setNewPageSlug('')\r\n    } \r\n    const handleNewCategory = (type, value) => {\r\n        if(type === 'title') setNewCategoryTitle(value)\r\n        if(type === 'slug') setNewCategorySlug(value)\r\n    }\r\n    const handleNewPage = (type, value) => {\r\n        if(type === 'title') setNewPageTitle(value)\r\n        if(type === 'slug') setNewPageSlug(value)\r\n    }\r\n    const handleUpdateCategory = (value, id) => { \r\n        console.log('update')\r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n         \r\n        console.log(activeIndex)\r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        }) \r\n        console.log(newCategories)\r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        let filtered = categories.filter((item) => (item.id !== id))  \r\n        const deleted = categories.filter( (item) => (item.id === id))\r\n        let arrayOfPagesForDelete = [] \r\n\r\n        arrayOfPagesForDelete.push(deleted[0].slug)\r\n        if(deleted[0].pages.length > 0) {\r\n            deleted[0].pages.map((item) => {\r\n                arrayOfPagesForDelete.push(item.slug)\r\n                return 0\r\n            })\r\n        }\r\n\r\n        setCategories(filtered)  \r\n        deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        categories.map( category => {\r\n            if(category.id === categoryId) {  \r\n                let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                category.pages = filtered\r\n            }\r\n            return 0 \r\n        }) \r\n        setCategories(categories)  \r\n\r\n        deletePageFromFirebase(slug)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать список категорий  <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <form onSubmit={addCategory}>\r\n                                        <FormGroup>\r\n                                            <Box mb={1}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category title\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategoryTitle}\r\n                                                    onChange={(e) => { handleNewCategory('title', e.target.value)}}\r\n                                                />\r\n                                            </Box>\r\n                                            <Box mb={1} style={{position: 'relative'}}>\r\n                                                <TextField\r\n                                                    required\r\n                                                    label=\"Category slug\" \r\n                                                    variant=\"outlined\" \r\n                                                    value={newCategorySlug}\r\n                                                    onChange={(e) => { handleNewCategory('slug', e.target.value)}}\r\n                                                     \r\n                                                />\r\n                                                <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                    <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                        <InfoOutlined color={'secondary'}/>\r\n                                                    </IconButton>\r\n                                                </Tooltip> \r\n                                            </Box>\r\n                                            <Box mb={1}>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    color={'primary'} \r\n                                                    variant=\"contained\"\r\n                                                    fullWidth\r\n                                                >\r\n                                                    Add New Category\r\n                                                </Button> \r\n                                            </Box>\r\n                                        </FormGroup>\r\n\r\n                                        \r\n                                    </form> \r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    <Tooltip title='Delete Category' placement='top'>\r\n                                                        <Button\r\n                                                            variant='contained'\r\n                                                            color=\"default\"\r\n                                                            disableElevation={true}\r\n                                                            className={classes.deleteBtn}\r\n                                                            onClick={() => { deleteCategory(item.id) }}\r\n                                                        > \r\n                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        <Tooltip title='Get Up' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('up', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                            >  \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                            </Button>\r\n                                                        </Tooltip> \r\n                                                        <Tooltip title='Get Down' placement='right'>\r\n                                                            <Button   \r\n                                                                onClick={() => { swapCategory('down', item.id) }}\r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    required\r\n                                                                    type='text' \r\n                                                                    label=\"Category title\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.title} \r\n                                                                    onChange={(e) => { handleUpdateCategory(e.target.value, item.id)}}\r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <Box mb={1}>\r\n                                                                <TextField \r\n                                                                    type='text' \r\n                                                                    label=\"Category slug (read only)\"\r\n                                                                    fullWidth\r\n                                                                    variant='filled'\r\n                                                                    value={item.slug} \r\n                                                                    disabled={true} \r\n                                                                />  \r\n                                                            </Box>\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages} >\r\n                                                                            <Box mb={1} display='flex' justifyContent='space-between' alignItems='center' >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                        >  \r\n                                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                        </Button>\r\n                                                                                    </Tooltip> \r\n                                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                                        <Button   \r\n                                                                                            onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                            size='small'\r\n                                                                                            variant='contained'\r\n                                                                                            color='primary' \r\n                                                                                            disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                        >     \r\n                                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField \r\n                                                                                    required\r\n                                                                                    type='text' \r\n                                                                                    label=\"Page title\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.title} \r\n                                                                                    onChange={(e) => {handleUpdatePage( e.target.value, item.id, itemPages.id )}}\r\n                                                                                />    \r\n                                                                            </Box>\r\n                                                                            <Box mb={1}>\r\n                                                                                <TextField  \r\n                                                                                    type='text' \r\n                                                                                    label=\"Page slug\"\r\n                                                                                    fullWidth\r\n                                                                                    variant='filled'\r\n                                                                                    value={itemPages.slug} \r\n                                                                                    disabled={true}\r\n                                                                                />  \r\n                                                                            </Box>\r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n                                                                <form onSubmit={(e) => { addPage(e, item.id) }}>\r\n                                                                    <FormGroup>\r\n                                                                        <Box mb={1}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page title\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageTitle}\r\n                                                                                onChange={(e) => { handleNewPage('title', e.target.value)}}\r\n                                                                            />\r\n                                                                        </Box>\r\n                                                                        <Box mb={1} style={{position: 'relative'}}>\r\n                                                                            <TextField\r\n                                                                                required\r\n                                                                                label=\"Page slug\" \r\n                                                                                variant=\"outlined\" \r\n                                                                                value={newPageSlug}\r\n                                                                                onChange={(e) => { handleNewPage('slug', e.target.value)}}\r\n                                                                                \r\n                                                                            />\r\n                                                                            <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                                                                                <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                                                                    <InfoOutlined color={'secondary'}/>\r\n                                                                                </IconButton>\r\n                                                                            </Tooltip> \r\n                                                                        </Box>\r\n                                                                        <Box mt={2}> \r\n                                                                            <Button \r\n                                                                                type={'submit'}\r\n                                                                                color={'primary'} \r\n                                                                                variant=\"contained\" \r\n                                                                            >\r\n                                                                                Add New Page\r\n                                                                            </Button>\r\n                                                                        </Box>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    \r\n                                                                </form> \r\n                                                                    \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, updateLogo } = React.useContext(CategoryContext)     \r\n\r\n    const { removeImage , updateImageNameList } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n      \r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: {\r\n            // opacity: 0,\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 2, \r\n            // right: 2,\r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: {\r\n            // position: 'absolute', \r\n            // zIndex: 10, \r\n            // top: 0, \r\n            // left: 0,  \r\n            // height: 64,\r\n            // width: 150, \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        }, \r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        updateLogo(newLogo)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Создать/отредактировать логотип  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained'\r\n                                        startIcon={<ImageIcon color=\"action\" />}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={2}>\r\n                                        <img\r\n                                            width={100}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}>\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    />\r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\nimport { TwitterPicker } from 'react-color';\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackground, setSettingBackground] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        dumbWrapper: { \r\n            '&:hover $btnSetting': {\r\n                opacity: 1\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        accordionContainer: {\r\n            position: 'relative', \r\n            '&:hover $deleteBtn': {\r\n                opacity: 1\r\n            },\r\n            '&:hover $movingBtn': {\r\n                opacity: 1\r\n            }, \r\n        }, \r\n        settingsItem: {\r\n            width: '100%',\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1, \r\n        },\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition,\r\n                backgroundColor: settingBackground,\r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Изменить настройки  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {/* <Box \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[   'transparent', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setSettingBackground(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  */}\r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,    \r\n} from '@material-ui/core' \r\n\r\nimport { deepOrange } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 450px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 900,  \r\n            width: 900,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n         \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        \r\n        colorPreview: { \r\n            width: '100%',\r\n            height: 8,  \r\n            borderRadius: 3, \r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Отредактировать тему  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightBackgroundDefault}\r\n                                        label='Light Background Default'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightBackgroundDefault(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightBackgroundDefault}}></Box>\r\n                                </Box> \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightBackgroundPaper}\r\n                                        label='Light Background Paper'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightBackgroundPaper(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightBackgroundPaper}}></Box>\r\n                                </Box>  \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightPrimary}\r\n                                        label='Light Primary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightPrimary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightPrimary}}></Box>\r\n                                </Box>  \r\n                                <Box> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={lightSecondary}\r\n                                        label='Light Secondary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setLightSecondary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: lightSecondary}}></Box>\r\n                                </Box>  \r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkBackgroundDefault}\r\n                                        label='Dark Background Default'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkBackgroundDefault(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkBackgroundDefault}}></Box>\r\n                                </Box> \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkBackgroundPaper}\r\n                                        label='Dark Background Paper'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkBackgroundPaper(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkBackgroundPaper}}></Box>\r\n                                </Box>  \r\n                                <Box mr={1}> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkPrimary}\r\n                                        label='Dark Primary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkPrimary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkPrimary}}></Box>\r\n                                </Box>  \r\n                                <Box> \r\n                                    <TextField \r\n                                        required\r\n                                        type='text'\r\n                                        variant='outlined'\r\n                                        value={darkSecondary}\r\n                                        label='Dark Secondary'\r\n                                        onChange={(e) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setDarkSecondary(e.target.value) \r\n                                        }} \r\n                                    /> \r\n                                    <Box className={classes.colorPreview} style={{ backgroundColor: darkSecondary}}></Box>\r\n                                </Box>  \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`,\r\n\r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            },\r\n             \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , listUnstyle  } = useStyles();\r\n  \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n            {props.logo}  \r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={menuLink} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles,\r\n    Button,\r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box mx={2} my={1}  >\r\n                        <Button \r\n                            variant='outlined'\r\n                            color='default'\r\n                            onClick={handleDrawerClose}\r\n                        >\r\n                            <ArrowRightAltIcon/>\r\n                        </Button>\r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                // color: \"textPrimary\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","import React, {useState, useEffect} from 'react'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n} from \"@material-ui/core\"; \r\nfunction DumbComponent() {\r\n\r\n    const {categories, logo, settings} = React.useContext(CategoryContext)    \r\n  \r\n   const [headerHeight, setHeaderHeight] = useState(0)\r\n\r\n  \r\n\r\n    let widthMobile \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`]\r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: theme.palette.background.paper, \r\n\r\n                position: settings.classes.position,  \r\n                // paddingTop: settings.classes.paddingY,  \r\n                // paddingBottom: settings.classes.paddingY,  \r\n                // backgroundColor: settings.classes.backgroundColor, \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                top: 0, \r\n                left: 0,\r\n                right: 0,\r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n            },\r\n            fixedPadding: { \r\n                minHeight: headerHeight\r\n            },\r\n            logoMain: { \r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 18,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: theme.palette.text.primary,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n               \r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub,  fixedPadding} = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {\r\n            const headHeight =  document.querySelector('#header').clientHeight\r\n            \r\n            setHeaderHeight(headHeight)\r\n            \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        setResponsiveness(); \r\n        window.removeEventListener('resize', setResponsiveness)\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n       \r\n    }, []);\r\n     \r\n    const [mobileView, setMobileView] = useState(false); \r\n      \r\n\r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n   \r\n    \r\n  \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            }\r\n            <AppBar className={header}  id='header'>\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop logo={createLogo}  categories={categories} settings={settings}/> \r\n                        : \r\n                        <Mobile logo={createLogo}  categories={categories}  /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n\r\n    console.log(requests)\r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({ \r\n        \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 400px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 800,  \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: amber[500], \r\n            minWidth: 80, \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: amber[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex',  \r\n                fontSize: 10\r\n            }\r\n        },\r\n        \r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n        },\r\n        cardRoot: {\r\n            display: 'inline-block', \r\n            width: 'calc( 50% - 20px)',\r\n            marginBottom: 20,\r\n            marginRight: 20\r\n        },\r\n        checkbox: {\r\n            display: 'flex',\r\n            alignItems: 'center' ,\r\n            marginBottom: theme.spacing(2),\r\n            marginLeft:  theme.spacing(1), \r\n            borderBottom: `1px solid ${theme.palette.divider}`\r\n        }\r\n    \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {  \r\n\r\n        const newReq = localRequests.slice()\r\n        const filtered = newReq.filter(item => ( item.time !== id ))\r\n\r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false)\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        <Card key={index} className={classes.cardRoot} >\r\n                            <CardContent>\r\n                                {\r\n                                    Object.keys(request).map((item, innerIndex) => { \r\n    \r\n                                        return(\r\n                                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                                {item} &nbsp;  -  &nbsp;\r\n                                                <Typography component='span' color=\"textSecondary\">\r\n                                                     { String(request[item]) }\r\n                                                </Typography> \r\n                                            </Typography>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button variant='outlined' size=\"small\" onClick={() => {handleOnceCheck(request.time)}}>\r\n                                    { \r\n                                        request.isCheck &&\r\n                                        <span>Uncheck</span>\r\n                                    }\r\n                                    { \r\n                                        !request.isCheck &&\r\n                                        <span>Check</span>\r\n                                    }\r\n                                </Button>\r\n                                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => {handleRemove(request.time)}}>\r\n                                    Remove\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        <Card key={index} className={classes.cardRoot} >\r\n                            <CardContent>\r\n                                {\r\n                                    Object.keys(request).map((item, innerIndex) => { \r\n    \r\n                                        return(\r\n                                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                                {item} &nbsp;  -  &nbsp;\r\n                                                <Typography component='span' color=\"textSecondary\">\r\n                                                     { String(request[item]) }\r\n                                                </Typography> \r\n                                            </Typography>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button variant='outlined' size=\"small\" onClick={() => {handleOnceCheck(request.time)}}>\r\n                                    { \r\n                                        request.isCheck &&\r\n                                        <span>Uncheck</span>\r\n                                    }\r\n                                    { \r\n                                        !request.isCheck &&\r\n                                        <span>Check</span>\r\n                                    }\r\n                                </Button>\r\n                                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => {handleRemove(request.time)}}>\r\n                                    Remove\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","\r\nimport React from 'react' \r\n\r\nimport { Button, Typography, Box, makeStyles, Tooltip} from '@material-ui/core'\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nfunction AdminHeader() {\r\n\r\n    const { user } = React.useContext(ModeContext)  \r\n \r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        buttonSettings: {\r\n            position: 'absolute', \r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            display:\"flex\",\r\n            alignItems: 'center', \r\n            width: 22,\r\n            height: '100%',  \r\n            minHeight: 54, \r\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\r\n            cursor: 'pointer'\r\n        },\r\n        settingsContainer: { \r\n            position: 'relative', \r\n            zIndex: 1029,\r\n            display:'flex',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',    \r\n            padding: 10, \r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        wrapper: {\r\n            position:\"relative\", \r\n            minHeight: isOpen ? 54 : 0, \r\n            paddingLeft: 22\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n \r\n    \r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n    \r\n    if(user) {\r\n        return (\r\n            <Box className={classes.wrapper} >\r\n                <Tooltip title='Global Settings' placement='right' >\r\n                    <Box onClick={() => { setIsOpen(!isOpen)}}  className={classes.buttonSettings} >\r\n                        {\r\n                            isOpen ? <VisibilityOffIcon fontSize={'small'} /> : <VisibilityIcon  fontSize={'small'}  /> \r\n                        }\r\n                    </Box>\r\n                </Tooltip>\r\n                { \r\n                    isOpen && \r\n                    <Box className={classes.settingsContainer} >\r\n                        <Typography component='span' >\r\n                            hello, { user.providerData[0].email } \r\n                        </Typography>\r\n\r\n                        <RequestsChanger/>\r\n                    \r\n                        <Box> \r\n                            <Button \r\n                                size='small'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={handleSignOut}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n    else { \r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default AdminHeader\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\nimport AdminHeader from './AdminHeader'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 35, \r\n            top: 5, \r\n            width: 60, \r\n            height: 40,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AdminHeader/>\r\n\r\n            <div className={classes.headerContainer} >   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { makeStyles, Box, Typography, Button, Container, Switch , FormControlLabel } from '@material-ui/core'\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nfunction Footer() {\r\n\r\n    const { setThemeMode, themeMode } = React.useContext(CategoryContext)\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        subHeading: { \r\n            color: theme.palette.primary.main,\r\n            '&>svg' : {\r\n                fill: theme.palette.primary.main\r\n            }\r\n        },\r\n        footer: {\r\n            backgroundColor: theme.palette.primary.dark, \r\n            padding: '10px 0'\r\n        },\r\n        footerHeading: { \r\n            color: \"#fff\",\r\n            display: 'block', \r\n            marginBottom : 15\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n\r\n    const checked = themeMode === 'dark' ? true : false\r\n\r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n                <Typography \r\n                    variant='h6'\r\n                    className={classes.footerHeading} \r\n                > \r\n                    Footer\r\n                </Typography>\r\n\r\n                <NavLink to='/login'>\r\n                    <Button color='secondary' variant=\"contained\">\r\n                        Login\r\n                    </Button>\r\n                </NavLink>\r\n\r\n                <Box>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Dark Theme\"\r\n                    />\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Container, Grid, makeStyles, Box } from '@material-ui/core'\r\nimport '../../../assets/about.scss'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const imageUrl = props.data.image\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        return ({\r\n             \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth=\"lg\" >\r\n                <div className=\"electro-about heading\">\r\n                    <Grid container> \r\n                        <Grid item md={6} >\r\n                            <div className=\"electro-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone='true'>\r\n                                <div className=\"electro-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box } from '@material-ui/core'\r\n\r\nimport '../../../assets/contactMap.scss'\r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n\r\n\r\n    let colorMapOnload \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n        return ({\r\n            svg: {\r\n                fill: theme.palette.secondary.main\r\n            },\r\n            itemBackground: { \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${theme.palette.primary.main}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: theme.palette.secondary.light\r\n                }\r\n            },\r\n            button: {\r\n                backgroundColor: theme.palette.primary.main ,\r\n                border: `2px solid ${theme.palette.primary.main}`, \r\n                color: '#fff',\r\n                '&:hover' : {\r\n                    background: 'none',\r\n                    '&>span': { \r\n                        color: theme.palette.primary.main\r\n                    }\r\n                }\r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${theme.palette.primary.main} !important`,\r\n                }\r\n            },\r\n            boxForFlex: {\r\n                [`@media (min-width: 960px)`]: {\r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth='lg'>\r\n                <div className=\"ln-contact\"> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={'ln-contact_item'} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`${phone}`}>{phone}</a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                    <p>Задайте нам вопрос</p>\r\n                                    <div className=\"kr-form\">\r\n                                        <div className=\"kr-form-inputs\">\r\n                                        <span>\r\n                                            <input \r\n                                                name=\"name\" \r\n                                                type=\"text\" \r\n                                                placeholder=\"Ваше имя\" \r\n                                                required \r\n                                                className={classes.input}\r\n                                                value={formName}\r\n                                                onChange={e => {setFormName(e.target.value)}}\r\n                                            />\r\n                                        </span>\r\n                                        <span>\r\n                                            <input \r\n                                                name=\"phone\" \r\n                                                type=\"tel\" \r\n                                                placeholder=\"Ваш телефон\" \r\n                                                required \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={e => {setFormPhone(e.target.value)}}\r\n                                            />\r\n                                        </span>\r\n                                        </div>\r\n                                        <textarea   \r\n                                            cols={30} \r\n                                            rows={10} \r\n                                            placeholder=\"Ваш коментарий\" \r\n                                            defaultValue={\"\"} \r\n                                            className={classes.input}\r\n                                            value={formComment}\r\n                                            onChange={e => {setFormComment(e.target.value)}}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ln-contact_item-btn\">\r\n                                        <div className=\"btn-custom\">\r\n                                            <Button type=\"submit\" className={classes.button}>\r\n                                                <span>Отправить</span>\r\n                                            </Button>\r\n                                        </div>\r\n                                        <span>Нажимая на кнопку \"Отправить\" Вы соглашаетесь на обработку Ваших данных</span>\r\n                                    </div>\r\n                                </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className=\" position-static \"> \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase'\r\n\r\n// import ImageManager from './header/headerHelpers/ImageManager'\r\n// import DumbAccordion from '../components/library/accordion/DumbComponent'\r\nimport Dumb from '../components/library/about/DumbComponent'\r\n\r\nimport DumbContact from '../components/library/contactMap/DumbComponent'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\nimport ImageContext from '../context/imageContext/ImageContext'\r\n \r\nimport { Avatar, Button, TextField, Typography, Container } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { imageList } = React.useContext(ImageContext)\r\n\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n    }, [])\r\n\r\n    const hendlerSubmit = (e) => {\r\n        e.preventDefault() \r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n        {/* <Dumb/>   */}\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n    \r\n            {/* Redirect при авторизации */}\r\n            { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n \r\n            {/* <ImageManager/> */}\r\n \r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Вход\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={hendlerSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"text\"\r\n                        label=\"User\"\r\n                        name=\"user\"\r\n                        autoComplete='true'\r\n                        autoFocus\r\n                        value={name}\r\n                        onChange={ (e)=>{setName(e.target.value)} }\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={(e)=>{setPassword(e.target.value)}}\r\n                    />\r\n                    {\r\n                        error && \r\n                        <Alert severity=\"error\">{error.message}</Alert>\r\n                    }\r\n                \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                \r\n                </form>\r\n            </div>\r\n           \r\n        </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className ,\r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: {\r\n                fontSize: props.className.fontSize*0.8, \r\n                marginTop: props.className.marginTop*0.8,\r\n                marginBottom: props.className.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                fontSize: props.className.fontSize*0.6, \r\n                marginTop: props.className.marginTop*0.5,\r\n                marginBottom: props.className.marginBottom*0.5\r\n            },\r\n        }\r\n      }\r\n    ));\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        }, \r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }  ,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50,  \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400,\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        showInput: {\r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }}  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Задать заголовку текст и стили <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value); e.target.focus() }}\r\n                                    />    \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip title=\"Если включено, шрифт будет меньше размером на мобильных устройствах. \"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.top}\r\n                                            onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.bottom}\r\n                                            onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.left}\r\n                                            onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={margin.right}\r\n                                            onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.top}\r\n                                            onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.bottom}\r\n                                            onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.left}\r\n                                            onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Padding Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={padding.right}\r\n                                            onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Font Size\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={fontSize}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                        /> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Line Height (em)\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={lineHeight}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                    />\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                </Box>\r\n                                \r\n                                <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box>\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}\r\n                                isResponsiveFont={isResponsiveFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.data.image ? props.data.image.classes : {}\r\n      }));\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n     \r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            // height: '100%'\r\n            \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        }, \r\n         \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 100, \r\n            height: 100, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        }\r\n        \r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName\r\n    }} \r\n\r\n     \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin= (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст и стили <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Background  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            color={backgroundColor}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setBackgroundColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <Typography  component={'h6'} gutterBottom  >\r\n                                            Color  \r\n                                        </Typography>\r\n                                        <TwitterPicker\r\n                                            width={'100%'}\r\n                                            triangle={'hide'}\r\n                                            colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                            color={color}\r\n                                            onChangeComplete={(newColor) => {\r\n                                                setIsDisableBtn(false);\r\n                                                setColor(newColor.hex) \r\n                                            }}\r\n\r\n                                        /> \r\n                                    </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n                            \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box>\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            >\r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton> \r\n                        </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.className , \r\n        imageStyle: props.imageClassName ? props.imageClassName : {}\r\n      })); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={classes.imageStyle} alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport firebase from '../../../firebase/firebase'\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\n\r\nimport Draggable from 'react-draggable';\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid, \r\n    TextField, \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledComponent = (props) => {  \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n    \r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transperent')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n\r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderColor, setImageBorderColor] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  '0px')\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n     \r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\"\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`, \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            marginTop: 10, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                marginLeft: 5, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {   \r\n                boxShadow: theme.shadows[10], \r\n                cursor: 'pointer',\r\n                outlineColor: `${theme.palette.error.light}`,\r\n                '&>button' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                } \r\n            }, \r\n        }, \r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 9, \r\n            top: 3, \r\n            right: 5,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            transition: \"100ms cubic-bezier(0.4, 0, 1, 1)\",\r\n            '&:hover' : { \r\n                backgroundColor: theme.palette.error.light\r\n            }\r\n        },  \r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: \"calc(50% - 200px)\",\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: 400,  \r\n            width: 400, \r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll'\r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        imageAccordion: { \r\n            marginBottom: 10,  \r\n        },\r\n        imagePreview: {\r\n            position: 'relative', \r\n            width: 105, \r\n            height: 105, \r\n            border: `1px solid ${theme.palette.primary.light}`, \r\n            '&>img' : {  \r\n                position: 'absolute',\r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                margin: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n            }, \r\n            '&>button' : {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                backgroundColor: \"#0027ff70\", \r\n                borderRadius: 0, \r\n                transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                \"&:hover\": {\r\n                    opacity: 0\r\n                } \r\n            }, \r\n        },\r\n        imageLabel: {\r\n            position: 'absolute',\r\n            zIndex: 10, \r\n            top: 0, \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0, \r\n            width: \"100%\", \r\n            maxWidth: \"100%\", \r\n            height: \"100%\", \r\n            maxHeight: \"100%\", \r\n            cursor: 'pointer'\r\n        }\r\n      }));\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,\r\n        color: color,\r\n        backgroundColor: backgroundColor,\r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius, \r\n        borderColor: imageBorderColor, \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n    //const dataNew - props for Dumb Component\r\n    const dataNew = {...props.data, ...{\r\n        classes: myClassName,\r\n    }} \r\n \r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const saveData = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl\r\n        })\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        props.removeItem(props.data.id)\r\n    };\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        setIsDisableBtn(false)\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message)\r\n          },\r\n          () => {\r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImageUrl(url) \r\n              })\r\n          }\r\n        )\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Задать параграфу текст, стили и картинки <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <TextField \r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={textInDumb}\r\n                                        multiline={true}\r\n                                        rowsMax={6}\r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setTextInDumb(e.target.value) }}\r\n                                />    \r\n                            </Box>  \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageSetting} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={dataNew.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <TextField  \r\n                                                    type='text'\r\n                                                    label=\"Image title\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={imageTitle}\r\n                                                    fullWidth\r\n                                                    onChange={ (e) => {setIsDisableBtn(false);  setImageTitle(e.target.value) } }     \r\n                                                />\r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Margin Top\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.top}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'top') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Bottom\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.bottom}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'bottom') } }     \r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Left\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.left}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); handleImageMargin(e, 'left') } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Margin Right\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageMargin.right}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);handleImageMargin(e, 'right') } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageWidth(Number(e.target.value)) } }     \r\n                                        />\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Image Height\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageHeight}\r\n                                            onChange={ (e) => {setIsDisableBtn(false); setImageHeight(Number(e.target.value)) } }     \r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='color'\r\n                                                label=\"Border Color\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderColor}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderColor(e.target.value)} }     \r\n                                        />\r\n                                        <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Border Radius\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={imageBorderRadius}\r\n                                                onChange={ (e) => { setIsDisableBtn(false);  setImageBorderRadius(Number(e.target.value)) } }     \r\n                                        />\r\n\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={imageBorderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setImageBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.top}\r\n                                        onChange={ (e) => { handleMargin(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.bottom}\r\n                                        onChange={ (e) => { handleMargin(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.left}\r\n                                        onChange={ (e) => { handleMargin(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Margin Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={margin.right}\r\n                                        onChange={ (e) => { handleMargin(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Top\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.top}\r\n                                        onChange={ (e) => { handlePadding(e, 'top') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.bottom}\r\n                                        onChange={ (e) => { handlePadding(e, 'bottom') } }     \r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Left\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.left}\r\n                                        onChange={ (e) => { handlePadding(e, 'left') } }     \r\n                                    />\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Padding Right\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={padding.right}\r\n                                        onChange={ (e) => { handlePadding(e, 'right') } }     \r\n                                    />\r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Background  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        color={backgroundColor}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setBackgroundColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box> \r\n                                <Box \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <Typography  component={'h6'} gutterBottom  >\r\n                                        Color  \r\n                                    </Typography>\r\n                                    <TwitterPicker\r\n                                        width={'100%'}\r\n                                        triangle={'hide'}\r\n                                        colors={[ '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                        color={color}\r\n                                        onChangeComplete={(newColor) => {\r\n                                            setIsDisableBtn(false);\r\n                                            setColor(newColor.hex) \r\n                                        }}\r\n\r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                                                    \r\n                            {/* border */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='color'\r\n                                            label=\"Border Color\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderColor}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                    />\r\n                                    <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Radius\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderRadius}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                    />\r\n\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                        \r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Border Width\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={borderWidth}\r\n                                    onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                    <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                    <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                    <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                    <MenuItem value={'double'}>Double</MenuItem>\r\n                                    <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                    <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                    <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                    <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='number'\r\n                                        label=\"Font Size\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={fontSize}\r\n                                        onChange={ (e) => {setIsDisableBtn(false); setFontSize(Number(e.target.value))} }     \r\n                                    /> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <TextField \r\n                                    className={classes.inputNumber}\r\n                                    type='number'\r\n                                    label=\"Line Height (em)\" \r\n                                    variant=\"filled\" \r\n                                    size='small'  \r\n                                    value={lineHeight}\r\n                                    onChange={ (e) => {setIsDisableBtn(false); setLineHeight(Number(e.target.value))} }     \r\n                                />\r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"align-select-label\"\r\n                                        id=\"align-select\"\r\n                                        value={textAlign}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                    >\r\n                                    <MenuItem value={'left'}>Left</MenuItem>\r\n                                    <MenuItem value={'center'}>Center</MenuItem>\r\n                                    <MenuItem value={'right'}>Right</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={dataNew} \r\n                                className={myClassName}  \r\n                                imageClassName={imageClassName}\r\n                                imageUrl={imageUrl}\r\n                                prop={props.data.prop} \r\n                                textChildren={textInDumb} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                            <IconButton \r\n                                className={ classes.dumbItemDelete}\r\n                                size=\"small\"\r\n                                aria-label=\"delete\"\r\n                                onClick={removeItem}\r\n                            > \r\n                                <DeleteOutline style={{ color: '#fff'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n\r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n        myClassName: props.classes ,  \r\n        resposiveFontSize: { \r\n            [`@media (max-width: 960px)`]: { \r\n                marginTop: props.classes.marginTop*0.8,\r\n                marginBottom: props.classes.marginBottom*0.8\r\n            },\r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                marginTop: props.classes.marginTop*0.45,\r\n                marginBottom: props.classes.marginBottom*0.45\r\n            },\r\n        }\r\n      }));\r\n    const classes = useStyles(); \r\n  \r\n    const classForResp = classes.resposiveFontSize \r\n \r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classForResp}`}\r\n                > \r\n                    <Paper style={{padding: '0 15px'}}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classForResp}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                { \r\n                                    modeDev && \r\n                                    props.data.children.map((item) => {   \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item}\r\n                                                        reSaveChildren={props.reSaveChildren}\r\n                                                        removeItem={props.removeItem}\r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                                {   !modeDev &&\r\n                                    props.data.children.map((item) => {  \r\n                                        switch(item.type) { \r\n                                            case 'heading' :  \r\n                                                return ( \r\n                                                    <HeadingCreator \r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraph' :  \r\n                                                return (\r\n                                                    <ParagraphCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            case 'paragraphImage' :  \r\n                                                return (\r\n                                                    <ParagraphImageCreator\r\n                                                        key={item.id} \r\n                                                        item={item} \r\n                                                    />\r\n                                                ) \r\n                                            default: break;\r\n                                        }  \r\n                                        return null\r\n                                    })\r\n                                }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport uuid from 'react-uuid' \r\nimport { TwitterPicker } from 'react-color';\r\n \r\nimport DumbComponent from './DumbComponent' \r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu,   Drawer,  Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, IconButton\r\n} from '@material-ui/core'\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n  \r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [color, setColor] = React.useState(props.data.classes.color || 'inherit')\r\n    const [backgroundColor, setBackgroundColor] = React.useState(props.data.classes.backgroundColor ||  'transparent')\r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n\r\n    const [borderColor, setBorderColor] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [children, setChildren] = React.useState(props.data.children) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false)\r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({  \r\n        btnDrawerStyle : {\r\n            backgroundColor: theme.palette.error.dark, \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        mtView: {  \r\n            position: 'absolute', \r\n            top: `-${margin.top}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute', \r\n            bottom: `-${margin.bottom}px`, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d',\r\n            height: `${margin.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.top}px`, \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e',\r\n            height: `${padding.bottom}px`, \r\n            opacity: 0,\r\n            transition: `180ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            margin: 5, \r\n            width: \"100%\", \r\n            maxWidth: '50%'\r\n        }, \r\n        inputGroup: {\r\n            border: \"1px solid #f5f5f5\", \r\n            padding: 3, \r\n            inputNumber: { \r\n                maxWidth: \"100%\"\r\n\r\n            }\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 20, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        }\r\n    })\r\n    )\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        color: color,\r\n        backgroundColor: backgroundColor, \r\n        borderColor: borderColor,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection\r\n    } \r\n  \r\n\r\n    const handlePadding = (e, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(e.target.value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (e, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(e.target.value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n     \r\n    const toggleDrawer =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n\r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        toggleDrawer()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = Object.assign({}, libraryHeading) \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = Object.assign({}, libraryParagraph)\r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = Object.assign({}, libraryParagraphImage)\r\n                newItem.id = uuid() \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n  \r\n        setChildren(newChildren) \r\n\r\n        toggleDrawer()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true); \r\n        toggleDrawer()\r\n    } \r\n    \r\n    const reSaveChildren = async (id, data) => {   \r\n        let slicedChild = children.slice()\r\n        slicedChild.forEach((item) => {\r\n            if(item.id === id) {\r\n                for( let key in item) { \r\n                    item[key] = data[key]\r\n                } \r\n            }\r\n        })  \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, slicedChild)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => {\r\n        let conf = window.confirm(\"Delete ?\");\r\n \r\n        if(conf) { \r\n            let filtered = children.filter((item) => (item.id !== id))  \r\n            setChildren(filtered) \r\n  \r\n            // save in firestore \r\n            props.reSaveContainer(props.data.id, filtered)  \r\n        }\r\n    }\r\n\r\n    const removeContainer = () => { \r\n        props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const swapContainer = (direction, id) => { \r\n        props.swapContainer(direction, id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Box \r\n            maxWidth={propsSettings.maxWidth} \r\n            fixed={propsSettings.fixed} \r\n            disableGutters={'true'}\r\n            className={classes.containerWrapper} \r\n        >    \r\n            <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip> \r\n\r\n            <Box style={{position: 'relative'}} > \r\n                \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"secondary\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\"\r\n                    > \r\n                        <Tooltip title='Container Settings' placement='right'>\r\n                            <Button  \r\n                                onClick={toggleDrawer} \r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >   \r\n                                <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title='Get Up' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('up', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >  \r\n                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                            </Button>\r\n                        </Tooltip> \r\n                        <Tooltip title='Get Down' placement='right'>\r\n                            <Button   \r\n                                onClick={() => { swapContainer('down', props.data.id) }}\r\n                                size='medium'\r\n                                variant='contained'\r\n                                // color='primary' \r\n                                className={classes.btnDrawerItem}\r\n                            >     \r\n                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                            </Button>\r\n                        </Tooltip> \r\n \r\n                    </ButtonGroup>\r\n                </Box>\r\n                {/*  DrawerContainer */}\r\n                    <Drawer anchor={'left'} open={open} onClose={toggleDrawer}>\r\n                         \r\n                            <Box  \r\n                                pt={3}\r\n                                pb={10} \r\n                                px={2}\r\n                                maxWidth={600}    \r\n                                position={'relative'}\r\n                            > \r\n                                <FormGroup> \r\n                                    <Typography   variant={'h6'} gutterBottom  >\r\n                                        Container actions \r\n                                    </Typography>\r\n                                   <Box mb={2}>  \r\n                                        <Button\r\n                                            onClick={removeContainer}\r\n                                            variant='outlined'\r\n                                            color=\"secondary\"  \r\n                                        >\r\n                                            Remove Container\r\n                                        </Button> \r\n                                   </Box>\r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup > \r\n                                    <Typography  variant={'h6'} gutterBottom  >\r\n                                        Add item from libs\r\n                                    </Typography>\r\n                                    <Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button \r\n                                                    aria-controls=\"heading-menu\" \r\n                                                    aria-haspopup=\"true\" \r\n                                                    onClick={handleHeadingMenuClick}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Heading\r\n                                                </Button>\r\n                                            </Box>\r\n                                            \r\n                                            <Menu\r\n                                                id=\"heading-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleHeadingMenuClose}\r\n                                            >\r\n                                                <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                                <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                                <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                                <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                                <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                                <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                            </Menu>\r\n\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraph');}}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\"\r\n                                                >\r\n                                                    Paragraph\r\n                                                </Button>\r\n                                            </Box>\r\n                                            <Box mr={2} mb={1} clone={true} >\r\n                                                <Button\r\n                                                    onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                                    variant='contained'\r\n                                                    color=\"primary\" \r\n                                                >\r\n                                                    Paragraph-Image\r\n                                                </Button>\r\n                                            </Box> \r\n                                    </Box>\r\n\r\n                                </FormGroup>\r\n \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Settings \r\n                                </Typography>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-container-label\"\r\n                                            id=\"inner-container-style\"\r\n                                            value={settingInnerContainer}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"inner-paper-label\"\r\n                                            id=\"inner-paper-style\"\r\n                                            value={settingIsPaper}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                                \r\n                                <Typography  variant={'h6'} gutterBottom  >\r\n                                    Styles \r\n                                </Typography>\r\n                                <React.Fragment>\r\n                                    {/* display */}\r\n                                    <Box className={classes.inputGroup}>\r\n\r\n                                        <Tooltip title=\"Для корректной работы margin у элементов внутри контейнера рекомендуется оставить display: flex, flexDirection: column\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                className={classes.inputNumber}\r\n                                                fullWidth\r\n                                            >\r\n                                                <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"display-style-label\"\r\n                                                    id=\"display-style\"\r\n                                                    value={display}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={'block'}>Block</MenuItem>  \r\n                                                    <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {\r\n                                                display === 'flex' &&\r\n                                                <FormControl \r\n                                                    variant='filled' \r\n                                                    size='small'   \r\n                                                    className={classes.inputNumber}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                                    <Select\r\n                                                        labelId=\"direction-style-label\"\r\n                                                        id=\"direction-style\"\r\n                                                        value={flexDirection}\r\n                                                        onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                                    >\r\n                                                        <MenuItem value={'row'}>Row</MenuItem>  \r\n                                                        <MenuItem value={'column'}>Column</MenuItem>  \r\n                                                        <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                                        <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                                    </Select>\r\n                                                </FormControl>   \r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* margin */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'top');  } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Margin Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={margin.bottom}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handleMargin(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                    {/* padding */}\r\n                                    <Box className={classes.inputGroup}>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Top\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.top}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); handlePadding(e, 'top') } }     \r\n                                            />\r\n                                            <TextField \r\n                                                className={classes.inputNumber}\r\n                                                type='number'\r\n                                                label=\"Padding Bottom\" \r\n                                                variant=\"filled\" \r\n                                                size='small'  \r\n                                                value={padding.bottom}\r\n                                                onChange={ (e) => {setIsDisableBtn(false); handlePadding(e, 'bottom') } }     \r\n                                            />\r\n                                        </Box>\r\n                                        \r\n\r\n                                    </Box>\r\n                                    \r\n                                    {/* bg-color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography  component={'h6'} gutterBottom  >\r\n                                                Background  \r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setBackgroundColor(newColor.hex) \r\n                                                }}\r\n\r\n                                            /> \r\n                                        </Box> \r\n                                        <Box \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <Typography component={'h6'} gutterBottom  >\r\n                                                Color text\r\n                                            </Typography>\r\n                                            <TwitterPicker\r\n                                                width={'100%'}\r\n                                                triangle={'hide'}\r\n                                                colors={[   '#f44336', '#4e36f4', '#36f477', 'rgb(244, 214, 54)']} \r\n                                                onChangeComplete={(newColor) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setColor(newColor.hex) \r\n                                                }} \r\n                                            /> \r\n                                        </Box> \r\n                                      \r\n                                    </Box>\r\n                                    \r\n                                    {/* color */}\r\n                                    <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"shadow-style-label\"\r\n                                                id=\"shadow-style\"\r\n                                                value={shadow}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                                <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                                0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                                <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                                0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                                <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                                0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl> \r\n                                        \r\n                                    </Box>\r\n                                     \r\n                                    {/* border */}\r\n                                    <Box className={classes.inputGroup}> \r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='color'\r\n                                                    label=\"Border Color\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderColor}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderColor(e.target.value)} }     \r\n                                            />\r\n                                            <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='number'\r\n                                                    label=\"Border Radius\" \r\n                                                    variant=\"filled\" \r\n                                                    size='small'  \r\n                                                    value={borderRadius}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false);  setBorderRadius(Number(e.target.value)) } }     \r\n                                            />\r\n\r\n                                        </Box>\r\n                                        <Box display=\"flex\" flexDirection=\"row\" > \r\n\r\n                                        <TextField \r\n                                            className={classes.inputNumber}\r\n                                            type='number'\r\n                                            label=\"Border Width\" \r\n                                            variant=\"filled\" \r\n                                            size='small'  \r\n                                            value={borderWidth}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);setBorderWidth(Number(e.target.value))} }     \r\n                                        />\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                                <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                                <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                                <MenuItem value={'double'}>Double</MenuItem>\r\n                                                <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                                <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                                <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                                <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                                <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    </Box>\r\n\r\n                                    <Box  className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={reSaveClassesSettings}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                   \r\n                                </React.Fragment> \r\n\r\n                            </Box> \r\n                    </Drawer>\r\n                {/*  DrawerContainer */} \r\n            </Box>                        \r\n            \r\n            <DumbComponent\r\n                reSaveChildren={reSaveChildren}\r\n                removeItem={removeItem}\r\n                data={props.data} \r\n                classes={myClassName}\r\n                settings={propsSettings}\r\n            />  \r\n           \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    }\r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev && \r\n                <StyledComponent   \r\n                    data={props.data} \r\n                    reSaveContainer={props.reSaveContainer}\r\n                    reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                    removeContainer={props.removeContainer}    \r\n                    swapContainer={props.swapContainer}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev &&  \r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button } from '@material-ui/core'\r\n\r\nimport '../../../assets/main-banner.scss'\r\n\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n  \r\n    \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        if(color === 'primary')  color = theme.palette.primary.main\r\n        if(color === 'secondary') color = theme.palette.secondary.main \r\n \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `2px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary\r\n            },\r\n            button: {\r\n                border: `2px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                '&:hover' : {\r\n                    background: 'none', \r\n                    color: theme.palette.text.primary\r\n                }\r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } \r\n        } )\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"mac-main-banner\">\r\n            <Container maxWidth='lg'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={7} className=\"col-12 col-lg-7\">\r\n                        <div className=\"mac-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                <svg style={{fill: '#fff'}}>       \r\n                                    <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                </svg>\r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"mac-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"mac-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} className=\"col-lg-5\"> \r\n                        <div className=\"mac-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';  \r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) { \r\n            console.log(props.data.color)\r\n            setColorSelect('custom')\r\n        }\r\n    }, []) \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle : { \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: 50,\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: '100% ',  \r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n      \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e, imageType) => { \r\n        const imageData = e.target.files[0]\r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => {  \r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                  if(imageType === 'icon') setIconUrl(url)\r\n\r\n                  if(imageType === 'mainImage') setImageUrl(url) \r\n              })\r\n          }\r\n        ) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            <Tooltip title='Get Up' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >  \r\n                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                </Button>\r\n                            </Tooltip> \r\n                            <Tooltip title='Get Down' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки банера <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button> \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <img src={iconUrl} alt='icon' width={35} />\r\n                                            \r\n                                        </Box> \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Sub Heading\" \r\n                                            variant=\"outlined\" \r\n                                            size='small'  \r\n                                            value={subHeading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Форма\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Input Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={inputLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setInputLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <TextField   \r\n                                                fullWidth\r\n                                                type='text'\r\n                                                label=\"Form Button Label\" \r\n                                                size='small'  \r\n                                                variant=\"outlined\"  \r\n                                                value={buttonLabel}\r\n                                                onChange={ (e) => { setIsDisableBtn(false); setButtonLabel(e.target.value) } }     \r\n                                            />\r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                        <TextField   \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Form Policy\" \r\n                                            size='small'  \r\n                                            variant=\"outlined\"  \r\n                                            value={policy}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPolicy(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <TextField    \r\n                                                    type='text'\r\n                                                    label=\"Set Custom Color on #hex\"  \r\n                                                    variant=\"outlined\"  \r\n                                                    value={colorCustom}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false); setColorCustom(e.target.value)  } }     \r\n                                                />\r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'> \r\n                                            <Button color='primary' variant='contained'> \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            <img src={imageUrl} alt='main' width={'100%'} />\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/accordion.scss'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        if(color === 'primary')  color = theme.palette.primary.main\r\n        if(color === 'secondary') color = theme.palette.secondary.main \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className=\"mac-accordion heading\">\r\n            <Container maxWidth={'lg'} className={classes.disableMobileGutters}>\r\n\r\n                <h3> { heading } </h3> \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"mac-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"mac-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport Draggable from 'react-draggable';  \r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n \r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(props.data.color !== 'primary' && props.data.color !== 'secondary' ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle : { \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: 50,\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: '100% ',  \r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n      \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        \r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItem = (index, value, place) => { \r\n        const newItems = items.slice()\r\n        newItems[index][place] = value\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = () => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: \"heading\",\r\n            body: \"body\"\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newItems = items.slice()\r\n        newItems.splice(index, 1) \r\n \r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            <Tooltip title='Get Up' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >  \r\n                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                </Button>\r\n                            </Tooltip> \r\n                            <Tooltip title='Get Down' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки аккордиона  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={3}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                <Tooltip title='Get Up' placement='top'>\r\n                                                                    <Button   \r\n                                                                        onClick={() => { swapItem('up', index) }}\r\n                                                                        size='small'\r\n                                                                        variant='contained'\r\n                                                                        color='primary' \r\n                                                                        disabled={index === 0 ? true : false }\r\n                                                                    >  \r\n                                                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                    </Button>\r\n                                                                </Tooltip> \r\n                                                                <Tooltip title='Get Down' placement='top'>\r\n                                                                    <Button   \r\n                                                                        onClick={() => { swapItem('down', index) }} \r\n                                                                        size='small'\r\n                                                                        variant='contained'\r\n                                                                        color='primary' \r\n                                                                        disabled={items.length - 1 === index ? true : false }\r\n                                                                    >     \r\n                                                                    { console.log(items.length, index)}\r\n                                                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n\r\n\r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Head\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.head}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'head') } }     \r\n                                                            /> \r\n                                                        </Box>\r\n                                                        \r\n                                                        <Box mt={1}>\r\n                                                            <TextField  \r\n                                                                fullWidth\r\n                                                                type='text'\r\n                                                                label=\"Body\" \r\n                                                                variant=\"outlined\"  \r\n                                                                value={item.body}\r\n                                                                onChange={ (e) => {  handleUpdateItem(index, e.target.value, 'body') } }     \r\n                                                            />\r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <Box my={2}>\r\n                                            <Button \r\n                                                variant='contained' \r\n                                                color='primary'\r\n                                                onClick={addItem}\r\n                                            >\r\n                                                Add item\r\n                                            </Button>\r\n                                        </Box>\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                                            <InputLabel id=\"color-select-label\">Color for Form and SubHeading</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"color-select-label\"\r\n                                                id=\"color-select\"\r\n                                                value={colorSelect}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setColorSelect(e.target.value)   }}\r\n                                            >\r\n                                                <MenuItem value={'primary'}>Primary</MenuItem>\r\n                                                <MenuItem value={'secondary'}>Secondary</MenuItem>\r\n                                                <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Box ml={1} >\r\n                                            {\r\n                                                colorSelect === 'custom' &&\r\n                                                <TextField    \r\n                                                    type='text'\r\n                                                    label=\"Set Custom Color on #hex\"  \r\n                                                    variant=\"outlined\"  \r\n                                                    value={colorCustom}\r\n                                                    onChange={ (e) => { setIsDisableBtn(false); setColorCustom(e.target.value)  } }     \r\n                                                />\r\n                                            }\r\n                                            \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                    \r\n                                    \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';  \r\n\r\nimport { \r\n    Button, Box, Tooltip, TextField, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    console.log(props)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle : { \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: 50,\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: '100% ',  \r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n      \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.mapFrame = mapFrame === '' ? null : mapFrame \r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            <Tooltip title='Get Up' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >  \r\n                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                </Button>\r\n                            </Tooltip> \r\n                            <Tooltip title='Get Down' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки контактов  <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Location\" \r\n                                            variant=\"outlined\"  \r\n                                            value={location}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setLocation(e.target.value) } }     \r\n                                        />\r\n                                    </Box>  \r\n                                    <Box mt={3} >   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={phone}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setPhone(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Map Frame\" \r\n                                            variant=\"outlined\"  \r\n                                            value={mapFrame}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setMapFrame(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                    { \r\n                                        !mapFrame && \r\n                                        <Typography color='secondary'>\r\n                                            If <b>Map Frame</b> is null layout have another view!\r\n                                        </Typography>\r\n                                    }\r\n                                    \r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport firebase from '../../../firebase/firebase'\r\nimport Draggable from 'react-draggable';  \r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, TextField, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    \r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image) \r\n\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        btnDrawerStyle : { \r\n            position: 'absolute',  \r\n            top: 0, \r\n            left: 0, \r\n            zIndex: 1030,   \r\n            minWidth: 50, \r\n            opacity: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`,\r\n        }, \r\n        btnDrawerItem: { \r\n            backgroundColor: theme.palette.error.dark, \r\n            '&:hover': { \r\n                backgroundColor: theme.palette.secondary.dark,   \r\n            }, \r\n        },\r\n        containerWrapper: {\r\n            position: 'relative', \r\n            outline: \"1px solid #ffffff00\", \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover' : {\r\n                outlineColor: `${theme.palette.error.main}`,\r\n                '& $mtView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $mbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $ptView' : { \r\n                    opacity: 1\r\n                },\r\n                '& $pbView' : { \r\n                    opacity: 1\r\n                }, \r\n                '& $btnDrawerStyle': {\r\n                    opacity: 1\r\n                }\r\n            },   \r\n            \r\n        },\r\n        menu: {    \r\n            position: \"absolute\", \r\n            left: 50,\r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            padding: 10 , \r\n            paddingBottom: 0, \r\n            maxWidth: '100% ',  \r\n            width: 'calc( 100% - 100px )',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            borderBottom: '1px solid #eaeaea',\r\n            paddingBottom: 6,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSave: { \r\n            position: 'sticky', \r\n            zIndex: theme.zIndex.tooltip,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 80, \r\n            backgroundColor: theme.palette.background.paper, \r\n            \r\n            '&>button': {\r\n                marginTop: 20, \r\n                marginBottom: 30, \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n      \r\n    }))\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e) => { \r\n        const imageData = e.target.files[0]\r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => {  \r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => { \r\n                  setImageUrl(url) \r\n              })\r\n          }\r\n        ) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        \r\n        newData.image = imageUrl\r\n \r\n        props.reSaveItem(props.data.id, newData) \r\n        handleClose()\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            <Tooltip title='Get Up' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >  \r\n                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                </Button>\r\n                            </Tooltip> \r\n                            <Tooltip title='Get Down' placement='right'>\r\n                                <Button   \r\n                                    onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        Настройки банера <OpenWithIcon/>\r\n                                    </Typography> \r\n                                    <Box mt={2}>  \r\n                                        <TextField  \r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Main Heading\" \r\n                                            variant=\"outlined\"  \r\n                                            value={heading}\r\n                                            onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                        />\r\n                                    </Box> \r\n                                     \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <TextField  \r\n                                            multiline\r\n                                            fullWidth\r\n                                            type='text'\r\n                                            label=\"Paragraph\" \r\n                                            variant=\"outlined\"  \r\n                                            value={paragraph}\r\n                                            onChange={ (e) => { setIsDisableBtn(false);  setParagraph(e.target.value)  } }     \r\n                                        />\r\n                                    </Box> \r\n                                        \r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'> \r\n                                            <Button color='primary' variant='contained'> \r\n                                                <label htmlFor='image-input-label'> Set image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e)}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            <img src={imageUrl} alt='main' width={'100%'} />\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box>\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '10px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent  } from \"@material-ui/core\"; \r\n \r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext'\r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation()\r\n  const theme = useTheme(); \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({ \r\n    \r\n    btnSetting: { \r\n        position: 'absolute', \r\n        zIndex: 1031, \r\n        top: 0, \r\n        left: 80,\r\n        backgroundColor: theme.palette.error.dark,   \r\n        minWidth: 30, \r\n        maxWidth: 40, \r\n        minHeight: 38, \r\n        transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n        '&:hover': { \r\n          backgroundColor: theme.palette.secondary.dark,   \r\n        }, \r\n        '&>span': {\r\n            display: 'flex', \r\n            flexDirection: 'column', \r\n            fontSize: 10\r\n        }\r\n    } ,\r\n      \r\n    btnContainer: {\r\n      position: 'relative',\r\n      '&:hover $btnSetting' : {\r\n        opacity: 1\r\n      }\r\n    },\r\n    menu: {    \r\n      position: \"absolute\", \r\n      left: \"calc(50% - 200px)\",\r\n      top: 50, \r\n      backgroundColor: theme.palette.background.paper, \r\n      padding: 10 , \r\n      paddingBottom: 0, \r\n      maxWidth: 400,  \r\n      width: 400,\r\n      maxHeight: 'calc(100vh - 100px)', \r\n      minHeight: 500,\r\n      overflowY: 'scroll',  \r\n    },\r\n    menuTitle: {\r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between', \r\n        fontSize: 14, \r\n        borderBottom: '1px solid #eaeaea',\r\n        paddingBottom: 6,\r\n        marginBottom: 10, \r\n        cursor: 'move'\r\n    },\r\n\r\n  }))\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n  \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container') newCont = Object.assign({}, ContainerLayout) \r\n    if(type === 'mainBanner') newCont = Object.assign({}, MainBannerLayout) \r\n    if(type === 'accordion') newCont = Object.assign({}, AccordionLayout) \r\n    if(type === 'contactMap') newCont = Object.assign({}, СontactMapLayout) \r\n    if(type === 'about') newCont = Object.assign({}, AboutLayout) \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n      \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n              />\r\n          )\r\n        } \r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <React.Fragment> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <Box className={classes.btnContainer}  >\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                          <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Действия для страницы  <OpenWithIcon/>\r\n                            </Typography> \r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                  Add new container\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                  Add Main Banner\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                  Add Accordion\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                  Add Contacts with Map\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                  Add About\r\n                              </Button> \r\n                            </Box>\r\n                            <Box m={1}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </Box>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/ScrollToTop'\r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n\r\n// import Home from '../components/Home'\r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n\r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n  \r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n            {\r\n                isLoading && \r\n                <LoadingProgress/>\r\n            }\r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                    <Switch>\r\n                        { \r\n                            categories.map( category => {\r\n                                const breadcrumbs = [\r\n                                    {\r\n                                        title: category.title,\r\n                                        slug: category.slug\r\n                                    } \r\n                                ]\r\n                                return (\r\n                                    <Route \r\n                                        key={category.id}\r\n                                        exact\r\n                                        path={`/${category.slug}`}\r\n                                        render={\r\n                                            (props) => {\r\n                                                if(category.slug === '/') { \r\n                                                    return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                }\r\n                                                //if === concacts => return contacts .... \r\n                                                return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        }\r\n                                    />  \r\n                                ) \r\n                            })\r\n                        }\r\n                        { \r\n                            categories.map( category => (\r\n                                category.pages.length > 0 &&\r\n                                category.pages.map( page => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        }, \r\n                                        {\r\n                                            title: page.title,\r\n                                            slug: `${category.slug}/${page.slug}`\r\n                                        }\r\n                                    ]\r\n                                    return(\r\n                                        <Route \r\n                                            key={page.id}\r\n                                            exact\r\n                                            path={`/${category.slug}/${page.slug}`}\r\n                                            render = {\r\n                                                (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                            }\r\n                                        />\r\n                                        )\r\n                                })\r\n                            ))\r\n                        }\r\n         \r\n                        <Route path='/login' render={ () => <Login/> } />\r\n\r\n                        <Route path='*' render={ () => <Error/> } />\r\n                         \r\n                    </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nfunction AlertComponent(props) {\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 160px)',\r\n                width: 320,\r\n                maxWidth: \"100%\", \r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center'\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        props.closeAlert()\r\n    }\r\n\r\n    const alertText = () => {\r\n        if(props.severity === 'success') return \"Ваша заявка успешно принята\"\r\n        if(props.severity === 'error') return \"Произошла ошибка :(\"\r\n    }\r\n\r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={props.severity} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n            >\r\n                { alertText() }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert, closeAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert severity={isShowAlert} closeAlert={closeAlert} /> \r\n            }\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\nimport './assets/style.scss'\n\n\n\n\n\n  \nconst App = () => {   \n\n  return (\n    <SendFormProvider>\n      <ImageProvider> \n\n        <CategoryProvider>\n          <LibraryProvider>\n              <ModeProvider> \n                  <LoadingProvider>\n                      <div className=\"App\">  \n                        <ThemeComponent/> \n                      </div>\n                  </LoadingProvider> \n              </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n      </ImageProvider>\n    </SendFormProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}