{"version":3,"sources":["context/modeContext/ModeContext.js","firebase/firebase.js","context/modeContext/ModeProvider.js","context/headerContext/CategoryContext.js","context/headerContext/CategoryProvider.js","context/loadingContext/LoadingContext.js","context/loadingContext/LoadingProvider.js","context/libraryContext/LibraryContext.js","context/libraryContext/LibraryProvider.js","context/imageContext/ImageContext.js","context/imageContext/ImageProvider.js","context/sendFormContext/SendFormContext.js","context/sendFormContext/SendFormProvider.js","context/modalContext/ModalContext.js","context/modalContext/ModalProvider.js","components/functions/ScrollToTop.js","components/placeholders/LoadingProgress.js","styles/changers.js","components/header/headerHelpers/category/AddCategory.js","components/header/headerHelpers/category/AddPage.js","components/header/headerHelpers/category/ChangeCategory.js","components/header/headerHelpers/category/ChangePage.js","components/header/headerHelpers/CategoriesChanger.js","components/library/colorPicker/ColorPicker.js","components/library/colorPicker/ColorSelecter.js","components/header/headerHelpers/LogoChanger.js","components/header/headerHelpers/StyleChanger.js","components/header/headerHelpers/ThemeChanger.js","components/header/headerHelpers/ModalChanger.js","components/header/headerHelpers/RequestsChanger.js","assets/icons/half-moon.svg","assets/icons/sun.svg","components/header/dumb/ThemeSwitcher.js","components/header/dumb/desktop.js","components/header/dumb/mobile.js","components/library/colorPicker/ColorCalculation.js","components/header/dumb/DumbComponent.js","components/header/StyledComponent.js","components/header/ElementCreator.js","components/header/Header.js","components/footer/Footer.js","components/Login.js","components/Error.js","styles/inputs.js","components/functions/InputChange.js","components/library/container/StyledComponent.js","components/library/heading/DumbComponent.js","components/library/heading/StyledComponent.js","components/library/heading/ElementCreator.js","components/library/list/DumbComponent.js","components/library/list/StyledComponent.js","components/library/list/ElementCreator.js","components/library/paragraph/DumbComponent.js","components/library/paragraph/StyledComponent.js","components/library/paragraph/ElementCreator.js","components/library/paragraphImage/DumbComponent.js","components/library/image/DumbComponent.js","components/library/paragraphImage/StyledComponent.js","components/library/paragraphImage/ElementCreator.js","components/library/container/DumbComponent.js","components/library/container/ElementCreator.js","components/library/mainBanner/DumbComponent.js","components/library/mainBanner/StyledComponent.js","components/library/mainBanner/ElementCreator.js","components/library/accordion/DumbComponent.js","components/library/accordion/AddItem.js","components/library/accordion/ChangeItem.js","components/library/accordion/StyledComponent.js","components/library/accordion/ElementCreator.js","components/library/contactMap/DumbComponent.js","components/library/contactMap/StyledComponent.js","components/library/contactMap/ElementCreator.js","components/library/about/DumbComponent.js","components/library/about/StyledComponent.js","components/library/about/ElementCreator.js","components/library/actionLine/DumbComponent.js","components/library/actionLine/StyledComponent.js","components/library/actionLine/ElementCreator.js","components/library/table/DumbComponent.js","components/library/table/AddItem.js","components/library/table/ChangeItem.js","components/library/table/StyledComponent.js","components/library/table/ElementCreator.js","components/library/formLine/DumbComponent.js","components/library/formLine/StyledComponent.js","components/library/formLine/ElementCreator.js","components/library/swiper/DumbComponent.js","components/library/swiper/AddItem.js","components/library/swiper/StyledComponent.js","components/library/swiper/ElementCreator.js","components/library/banner/DumbComponent.js","components/library/banner/StyledComponent.js","components/library/banner/ElementCreator.js","components/placeholders/SkeletonPage.js","components/placeholders/Breadcrumbs.js","components/pages/SinglePage.js","Router/RouterComponent.js","components/modal/DumbComponent.js","components/placeholders/Alert.js","theme/ThemeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ModeContext","React","createContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","initializeApp","this","db","firestore","storage","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","ModeProvider","state","isLogin","user","onAuthStateChanged","window","innerWidth","setState","console","log","Provider","value","modeDev","props","children","Component","CategoryContext","CategoryProvider","idArrayForDelete","categories","logo","image","mainText","subText","modalHeader","isModal","color","text","settings","themeDark","themeLight","themeMode","localStorage","getItem","categoryRef","collection","doc","get","exists","data","list","headerSettings","update","slug","delete","array","map","item","deletePage","modal","dark","light","clearArrayForDelete","setThemeMode","mode","setItem","updateTheme","updateLogo","updateSettings","setCategories","updateCategories","deletePageFromFirebase","deleteCategoryFromFirebase","deleteCategory","LoadingContext","LoadingProvider","isLoading","setIsLoading","LibraryContext","LibraryProvider","layouts","library","ImageContext","ImageProvider","name","storageRef","ref","imageRef","child","images","removeImage","removeImagesFromArray","SendFormContext","SendFormProvider","requests","modalSettings","isShowAlert","requestsRef","newDate","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","setTimeout","req","newList","slice","newReq","Object","assign","time","getCurrentDate","push","closeAlertFromTimeout","updateRequests","updateModalSettings","sendRequests","closeAlert","ModalContext","ModalProvider","target","open","handleOpen","newTarget","handleClose","ScrollToTop","pathname","useLocation","useEffect","scrollTo","top","behavior","LoadingProgress","classes","makeStyles","root","position","zIndex","left","right","width","height","lineStyle","backgroundColor","barStyle","backgroundImage","useStyles","className","LinearProgress","colorPrimary","bar","StylesChangers","theme","menu","palette","background","paper","paddingLeft","paddingRight","maxHeight","minHeight","overflowY","menuTitle","display","alignItems","justifyContent","fontSize","fontWeight","borderBottom","divider","default","padding","marginBottom","cursor","btnSetting","deepOrange","minWidth","transition","transitions","easing","easeInOut","duration","shorter","flexDirection","btnSave","bottom","paddingTop","paddingBottom","opacity","btnWithLabel","spacing","btnDrawerStyle","easeIn","btnDrawerItem","secondary","containerWrapper","outline","outlineOffset","responseValues","margin","marginRight","responseTablets","border","success","fill","responseMobile","mobileTooltip","tabletTooltip","AddCategory","useState","newCategoryTitle","setNewCategoryTitle","newCategorySlug","setNewCategorySlug","onSubmit","e","preventDefault","addCategory","FormGroup","Box","mb","TextField","required","fullWidth","label","variant","onChange","style","Tooltip","title","placement","IconButton","Button","type","AddPage","newPageTitle","setNewPageTitle","newPageSlug","setNewPageSlug","addPage","id","Typography","gutterBottom","size","ChangeCategory","setValue","disabled","onClick","handleUpdateCategory","ml","itemPages","handleUpdatePage","CategoriesChanger","useContext","pageLayout","page","categoryLayout","category","localCategories","setLocalCategories","setOpen","isDisableBtn","setIsDisableBtn","commonClasses","classesRef","maxWidth","listPages","marginTop","listStyle","titlePages","accordionContainer","accordionHeader","deleteBtn","movingBtn","deletePageBtn","movingPageBtn","pageBox","pageBoxLi","fade","newTitle","newSlug","newCategories","newPage","JSON","parse","stringify","uuid","pages","categoryId","pageId","swapCategory","direction","activeIndex","indexOf","length","movedItem","placeItem","swapPage","activeCategory","dumbWrapper","Modal","aria-labelledby","onClose","DialogContent","handle","cancel","component","Grid","container","xs","newCategory","index","disableElevation","confirm","filtered","filter","deleted","arrayOfPagesForDelete","ButtonGroup","orientation","aria-label","Accordion","AccordionSummary","expandIcon","aria-controls","p","indexPages","ChangePage","mt","startIcon","ColorPicker","memo","initialColor","changeColor","noInherit","setColor","isOpen","setIsOpen","isDisableSaveIcon","setIsDisableSaveIcon","contrastColor","getContrastText","primary","boxColor","flexGrow","borderRadius","shape","shortest","boxShadow","shadows","boxPicker","iconButton","iconButtonDisabled","prevOpen","onChangeComplete","newColor","hex","ColorSelecter","colorSelect","setColorSelect","colorCustom","setColorCustom","isContrastSelect","block","main","warning","info","defaultColor","colorCustomText","FormControl","InputLabel","Select","labelId","MenuItem","LogoChanger","setMainText","setSubText","setImage","imageName","setImageName","setIsModal","modalText","setModalText","modalTarget","setModalTarget","uploadHandler","imageData","put","on","snapshot","message","getDownloadURL","url","htmlFor","event","files","src","alt","Divider","FormControlLabel","control","Switch","checked","mr","newLogo","newModal","StyleChanger","disableGutters","settingGutter","setSettingGutter","fixed","settingFixed","setSettingFixed","settingMaxWidth","setSettingMaxWidth","breakpoint","settingBreakpoint","setSettingBreakpoint","settingBoxShadow","setSettingBoxShadow","paddingY","settingPadding","setSettingPadding","settingPosition","setSettingPosition","settingBackgroundSelect","setSettingBackgroundSelect","settingBackgroundCustom","setSettingBackgroundCustom","settingsItem","row","Number","newSettings","ThemeChanger","lightBackgroundDefault","setLightBackgroundDefault","lightBackgroundPaper","setLightBackgroundPaper","darkBackgroundDefault","setDarkBackgroundDefault","darkBackgroundPaper","setDarkBackgroundPaper","lightPrimary","setLightPrimary","darkPrimary","setDarkPrimary","lightSecondary","setLightSecondary","darkSecondary","setDarkSecondary","lightError","setLightError","darkError","setDarkError","lightWarning","setLightWarning","darkWarning","setDarkWarning","lightInfo","setLightInfo","darkInfo","setDarkInfo","lightSuccess","setLightSuccess","darkSuccess","setDarkSuccess","colorPreview","colorItem","flexWrap","RequestsChanger","heading","setHeading","subHeading","setSubHeading","targetText","setTargetText","buttonText","setButtonText","policy","setPolicy","colorButton","inputName","setInputName","inputPhone","setInputPhone","amber","my","newData","localRequests","setLocalRequests","isOnlyUncheked","setIsOnlyUncheked","cardRoot","checkbox","marginLeft","OnceCard","card","Card","CardContent","keys","innerIndex","String","CardActions","isCheck","handleOnceCheck","handleRemove","Checkbox","request","ThemeSwitcher","ThemeCustomSwitch","withStyles","switchBase","transform","darkThemeIcon","thumb","lightThemeIcon","backgroundSize","backgroundPosition","track","create","focusVisible","focusVisibleClassName","disableRipple","Desktop","menuButton","menuButtonLink","textTransform","breakpoints","values","lg","menuLink","colorHeader","textDecoration","hoverActiveLinkColor","menuInnerLink","menuButtonInnerLi","toolbar","listUnstyle","Toolbar","mx","modalBtn","clone","exact","to","pl","List","disablePadding","Paper","innerItem","ListItem","button","ListItemText","Mobile","drawerContainer","mobileLink","accordionReset","drawerHeader","drawerOpen","setDrawerOpen","handleDrawerClose","Drawer","anchor","handleSignOut","content","indexPage","borderTop","px","edge","iconColor","getColorByPalette","getColorByPaletteForGradient","getColorByPaletteReverse","isNoThemeColor","DumbComponent","iconMobileDrawerColor","widthMobile","mobileView","setMobileView","backgroundHeader","modalBtnColor1","modalBtnColor2","headerRef","useRef","topHeaderRef","darken","header","fixedPadding","topHeader","lighten","logoMain","textAlign","whiteSpace","lineHeight","logoSub","logoImage","buttonModal","linkModal","setResponsiveness","setScrollHeader","headerTop","pageYOffset","current","classList","add","remove","err","addEventListener","removeEventListener","openModal","logout","createLogo","createModalBtn","renderModal","Fragment","AppBar","Container","StyledComponent","headerContainer","hiddenButtonGroup","btnSettings","btnSettingsItem","ModalChanger","ElementCreator","Header","Footer","contrastFooter","backgroundFooter","footer","down","buttonToTop","handleClickToTop","Login","setName","setPassword","setError","isRedirect","setIsRedirect","isSubmit","setIsSubmit","avatar","form","submitBtn","forgotTitle","disableCheck","Avatar","CircularProgress","loginWithEmail","res","autoComplete","autoFocus","Alert","severity","Error","StyledInputs","inputNumber","inputGroup","dumbItemContainer","dumbItem","dumbItemDelete","mtView","mbView","ptView","pbView","InputChange","multiline","valueLocal","setValueLocal","onBlur","ContainerElement","libraryHeading","libraryParagraph","paragraph","libraryParagraphImage","paragraphImage","libraryList","setPadding","setMargin","setDisplay","setFlexDirection","backgroundSelect","setBackgroundSelect","backgroundCustom","setBackgroundCustom","borderColor","borderColorSelect","setBorderColorSelect","borderColorCustom","setBorderColorCustom","shadow","setShadow","borderStyle","setBorderStyle","borderWidth","setBorderWidth","setBorderRadius","innerContainer","settingInnerContainer","setSettingInnerContainer","isPaper","settingIsPaper","setSettingIsPaper","anchorEl","setAnchorEl","propsSettings","bgTheme","colorTheme","borderTheme","commonStyle","styleRef","myClassName","handlePadding","newPadding","handleMargin","newMargin","handleHeadingMenuClose","addHeading","a","newChildren","newItem","reSaveContainer","reSaveContainerStyleSettings","aria-haspopup","currentTarget","keepMounted","Boolean","tooltip","resposiveFontSize","classeForResp","responseFont","textChildren","dangerouslySetInnerHTML","__html","setTextAlign","setFontSize","setFontWeight","setLineHeight","isResponsiveFont","setIsResponsiveFont","textInDumb","setTextInDumb","outlineColor","swapHeading","swapChildrens","viewCorrect","sentData","reSaveChildren","handleSave","prop","isFirst","isLast","removeItem","liClass","itemsStyle","mobileClass","items","setPaddingLeft","setItems","itemsPadding","setItemsPadding","itemsListStyle","setItemsListStyle","setNewItem","mobileMarginTopComputed","mobileMarginBottomComputed","swapItem","newItems","swapList","handleItemChange","splice","deleteItem","swapParagraph","imageBorderColor","imageClassName","imageStyle","imageStabilization","sm","imageUrl","titleImg","imageBorderColorSelect","setImageBorderColorSelect","imageBorderColorCustom","setImageBorderColorCustom","setImageUrl","imageTitle","setImageTitle","imagePlacement","setImagePlacement","imageWidth","setImageWidth","imageHeight","setImageHeight","imageBorderStyle","setImageBorderStyle","imageBorderWidth","setImageBorderWidth","imageBorderRadius","setImageBorderRadius","float","imageFloat","setImageFloat","imageMargin","setImageMargin","imageBorderTheme","imageAccordion","imagePreview","imageLabel","handleImageMargin","handleImageUpload","generateImageName","downloadURL","pt","pb","align","styleClass","noPadding","yesPadding","isPaperClassForContainer","isPaperClassForPaper","renderItems","orderFirst","orderLast","createArrayImages","forEach","swapContainer","removeContainer","newArr","colorFocusInput","formPhone","setFormPhone","titleMain","titleSubText","headingIcon","titleSubIcon","icon","inputLabel","buttonLabel","maxWidthContainer","input","up","webkitMaskImage","maskImage","webkitMask","mask","webkitMaskSize","maskSize","md","xlinkHref","phone","place","placeholder","setParagraph","setInputLabel","setButtonLabel","iconUrl","setIconUrl","iconName","setIconName","setMarginTop","setMarginBottom","setMaxWidthContainer","tabletMarginTopComputed","tabletMarginBottomComputed","imageType","reSaveItem","disableMobileGutters","colorNumber","indexForDisplay","head","body","AddItem","newItemTitle","setNewItemTitle","newItemBody","setNewItemBody","addItem","ChangeItem","setHead","setBody","handleUpdateItem","itemLayout","colorMapOnload","formName","setFormName","formComment","setFormComment","mapHtml","mapFrame","location","inputComment","svg","itemBackground","fontFamily","link","boxForFlex","heightRegular","linksContainer","viewBox","d","version","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","href","comment","cols","rows","setLocation","setPhone","setInputComment","setMapFrame","isButton","setIsButton","textButton","targetButton","setTextButton","setTargetButton","headingSize","colorMain","containerColored","containerFlexed","setHeadingSize","CustomizedTables","mainColor","tableRow","visibleRows","visibleBottonText","visibleBottonTextClick","isBotton","isBottonClick","setIsBottonClick","StyledTableRow","TableRow","table","tableCell","tableButtonCell","tableButton","tableContainer","tableHeader","handleVisible","OnceRow","hover","TableCell","scope","price","TableContainer","Table","TableHead","TableBody","newItemPrice","setNewItemPrice","setPrice","handleRowChange","setRows","setTableRow","setVisibleRows","setVisibleBottonText","setVisibleBottonTextClick","handleTableHeadChange","newRow","newRows","rowLayout","lineDecor","gridItem","SwiperCore","use","Navigation","slidesForView","slidesPerView","slidesForViewTablet","slidesPerViewTablet","slidesForViewMobile","slidesPerViewMobile","spaceBetween","speed","loop","freeMode","slides","slideHeight","setSlideHeight","slideRef","swiper","slide","overflow","slideBox","slideImg","backgroundRepeat","slideTitle","actualWidth","getWidthViewport","slideHeightCalc","clientWidth","600","960","navigation","onSlideChange","renderSlide","newImageName","setNewImageName","newImageUrl","setNewImageUrl","newImageTitle","setNewImageTitle","addSlide","replace","setSlidesPerView","setSlidesPerViewTablet","setSlidesPerViewMobile","setSpaceBetween","setSpeed","setLoop","setFreeMode","setSlides","imageForDelete","setImageForDelete","dumbSlide","dumbSlideButtons","dumbSlideTitle","tooltipReload","swipeSlide","newSlides","element","imgArray","newImageForDelete","deletedImageName","removeSlide","handleSlideTitle","colorText","paddingVertical","bannerBackground","bannerContent","setMinHeight","colorTextSelect","setColorTextSelect","colorTextCustom","setColorTextCustom","setPaddingVertical","paddingVerticalComputed","colorButtonTheme","colorTextTheme","SkeletonPage","Skeleton","animation","SimpleBreadcrumbs","breadcrumbsContainer","breadcrumbLink","breadcrumbs","Breadcrumbs","separator","crumb","SinglePage","pageSlug","slugForUpdate","ContainerLayout","MainBannerLayout","mainBanner","AccordionLayout","accordion","СontactMapLayout","contactMap","AboutLayout","about","ActionLineLayout","actionLine","TableLayout","FormLineLayout","formLine","SwiperLayout","BannerLayout","banner","setData","btnContainer","boxMenuItem","fetchData","document","metaTitle","pageRef","set","childrenContainer","elem","addContainer","newCont","innerHeight","history","key","RouterComponent","basename","path","render","TransitionsModal","colorGradient1","colorGradient2","closeBtn","targetContainer","targetLabel","closeModal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","AlertComponent","alertContainer","alert","ThemeComponent","themeCreate","createMuiTheme","ThemeProvider","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e2290079.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModeContext = React.createContext()\r\n\r\nexport default ModeContext","import firebase from 'firebase'\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmMnCcIyz_t3G5Ia3zaiiMTLtQyrUt1Eg\",\r\n    authDomain: \"sitebuilder-74d57.firebaseapp.com\",\r\n    projectId: \"sitebuilder-74d57\",\r\n    storageBucket: \"sitebuilder-74d57.appspot.com\",\r\n    messagingSenderId: \"590275119909\",\r\n    appId: \"1:590275119909:web:5d50bcbd54a317647428cc\"\r\n}; \r\n \r\n\r\nclass Firebase { \r\n    constructor() {\r\n        const firebaseApp =  firebase.initializeApp(firebaseConfig)\r\n        this.db = firebaseApp.firestore()\r\n        this.storage = firebaseApp.storage()\r\n        this.auth = firebaseApp.auth() \r\n    }   \r\n    async registerWithGoogle() {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // // The signed-in user info.\r\n            // var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            // var errorMessage = error.message;\r\n            // // The email of the user's account used.\r\n            // var email = error.email;\r\n            // // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            // ...\r\n          }); \r\n    }\r\n    async registerWithEmail(email, password) { \r\n        await this.auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n    async loginWithEmail(email, password) { \r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    async logout() {\r\n        return this.auth.signOut()\r\n    }\r\n}\r\n \r\nexport default new Firebase()","import React from 'react';\r\n\r\nimport ModeContext from './ModeContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class ModeProvider extends React.Component { \r\n\r\n    state = {  \r\n        isLogin: false,\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth.onAuthStateChanged( (user) => {\r\n            if(user) {  \r\n                if(window.innerWidth > 600) { \r\n                    this.setState({\r\n                        isLogin: true,\r\n                        user: user\r\n                    })\r\n                } \r\n                else this.setState({\r\n                    isLogin: false,\r\n                    user: user\r\n                })\r\n            }\r\n            else { \r\n                console.log('no user')\r\n                this.setState({\r\n                    isLogin: false,\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ModeContext.Provider\r\n                value={{\r\n                    modeDev: this.state.isLogin,\r\n                    user: this.state.user\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModeContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst CategoryContext = React.createContext()\r\n\r\nexport default CategoryContext ","import React from 'react';\r\n\r\nimport CategoryContext from './CategoryContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class CategoryProvider extends React.Component { \r\n\r\n    state = { \r\n        idArrayForDelete: [],\r\n        categories: [],\r\n        logo: {\r\n            image: '', \r\n            mainText: '', \r\n            subText: ''\r\n        },\r\n        modalHeader: {\r\n            isModal: false, \r\n            color: '',  \r\n            text: '' \r\n        },\r\n        settings: {}, \r\n        themeDark: {},\r\n        themeLight: {},\r\n        themeMode: localStorage.getItem('siteBuilderThemeMode'),\r\n        \r\n        // imageList: [], \r\n    }\r\n    \r\n \r\n    \r\n\r\n\r\n    async componentDidMount() {\r\n        const categoryRef = firebase.db.collection(\"site1category\").doc('categoryList')\r\n        const doc = await categoryRef.get();\r\n         \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such categories!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                categories: doc.data().list,\r\n                logo: doc.data().logo,\r\n                modalHeader: doc.data().modalHeader,\r\n                settings: doc.data().headerSettings, \r\n                themeDark: doc.data().themeDark, \r\n                themeLight: doc.data().themeLight,  \r\n            }) \r\n        } \r\n        \r\n        // this.fetchListFromStorage()\r\n    } \r\n    // fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .then( () => {\r\n    //         this.setState({\r\n    //             imageList: imagesArray\r\n    //         })\r\n    //     })\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n        \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 700);\r\n        \r\n    // }\r\n\r\n    async updateCategories(data) { \r\n        await firebase.db.collection(\"site1category\").doc('categoryList').update({\r\n            list: data\r\n        })\r\n    }\r\n\r\n    async deletePage(slug) {    \r\n        // const pageRef = firebase.db.collection(\"site1\").doc(slug)\r\n        // const doc = await pageRef.get();\r\n        \r\n        // let idArray = []\r\n\r\n        // if (!doc.exists) {\r\n        //     console.log('No such page!');  \r\n        // } else { \r\n        //     const items = doc.data().items\r\n        //     items.forEach(item => {\r\n        //         if(item.type === 'container') { \r\n        //             item.children.forEach( child => {\r\n        //                 if(child.type === 'paragraphImage') {\r\n        //                     idArray.push(child.id)\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //         else {  \r\n        //             idArray.push(item.id)\r\n        //         }\r\n        //     });\r\n        // }\r\n        // this.setState({\r\n        //     idArrayForDelete: idArray\r\n        // })\r\n\r\n        // await pageRef.delete()\r\n        // // .then( () => {\r\n        // //     setTimeout(() => {\r\n        // //         this.setState({\r\n        // //             idArrayForDelete: []\r\n        // //         })\r\n        // //     }, 1000);\r\n        // // })\r\n        // .then( () => {\r\n        //     this.state.imageList.forEach( imageName => {\r\n        //         idArray.forEach(id => {\r\n        //             if(imageName.includes(id)) this.removeImage(imageName)\r\n        //         })\r\n        //     })\r\n        // })\r\n        await firebase.db.collection('site1').doc(slug).delete()\r\n    }\r\n    // async removeImage(name) { \r\n    //     if(name !== '') {\r\n    //         const storageRef = firebase.storage.ref();\r\n \r\n    //         const imageRef = storageRef.child(name)\r\n        \r\n    //         try {\r\n    //             await imageRef.delete().then(function() {\r\n    //                 console.log('File deleted successfully')\r\n    //             }).catch(function(error) {\r\n    //                 console.log(error) \r\n    //             }); \r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    deleteCategory(array) {\r\n        array.map( item => {\r\n            this.deletePage(item)\r\n            return 0\r\n        })\r\n    }\r\n\r\n    async updateLogo(logo, modal) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            logo: logo,\r\n            modalHeader: modal\r\n        })\r\n    }\r\n    async updateSettings(settings) {   \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            headerSettings: settings\r\n        })\r\n    }\r\n    async updateTheme(dark, light) {     \r\n      \r\n        await firebase.db.collection('site1category').doc('categoryList').update({\r\n            themeDark: dark, \r\n            themeLight: light, \r\n        })   \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <CategoryContext.Provider\r\n                value={{\r\n                    idArrayForDelete: this.state.idArrayForDelete, \r\n                    categories: this.state.categories,\r\n                    logo: this.state.logo,\r\n                    modal: this.state.modalHeader,\r\n                    settings: this.state.settings,\r\n                    themeMode: this.state.themeMode,\r\n                    themeDark: this.state.themeDark,\r\n                    themeLight: this.state.themeLight,\r\n                    clearArrayForDelete: () => {\r\n                        this.setState({\r\n                            idArrayForDelete: []\r\n                        })\r\n                    }, \r\n                    setThemeMode: (mode) => { \r\n                        localStorage.setItem('siteBuilderThemeMode', mode)\r\n                        this.setState({\r\n                            themeMode: mode\r\n                        })\r\n                    },\r\n                    updateTheme: (dark, light) => {\r\n                        this.setState({\r\n                            themeDark: dark,\r\n                            themeLight: light \r\n                        })\r\n                         \r\n                        this.updateTheme(dark, light)\r\n                    },\r\n                    updateLogo: (logo, modal) => { \r\n                        this.setState({\r\n                            logo: logo,\r\n                            modalHeader: modal\r\n                        })\r\n                        this.updateLogo(logo, modal) \r\n                    }, \r\n                    updateSettings: (data) => { \r\n                        this.setState({\r\n                            settings: data\r\n                        })\r\n                        this.updateSettings(data) \r\n                    }, \r\n                    setCategories: (data) => {\r\n                        this.setState({\r\n                            categories: data\r\n                        })\r\n                        this.updateCategories(data) \r\n                    }, \r\n                    deletePageFromFirebase: (slug) => {\r\n                        this.deletePage(slug)\r\n                    },\r\n                    deleteCategoryFromFirebase: (array) => {\r\n                        this.deleteCategory(array)\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </CategoryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingContext = React.createContext()\r\n\r\nexport default LoadingContext","import React from 'react';\r\n\r\nimport LoadingContext from './LoadingContext'\r\n \r\n\r\nexport default class LoadingProvider extends React.Component { \r\n\r\n    state = { \r\n        isLoading: true \r\n    }\r\n  \r\n    render() {\r\n        return(\r\n            <LoadingContext.Provider\r\n                value={{\r\n                    isLoading: this.state.isLoading,\r\n                    setIsLoading: (value) => { \r\n                        this.setState({\r\n                            isLoading: value\r\n                        })\r\n                    } \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LoadingContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LibraryContext = React.createContext()\r\n\r\nexport default LibraryContext","import React from 'react';\r\n\r\nimport LibraryContext from './LibraryContext'\r\n  \r\nimport library from '../../data/library.json'\r\n\r\nexport default class LibraryProvider extends React.Component { \r\n\r\n    state = { \r\n        layouts: library\r\n    }\r\n \r\n    render() {  \r\n        return(\r\n            <LibraryContext.Provider\r\n                value={{ \r\n                    layouts: this.state.layouts \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </LibraryContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ImageContext = React.createContext()\r\n\r\nexport default ImageContext","import React from 'react';\r\nimport  firebase from '../../firebase/firebase'\r\n \r\nimport ImageContext from './ImageContext'\r\n \r\n\r\nexport default class ImageProvider extends React.Component { \r\n\r\n    // state = {  \r\n    //     imageList: [], \r\n    // } \r\n\r\n    // async componentDidMount() { \r\n    //       this.fetchListFromStorage()\r\n    //     //   this.fetchListFromFirestore()\r\n    // }\r\n\r\n    // async fetchListFromStorage() {\r\n    //     const listRef = firebase.storage.ref(); \r\n        \r\n    //     let imagesArray = []\r\n\r\n    //     await listRef.listAll()\r\n    //     .then( \r\n    //         function(res) {\r\n    //             res.items.forEach(function(itemRef) { \r\n    //                 imagesArray.push(itemRef.fullPath)\r\n    //             }) \r\n    //         }\r\n    //     )\r\n    //     .catch(function(error) {\r\n    //         console.log(error) \r\n    //     });\r\n\r\n\r\n    //     this.setState({\r\n    //         imageList: imagesArray\r\n    //     }) \r\n\r\n    //     setTimeout(() => {\r\n    //         console.log(this.state.imageList, imagesArray)\r\n    //     }, 500);\r\n        \r\n    // }\r\n\r\n    // async addImageToList(newImage, oldName) {\r\n    //     const newList = this.state.imageList.slice()\r\n    //     let newItem\r\n    //     let isNew = true\r\n    //     let isNeedUpdate = newImage.name === oldName ? false : true \r\n    //     if(isNeedUpdate) { \r\n    //         for(let i = 0; i < newList.length; i++) {\r\n    //             if(newList[i].name === newImage.name) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity++ \r\n    //                 isNew = false\r\n    //             }\r\n    //             if(newList[i].name === oldName) {\r\n    //                 //уже было загружено\r\n    //                 newList[i].quantity--  \r\n    //                 if( newList[i].quantity === 0 ) { \r\n    //                     this.removeImage(oldName) \r\n    //                     newList.splice(i, 1)\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //         if(isNew) {\r\n    //             newItem = {\r\n    //                 name: newImage.name, \r\n    //                 url: newImage.url, \r\n    //                 quantity: 1\r\n    //             }\r\n    //             newList.push(newItem)\r\n    //         }\r\n    //     }\r\n    //     else { \r\n    //         console.log(newImage, oldName)\r\n    //     }\r\n         \r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })\r\n \r\n    //     console.log(this.state.imageList, oldName)\r\n\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    // async fetchListFromFirestore() {\r\n    //     const listRef = firebase.db.collection(\"site1category\").doc('imageList')\r\n    //     const doc = await listRef.get();\r\n      \r\n    //     if (!doc.exists) {\r\n    //         console.log('No such page!');  \r\n\r\n    //     } else { \r\n    //         this.setState({\r\n    //             imageList: doc.data().list\r\n    //         }) \r\n    //     }\r\n    // }\r\n    // async uploadImage(imageData, oldName) { \r\n    //     const storageRef = await firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n    //     const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n    //     const newImage = {\r\n    //         url: downloadURL, \r\n    //         name: imageData.name, \r\n    //         quantity: 1\r\n    //     }\r\n    //     this.addImageToList(newImage, oldName)\r\n  \r\n    // }\r\n    // async updateList(newList) {\r\n    //     await firebase.db.collection(\"site1category\").doc(\"imageList\").update({\r\n    //         list: newList, \r\n    //     }).then(() => { \r\n    //         this.setState({\r\n    //             imageList: newList\r\n    //         })\r\n    //     })\r\n    // }\r\n \r\n    // removeImageFromStoreAndList(name) {\r\n    //     console.log(name)\r\n    //     const newList = this.state.imageList.slice()\r\n    //     newList.map( (item, index) => {\r\n    //         if(item.name === name) {\r\n    //             item.quantity--\r\n    //             if(item.quantity === 0) newList.splice(index, 1)\r\n    //         }\r\n    //     })\r\n    //     this.setState({\r\n    //         imageList: newList\r\n    //     })  \r\n    //     this.removeImage(name)\r\n    //     this.updateList(newList)\r\n    // }\r\n\r\n    async removeImage(name) { \r\n        if(name !== '') {\r\n            const storageRef = firebase.storage.ref();\r\n \r\n            const imageRef = storageRef.child(name)\r\n        \r\n            try {\r\n                await imageRef.delete().then(function() {\r\n                    console.log('File deleted successfully')\r\n                }).catch(function(error) {\r\n                    console.log(error) \r\n                }); \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n    removeImagesFromArray(images) {\r\n        console.log(images)\r\n    }\r\n   \r\n\r\n    render() {\r\n        return(\r\n            <ImageContext.Provider\r\n                value={{\r\n                    // imageList: this.state.imageList, \r\n                    // nameList: this.state.nameList ,\r\n                    \r\n                    removeImage: (name) => {\r\n                        this.removeImage(name)\r\n                    },\r\n                    removeImagesFromArray: (array) => {\r\n                        this.removeImagesFromArray(array)\r\n                    },\r\n                    // removeImageFromStoreAndList: (name) => {\r\n                    //     this.removeImageFromStoreAndList(name)\r\n                    // },\r\n                    // uploadImage: (data, name) => {\r\n                    //     this.uploadImage(data, name)\r\n                    // }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ImageContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst SendFormContext = React.createContext()\r\n\r\nexport default SendFormContext","import React from 'react';\r\n\r\nimport SendFormContext from './SendFormContext'\r\n\r\nimport firebase from '../../firebase/firebase'\r\n\r\nexport default class SendFormProvider extends React.Component { \r\n\r\n    state = {   \r\n        requests: [], \r\n        modalSettings: {}, \r\n        isShowAlert: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const requestsRef = firebase.db.collection(\"site1category\").doc('requests')\r\n        const doc = await requestsRef.get(); \r\n\r\n        if (!doc.exists) {\r\n            console.log('No such requests!'); \r\n        } \r\n        else { \r\n            this.setState({\r\n                requests: doc.data().list, \r\n                modalSettings: doc.data().modalSettings, \r\n            })  \r\n        } \r\n    }\r\n    getCurrentDate() { \r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let minute = newDate.getMinutes();\r\n        let second = newDate.getSeconds();\r\n        \r\n        return `${year}/${month<10?`0${month}`:`${month}`}/${date}; ${hour}:${minute}:${second}`\r\n    }\r\n    closeAlertFromTimeout() {\r\n        setTimeout(() => {\r\n            this.setState({ \r\n                isShowAlert: null\r\n            })\r\n        }, 7000);\r\n    }\r\n\r\n    async sendRequests(req) { \r\n        \r\n\r\n        const newList = this.state.requests.slice()\r\n        const newReq = Object.assign({\r\n            time: this.getCurrentDate()\r\n        }, req)\r\n        newList.push(newReq)\r\n \r\n        this.setState({  \r\n            isShowAlert: 'info'\r\n        })\r\n        \r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: newList, \r\n        }).then(() => { \r\n            this.setState({ \r\n                requests: newList, \r\n                isShowAlert: 'success'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n\r\n          }).catch( () => {\r\n            this.setState({ \r\n                isShowAlert: 'error'\r\n            })\r\n            this.closeAlertFromTimeout()\r\n          })\r\n    }\r\n \r\n    async updateRequests(req) {\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            list: req, \r\n        }) \r\n    }\r\n    \r\n    async updateModalSettings(settings) {\r\n        this.setState({\r\n            modalSettings: settings\r\n        })\r\n        await firebase.db.collection(\"site1category\").doc('requests').update({\r\n            modalSettings: settings, \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <SendFormContext.Provider\r\n                value={{\r\n                    requests: this.state.requests, \r\n                    isShowAlert: this.state.isShowAlert, \r\n                    modalSettings: this.state.modalSettings, \r\n                    \r\n                    updateRequests: (req) => {\r\n                        this.updateRequests(req)\r\n                    },\r\n                    updateModalSettings: (settings) => {\r\n                        this.updateModalSettings(settings)\r\n                    },\r\n                    sendRequests: (req) => {\r\n                        this.sendRequests(req)\r\n                    },\r\n                    closeAlert: () => {\r\n                        this.setState({\r\n                            isShowAlert: null\r\n                        })\r\n\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </SendFormContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ModalContext = React.createContext()\r\n\r\nexport default ModalContext","import React from 'react';\r\n\r\nimport ModalContext from './ModalContext'\r\n \r\n\r\nexport default class ModalProvider extends React.Component { \r\n\r\n    state = {  \r\n        target: '',\r\n        open: false\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <ModalContext.Provider\r\n                value={{\r\n                    target: this.state.target,\r\n                    open: this.state.open,\r\n                    handleOpen: (newTarget) => { \r\n                        this.setState({\r\n                            open: true, \r\n                            target: newTarget\r\n                        })\r\n                    }, \r\n                    handleClose: () => {\r\n                        this.setState({\r\n                            open: false, \r\n                            target: ''\r\n                        })\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </ModalContext.Provider>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => { \r\n    window.scrollTo({\r\n        top: 0, \r\n        behavior: \"auto\"\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nfunction LoadingProgress() {\r\n\r\n    const useStyles = makeStyles( () => ({\r\n        root: {\r\n            position: 'fixed', \r\n            zIndex: 1500, \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            width: '100%',  \r\n            height: 2\r\n        },\r\n        lineStyle: {  \r\n            backgroundColor: \"rgba(0,0,0,0)\"\r\n        },\r\n        barStyle: { \r\n            backgroundColor: \"rgb(214,0,166)\",\r\n            backgroundImage: 'linear-gradient(90deg, rgba(214,0,166,0.5) 0%, rgba(0,255,158,0.7) 100%)'\r\n        }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n            <LinearProgress classes={{\r\n                colorPrimary: classes.lineStyle,\r\n                bar: classes.barStyle\r\n            }} /> \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default LoadingProgress\r\n"," \r\n \r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst StylesChangers = () => {  \r\n    \r\n    const changers = (theme) => ({\r\n        menu: {    \r\n            position: \"absolute\",  \r\n            top: 50, \r\n            backgroundColor: theme.palette.background.paper, \r\n            paddingLeft: 10 , \r\n            paddingRight: 10 , \r\n            // paddingBottom: 50,   \r\n            width: '100%',\r\n            maxHeight: 'calc(100vh - 100px)', \r\n            minHeight: 500,\r\n            overflowY: 'scroll',  \r\n        },\r\n        menuTitle: {\r\n            position: 'sticky', \r\n            zIndex: 100, \r\n            top: 0,  \r\n\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'space-between', \r\n            fontSize: 14, \r\n            fontWeight: 700, \r\n            borderBottom: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.default, \r\n            padding: 10,\r\n            marginBottom: 10, \r\n            cursor: 'move'\r\n        },\r\n        btnSetting: { \r\n            backgroundColor: deepOrange[800], \r\n            minWidth: 80,  \r\n            maxHeight: 50, \r\n            transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n            '&:hover': {\r\n                backgroundColor: deepOrange[700], \r\n            }, \r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            }\r\n        },\r\n        btnSave: {\r\n            position: 'sticky', \r\n            zIndex: 15,\r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            height: 70, \r\n            paddingTop: 20,  \r\n            paddingBottom: 70, \r\n\r\n            backgroundColor: theme.palette.background.paper, \r\n            '&>button': { \r\n                opacity: 1,  \r\n                paddingLeft: 40, \r\n                paddingRight: 40\r\n            }\r\n        },\r\n        btnWithLabel: {\r\n            padding: 0, \r\n            '& label': {\r\n                padding: theme.spacing(1, 2), \r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n\r\n        btnDrawerStyle: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1030,\r\n            minWidth: 50,\r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        btnDrawerItem: {\r\n            backgroundColor: theme.palette.error.dark,\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark\r\n            }\r\n        },\r\n        containerWrapper: {\r\n            position: 'relative',\r\n            outline: \"1px solid #ffffff00\",\r\n            outlineOffset: 0, \r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`,\r\n            '&:hover': {\r\n                // outlineColor: `${theme.palette.error.main}`,\r\n                // zIndex: 100, \r\n                 \r\n                // '& $mtView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $mbView' : { \r\n                //     opacity: 1\r\n                // },\r\n                // '& $btnDrawerStyle' : { \r\n                //     opacity: 1\r\n                // }\r\n            }\r\n        },\r\n        responseValues: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            padding: theme.spacing(1, 2),\r\n            margin: theme.spacing(1, 0), \r\n            '& p': {\r\n                margin: 0\r\n            },\r\n            '& svg': {\r\n                marginRight: 8, \r\n            }\r\n        }, \r\n        responseTablets: { \r\n            border: `1px solid ${theme.palette.success.dark}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.dark \r\n            }\r\n        },\r\n        responseMobile: { \r\n            border: `1px solid ${theme.palette.success.light}`, \r\n            '& svg': {\r\n                fill: theme.palette.success.light \r\n            }\r\n        },\r\n        mobileTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.light\r\n        },\r\n        tabletTooltip: {\r\n            fontSize: 13, \r\n            backgroundColor: theme.palette.success.dark\r\n        }\r\n    })\r\n \r\n    return changers \r\n}\r\n\r\nexport default StylesChangers \r\n","import React from 'react'\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\n\r\nconst AddCategory = (props) => {\r\n\r\n    \r\n    const [newCategoryTitle, setNewCategoryTitle] = React.useState('')\r\n    const [newCategorySlug, setNewCategorySlug] = React.useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.addCategory(newCategoryTitle, newCategorySlug)\r\n        \r\n        setNewCategoryTitle('') \r\n        setNewCategorySlug('')\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <Box mb={1}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label=\"Category title\" \r\n                        variant=\"outlined\" \r\n                        value={newCategoryTitle}\r\n                        onChange={(e) => { setNewCategoryTitle(e.target.value) }}\r\n                    />\r\n                </Box>\r\n                <Box mb={1} style={{position: 'relative'}}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        label=\"Category slug\" \r\n                        variant=\"outlined\" \r\n                        value={newCategorySlug}\r\n                        onChange={(e) => { setNewCategorySlug( e.target.value)}}\r\n                            \r\n                    />\r\n                    <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                        <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                            <InfoOutlined color={'secondary'}/>\r\n                        </IconButton>\r\n                    </Tooltip> \r\n                </Box>\r\n                <Box mb={1}>\r\n                    <Button \r\n                        type='submit'\r\n                        color={'primary'} \r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                    >\r\n                        Add New Category\r\n                    </Button> \r\n                </Box>\r\n            </FormGroup>\r\n\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup,\r\n    IconButton,\r\n    Typography, \r\n} from '@material-ui/core' \r\n  \r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n\r\nconst AddPage = (props) => {\r\n     \r\n    const [newPageTitle, setNewPageTitle] = React.useState('')\r\n    const [newPageSlug, setNewPageSlug] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addPage(newPageTitle, newPageSlug, props.id)\r\n        setNewPageTitle('')\r\n        setNewPageSlug('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box display='flex' justifyContent={'flex-end'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new page</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New page title\" \r\n                            variant=\"outlined\" \r\n                            value={newPageTitle}\r\n                            onChange={(e) => { setNewPageTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New page slug\" \r\n                            variant=\"outlined\" \r\n                            value={newPageSlug}\r\n                            onChange={(e) => { setNewPageSlug(e.target.value)}}\r\n                            \r\n                        />\r\n                        <Tooltip title=\"You can't rewrite slug in future\" placement='left'  >\r\n                            <IconButton style={{position: 'absolute', top: 3, right: 3}}>\r\n                                <InfoOutlined size={10} color={'secondary'}/>\r\n                            </IconButton>\r\n                        </Tooltip> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Page\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddPage\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n\r\n    const [value, setValue] = useState(props.item.title)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdateCategory(value, props.item.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.item.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Category ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.item.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField  \r\n                    required\r\n                    type='text' \r\n                    label=\"Category title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue(e.target.value)}}\r\n                />     \r\n                <TextField \r\n                    type='text' \r\n                    label=\"Category slug (read only)\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.item.slug} \r\n                    disabled={true} \r\n                />  \r\n            </Box> \r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst ChangeCategory = (props) => {\r\n\r\n    const [value, setValue] = useState(props.itemPages.title)\r\n \r\n    const handleSave = () => {\r\n        props.handleUpdatePage(value, props.item.id, props.itemPages.id)\r\n    }\r\n\r\n    return ( \r\n        <Box display='flex' alignItems=\"center\">\r\n            {\r\n                value === props.itemPages.title ?\r\n                <IconButton disabled={true} color={'primary'} >\r\n                    <CheckCircleOutlineIcon />\r\n                </IconButton> \r\n                :\r\n                <Tooltip title={`Save Page ${value}`} placement='top'>\r\n                    <IconButton onClick={handleSave} disabled={value === props.itemPages.title} color={'primary'} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                </Tooltip>\r\n            }\r\n            \r\n            <Box ml={1}>\r\n                <TextField \r\n                    required\r\n                    type='text' \r\n                    label=\"Page title\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={value} \r\n                    onChange={(e) => {setValue( e.target.value )}}\r\n                />     \r\n                <TextField  \r\n                    type='text' \r\n                    label=\"Page slug\"\r\n                    fullWidth\r\n                    variant='filled'\r\n                    value={props.itemPages.slug} \r\n                    disabled={true}\r\n                />  \r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeCategory\r\n","import React from 'react'\r\nimport uuid from 'react-uuid'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport AddCategory from './category/AddCategory'\r\nimport AddPage from './category/AddPage'\r\nimport ChangeCategory from './category/ChangeCategory'\r\nimport ChangePage from './category/ChangePage'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Accordion, \r\n    AccordionSummary, \r\n    Box,\r\n    makeStyles,  \r\n    ButtonGroup, \r\n    Grid,\r\n    fade,  \r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined';\r\n \r\n\r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction CategoriesChanger() { \r\n\r\n    console.log('CategoriesChanger')\r\n     \r\n    const {categories, setCategories, deletePageFromFirebase, deleteCategoryFromFirebase} = React.useContext(CategoryContext)    \r\n    const {layouts} = React.useContext(LibraryContext)\r\n    const pageLayout = layouts.page\r\n    const categoryLayout = layouts.category\r\n \r\n    const [localCategories, setLocalCategories] = React.useState(categories)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n\r\n    \r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n       \r\n        return( { \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,\r\n\r\n            listPages : {\r\n                marginTop: 20, \r\n                paddingLeft: 25, \r\n                '&>li' : { \r\n                    listStyle: 'none',\r\n                    marginBottom: 5\r\n                }\r\n            },\r\n            titlePages: {\r\n                fontSize: 14, \r\n                fontWeight: 600, \r\n                borderBottom: `1px solid ${theme.palette.divider}`,\r\n                marginBottom: 12\r\n            }, \r\n            accordionContainer: {\r\n                position: 'relative', \r\n                '&:hover $deleteBtn': {\r\n                    opacity: 1\r\n                },\r\n                '&:hover $movingBtn': {\r\n                    opacity: 1\r\n                }, \r\n            },\r\n            accordionHeader: {\r\n                paddingRight: 30, \r\n                paddingLeft: 25,     \r\n            },\r\n            deleteBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 5, \r\n                right: 5, \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25,\r\n                opacity: 0, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingBtn: {\r\n                position: 'absolute', \r\n                zIndex: 10,\r\n                top: 0, \r\n                left: -5,\r\n                opacity: 0,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            deletePageBtn: {  \r\n                backgroundColor: '#e83b3b', \r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                minWidth: 25, \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&:hover ': { \r\n                    backgroundColor: '#c40b0b' \r\n                }\r\n            },\r\n            movingPageBtn: { \r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut} opacity`,\r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            }, \r\n            pageBox: {\r\n                display: 'flex',  \r\n                justifyContent: 'space-between', \r\n                alignItems: 'center', \r\n                marginBottom: theme.spacing(2), \r\n            }, \r\n            pageBoxLi: {\r\n                padding: 5, \r\n                border: `1px solid ${fade(theme.palette.success.light, 0.3)}`\r\n\r\n            }\r\n        \r\n        } )\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const addCategory = (newTitle, newSlug) => {\r\n        let newList = categories.slice() \r\n        let newCategory = JSON.parse(JSON.stringify(categoryLayout)); \r\n\r\n        newCategory.id = uuid()\r\n        newCategory.title = newTitle\r\n        newCategory.slug = newSlug\r\n        newList.push(newCategory)\r\n \r\n        setCategories(newList) \r\n    }\r\n    const addPage = (newTitle, newSlug, id) => {  \r\n        \r\n        let newCategories = categories.slice()\r\n        \r\n        let newPage = JSON.parse(JSON.stringify(pageLayout));  \r\n        newPage.id = uuid()\r\n        newPage.title = newTitle\r\n        newPage.slug = newSlug\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === id) {  \r\n                item.pages.push(newPage)\r\n            }\r\n            return 0 \r\n        })\r\n\r\n        setCategories(newCategories)  \r\n    } \r\n     \r\n    const handleUpdateCategory = (value, id) => {  \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === id ) { \r\n                item.title = value\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleUpdatePage = ( value, categoryId, pageId) => { \r\n        let newCategories = localCategories.slice() \r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId ) { \r\n                \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) {\r\n                        page.title = value\r\n                    }\r\n                    return 0 \r\n                })\r\n            }\r\n            return 0\r\n        })  \r\n        setLocalCategories(newCategories)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleSave = () => { \r\n        setCategories(localCategories) \r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const swapCategory = (direction, id) => {\r\n        let newCategories = categories.slice() \r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === id) {\r\n            activeIndex = newCategories.indexOf(item) \r\n          }\r\n          return 0 \r\n        }) \r\n \r\n     \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newCategories.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex - 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newCategories[activeIndex]\r\n          const placeItem = newCategories[activeIndex + 1]\r\n    \r\n          newCategories[activeIndex] = placeItem\r\n          newCategories[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setCategories(newCategories) \r\n    } \r\n    const swapPage = (direction, categoryId, pageId) => {\r\n        let newCategories = categories.slice() \r\n        let activeCategory = []\r\n        let activeIndex   \r\n     \r\n        newCategories.map( (item) => { \r\n          if(item.id === categoryId) { \r\n                activeCategory = item \r\n                item.pages.map( page => {\r\n                    if(page.id === pageId) { \r\n                        activeIndex = item.pages.indexOf(page) \r\n                    }\r\n                    return 0 \r\n                }) \r\n          }\r\n          return 0 \r\n        }) \r\n  \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === activeCategory.pages.length - 1 ) return\r\n          \r\n        if(direction === 'up') { \r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex - 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = activeCategory.pages[activeIndex]\r\n          const placeItem = activeCategory.pages[activeIndex + 1]\r\n    \r\n          activeCategory.pages[activeIndex] = placeItem\r\n          activeCategory.pages[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n\r\n        newCategories.map( (item) => { \r\n            if(item.id === categoryId) { \r\n                item = activeCategory  \r\n            }\r\n            return 0 \r\n        })  \r\n\r\n        setCategories(newCategories)\r\n    }\r\n    const deleteCategory = (id) => { \r\n        const conf = window.confirm('Delete category?')\r\n        if(conf) {\r\n            let filtered = categories.filter((item) => (item.id !== id))  \r\n            const deleted = categories.filter( (item) => (item.id === id))\r\n            let arrayOfPagesForDelete = [] \r\n\r\n            arrayOfPagesForDelete.push(deleted[0].slug)\r\n            if(deleted[0].pages.length > 0) {\r\n                deleted[0].pages.map((item) => {\r\n                    arrayOfPagesForDelete.push(item.slug)\r\n                    return 0\r\n                })\r\n            }\r\n\r\n            setCategories(filtered)  \r\n            deleteCategoryFromFirebase(arrayOfPagesForDelete)\r\n        }  \r\n    } \r\n    const deletePage = ( categoryId, pageId, slug) => {\r\n        const conf = window.confirm('Delete page?')\r\n            if(conf) {\r\n            categories.map( category => {\r\n                if(category.id === categoryId) {  \r\n                    let filtered = category.pages.filter((item) => (item.id !== pageId))  \r\n                    category.pages = filtered\r\n                }\r\n                return 0 \r\n            }) \r\n            setCategories(categories)  \r\n\r\n            deletePageFromFirebase(slug)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Categories Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Categories</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Category list changer <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Grid container direction=\"row\" spacing={1}>\r\n                                <Grid item xs={4} >\r\n                                    <AddCategory addCategory={addCategory} />\r\n                                </Grid>\r\n                                <Grid item xs={8} >\r\n                                    {\r\n                                        categories.map( (item, index) => {  \r\n                                            return (\r\n                                                <Box  key={index} className={classes.accordionContainer} >\r\n                                                    {\r\n                                                        item.slug === '/' ?\r\n                                                        <Tooltip title=\"You can't remove Home Category\" placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}  \r\n                                                            > \r\n                                                                <InfoOutlined style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button> \r\n                                                        </Tooltip>\r\n                                                        :\r\n                                                        <Tooltip title='Delete Category' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"default\"\r\n                                                                disableElevation={true}\r\n                                                                className={classes.deleteBtn}\r\n                                                                onClick={() => { deleteCategory(item.id) }}\r\n                                                            > \r\n                                                                <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n\r\n                                                    <ButtonGroup\r\n                                                        orientation=\"vertical\"\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"vertical contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingBtn}\r\n                                                    >  \r\n                                                        { \r\n                                                            categories.indexOf(item) !== 0 ?\r\n                                                            <Tooltip title='Get Up' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('up', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === 0 ? true : false }\r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                            :\r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                        {\r\n                                                            categories.indexOf(item) !== categories.length - 1 ?  \r\n                                                            <Tooltip title='Get Down' placement='right'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapCategory('down', item.id) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary' \r\n                                                                    disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip> \r\n                                                            : \r\n                                                            <Button    \r\n                                                                size='small'\r\n                                                                variant='contained'\r\n                                                                color='primary' \r\n                                                                disabled={true}\r\n                                                            >     \r\n                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        }\r\n                                                         \r\n                                                    </ButtonGroup>\r\n                                                    \r\n                                                    <Accordion>\r\n                                                        <AccordionSummary\r\n                                                            expandIcon={<ExpandMoreIcon />}\r\n                                                            aria-controls=\"image-settings-content\"\r\n                                                            id=\"panel1a-header\" \r\n                                                            className={classes.accordionHeader} \r\n                                                        >\r\n                                                            <Typography variant='h6'> Category: {item.title} </Typography> \r\n\r\n                                                            \r\n                                                        </AccordionSummary>\r\n                                                        <Box p={2}  > \r\n                                                            \r\n                                                            <ChangeCategory item={item} handleUpdateCategory={handleUpdateCategory}  />\r\n\r\n                                                            <ul className={classes.listPages}>  \r\n                                                                <Typography className={classes.titlePages}>\r\n                                                                    Pages List:\r\n                                                                </Typography>\r\n                                                                {\r\n                                                                    item.pages.length > 0 &&\r\n                                                                    item.pages.map((itemPages, indexPages) => (\r\n                                                                        <li key={indexPages}  className={classes.pageBoxLi}  >\r\n                                                                            <Box className={classes.pageBox}  >\r\n                                                                                <Typography >Page: { itemPages.title } </Typography>\r\n                                                                                <ButtonGroup \r\n                                                                                    color=\"primary\"\r\n                                                                                    aria-label=\"contained primary button group\"\r\n                                                                                    variant=\"contained\"\r\n                                                                                    className={classes.movingPageBtn}\r\n                                                                                >  \r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== 0 &&\r\n                                                                                        <Tooltip title='Get Up' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('up', item.id, itemPages.id) }}\r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === 0 ? true : false }\r\n                                                                                            >  \r\n                                                                                                <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.pages.indexOf(itemPages) !== item.pages.length - 1 &&\r\n                                                                                        <Tooltip title='Get Down' placement='top'>\r\n                                                                                            <Button   \r\n                                                                                                onClick={() => { swapPage('down', item.id, itemPages.id) }} \r\n                                                                                                size='small'\r\n                                                                                                variant='contained'\r\n                                                                                                color='primary' \r\n                                                                                                disabled={item.pages.indexOf(itemPages) === item.pages.length - 1 ? true : false }\r\n                                                                                            >     \r\n                                                                                                <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                            </Button>\r\n                                                                                        </Tooltip>\r\n                                                                                    }\r\n                                                                                      \r\n                                                                                    <Tooltip title='Delete Page' placement='top'>\r\n                                                                                        <Button\r\n                                                                                            variant='contained'\r\n                                                                                            color=\"default\"\r\n                                                                                            disableElevation={true}\r\n                                                                                            className={classes.deletePageBtn}\r\n                                                                                            onClick={() => { deletePage(item.id, itemPages.id, itemPages.slug) }}\r\n                                                                                        > \r\n                                                                                            <DeleteOutlineIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                                        </Button>\r\n                                                                                    </Tooltip>  \r\n                                                                                </ButtonGroup>\r\n                                                                            </Box>\r\n                                                                            \r\n                                                                            <ChangePage handleUpdatePage={handleUpdatePage} item={item} itemPages={itemPages} /> \r\n                                                                        </li>\r\n                                                                    ))\r\n                                                                }\r\n                                                                {\r\n                                                                    item.pages.length === 0 && \r\n                                                                    <Typography gutterBottom >No Pages </Typography>\r\n                                                                }\r\n                                                                <li>\r\n\r\n                                                                    <AddPage addPage={addPage} id={item.id} />    \r\n                                                                 \r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </Box>\r\n                                                    </Accordion>\r\n                                                </Box>\r\n                                            )  \r\n                                        })\r\n                                    }\r\n                                    <Box className={classes.btnSave} mt={2}>\r\n                                        <Button \r\n                                            color={'primary'} \r\n                                            variant=\"contained\"\r\n                                            onClick={handleSave}\r\n                                            startIcon={<SaveIcon/>}\r\n                                            disabled={isDisableBtn}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            \r\n                           \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesChanger ","import React, { memo, useState, useEffect } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { IconButton, Box, makeStyles, Button, Tooltip } from \"@material-ui/core\"\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nexport const ColorPicker = memo(({ initialColor, changeColor, setIsDisableBtn, position, noInherit }) => { \r\n    const [color, setColor] = useState(initialColor);\r\n    const [isOpen, setIsOpen] = useState(false); \r\n    const [isDisableSaveIcon, setIsDisableSaveIcon] = useState(true); \r\n \r\n\r\n    const togglePicker = () => {\r\n        setIsOpen(prevOpen => !prevOpen)\r\n        setColor(initialColor)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const handleChange = (newColor) => {\r\n        setColor(newColor.hex)\r\n        setIsDisableSaveIcon(false)\r\n    }\r\n    const save = () => {\r\n        changeColor(color)\r\n        setIsOpen(false)\r\n        setIsDisableBtn(false)\r\n        setIsDisableSaveIcon(true)\r\n    };\r\n    const setDefault = () => {\r\n        setColor('inherit') \r\n        setIsDisableSaveIcon(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(initialColor === 'inherit' ) setColor('#0000')\r\n    }, [initialColor])\r\n\r\n    const useStyles = makeStyles( theme => { \r\n        const contrastColor = ( color !== 'transparent' && \r\n            color !== 'primary' && \r\n            color !== 'secondary' && \r\n            color !== 'warning' && \r\n            color !== 'error' && \r\n            color !== 'info' && \r\n            color !== 'success' && \r\n            color !== 'inherit' && \r\n            color !== 'transperent' && \r\n            color !== 'custom' && \r\n            color !== 'contrast' && \r\n            color !== 'default' && \r\n            color !== 'paper' ) ? \r\n            theme.palette.getContrastText(color) : theme.palette.text.primary\r\n        return( {\r\n            boxColor: { \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                flexGrow: 1, \r\n                minWidth: 90, \r\n                maxWidth: 200, \r\n                height: 40, \r\n                marginRight: theme.spacing(1),\r\n                backgroundColor: color,  \r\n                color: contrastColor , \r\n                border: `1px solid ${contrastColor}`, \r\n                borderRadius: theme.shape.borderRadius, \r\n                cursor: \"pointer\", \r\n                transition: `${theme.transitions.duration.shortest} ${theme.transitions.easing.easeInOut}ms`, \r\n                '&:hover' : { \r\n                    boxShadow: theme.shadows[4]\r\n                }\r\n            }, \r\n            boxPicker: { \r\n                position: 'absolute',\r\n                zIndex: 1510, \r\n                top: position === 'top' ? 100 : -250, \r\n                left: position === 'left' ? 0 : 'auto',\r\n                right: position === 'right' ? 0 : 'auto',\r\n            }, \r\n            iconButton: {\r\n                padding: theme.spacing(1)\r\n            }, \r\n            iconButtonDisabled: {\r\n                opacity: 0\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <Box display=\"flex\" flexDirection=\"column\" >\r\n            <Box display=\"flex\" alignItems=\"center\" position=\"relative\" mb={1} >\r\n                <Box className={classes.boxColor} onClick={togglePicker}>\r\n                    { isOpen ? 'Close' : 'Set Color'}\r\n                </Box>\r\n                {   \r\n                    isOpen &&  \r\n                    <Box className={classes.boxPicker}>\r\n                        <ChromePicker \r\n                            color={ color }\r\n                            onChangeComplete={ handleChange } \r\n                        />\r\n                    </Box>\r\n                    \r\n                }\r\n                {\r\n                    isDisableSaveIcon ? \r\n                    <IconButton disabled={true} className={`${classes.iconButton} ${classes.iconButtonDisabled}`} >\r\n                        <CheckCircleOutlineIcon />\r\n                    </IconButton> \r\n                    :\r\n                    <Tooltip title=\"Save color\" placement='top'>\r\n                        <IconButton onClick={save}  color={'primary'} className={classes.iconButton} >\r\n                            <CheckCircleOutlineIcon />\r\n                        </IconButton> \r\n                    </Tooltip>\r\n                }\r\n                \r\n            </Box>\r\n            {\r\n                !noInherit && \r\n                <Button \r\n                    onClick={setDefault} \r\n                    size={'small'} \r\n                    variant={'outlined'}\r\n                    color={'default'}\r\n                >\r\n                    Set Inherit\r\n                </Button>\r\n            }\r\n            \r\n        </Box>\r\n    );\r\n});","import React from 'react'\r\n\r\nimport { ColorPicker } from './ColorPicker'\r\n\r\nimport { FormControl, InputLabel, Select , MenuItem, Box, makeStyles } from '@material-ui/core'\r\n\r\nfunction ColorSelecter({label, colorSelect, setColorSelect, colorCustom , setColorCustom, setIsDisableBtn, position, noInherit, isContrastSelect }) {\r\n    \r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        block: {\r\n            position: 'absolute', \r\n            top: 'calc(50% - 12px)', \r\n            right: 7, \r\n            height: 24, \r\n            width: 24\r\n        },\r\n        primary: {\r\n            backgroundColor: theme.palette.primary.main\r\n        },\r\n        secondary: {\r\n            backgroundColor: theme.palette.secondary.main\r\n        },\r\n        warning: {\r\n            backgroundColor: theme.palette.warning.main\r\n        },\r\n        error: {\r\n            backgroundColor: theme.palette.error.main\r\n        },\r\n        info: {\r\n            backgroundColor: theme.palette.info.main\r\n        },\r\n        success: {\r\n            backgroundColor: theme.palette.success.main\r\n        },\r\n        defaultColor: {\r\n            backgroundColor: theme.palette.background.default\r\n        },\r\n        paper: { \r\n            backgroundColor: theme.palette.background.paper\r\n        }\r\n    }))\r\n    const { block, primary , secondary , warning , error , info, success, defaultColor , paper } = useStyles()\r\n    const colorCustomText = (colorCustom !== 'primary' && colorCustom !== 'secondary' &&  colorCustom !== 'warning' &&\r\n                            colorCustom !== 'error' && colorCustom !== 'info' && colorCustom !== 'success' ) ? ` - ${colorCustom}` : \" \"\r\n    return (\r\n        <Box display=\"flex\" alignItems='center'>\r\n            <FormControl variant='filled' style={{minWidth: '250px' }}>\r\n                <InputLabel id=\"color-select-label\">{label}</InputLabel>\r\n                <Select\r\n                    labelId=\"color-select-label\"\r\n                    id=\"color-select\"\r\n                    value={colorSelect}\r\n                    onChange={(e) => { setIsDisableBtn(false); setColorSelect(e.target.value) }} \r\n                >\r\n                    <MenuItem style={{position: 'relative'}} value={'primary'}>\r\n                        Primary\r\n                        <Box className={`${block} ${primary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'secondary'}>\r\n                        Secondary \r\n                        <Box className={`${block} ${secondary}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'warning'}>\r\n                        Warning\r\n                        <Box className={`${block} ${warning}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'error'}>\r\n                        Error\r\n                        <Box className={`${block} ${error}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'info'}>\r\n                        Info\r\n                        <Box className={`${block} ${info}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'success'}>\r\n                        Success\r\n                        <Box className={`${block} ${success}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'default'}>\r\n                        Default Background\r\n                        <Box className={`${block} ${defaultColor}`} />\r\n                    </MenuItem>\r\n                    <MenuItem style={{position: 'relative'}} value={'paper'}>\r\n                        Paper Background\r\n                        <Box className={`${block} ${paper}`} />\r\n                    </MenuItem>\r\n                    {   \r\n                        isContrastSelect &&\r\n                        <MenuItem style={{position: 'relative'}} value={'contrast'}>\r\n                            Contrast (about Background)\r\n                        </MenuItem>\r\n                    }\r\n                    <MenuItem value={'custom'}>\r\n                        Custom  {colorCustomText}\r\n                    </MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <Box ml={1} >\r\n                {\r\n                    colorSelect === 'custom' &&\r\n                    <ColorPicker\r\n                        initialColor = {colorCustom}\r\n                        changeColor = {setColorCustom}\r\n                        setIsDisableBtn = {setIsDisableBtn}\r\n                        position = {position}\r\n                        noInherit={noInherit}\r\n                    />  \r\n                }\r\n                \r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ColorSelecter\r\n","import React from 'react' \r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext' \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext from '../../../context/imageContext/ImageContext' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport ColorSelecter from '../../library/colorPicker/ColorSelecter'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    Grid,  \r\n    Divider,\r\n    FormControlLabel, \r\n    Switch, \r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport ImageIcon from '@material-ui/icons/Image'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction LogoChanger() { \r\n    \r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { logo, modal, updateLogo } = React.useContext(CategoryContext)     \r\n  \r\n    const { removeImage  } = React.useContext(ImageContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [mainText, setMainText] = React.useState(logo.mainText)\r\n    const [subText, setSubText] = React.useState(logo.subText)\r\n    const [image, setImage] = React.useState(logo.image)\r\n    const [imageName, setImageName] = React.useState(logo.imageName || '')\r\n\r\n    \r\n    const [isModal, setIsModal] = React.useState(modal.isModal)  \r\n    const [modalText, setModalText] = React.useState(modal.text) \r\n    const [modalTarget, setModalTarget] = React.useState(modal.target || 'buy') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(modal.color)\r\n    const [colorCustom, setColorCustom] = React.useState(modal.color)\r\n\r\n    React.useEffect(() => {\r\n        if(\r\n            modal.color !== 'primary' && \r\n            modal.color !== 'secondary' &&\r\n            modal.color !== 'warning' &&\r\n            modal.color !== 'error' &&\r\n            modal.color !== 'info' &&\r\n            modal.color !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [modal])\r\n\r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave, btnWithLabel } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                maxWidth: 500,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,  \r\n            btnWithLabel: {...btnWithLabel, ...{\r\n                '& label': {\r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    padding: theme.spacing(1, 2)\r\n                }\r\n            }},\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newLogo = { \r\n            image: image, \r\n            imageName: imageName, \r\n            mainText: mainText,\r\n            subText: subText\r\n        }\r\n        const newModal = { \r\n            isModal: isModal, \r\n            text: modalText, \r\n            target: modalTarget\r\n        }\r\n        if (colorSelect === 'custom') {\r\n            newModal.color = colorCustom\r\n        } else {\r\n            newModal.color = colorSelect\r\n        }\r\n        \r\n        updateLogo(newLogo, newModal)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    const handleImageSetting = (event) => {    \r\n        uploadHandler(event.target.files[0])\r\n        removeImage(logo.imageName) \r\n\r\n        setIsLoading(true)\r\n    }\r\n    \r\n    const uploadHandler = (imageData) => { \r\n        const storageRef = firebase.storage.ref(`${imageData.name}`).put(imageData)\r\n        storageRef.on('state-changed', \r\n          snapshot => {\r\n            console.log( snapshot )\r\n          }, \r\n          error => {\r\n            console.log(error.message )\r\n          },\r\n          () => { \r\n            setIsLoading(false)\r\n            storageRef.snapshot.ref.getDownloadURL()\r\n              .then( url => {\r\n                setImage(url) \r\n                setImageName(imageData.name)\r\n                \r\n                setIsDisableBtn(false)\r\n              })\r\n          }\r\n        ) \r\n    }\r\n    const handleChange = () => {\r\n        setIsModal(!isModal)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Logo/Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Logo/Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Logo/Modal  changer  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set logo \r\n                            </Typography>\r\n                            <Grid container>\r\n                                <Grid item xs={5}>\r\n                                    <Button \r\n                                        color='primary'\r\n                                        variant='contained' \r\n                                        className={classes.btnWithLabel}\r\n                                    >  \r\n                                        <label htmlFor='image-input-label'> <ImageIcon color=\"action\" /> Set Logo </label>\r\n                                        <input \r\n                                            id=\"image-input-label\"\r\n                                            type=\"file\" \r\n                                            onChange={handleImageSetting} \r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Box mt={1}>\r\n                                        <img\r\n                                            width={60}\r\n                                            src={image}\r\n                                            alt='logo'\r\n                                        /> \r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={7}> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={mainText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setMainText(e.target.value) }}\r\n                                    /> \r\n                                    <TextField\r\n                                        type='text' \r\n                                        label=\"Text input\"\r\n                                        fullWidth\r\n                                        value={subText}  \r\n                                        variant=\"filled\"\r\n                                        onChange={(e) => { setIsDisableBtn(false); setSubText(e.target.value) }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Divider style={{margin: '10px 0'}}/>\r\n                            \r\n                            <Typography variant='h6' gutterBottom>\r\n                                Set Modal Button \r\n                            </Typography>\r\n                            <Box  mt={3} mb={3}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        < Switch checked = { isModal }\r\n                                                onChange = { handleChange }\r\n                                                name = \"checkedB\" \r\n                                                color = \"primary\" />\r\n                                    }\r\n                                    label=\"Add Modal Button\"\r\n                                /> \r\n                                {\r\n                                    isModal && \r\n                                    <Box mt={1} >\r\n                                        <Box mb={1}> \r\n                                                <Box mr={1} display='inline'>\r\n                                                    <TextField\r\n                                                        type='text'\r\n                                                        label=\"Text for Button\"\r\n                                                        variant=\"outlined\"\r\n                                                        value={modalText}\r\n                                                        onChange={(e) => {\r\n                                                        setIsDisableBtn(false);\r\n                                                        setModalText(e.target.value)\r\n                                                    }}/>  \r\n                                                </Box> \r\n                                                <TextField\r\n                                                    type='text'\r\n                                                    label=\"Target for Button\"\r\n                                                    variant=\"outlined\"\r\n                                                    value={modalTarget}\r\n                                                    onChange={(e) => {\r\n                                                    setIsDisableBtn(false);\r\n                                                    setModalTarget(e.target.value)\r\n                                                }}/>   \r\n                                        </Box>\r\n                                        <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <ColorSelecter\r\n                                                label={'Color for Button'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'right'}\r\n                                                noInherit={true}\r\n                                            /> \r\n                                        </Box>\r\n                                    </Box>\r\n                                }\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoChanger ","\r\nimport React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography, \r\n    TextField,  \r\n    Box,\r\n    makeStyles,   \r\n    FormGroup,\r\n    FormControl, \r\n    InputLabel,\r\n    Select, \r\n    MenuItem, \r\n\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction StyleChanger() {\r\n     \r\n    const { settings, updateSettings } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(settings.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(settings.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(settings.maxWidth)\r\n    const [settingBreakpoint, setSettingBreakpoint] = React.useState(settings.breakpoint || 'md')\r\n\r\n    const [settingBoxShadow, setSettingBoxShadow] = React.useState(settings.classes.boxShadow)\r\n    const [settingPadding, setSettingPadding] = React.useState(settings.classes.paddingY)\r\n    const [settingPosition, setSettingPosition] = React.useState(settings.classes.position)\r\n    const [settingBackgroundSelect, setSettingBackgroundSelect] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n    const [settingBackgroundCustom, setSettingBackgroundCustom] = React.useState(settings.classes.backgroundColor ||  'transparent')\r\n\r\n    React.useEffect(() => {\r\n        if( \r\n            settings.classes.backgroundColor !== 'default' && \r\n            settings.classes.backgroundColor !== 'paper' && \r\n            settings.classes.backgroundColor !== 'primary' &&  \r\n            settings.classes.backgroundColor !== 'secondary' &&\r\n            settings.classes.backgroundColor !== 'warning' &&\r\n            settings.classes.backgroundColor !== 'error' &&\r\n            settings.classes.backgroundColor !== 'info' &&\r\n            settings.classes.backgroundColor !== 'success'  \r\n        ) {  \r\n            setSettingBackgroundSelect('custom')\r\n        }\r\n    }, [settings])\r\n     \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 200px)\",\r\n                maxWidth: 400,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            settingsItem: {\r\n                width: '100%',\r\n                marginRight: 5, \r\n                marginBottom: 10, \r\n                flexGrow: 1, \r\n            },\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newSettings = { \r\n            disableGutters: settingGutter,\r\n            fixed: settingFixed,\r\n            maxWidth: settingMaxWidth,\r\n            classes: {\r\n                boxShadow: settingBoxShadow,\r\n                paddingY: settingPadding,\r\n                position: settingPosition, \r\n            } ,\r\n            breakpoint: settingBreakpoint\r\n        }\r\n        if (settingBackgroundSelect === 'custom') {\r\n            newSettings.classes.backgroundColor = settingBackgroundCustom\r\n        } else {\r\n            newSettings.classes.backgroundColor = settingBackgroundSelect\r\n        }\r\n \r\n        updateSettings(newSettings)\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Style Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Style</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Style changer <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"dis-gutters-label\"\r\n                                            id=\"dis-gutters-style\"\r\n                                            value={settingGutter}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"fixed-label\"\r\n                                            id=\"fixed-style\"\r\n                                            value={settingFixed}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={true}>True</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </FormGroup>\r\n                                \r\n                                <FormGroup row> \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"maxWidth-label\"\r\n                                            id=\"maxWidth-style\"\r\n                                            value={settingMaxWidth}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={false}>False</MenuItem>\r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"maxWidth-style-label\">Breakpoint for Mobile</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Breakpoint-label\"\r\n                                            id=\"Breakpoint-style\"\r\n                                            value={settingBreakpoint}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBreakpoint(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                            <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                            <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                            <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                            <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Position-style-label\">Position</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Position-label\"\r\n                                            id=\"Position-style\"\r\n                                            value={settingPosition}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingPosition(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'static'}>Static</MenuItem>  \r\n                                            <MenuItem value={'fixed'}>Fixed</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    \r\n                                </FormGroup>\r\n                                <FormGroup row> \r\n                                     <TextField \r\n                                        className={classes.settingsItem}\r\n                                        type='number'\r\n                                        label=\"Padding Top/Bottom\" \r\n                                        variant=\"filled\" \r\n                                        size='small'  \r\n                                        value={settingPadding}\r\n                                        onChange={ (e) => { setIsDisableBtn(false); setSettingPadding(Number(e.target.value)) } }     \r\n                                    />\r\n                                    <FormControl  \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.settingsItem}\r\n                                    >\r\n                                        <InputLabel id=\"Shadow-style-label\">Shadow</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Shadow-label\"\r\n                                            id=\"Shadow-style\"\r\n                                            value={settingBoxShadow}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setSettingBoxShadow(e.target.value) }}\r\n                                        > \r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                            0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                            <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                            0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                            <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                            0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    \r\n                                    <Box mt={2} display=\"flex\" flexDirection='column'>\r\n                                            <FormControl    variant='filled' style={{minWidth: '250px' }}>\r\n                                                <InputLabel id=\"color-select-label\">Background Color for Header</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"color-select-label\"\r\n                                                    id=\"color-select\"\r\n                                                    value={settingBackgroundSelect}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setSettingBackgroundSelect(e.target.value)   }}\r\n                                                >\r\n                                                    <MenuItem value={'primary'}>Theme Primary</MenuItem>\r\n                                                    <MenuItem value={'secondary'}>Theme Secondary</MenuItem> \r\n                                                    <MenuItem value={'warning'}>Theme Warning</MenuItem>\r\n                                                    <MenuItem value={'error'}>Theme Error</MenuItem>\r\n                                                    <MenuItem value={'info'}>Theme Info</MenuItem>\r\n                                                    <MenuItem value={'success'}>Theme Success</MenuItem>\r\n                                                    <MenuItem value={'default'}>Theme BG default</MenuItem>\r\n                                                    <MenuItem value={'paper'}>Theme BG paper</MenuItem>\r\n                                                    <MenuItem value={'custom'}>Custom</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <Box mt={2} >\r\n                                                {\r\n                                                    settingBackgroundSelect === 'custom' &&\r\n                                                    <ColorPicker\r\n                                                        initialColor = {settingBackgroundCustom}\r\n                                                        changeColor = {setSettingBackgroundCustom}\r\n                                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                                        position = {'left'}\r\n                                                    /> \r\n                                                }\r\n                                                \r\n                                            </Box>\r\n                                        </Box>\r\n                                    <Box \r\n                                        className={classes.settingsItem}\r\n                                    > \r\n                                        \r\n                                    </Box> \r\n                                </FormGroup>\r\n                                   \r\n     \r\n                          \r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleChanger ","import React from 'react'   \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n\r\nimport Draggable from 'react-draggable';   \r\nimport { ColorPicker } from '../../library/colorPicker/ColorPicker'\r\n\r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,    \r\n    Divider\r\n} from '@material-ui/core' \r\n \r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'  \r\n\r\nfunction ThemeChanger() {\r\n     \r\n    const { themeDark,  themeLight, updateTheme } = React.useContext(CategoryContext)     \r\n  \r\n    const [open, setOpen] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n    const [lightBackgroundDefault, setLightBackgroundDefault] = React.useState(themeLight.palette.background.default)\r\n    const [lightBackgroundPaper, setLightBackgroundPaper] = React.useState(themeLight.palette.background.paper)\r\n    const [darkBackgroundDefault, setDarkBackgroundDefault] = React.useState(themeDark.palette.background.default)\r\n    const [darkBackgroundPaper, setDarkBackgroundPaper] = React.useState(themeDark.palette.background.paper)\r\n\r\n    const [lightPrimary, setLightPrimary] = React.useState(themeLight.palette.primary.main) \r\n    const [darkPrimary, setDarkPrimary] = React.useState(themeDark.palette.primary.main) \r\n\r\n    const [lightSecondary, setLightSecondary] = React.useState(themeLight.palette.secondary.main) \r\n    const [darkSecondary, setDarkSecondary] = React.useState(themeDark.palette.secondary.main) \r\n\r\n    const [lightError, setLightError] = React.useState(themeLight.palette.error.main) \r\n    const [darkError, setDarkError] = React.useState(themeDark.palette.error.main) \r\n\r\n    const [lightWarning, setLightWarning] = React.useState(themeLight.palette.warning.main) \r\n    const [darkWarning, setDarkWarning] = React.useState(themeDark.palette.warning.main) \r\n\r\n    const [lightInfo, setLightInfo] = React.useState(themeLight.palette.info.main) \r\n    const [darkInfo, setDarkInfo] = React.useState(themeDark.palette.info.main) \r\n\r\n    const [lightSuccess, setLightSuccess] = React.useState(themeLight.palette.success.main) \r\n    const [darkSuccess, setDarkSuccess] = React.useState(themeDark.palette.success.main) \r\n \r\n    // text.primary\r\n    // text.secondary\r\n    // text.disabled\r\n \r\n    const handleInputFocus = () => {  \r\n      setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }; \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 450px)\",\r\n                maxWidth: 900,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting, \r\n            btnSave: btnSave,   \r\n            colorPreview: { \r\n                width: '100%',\r\n                height: 8,  \r\n                borderRadius: 3, \r\n            }, \r\n            colorItem: {\r\n                display: \"flex\",\r\n                flexDirection: 'column', \r\n                justifyContent: 'space-between', \r\n                maxWidth: '25%', \r\n                flexGrow: 1, \r\n                marginRight: theme.spacing(1)\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n\r\n    const handleSave = () => {  \r\n \r\n        const newLightTheme = {   \r\n            palette: {\r\n                type: \"light\",\r\n                background: {\r\n                    default: lightBackgroundDefault,\r\n                    paper: lightBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: lightSecondary\r\n                },\r\n                primary: {\r\n                    main: lightPrimary\r\n                },\r\n                error: {\r\n                    main: lightError\r\n                },\r\n                warning: {\r\n                    main: lightWarning\r\n                },\r\n                info: {\r\n                    main: lightInfo\r\n                },\r\n                success: {\r\n                    main: lightSuccess\r\n                }\r\n            } \r\n        }\r\n        const newDarkTheme = {   \r\n            palette: {\r\n                type: \"dark\",\r\n                background: {\r\n                    default: darkBackgroundDefault,\r\n                    paper: darkBackgroundPaper\r\n                },\r\n                secondary: {\r\n                    main: darkSecondary\r\n                },\r\n                primary: {\r\n                    main: darkPrimary\r\n                },\r\n                error: {\r\n                    main: darkError\r\n                },\r\n                warning: {\r\n                    main: darkWarning\r\n                },\r\n                info: {\r\n                    main: darkInfo\r\n                },\r\n                success: {\r\n                    main: darkSuccess\r\n                }\r\n            } \r\n        }\r\n\r\n        updateTheme(newDarkTheme, newLightTheme )\r\n        setIsDisableBtn(true)\r\n        handleClose()\r\n    }  \r\n    \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Theme Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Theme</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Theme Changer  <OpenWithIcon/>\r\n                            </Typography>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Light Theme\r\n                            </Typography>\r\n\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={2}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Default - { lightBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundDefault}\r\n                                        changeColor = {setLightBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Background Paper - { lightBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightBackgroundPaper}\r\n                                        changeColor = {setLightBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Primary - { lightPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightPrimary}\r\n                                        changeColor = {setLightPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Secondary - { lightSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSecondary}\r\n                                        changeColor = {setLightSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1} mb={3}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Warning - { lightWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightWarning}\r\n                                        changeColor = {setLightWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Error - { lightError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightError}\r\n                                        changeColor = {setLightError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Info - { lightInfo }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightInfo}\r\n                                        changeColor = {setLightInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Light Success - { lightSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {lightSuccess}\r\n                                        changeColor = {setLightSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'top'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>  \r\n                                 \r\n                            </Box>\r\n\r\n                            <Box mt={3} mb={4} >\r\n                               <Divider />\r\n                            </Box>\r\n\r\n                            <Typography \r\n                                variant='h6'  \r\n                            >\r\n                                Dark Theme\r\n                            </Typography>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Default - { darkBackgroundDefault }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundDefault}\r\n                                        changeColor = {setDarkBackgroundDefault}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Background Paper - { darkBackgroundPaper }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkBackgroundPaper}\r\n                                        changeColor = {setDarkBackgroundPaper}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Primary - { darkPrimary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkPrimary}\r\n                                        changeColor = {setDarkPrimary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Secondary - { darkSecondary }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSecondary}\r\n                                        changeColor = {setDarkSecondary}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display='flex' flexWrap='nowrap'  mt={1}>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Warning- { darkWarning }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkWarning}\r\n                                        changeColor = {setDarkWarning}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Error - { darkError }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkError}\r\n                                        changeColor = {setDarkError}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Info - { darkInfo}\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkInfo}\r\n                                        changeColor = {setDarkInfo}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'left'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box>\r\n                                <Box className={classes.colorItem}> \r\n                                    <Typography variant='caption' >\r\n                                        Dark Succwss - { darkSuccess }\r\n                                    </Typography>\r\n                                    <ColorPicker\r\n                                        initialColor = {darkSuccess}\r\n                                        changeColor = {setDarkSuccess}\r\n                                        setIsDisableBtn = {setIsDisableBtn}\r\n                                        position = {'right'}\r\n                                        noInherit={true}\r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger ","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n  \r\nimport ColorSelecter from '../../library/colorPicker/ColorSelecter'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    TextField,   \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { modalSettings, updateModalSettings } = React.useContext(SendFormContext)       \r\n\r\n    const [open, setOpen] = React.useState(false) \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    const [heading, setHeading] = React.useState(modalSettings.heading)\r\n    const [subHeading, setSubHeading] = React.useState(modalSettings.subHeading)\r\n    const [targetText, setTargetText] = React.useState(modalSettings.targetText)\r\n    const [buttonText, setButtonText] = React.useState(modalSettings.buttonText)\r\n    const [policy, setPolicy] = React.useState(modalSettings.policy)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(modalSettings.colorButton)\r\n    const [colorCustom, setColorCustom] = React.useState(modalSettings.colorButton)\r\n\r\n    const [inputName, setInputName] = React.useState(modalSettings.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(modalSettings.inputPhone || '')\r\n\r\n    \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n     \r\n    React.useEffect(() => {\r\n        if(\r\n            modalSettings.colorButton !== 'primary' && \r\n            modalSettings.colorButton !== 'secondary' &&\r\n            modalSettings.colorButton !== 'warning' &&\r\n            modalSettings.colorButton !== 'error' &&\r\n            modalSettings.colorButton !== 'info' &&\r\n            modalSettings.colorButton !== 'success' \r\n        ) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [modalSettings.colorButton])\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n\r\n        return ({  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                maxWidth: 600,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {  \r\n        const newData = Object.assign({}, modalSettings) \r\n         \r\n        newData.heading = heading\r\n        newData.subHeading = subHeading\r\n        newData.targetText = targetText\r\n        newData.inputName = inputName\r\n        newData.inputPhone = inputPhone\r\n        newData.buttonText = buttonText\r\n        newData.policy = policy\r\n \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n\r\n        updateModalSettings(newData)\r\n        setIsLoading(false)\r\n    }  \r\n      \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Modal Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Modal</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Modal Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={heading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Sub Heading\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={subHeading}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setSubHeading(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Target text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={targetText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setTargetText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Name text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputName}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputName(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Input Phone text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={inputPhone}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setInputPhone(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Button text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={buttonText}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setButtonText(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box my={2}>\r\n                                <TextField  \r\n                                    type='text'\r\n                                    label=\"Policy text\" \r\n                                    variant=\"outlined\" \r\n                                    size='small'  \r\n                                    fullWidth\r\n                                    value={policy}\r\n                                    onChange={ (e) => { setIsDisableBtn(false); setPolicy(e.target.value) } }     \r\n                                />\r\n                            </Box>\r\n                            <Box display=\"flex\" >\r\n                                <ColorSelecter\r\n                                    label={'Color for Button'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={true}\r\n                                /> \r\n                            </Box>\r\n                            \r\n                             \r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\n \r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'  \r\nimport { \r\n    Tooltip,\r\n    Button, \r\n    Modal, \r\n    DialogContent , \r\n    Typography,  \r\n    Box,\r\n    makeStyles,   \r\n    FormControlLabel,  \r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Checkbox \r\n} from '@material-ui/core' \r\n\r\nimport { amber } from '@material-ui/core/colors'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith'; \r\n \r\nimport Draggable from 'react-draggable';  \r\n\r\nfunction RequestsChanger() {\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext)     \r\n    const { requests, updateRequests } = React.useContext(SendFormContext)     \r\n \r\n  \r\n    const [localRequests, setLocalRequests] = React.useState(requests)\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [isOnlyUncheked, setIsOnlyUncheked] = React.useState(false)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    React.useEffect( () => {\r\n        setLocalRequests(requests)\r\n    }, [requests])\r\n     \r\n    const handleInputFocus = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }; \r\n    const handleCheckSetting = () => {\r\n        setIsOnlyUncheked(!isOnlyUncheked)\r\n    }; \r\n\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnSave } = commonClasses\r\n        return ({ \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 400px)\",\r\n                maxWidth: 800,   \r\n            }},\r\n            menuTitle: menuTitle,\r\n            btnSetting: {...btnSetting, ...{\r\n                backgroundColor: amber[500], \r\n                '&>span' :{\r\n                    flexDirection: 'row',\r\n                    fontSize: 10\r\n                }\r\n            }}, \r\n            btnSave: btnSave, \r\n            cardRoot: {\r\n                display: 'inline-block', \r\n                width: 'calc( 50% - 20px)',\r\n                marginBottom: 20,\r\n                marginRight: 20, \r\n                border: `1px solid ${theme.palette.divider}`\r\n            },\r\n            checkbox: {\r\n                display: 'flex',\r\n                alignItems: 'center' ,\r\n                marginBottom: theme.spacing(2),\r\n                marginLeft:  theme.spacing(1), \r\n                borderBottom: `1px solid ${theme.palette.divider}`\r\n            }\r\n        \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {   \r\n        setIsDisableBtn(true)\r\n        setIsLoading(true)\r\n        handleClose()\r\n        updateRequests(localRequests)\r\n        setIsLoading(false)\r\n    }  \r\n    const handleOnceCheck = (id) => {  \r\n        const newReq = localRequests.slice()\r\n        newReq.map(item => {\r\n            if(item.time === id) item.isCheck = !item.isCheck\r\n            return false\r\n        })\r\n\r\n        setLocalRequests(newReq)\r\n        setIsDisableBtn(false)\r\n \r\n    }  \r\n    const handleRemove = (id) => {  \r\n\r\n        const newReq = localRequests.slice()\r\n        const filtered = newReq.filter(item => ( item.time !== id ))\r\n\r\n        setLocalRequests(filtered)\r\n        setIsDisableBtn(false)\r\n    }  \r\n\r\n     \r\n    const renderRequests = () => { \r\n        return (\r\n            localRequests.map( (request, index) => { \r\n                if(!isOnlyUncheked) {\r\n                    return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                if(isOnlyUncheked) {\r\n                    if(!request.isCheck) return (\r\n                        OnceCard(request, index) \r\n                    )\r\n                }\r\n                return false\r\n            })\r\n        )\r\n    }\r\n\r\n    const OnceCard = (card, index) => (\r\n        <Card key={index} className={classes.cardRoot} >\r\n            <CardContent>\r\n                {\r\n                    Object.keys(card).map((item, innerIndex) => {  \r\n                        return(\r\n                            <Typography key={innerIndex} component='h6' gutterBottom>\r\n                                {item} &nbsp;  -  &nbsp;\r\n                                <Typography component='span' color=\"textSecondary\">\r\n                                        { String(card[item]) }\r\n                                </Typography> \r\n                            </Typography>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='outlined'  size=\"small\" onClick={() => { handleOnceCheck(card.time) }}>\r\n                    { \r\n                        card.isCheck ? <span>Uncheck</span> : <span>Check</span>\r\n                    }\r\n                </Button>\r\n                <Button variant='contained' color={'secondary'} size=\"small\" onClick={() => { handleRemove(card.time) }}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n     \r\n     \r\n    return (\r\n        <div className={classes.dumbWrapper}>\r\n            <Tooltip title='Requests List' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleInputFocus} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color='primary' \r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Requests</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>\r\n\r\n            <Modal \r\n                open={open}  \r\n                aria-labelledby=\"draggable-dialog-title\"\r\n                onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Requests from form  <OpenWithIcon/>\r\n                            </Typography>\r\n                             \r\n                            {\r\n                                localRequests.length > 0 && \r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={isOnlyUncheked}\r\n                                            onChange={handleCheckSetting}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Show only unchecked\"\r\n                                    className={classes.checkbox}\r\n                                />\r\n                            }\r\n                            {\r\n                                localRequests.length === 0 && \r\n                                <Typography component='h3'>\r\n                                    No request\r\n                                </Typography>\r\n                            }\r\n                            \r\n\r\n                            { renderRequests() }\r\n                           \r\n\r\n\r\n                            <Box className={classes.btnSave} mt={2}>\r\n                                <Button \r\n                                    color={'primary'} \r\n                                    variant=\"contained\"\r\n                                    onClick={handleSave}\r\n                                    startIcon={<SaveIcon/>}\r\n                                    disabled={isDisableBtn}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsChanger ","export default __webpack_public_path__ + \"static/media/half-moon.4946e6c2.svg\";","export default __webpack_public_path__ + \"static/media/sun.b7c92f87.svg\";","import React from 'react'\r\n\r\nimport {  \r\n    FormControlLabel, \r\n    Switch,\r\n    withStyles\r\n} from \"@material-ui/core\"; \r\n\r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\n \r\nimport darkThemeIcon from '../../../assets/icons/half-moon.svg'\r\nimport lightThemeIcon from '../../../assets/icons/sun.svg' \r\n\r\nfunction ThemeSwitcher() {\r\n\r\n    const { setThemeMode, themeMode} = React.useContext(CategoryContext)    \r\n  \r\n    const checked = themeMode === 'dark' ? true : false\r\n    \r\n    const handleChange = () => {\r\n        let newMode = themeMode === 'dark' ? 'light' : 'dark' \r\n        setThemeMode(newMode)\r\n    }\r\n\r\n    const ThemeCustomSwitch = withStyles((theme) => ({\r\n        root: {\r\n          width: 60,\r\n          height: 28,\r\n          padding: 0, \r\n          marginRight: 5\r\n        },\r\n        switchBase: {\r\n          padding: 1,  \r\n          '&$checked': {\r\n            transform: 'translateX(32px)',\r\n            color: '#27536b',\r\n            '& + $track': {\r\n              backgroundColor: '#27536b',\r\n              opacity: 1,\r\n              border: 'none',\r\n            },\r\n            '&  $thumb': { \r\n              opacity: 1,\r\n              border: 'none',\r\n              backgroundImage: `url(${darkThemeIcon})`\r\n            },\r\n          },\r\n          '&$focusVisible $thumb': {\r\n            color: '#52d869', \r\n          },\r\n        },\r\n        thumb: {\r\n          width: 26,\r\n          height: 26,\r\n          backgroundImage: `url(${lightThemeIcon})`,\r\n          backgroundSize: '28px',\r\n          backgroundPosition: 'center',  \r\n        },\r\n        track: {\r\n          borderRadius: 28 / 2,\r\n          border: `1px solid #a3d4ff`,\r\n          backgroundColor: '#a3d4ff',\r\n          opacity: 1,\r\n          transition: theme.transitions.create(['background-color', 'border']),\r\n        },\r\n        checked: {},\r\n        focusVisible: {},\r\n      }))(({ classes, ...props }) => {\r\n        return (\r\n          <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n              root: classes.root,\r\n              switchBase: classes.switchBase,\r\n              thumb: classes.thumb,\r\n              track: classes.track,\r\n              checked: classes.checked,\r\n            }}\r\n            {...props}\r\n          />\r\n        );\r\n      });\r\n    return ( \r\n        <FormControlLabel\r\n            control={<ThemeCustomSwitch checked={checked} onChange={handleChange} name=\"checkedB\" />}\r\n            label={checked ? 'Night Mode' : 'Light Mode'}\r\n        /> \r\n    ) \r\n}\r\n\r\nexport default ThemeSwitcher\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    Button, \r\n    Box, \r\n    makeStyles,\r\n    ListItem, \r\n    ListItemText,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport \"../../../assets/style/header.scss\"\r\n \r\n\r\nconst Desktop = (props) => { \r\n    \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({\r\n             \r\n            menuButton: { \r\n                position: 'relative', \r\n                fontWeight: 700, \r\n                // marginLeft: \"38px\",\r\n                height: '100%', \r\n                listStyle: 'none', \r\n                 \r\n            },\r\n            menuButtonLink: { \r\n                textTransform: 'inherit',\r\n                padding: '5px 16px', \r\n                [`@media (max-width: ${theme.breakpoints.values.lg}px)`]: {\r\n                    padding: '5px 8px', \r\n                }, \r\n\r\n                borderRadius: 0, \r\n                height: \"100%\",\r\n                \r\n                color: 'inherit'\r\n               \r\n            },\r\n            menuLink: {\r\n                display: 'block',\r\n                height: \"100%\", \r\n                width: '100%',\r\n                color: props.colorHeader,\r\n                textDecoration: 'none',   \r\n                // backgroundColor: theme.palette.background.default,\r\n                transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn}`,\r\n                '&:hover': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    // backgroundColor: theme.palette.primary.light,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n\r\n                },\r\n                '&.active': {\r\n                    backgroundColor: props.hoverActiveLinkColor,\r\n                    color: theme.palette.type === \"dark\" ? theme.palette.text.default : theme.palette.background.paper ,\r\n                    \r\n                },\r\n            },\r\n            menuInnerLink: { \r\n                color: theme.palette.text.primary , \r\n            }, \r\n            menuButtonInnerLi: {\r\n                position: 'absolute',\r\n                top: '100%',\r\n                right: 0,   \r\n                backgroundColor: theme.palette.background.paper, \r\n                minWidth: '100%', \r\n                maxWidth: 200, \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn}`, \r\n            },\r\n            toolbar: {\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\", \r\n                paddingTop: props.settings.classes.paddingY,  \r\n                paddingBottom: props.settings.classes.paddingY,  \r\n                paddingLeft: 10, \r\n                paddingRight: 10\r\n            }, \r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            \r\n            \r\n        })\r\n    });\r\n    const { toolbar, menuButton , menuButtonInnerLi , menuButtonLink,  menuLink , menuInnerLink,  listUnstyle } = useStyles();\r\n \r\n    return (\r\n      <Toolbar disableGutters={true} className={toolbar}>\r\n           \r\n        {props.logo}  \r\n\r\n        <Box mx={4}>\r\n            {props.modalBtn}\r\n        </Box>\r\n\r\n        <Box display='flex' clone={true} className='link-in-header'>\r\n            <ul className={listUnstyle} >\r\n            {\r\n                props.categories.map( (item, index) => { \r\n                return (\r\n                    <li key={index} className={menuButton}>\r\n                        {\r\n                            item.slug === '/' &&\r\n                            <NavLink  \r\n                                    exact\r\n                                    to={`${item.slug}`}\r\n                                    className={menuLink}\r\n                            > \r\n                                <Button className={menuButtonLink}> \r\n                               \r\n                                    {item.title} \r\n                                </Button>\r\n                            </NavLink>\r\n                            \r\n                        }\r\n                        {\r\n                            item.slug !== '/' &&\r\n                            \r\n                                <NavLink  \r\n                                    exact\r\n                                    to={`/${item.slug}`}\r\n                                    className={menuLink}\r\n                                >\r\n                                    <Button className={menuButtonLink}> \r\n                                        {item.title} \r\n                                        {\r\n                                            item.pages.length > 0 && <Box display='flex' alignItems='center' pl={1}><ExpandMoreOutlinedIcon/></Box>\r\n                                        }\r\n                                    </Button>\r\n                                </NavLink>\r\n                        }\r\n                        \r\n\r\n                        {\r\n                            item.pages.length > 0 && \r\n                            <List disablePadding={true} className={menuButtonInnerLi}> \r\n                                <Paper>\r\n                                {  \r\n                                    item.pages.map( (innerItem, innerIndex) => (\r\n                                        <NavLink  \r\n                                            key={innerIndex} \r\n                                            to={`/${item.slug}/${innerItem.slug}`} \r\n                                            className={` ${menuLink} ${menuInnerLink}`} \r\n                                            style={{minWidth: innerItem.title.length > 15 ? 200 : '100%',  maxWidth: 200, }} \r\n                                        > \r\n                                            <ListItem button> \r\n                                                <ListItemText primary={innerItem.title} />   \r\n                                            </ListItem>\r\n                                        </NavLink>\r\n                                    \r\n                                    ))\r\n                                } \r\n                                </Paper>\r\n                            </List>\r\n                        }\r\n                    </li>\r\n                );\r\n                })\r\n            }\r\n            </ul>\r\n        </Box>\r\n       \r\n      </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Desktop\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {  \r\n    Toolbar, \r\n    makeStyles, \r\n    IconButton,\r\n    Drawer, \r\n    MenuItem, \r\n    Box,\r\n    AccordionSummary,\r\n    Accordion, \r\n    Button\r\n} from \"@material-ui/core\";\r\n \r\nimport MenuIcon from \"@material-ui/icons/Menu\"; \r\nimport CloseIcon from '@material-ui/icons/Close'; \r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n \r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nconst Mobile = (props) => { \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n        return ({\r\n             \r\n            drawerContainer: { \r\n                width: '50vw', \r\n                maxWidth: 450, \r\n                minWidth: 260\r\n            }, \r\n            mobileLink: { \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                color: 'inherit', \r\n                textDecoration: 'none', \r\n                height: '100%', \r\n                minHeight: 48,\r\n                width: '100%', \r\n                padding: '6px 16px', \r\n                '&.active' : {\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: '#fff'\r\n                }\r\n            },  \r\n            accordionReset: {\r\n                paddingLeft: 0,\r\n                marginTop: ' 0 !important', \r\n                marginBottom: '0 !important',\r\n                minHeight: 'auto !important', \r\n                background : 'none', \r\n                boxShadow: 'none'\r\n            },\r\n            listUnstyle: {\r\n               position: 'absolute', \r\n               top: 0, \r\n               right: 0,\r\n               bottom: 0,  \r\n               display: 'flex', \r\n               height: '100%', \r\n               margin: 0,\r\n               padding: 0, \r\n               '& li': {}\r\n                \r\n            },\r\n            drawerHeader: {\r\n                margin: theme.spacing(1, 2), \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'space-between', \r\n                '& .log-button': {\r\n                    minWidth: 100\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n    const { drawerContainer, mobileLink , accordionReset, drawerHeader } = useStyles();\r\n   \r\n    const [drawerOpen, setDrawerOpen] = React.useState(false); \r\n      \r\n    const handleDrawerOpen = () => { \r\n        setDrawerOpen(true) \r\n    }\r\n    const handleDrawerClose = () => { \r\n        setDrawerOpen(false) \r\n    }\r\n\r\n    return (\r\n        <Toolbar  style={{justifyContent: 'space-between'}}> \r\n            <Drawer\r\n                {...{\r\n                anchor: \"right\",\r\n                open: drawerOpen,\r\n                onClose: handleDrawerClose,\r\n                }}\r\n            >\r\n                <div className={drawerContainer}>\r\n                    <Box className={drawerHeader}  > \r\n                        <IconButton \r\n                            aria-label=\"close\" \r\n                            onClick={handleDrawerClose}   \r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        {\r\n                            props.user ? \r\n                            <Button \r\n                                size='medium'\r\n                                color='secondary' \r\n                                variant={'contained'} \r\n                                onClick={ () => { props.handleSignOut(); handleDrawerClose()  } }\r\n                                className={'log-button'}\r\n                            >\r\n                                Sign Out\r\n                            </Button>\r\n                            :\r\n                            <NavLink to='/login' onClick={handleDrawerClose}>\r\n                                <Button  \r\n                                    color='primary' \r\n                                    variant=\"contained\"\r\n                                    size='medium'\r\n                                    className={'log-button'} \r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </NavLink>\r\n                        }\r\n                        \r\n                    </Box>\r\n                    \r\n                    {\r\n                        props.categories.map( (item, index) => {  \r\n                            if(item.pages.length > 0) {\r\n                                return (  \r\n                                    <Accordion key={index} classes={{root: accordionReset}}  >\r\n                                        <AccordionSummary\r\n                                            classes={{root: accordionReset, content: accordionReset  }}\r\n                                            expandIcon={ <ExpandMoreOutlinedIcon />}\r\n                                        >\r\n                                            <MenuItem style={{padding: 0, width: '100%'}}> \r\n                                                <NavLink \r\n                                                    exact\r\n                                                    to={`/${item.slug}`}  \r\n                                                    className={mobileLink}\r\n                                                    onClick={handleDrawerClose}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    \r\n                                                </NavLink> \r\n                                            </MenuItem>     \r\n                                        </AccordionSummary>\r\n                                        { \r\n                                            item.pages.map( (page, indexPage) => (\r\n                                                <MenuItem style={{padding: '0 0 0 15px'}} key={indexPage} > \r\n                                                    <NavLink \r\n                                                        exact\r\n                                                        to={`/${item.slug}/${page.slug}`}  \r\n                                                        className={mobileLink}\r\n                                                        onClick={handleDrawerClose}\r\n                                                    >   \r\n                                                        {page.title}\r\n                                                        \r\n                                                    </NavLink> \r\n                                                </MenuItem> \r\n                                            ))\r\n                                        }\r\n                                    </Accordion>                                \r\n                                );\r\n                            }\r\n                            else { \r\n                                return (\r\n                                    <MenuItem key={index}  style={{padding: 0, width: '100%', borderTop: '1px solid rgba(0, 0, 0, 0.12)' }}>  \r\n                                        <NavLink \r\n                                            exact\r\n                                            to={`/${item.slug}`}  \r\n                                            className={mobileLink}\r\n                                            onClick={handleDrawerClose}\r\n                                        >\r\n                                            {item.title} \r\n                                        </NavLink> \r\n                                    </MenuItem>     \r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n\r\n                    <Box px={2}>\r\n                        <Box my={3} width={'100%'} clone={true} >\r\n                            {props.modalBtn}\r\n                        </Box>\r\n                    </Box>\r\n                    \r\n                    <Box px={3}>\r\n                        <Box my={2} width={'100%'} clone={true} >\r\n                            <ThemeSwitcher/>\r\n                        </Box>\r\n                    </Box>\r\n                   \r\n                </div>\r\n            </Drawer>\r\n\r\n            <div>\r\n                {props.logo}\r\n            </div>\r\n\r\n            <IconButton\r\n                {...{\r\n                edge: \"start\",\r\n                color: \"default\",  \r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n                }}\r\n            >\r\n                <MenuIcon style={{color: props.iconColor}} />\r\n            </IconButton>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default Mobile\r\n","export const getColorByPalette = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.primary.main \r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.error.main \r\n        } \r\n        case ('info') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.success.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.default\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('contrast') : {\r\n            return 'contrast'\r\n        } \r\n        default: return color\r\n    } \r\n}\r\nexport const getColorByPaletteForGradient = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return [theme.palette.primary.main, theme.palette.primary.dark] \r\n        } \r\n        case ('secondary') : {\r\n            return [theme.palette.secondary.main, theme.palette.secondary.dark] \r\n        } \r\n        case ('warning') : {\r\n            return [theme.palette.warning.main, theme.palette.warning.dark] \r\n        } \r\n        case ('error') : {\r\n            return [theme.palette.error.main, theme.palette.error.dark] \r\n        } \r\n        case ('info') : {\r\n            return [theme.palette.info.main, theme.palette.info.dark] \r\n        } \r\n        case ('success') : {\r\n            return  [theme.palette.success.main, theme.palette.success.dark]\r\n        } \r\n        case ('default') : {\r\n            return [theme.palette.background.paper, theme.palette.background.default]\r\n        } \r\n        case ('paper') : {\r\n            return [theme.palette.background.default, theme.palette.background.paper]\r\n        } \r\n        default: return [color, color]\r\n    } \r\n}\r\nexport const getColorByPaletteReverse = (theme, color) => {\r\n    switch(color) {\r\n        case ('primary') : {\r\n            return theme.palette.secondary.main\r\n        } \r\n        case ('secondary') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('warning') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('error') : {\r\n            return theme.palette.primary.main\r\n        } \r\n        case ('info') : {\r\n            return theme.palette.warning.main\r\n        } \r\n        case ('success') : {\r\n            return theme.palette.info.main\r\n        } \r\n        case ('default') : {\r\n            return theme.palette.background.paper\r\n        } \r\n        case ('paper') : {\r\n            return theme.palette.background.default\r\n        }\r\n        default: return color\r\n    } \r\n}\r\nexport const isNoThemeColor = (color) => {\r\n    if(\r\n        color !== 'contrast' && \r\n        color !== 'default' && \r\n        color !== 'paper' && \r\n        color !== 'primary' && \r\n        color !== 'secondary' &&\r\n        color !== 'warning' &&\r\n        color !== 'error' &&\r\n        color !== 'info' &&\r\n        color !== 'success' \r\n    ) return true \r\n    else return false \r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'  \r\nimport CategoryContext from '../../../context/headerContext/CategoryContext'\r\n\r\nimport ThemeSwitcher from './ThemeSwitcher'\r\n\r\nimport Desktop from './desktop'\r\nimport Mobile from './mobile'\r\n\r\n// import \"../../assets/header.scss\"\r\nimport { \r\n    AppBar, \r\n    Typography,\r\n    makeStyles, \r\n    Container, \r\n    Box, \r\n    Button, \r\n} from \"@material-ui/core\"; \r\nimport { darken, lighten } from '@material-ui/core/styles';\r\n\r\n\r\nimport {getColorByPaletteForGradient, getColorByPalette } from '../../library/colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent() { \r\n\r\n    console.log('dumb header')\r\n\r\n    const { user } = React.useContext(ModeContext)\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n    const {categories, logo, modal,  settings, themeMode} = React.useContext(CategoryContext)    \r\n  \r\n    const checked = themeMode === 'dark' ? true : false\r\n \r\n\r\n    const [mobileView, setMobileView] = useState(true); \r\n   \r\n    let backgroundHeader = settings.classes.backgroundColor\r\n    let colorHeader \r\n    let hoverActiveLinkColor\r\n    let iconMobileDrawerColor\r\n  \r\n    let modalBtnColor1 = modal.color\r\n    let modalBtnColor2 = modal.color\r\n\r\n    let widthMobile \r\n    \r\n    \r\n    const headerRef = React.useRef(null);\r\n    const topHeaderRef = React.useRef(null);\r\n\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        widthMobile = theme.breakpoints.values[`${settings.breakpoint}`] \r\n        modalBtnColor1= getColorByPaletteForGradient(theme, modal.color)[0]\r\n        modalBtnColor2= getColorByPaletteForGradient(theme, modal.color)[1] \r\n        backgroundHeader = getColorByPalette(theme, backgroundHeader) \r\n        iconMobileDrawerColor = theme.palette.getContrastText(backgroundHeader)\r\n\r\n        if(backgroundHeader === 'primary') {\r\n            backgroundHeader = theme.palette.primary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.primary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.primary.main, 0.3)\r\n        }\r\n        if(backgroundHeader === 'secondary') {\r\n            backgroundHeader = theme.palette.secondary.main\r\n            colorHeader = theme.palette.getContrastText(theme.palette.secondary.main)\r\n            hoverActiveLinkColor = darken(theme.palette.secondary.main, 0.3)\r\n        } \r\n        if( \r\n            backgroundHeader !== 'default' && \r\n            backgroundHeader !== 'paper' && \r\n            backgroundHeader !== 'primary' && \r\n            backgroundHeader !== 'secondary' &&\r\n            backgroundHeader !== 'warning' &&\r\n            backgroundHeader !== 'error' &&\r\n            backgroundHeader !== 'info' &&\r\n            backgroundHeader !== 'success' \r\n        ) {  \r\n                colorHeader = theme.palette.getContrastText(backgroundHeader)\r\n                hoverActiveLinkColor = darken(backgroundHeader, 0.5) \r\n        }   \r\n        if(backgroundHeader === 'paper') { \r\n            backgroundHeader = theme.palette.background.paper\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.paper)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        }  \r\n        if(backgroundHeader === 'default') { \r\n            backgroundHeader = theme.palette.background.default\r\n            colorHeader = theme.palette.getContrastText(theme.palette.background.default)\r\n            hoverActiveLinkColor = theme.palette.primary.main \r\n        } \r\n \r\n        return ({\r\n            header: { \r\n                display: 'flex', \r\n                justifyContent: 'center',   \r\n\r\n                backgroundColor: backgroundHeader, \r\n                color: `${colorHeader} !important`,  \r\n  \r\n                position: settings.classes.position,   \r\n                boxShadow: settings.classes.boxShadow, \r\n\r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `, \r\n               \r\n                top: 0,  \r\n                zIndex: 1000,\r\n\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    paddingTop: settings.classes.paddingY * 0.5,  \r\n                    paddingBottom: settings.classes.paddingY * 0.5,  \r\n                }, \r\n                '&.sticky' : {\r\n                    transform: \"translateY(-41px)\",\r\n                    [`@media (max-width: ${widthMobile}px)`]: {\r\n                        transform: \"translateY(0px)\",\r\n                    }\r\n                }\r\n            },\r\n            fixedPadding: { \r\n                minHeight: 100 + settings.classes.paddingY*2 , \r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    minHeight: 60 + settings.classes.paddingY , \r\n                },\r\n            },\r\n            topHeader: {   \r\n                height: '100%', \r\n                paddingTop: 5, \r\n                paddingBottom: 5,  \r\n                backgroundColor:  checked ? darken(backgroundHeader , 0.7) : lighten(backgroundHeader, 0.85), \r\n                transition: `200ms ${theme.transitions.easing.easeInOut} `, \r\n                color: theme.palette.text.primary, \r\n                '&.sticky' : {\r\n                    // transform: 'scaleY(0)',\r\n                    // transformOrigin: 'top', \r\n                    height: 0, \r\n                    opacity: 0\r\n                }\r\n            },\r\n            logoMain: { \r\n                fontWeight: 700,\r\n                fontSize: 22,\r\n                color: colorHeader , \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0,\r\n                color: colorHeader ,\r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 80, \r\n                height: 60, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [`@media (max-width: ${widthMobile}px)`]: {\r\n                    width: 60, \r\n                    height: 50, \r\n                },\r\n            }, \r\n            buttonModal: { \r\n                backgroundImage: `linear-gradient(180deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`,  \r\n                color: theme.palette.getContrastText(modalBtnColor2), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`,\r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(1, 3), \r\n                cursor: 'pointer', \r\n                '&:hover': { \r\n                    color: theme.palette.getContrastText(modalBtnColor2) ,\r\n                    backgroundImage: `linear-gradient(200deg, ${modalBtnColor1} 0%, ${modalBtnColor2} 100%)`, \r\n                }\r\n            }, \r\n            linkModal: {  \r\n                textTransform: 'inherit', \r\n                padding: theme.spacing(0.5, 1.2),\r\n                '&:hover': { \r\n                    backgroundColor: modalBtnColor1, \r\n                    color: theme.palette.getContrastText(modalBtnColor1), \r\n                    cursor: 'pointer'\r\n                }\r\n            }\r\n        })\r\n    });\r\n    const { header, logoImage ,logoMain , logoSub, fixedPadding, buttonModal, linkModal, topHeader} = useStyles();\r\n  \r\n    useEffect(() => {  \r\n        const setResponsiveness = () => {  \r\n            return window.innerWidth < widthMobile ? setMobileView(true)  : setMobileView(false) \r\n        }; \r\n        const setScrollHeader = () => { \r\n            if(mobileView) {\r\n                const headerTop =  window.pageYOffset \r\n                try {\r\n                    if( headerTop > 1 ) {\r\n                        headerRef.current.classList.add('sticky')\r\n                    } else {\r\n                        headerRef.current.classList.remove('sticky')\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.log(err)\r\n                } \r\n            }\r\n        } \r\n        setResponsiveness(); \r\n        setScrollHeader();\r\n\r\n        window.addEventListener(\"resize\", setResponsiveness);\r\n        window.addEventListener(\"scroll\", setScrollHeader);\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', setResponsiveness) \r\n            window.removeEventListener('scroll', setScrollHeader) \r\n        }\r\n        // eslint-disable-next-line \r\n    }, []);\r\n     \r\n\r\n    const openModal = (target) => { \r\n        handleOpen(target) \r\n    }\r\n\r\n    const handleSignOut = () => {\r\n        firebase.logout()\r\n    }\r\n  \r\n    const createLogo = (\r\n        <NavLink to={'/'} style={{textDecoration: 'none'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n\r\n    const createModalBtn = ( \r\n        <Button\r\n            onClick={() => { openModal(modal.target) }} \r\n            variant=\"contained\"\r\n            size='small' \r\n            className={buttonModal}\r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n    const topHeaderModalBtn = () => ( \r\n        <Button\r\n            onClick={() => { openModal(modal.target) }} \r\n            className={linkModal}\r\n            size='small' \r\n        >\r\n            { modal.text }\r\n        </Button>\r\n    ) \r\n        \r\n    const renderModal = modal.isModal ? createModalBtn : ( <span></span> )\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n                 \r\n            {\r\n                settings.classes.position === 'fixed' &&\r\n                <div className={fixedPadding}></div>\r\n            } \r\n            <AppBar className={header} ref={headerRef}  id='header'>\r\n                    { \r\n                        !mobileView &&\r\n                        <Box className={topHeader} ref={topHeaderRef} >\r\n                            <Container \r\n                                disableGutters={settings.disableGutters}\r\n                                fixed={settings.fixed} \r\n                                maxWidth={settings.maxWidth}  \r\n                            > \r\n                                <Box display='flex' alignItems='center' justifyContent='space-between'>\r\n                                    {  modal.isModal ? topHeaderModalBtn() : ( <span></span> ) }\r\n                                    <Box display='flex' alignItems='center' >\r\n                                        \r\n                                        <ThemeSwitcher/>\r\n                                        \r\n                                        {\r\n                                            user ?\r\n                                            <Button \r\n                                                size='small'\r\n                                                color='secondary' \r\n                                                variant={'contained'} \r\n                                                onClick={handleSignOut}\r\n                                            >\r\n                                                Sign Out\r\n                                            </Button>\r\n                                            :\r\n                                            <NavLink to='/login'>\r\n                                                <Button \r\n                                                    color='default' \r\n                                                    variant=\"outlined\"\r\n                                                    size='small'\r\n                                                >\r\n                                                    Login\r\n                                                </Button>\r\n                                            </NavLink>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n                                </Box>\r\n                            </Container>\r\n                        </Box>\r\n                    }\r\n                <Container \r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                    className='link-in-header' \r\n                > \r\n                    {   !mobileView ? \r\n                        <Desktop   \r\n                            logo={createLogo}  \r\n                            categories={categories} \r\n                            settings={settings}\r\n                            colorHeader={colorHeader}\r\n                            backgroundHeader={backgroundHeader}\r\n                            hoverActiveLinkColor={hoverActiveLinkColor}\r\n                        /> \r\n                        : \r\n                        <Mobile \r\n                            iconColor={iconMobileDrawerColor}  \r\n                            modalBtn={renderModal}\r\n                            logo={createLogo}  \r\n                            categories={categories}  \r\n                            user={user}\r\n                            handleSignOut={handleSignOut}\r\n                        /> }\r\n                </Container>\r\n            </AppBar> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","\r\nimport React from 'react'\r\n\r\nimport CategoriesChanger from './headerHelpers/CategoriesChanger'\r\nimport LogoChanger from './headerHelpers/LogoChanger'\r\nimport StyleChanger from './headerHelpers/StyleChanger'\r\nimport ThemeChanger from './headerHelpers/ThemeChanger'\r\nimport ModalChanger from './headerHelpers/ModalChanger'\r\nimport RequestsChanger from './headerHelpers/RequestsChanger'\r\n\r\nimport DumbComponent from './dumb/DumbComponent'\r\n\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n \r\n\r\nfunction StyledComponent() {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const useStyles = makeStyles((theme) => ({ \r\n        headerContainer: {\r\n            position: 'relative', \r\n            '&:hover $btnSettings': { \r\n                opacity: 1\r\n            }\r\n        },\r\n        hiddenButtonGroup: {\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 105,\r\n            top: -5,  \r\n        },\r\n        btnSettings: { \r\n            opacity: open ? 1 : 0,\r\n            position: 'absolute', \r\n            zIndex: 1020, \r\n            left: 10, \r\n            top: 5, \r\n            width: 60, \r\n            height: 60,\r\n            backgroundColor: theme.palette.error.dark,   \r\n            color: '#fff', \r\n            textAlign: 'center' ,\r\n            '&>span': {\r\n                display: 'flex', \r\n                flexDirection: 'column', \r\n                fontSize: 10\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.secondary.dark, \r\n            },\r\n        },\r\n        btnSettingsItem: {\r\n            marginLeft: theme.spacing(2),\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1), \r\n            display:'inline-block'\r\n        }\r\n    }))\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.headerContainer}>\r\n  \r\n            <div>   \r\n                <Button \r\n                    className={classes.btnSettings}\r\n                    onClick={() => { setOpen(!open) }}\r\n                >   \r\n                    {open ? 'close' : 'open' }\r\n                    <br/>\r\n                    settings\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n                {\r\n                    open && \r\n                    <div className={classes.hiddenButtonGroup}>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <CategoriesChanger/> \r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <LogoChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <StyleChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ThemeChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <RequestsChanger/>\r\n                        </Box>\r\n                        <Box className={classes.btnSettingsItem}>\r\n                            <ModalChanger/>\r\n                        </Box>\r\n                    </div>\r\n                }\r\n                 \r\n            </div>\r\n            \r\n            <DumbComponent/>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./dumb/DumbComponent\"\r\n \r\nimport ModeContext from '../../context/modeContext/ModeContext' \r\n \r\nfunction ElementCreator() {\r\n\r\n    const {modeDev} = React.useContext(ModeContext) \r\n    \r\n    return (    \r\n        <React.Fragment>   \r\n            {\r\n                modeDev && \r\n                <StyledComponent />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent/>\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","\r\nimport React from \"react\";  \r\nimport HeaderCreator from './ElementCreator' \r\n \r\n  \r\nconst Header = () => {  \r\n    return (  \r\n        <HeaderCreator />  \r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { makeStyles, Box, Typography, Container, IconButton, Tooltip } from '@material-ui/core'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\nimport { getColorByPalette } from '../../components/library/colorPicker/ColorCalculation'\r\n\r\nfunction Footer() {\r\n\r\n    const { logo, settings } = React.useContext(CategoryContext)\r\n\r\n    let backgroundFooter = settings.classes.backgroundColor\r\n    let contrastFooter\r\n     \r\n    const useStyles = makeStyles( (theme) => {\r\n\r\n        backgroundFooter = getColorByPalette(theme, backgroundFooter) \r\n        contrastFooter = theme.palette.getContrastText(backgroundFooter)\r\n\r\n        return({ \r\n            footer: {\r\n                backgroundColor: backgroundFooter, \r\n                padding: theme.spacing(3, 0)\r\n            }, \r\n            logoMain: { \r\n                color: contrastFooter,\r\n                fontWeight: 700,\r\n                fontSize: 25, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap',\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: 16,\r\n                    lineHeight: 1.2\r\n                },\r\n            },\r\n            logoSub: { \r\n                color: contrastFooter,\r\n                fontWeight: 400,\r\n                fontSize: 12,\r\n                margin: 0, \r\n                textDecoration: 'none',\r\n                textAlign: \"left\",\r\n                whiteSpace: 'nowrap'\r\n                \r\n            },\r\n            logoImage: { \r\n                width: 70, \r\n                height: 50, \r\n                marginRight: 4, \r\n                '&>img': { \r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: 45, \r\n                    height: 30, \r\n                },\r\n            },  \r\n            buttonToTop: {\r\n                '&:hover': {\r\n                    backgroundColor: theme.palette.primary.dark\r\n                }\r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles()\r\n \r\n    const createLogo = () => (\r\n        <NavLink to={'/'} style={{textDecoration: 'none', display: 'inline-block'}} >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                <img className={classes.logoImage} src={logo.image} alt={'logo'}/>\r\n                <Box display=\"flex\" flexDirection=\"column\">\r\n                    <Typography component=\"h1\" className={classes.logoMain}>\r\n                        {logo.mainText}\r\n                    </Typography>\r\n                    <Typography  component=\"p\" className={classes.logoSub}>\r\n                        {logo.subText}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            \r\n        </NavLink> \r\n    );\r\n    const buttonToTop = () => (\r\n        <Tooltip title='To Top' placement='top' >\r\n            <IconButton \r\n                className={classes.buttonToTop}  \r\n                onClick={handleClickToTop}\r\n            >\r\n                <KeyboardArrowUpIcon style={{fill: contrastFooter}}/>\r\n            </IconButton>\r\n        </Tooltip>\r\n    )\r\n    const handleClickToTop = () => {\r\n        window.scrollTo({\r\n            top: 0, \r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <Container maxWidth={'lg'}>\r\n\r\n                <Box display='flex' alignItems=\"center\" justifyContent='space-between'>\r\n                    { createLogo() }\r\n                    { buttonToTop() }\r\n                </Box>\r\n                \r\n \r\n            </Container>\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebase/firebase' \r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext' \r\nimport ModeContext from '../context/modeContext/ModeContext' \r\n \r\nimport { Avatar, Button, TextField, Box, Container, CircularProgress, Typography, Tooltip } from '@material-ui/core'; \r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Alert } from '@material-ui/lab'; \r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n    \r\n    const { setIsLoading } = React.useContext(LoadingContext) \r\n    const { user } = React.useContext(ModeContext) \r\n \r\n    const [name, setName] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [isRedirect, setIsRedirect] = React.useState(false)\r\n    \r\n    const [isSubmit, setIsSubmit] = React.useState(false)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false) \r\n    \r\n    React.useEffect( () => {\r\n        setIsLoading(false) \r\n        if(user) setIsRedirect(true)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          marginBottom: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: isSubmit ? theme.palette.info.main : theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', // Fix IE 11 issue.\r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submitBtn: {  \r\n            minHeight: 55\r\n        },\r\n        forgotTitle: {\r\n            textAlign: 'center'\r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n    const disableCheck = () => { \r\n            console.log(name, password)\r\n            if(name !== '') setIsDisableBtn(false)\r\n            else setIsDisableBtn(true)  \r\n        \r\n    }\r\n\r\n    const handleChange = (value, place) => {\r\n        switch(place) {\r\n            case ('name') : { \r\n                setName(value)\r\n                break;\r\n            }\r\n            case ('password'): {\r\n                setPassword(value)\r\n                break;\r\n            }\r\n            default: break;\r\n        } \r\n        setError(null)\r\n        \r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        setIsLoading(true)\r\n        setIsDisableBtn(true)\r\n        setIsSubmit(true)\r\n        firebase.loginWithEmail(name, password).then( (res) => {\r\n            setIsRedirect(true)\r\n            setIsSubmit(false)\r\n        }).catch(function(err) { \r\n            setError(err)\r\n            setIsSubmit(false)\r\n            setIsLoading(false)\r\n        })\r\n        \r\n    } \r\n \r\n \r\n    return ( \r\n        <React.Fragment>  \r\n            {/* <Dumb/> */}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                \r\n                {/* Redirect при авторизации */}\r\n                { isRedirect ? (<Redirect push to=\"/\"/>) : null }\r\n  \r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        { isSubmit ? <CircularProgress size={25} color={'#fff'}  /> : <LockOutlinedIcon /> }\r\n                    </Avatar> \r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                id=\"text\"\r\n                                label=\"User\"\r\n                                name=\"user\"\r\n                                autoComplete='true'\r\n                                autoFocus\r\n                                value={name}\r\n                                onChange={  (e)=>{setName(e.target.value); disableCheck()} }\r\n                            />\r\n                        </Box>\r\n                        <Box mb={2} >\r\n                            <TextField\r\n                                variant=\"outlined\" \r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\" \r\n                                value={password}\r\n                                onChange={  (e)=>{setPassword(e.target.value); disableCheck()} }\r\n                            />\r\n                        </Box>\r\n                        {\r\n                            error && \r\n                            <Box mb={2} >\r\n                                <Alert severity=\"error\">{error.message}</Alert>\r\n                            </Box>\r\n                        }\r\n                    \r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            size='medium'\r\n                            color=\"primary\"\r\n                            className={classes.submitBtn}\r\n                            disabled={isDisableBtn} \r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    \r\n                    </form>\r\n                        \r\n                    <Box mt={2} >\r\n                        <Tooltip title=\"It's your problem\" placement='top'>\r\n                            <Typography variant='caption' className={classes.forgotTitle}>\r\n                                Forgot Password? \r\n                            </Typography>\r\n                        </Tooltip>\r\n                    </Box>\r\n                </div>\r\n            \r\n            </Container> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Box, Typography} from '@material-ui/core'\r\n\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'\r\n\r\nfunction Error() {\r\n\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n\r\n    React.useEffect( () => {\r\n        setIsLoading(false)\r\n    }, [setIsLoading])\r\n    \r\n    return ( \r\n        <Box \r\n            display='flex' \r\n            flexDirection=\"column\" \r\n            alignItems='center'\r\n            mt={5}\r\n        >\r\n            <Typography variant='h5' gutterBottom>\r\n                This page isn`t available\r\n            </Typography>\r\n            <NavLink to='/'>\r\n                Home\r\n            </NavLink>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Error\r\n"," \r\nimport {darken} from '@material-ui/core/styles/colorManipulator'  \r\n\r\nconst StyledInputs = () => {  \r\n    \r\n    const styled = (theme) => ({\r\n        settingsItem: {\r\n            marginRight: 5, \r\n            marginBottom: 10, \r\n            flexGrow: 1\r\n        },\r\n        inputNumber: {\r\n            flexGrow: 1, \r\n            padding: 4, \r\n            width: \"100%\",  \r\n            backgroundColor: darken(theme.palette.background.paper , 0.1)\r\n        }, \r\n        inputGroup: {\r\n            border: `1px solid ${theme.palette.divider}`,  \r\n            marginBottom: 2\r\n        },\r\n        dumbItemContainer: { \r\n            position: 'relative', \r\n            outline: '1px solid #f000',\r\n            transition: `${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeIn} outline`, \r\n        },\r\n        dumbItem: { \r\n            position: 'relative',\r\n            transition: \"300ms cubic-bezier(0.4, 0, 1, 1)\", \r\n        }, \r\n        dumbItemDelete : { \r\n            opacity: 0,\r\n            position: 'absolute', \r\n            zIndex: 15, \r\n            top: 3, \r\n            right: 5, \r\n            display: 'flex', \r\n            alignItems: 'center'\r\n        },\r\n        mtView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        mbView: {  \r\n            position: 'absolute',  \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#fff7003d', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        }, \r\n        ptView: {  \r\n            position: 'absolute', \r\n            top: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n        pbView: {  \r\n            position: 'absolute', \r\n            bottom: 0, \r\n            left: 0, \r\n            right: 0,\r\n            zIndex: 10, \r\n            backgroundColor: '#400e575e', \r\n            opacity: 0,\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeIn} opacity`\r\n        },\r\n    })\r\n \r\n    return styled \r\n}\r\n\r\nexport default StyledInputs \r\n","import React, { memo, useState } from \"react\";\r\n\r\nimport {   \r\n    Box,\r\n    TextField,   \r\n    IconButton, \r\n    Tooltip, \r\n    makeStyles\r\n} from '@material-ui/core' \r\n\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nconst InputChange = memo(({ id, fullWidth, multiline,  type, size, label, variant, value, setValue, setIsDisableBtn, direction }) => {\r\n\r\n    const [valueLocal, setValueLocal] = useState(value) \r\n\r\n    const save = () => { \r\n        if(valueLocal !== value) {\r\n            if(id !== null ) setValue(valueLocal, id)\r\n            else setValue(valueLocal)\r\n\r\n            setIsDisableBtn(false) \r\n        } \r\n    } \r\n    \r\n    const handleChange = (e) => {\r\n        type === 'number' ? setValueLocal(Number(e.target.value)) : setValueLocal(e.target.value)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles( theme => {  \r\n        return( {\r\n             \r\n            iconButton: {\r\n                padding: theme.spacing(1)\r\n            }, \r\n            iconButtonDisabled: {\r\n            \r\n            }\r\n        })\r\n    })\r\n    const classes = useStyles() \r\n\r\n    return (\r\n        // <Box display='flex' alignItems='center' flexDirection={direction} >\r\n        //     {\r\n        //         valueLocal !== value &&\r\n        //         <Box mx={1}> \r\n        //             <Tooltip title=\"Save\" placement='top'>\r\n        //                 <IconButton onClick={save}  color={'primary'} className={classes.iconButton} >\r\n        //                     <CheckCircleOutlineIcon />\r\n        //                 </IconButton> \r\n        //             </Tooltip>\r\n        //         </Box>\r\n        //     }\r\n            <TextField\r\n                fullWidth={fullWidth}\r\n                type={type}\r\n                multiline={multiline}\r\n                size={size}\r\n                label={label}\r\n                variant={variant}\r\n                value={valueLocal}\r\n                onChange={handleChange}\r\n                onBlur={save}\r\n            />\r\n            \r\n        // </Box>\r\n    )\r\n})\r\n\r\nexport default InputChange\r\n","import React from 'react' \r\nimport Draggable from 'react-draggable'; \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\n\r\nimport uuid from 'react-uuid' \r\nimport ColorSelecter from '../colorPicker/ColorSelecter' \r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n  \r\nimport { \r\n    MenuItem,   FormGroup,  Button,\r\n    Box,  Menu, Tooltip,\r\n    TextField, FormControl, InputLabel,\r\n    Select, Typography, IconButton, \r\n    Modal, DialogContent, \r\n} from '@material-ui/core' \r\n\r\nimport LibraryContext from '../../../context/libraryContext/LibraryContext' \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nfunction ContainerElement(props) { \r\n    console.log('styled Container work')\r\n    const { layouts } = React.useContext(LibraryContext)\r\n    const libraryHeading = layouts.heading\r\n    const libraryParagraph = layouts.paragraph\r\n    const libraryParagraphImage = layouts.paragraphImage\r\n    const libraryList = layouts.list\r\n\r\n  \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop ,  \r\n        bottom: props.data.classes.paddingBottom ,  \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    })\r\n    \r\n    const [display, setDisplay] = React.useState(props.data.classes.display || 'flex')\r\n    const [flexDirection, setFlexDirection] = React.useState(props.data.classes.flexDirection || 'column')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'inherit')\r\n\r\n    const [borderColorSelect,  setBorderColorSelect] = React.useState(props.data.classes.borderColor || 'inherit')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor || 'inherit')\r\n \r\n    const [shadow, setShadow] = React.useState(props.data.classes.boxShadow || 'none')\r\n \r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0)\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  0)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n  \r\n\r\n    const [settingGutter, setSettingGutter] = React.useState(props.data.disableGutters)\r\n    const [settingFixed, setSettingFixed] = React.useState(props.data.fixed)\r\n    const [settingMaxWidth, setSettingMaxWidth] = React.useState(props.data.maxWidth)\r\n    const [settingInnerContainer, setSettingInnerContainer] = React.useState(props.data.innerContainer || false )\r\n    const [settingIsPaper, setSettingIsPaper] = React.useState(props.data.isPaper || false )\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null); \r\n     \r\n\r\n    const propsSettings = {\r\n        maxWidth: settingMaxWidth,\r\n        disableGutters: settingGutter,\r\n        fixed: settingFixed,\r\n        innerContainer: settingInnerContainer,\r\n        isPaper :settingIsPaper\r\n    }\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor])\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { btnSave, menu, menuTitle,  responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip  } = commonClasses \r\n        const { inputNumber, inputGroup , settingsItem  } = commonStyle \r\n \r\n\r\n        return ({   \r\n            settingsItem: settingsItem,\r\n            inputNumber: {...inputNumber, ...{\r\n                // maxWidth: '50%'\r\n            }}, \r\n            inputGroup: inputGroup,\r\n            btnSave: btnSave,\r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 300px)\",\r\n                width: 600, \r\n            } },\r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip,\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const myClassName = {  \r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom, \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,  \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth,\r\n        boxShadow: shadow, \r\n        display: display, \r\n        flexDirection: flexDirection  \r\n    }  \r\n     \r\n\r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n  \r\n    const handleHeadingMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleHeadingMenuClose = (variant, type) => {\r\n        setAnchorEl(null); \r\n        props.handleClose()\r\n        addHeading(variant, type)\r\n    }; \r\n  \r\n    const addHeading = async (variant, type) => { \r\n          \r\n        let newChildren = props.data.children.slice()\r\n\r\n        let newItem = {}\r\n        \r\n\r\n        switch(type) { \r\n            case 'heading' :  \r\n                newItem = JSON.parse(JSON.stringify(libraryHeading)); \r\n                newItem.id = uuid()\r\n                newItem.variant = newItem.variant[variant] \r\n                newItem.text += \" - \" + newItem.variant \r\n                break;\r\n            case 'paragraph' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraph)); \r\n                newItem.id = uuid() \r\n                break;\r\n            case 'paragraphImage' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryParagraphImage)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            case 'list' :   \r\n                newItem = JSON.parse(JSON.stringify(libraryList)); \r\n                newItem.id = uuid()  \r\n                break;\r\n            default: break;\r\n        }  \r\n\r\n        newChildren.push(newItem) \r\n   \r\n        props.handleClose()\r\n\r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newChildren)\r\n \r\n    } \r\n\r\n    const reSaveClassesSettings = () => {    \r\n        if (backgroundSelect === 'custom') { myClassName.backgroundColor = backgroundCustom }\r\n        else { myClassName.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { myClassName.color = colorCustom } \r\n        else { myClassName.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { myClassName.borderColor = borderColorCustom } \r\n        else { myClassName.borderColor = borderColorSelect }\r\n\r\n        props.reSaveContainerStyleSettings(props.data.id, myClassName, propsSettings)\r\n        setIsDisableBtn(true);  \r\n    } \r\n\r\n    const handleClose = () => {\r\n        if(!isDisableBtn)reSaveClassesSettings()\r\n        props.handleClose()\r\n    } \r\n    \r\n    \r\n    \r\n \r\n    return (\r\n        <Box \r\n            maxWidth={props.propsSettings.maxWidth} \r\n            fixed={String(props.propsSettings.fixed)}   \r\n        >    \r\n            \r\n            <Box style={{position: 'relative'}} >  \r\n                <Modal \r\n                    open={props.open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    Container Settings<OpenWithIcon/>\r\n                                </Typography>\r\n                    <FormGroup > \r\n                        <Typography  variant={'h6'} gutterBottom  >\r\n                            Add item from libs\r\n                        </Typography>\r\n                        <Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button \r\n                                        aria-controls=\"heading-menu\" \r\n                                        aria-haspopup=\"true\" \r\n                                        onClick={handleHeadingMenuClick}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Heading\r\n                                    </Button>\r\n                                </Box>\r\n                                \r\n                                <Menu\r\n                                    id=\"heading-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleHeadingMenuClose}\r\n                                >\r\n                                    <MenuItem value={0} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h1</MenuItem>\r\n                                    <MenuItem value={1} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h2</MenuItem>\r\n                                    <MenuItem value={2} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h3</MenuItem>\r\n                                    <MenuItem value={3} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h4</MenuItem>\r\n                                    <MenuItem value={4} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h5</MenuItem>\r\n                                    <MenuItem value={5} onClick={(e) => {handleHeadingMenuClose(e.target.value, \"heading\")}} >Heading h6</MenuItem> \r\n                                </Menu>\r\n\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraph');}}\r\n                                        variant='contained'\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Paragraph\r\n                                    </Button>\r\n                                </Box>\r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('p', 'paragraphImage');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        Paragraph-Image\r\n                                    </Button>\r\n                                </Box> \r\n                                <Box mr={2} mb={1} clone={true} >\r\n                                    <Button\r\n                                        onClick={() => {addHeading('list', 'list');  }}\r\n                                        variant='contained'\r\n                                        color=\"primary\" \r\n                                    >\r\n                                        List\r\n                                    </Button>\r\n                                </Box> \r\n                        </Box>\r\n\r\n                    </FormGroup>\r\n\r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Settings \r\n                    </Typography>\r\n                    <FormGroup row>\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"dis-gutters-style-label\">Disable Gutters</InputLabel>\r\n                            <Select\r\n                                labelId=\"dis-gutters-label\"\r\n                                id=\"dis-gutters-style\"\r\n                                value={settingGutter}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingGutter(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        \r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"fixed-style-label\">Fixed</InputLabel>\r\n                            <Select\r\n                                labelId=\"fixed-label\"\r\n                                id=\"fixed-style\"\r\n                                value={settingFixed}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingFixed(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>  \r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup row> \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"maxWidth-style-label\">Max-Width</InputLabel>\r\n                            <Select\r\n                                labelId=\"maxWidth-label\"\r\n                                id=\"maxWidth-style\"\r\n                                value={settingMaxWidth}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingMaxWidth(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Container</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-container-label\"\r\n                                id=\"inner-container-style\"\r\n                                value={settingInnerContainer}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingInnerContainer(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup row> \r\n                            \r\n                        <FormControl \r\n                            variant='filled' \r\n                            size='small'   \r\n                            className={classes.settingsItem}\r\n                        >\r\n                            <InputLabel id=\"inner-container-style-label\">Inner Paper Component</InputLabel>\r\n                            <Select\r\n                                labelId=\"inner-paper-label\"\r\n                                id=\"inner-paper-style\"\r\n                                value={settingIsPaper}\r\n                                onChange={(e) => {setIsDisableBtn(false); setSettingIsPaper(e.target.value) }}\r\n                            >\r\n                                <MenuItem value={false}>False</MenuItem>\r\n                                <MenuItem value={true}>True</MenuItem> \r\n                            </Select>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    \r\n                    <Typography  variant={'h6'} gutterBottom  >\r\n                        Styles \r\n                    </Typography>\r\n                    <React.Fragment>\r\n                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                <TabletMacIcon/>\r\n                                <Box>   \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.8 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.8 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.8 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.8 }</b> \r\n                                    </p>     \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>  \r\n                                    <p> \r\n                                        MarginTop: <b> { margin.top*0.5 }</b>; \r\n                                        MarginBottom: <b>{margin.bottom * 0.5 }</b> ; \r\n                                        PaddingTop: <b>{padding.top * 0.5 }</b>  ; \r\n                                        PaddingBottom: <b>{padding.bottom * 0.5 }</b> \r\n                                    </p>        \r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n                        {/* display */}\r\n                        <Box className={classes.inputGroup}>\r\n\r\n                            <Tooltip title=\"For correct margin inside conteiner recomended:   display: flex, flexDirection: column\"  >\r\n                                <IconButton>\r\n                                    <InfoOutlined/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"display-style-label\"\r\n                                        id=\"display-style\"\r\n                                        value={display}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'block'}>Block</MenuItem>  \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem>  \r\n                                    </Select>\r\n                                </FormControl>\r\n                                {\r\n                                    display === 'flex' &&\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"direction-style-label\">Flex Direction</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"direction-style-label\"\r\n                                            id=\"direction-style\"\r\n                                            value={flexDirection}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFlexDirection(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value={'row'}>Row</MenuItem>  \r\n                                            <MenuItem value={'column'}>Column</MenuItem>  \r\n                                            <MenuItem value={'row-reverse'}>Row Reverse</MenuItem>  \r\n                                            <MenuItem value={'column-reverse'}>Column Reverse</MenuItem>  \r\n                                        </Select>\r\n                                    </FormControl>   \r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* margin */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Top'\r\n                                        variant='filled'\r\n                                        value={margin.top}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label='Margin Bottom'\r\n                                        variant='filled'\r\n                                        value={margin.bottom}\r\n                                        setValue={handleMargin}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box>  \r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        {/* padding */}\r\n                        <Box className={classes.inputGroup}>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >\r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'top'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Top\" \r\n                                        variant='filled'\r\n                                        value={padding.top}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'bottom'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Padding Bottom\" \r\n                                        variant='filled'\r\n                                        value={padding.bottom}\r\n                                        setValue={handlePadding}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n\r\n                        </Box>\r\n                        \r\n                        {/* bg-color */}\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} > \r\n                                <ColorSelecter\r\n                                    label={'Background'}\r\n                                    colorSelect={backgroundSelect} \r\n                                    setColorSelect={setBackgroundSelect}\r\n                                    colorCustom={backgroundCustom}\r\n                                    setColorCustom={setBackgroundCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'left'}\r\n                                    noInherit={false}\r\n                                />  \r\n                            </Box>\r\n                        </Box>\r\n                        <Box  className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Color'}\r\n                                    colorSelect={colorSelect} \r\n                                    setColorSelect={setColorSelect}\r\n                                    colorCustom={colorCustom}\r\n                                    setColorCustom={setColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'right'}\r\n                                    noInherit={false}\r\n                                    isContrastSelect={true}\r\n                                />   \r\n                            </Box> \r\n                        </Box>\r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" >  \r\n                            <Box className={classes.inputNumber} >\r\n                                <ColorSelecter\r\n                                    label={'Border Color'}\r\n                                    colorSelect={borderColorSelect} \r\n                                    setColorSelect={setBorderColorSelect}\r\n                                    colorCustom={borderColorCustom}\r\n                                    setColorCustom={setBorderColorCustom}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                    position = {'left'}\r\n                                    noInherit={false} \r\n                                />  \r\n                            </Box> \r\n                        </Box>\r\n                         \r\n                        <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                            <FormControl \r\n                                variant='filled' \r\n                                size='small'   \r\n                                className={classes.inputNumber}\r\n                            >\r\n                                <InputLabel id=\"shadow-style-label\">Box Shadow</InputLabel>\r\n                                <Select\r\n                                    labelId=\"shadow-style-label\"\r\n                                    id=\"shadow-style\"\r\n                                    value={shadow}\r\n                                    onChange={(e) => {setIsDisableBtn(false); setShadow(e.target.value) }}\r\n                                >\r\n                                    <MenuItem value={'none'}>None</MenuItem>\r\n                                    <MenuItem value={`0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),\r\n                                    0px 1px 5px 0px rgba(0,0,0,0.12)`}>Small</MenuItem>\r\n                                    <MenuItem value={`0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),\r\n                                    0px 3px 16px 2px rgba(0,0,0,0.12)`}>Medium</MenuItem>\r\n                                    <MenuItem value={`0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),\r\n                                    0px 9px 46px 8px rgba(0,0,0,0.12)`}>Large</MenuItem> \r\n                                </Select>\r\n                            </FormControl> \r\n                            \r\n                        </Box>\r\n                            \r\n                        {/* border */}\r\n                        <Box className={classes.inputGroup}> \r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Radius\" \r\n                                        variant='filled'\r\n                                        value={borderRadius}\r\n                                        setValue={setBorderRadius}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                            </Box>\r\n                            <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                <Box className={classes.inputNumber}>\r\n                                    <InputChange\r\n                                        id={'right'}\r\n                                        fullWidth={true}\r\n                                        type='number'\r\n                                        size=\"small\" \r\n                                        label=\"Border Width\" \r\n                                        variant='filled'\r\n                                        value={borderWidth}\r\n                                        setValue={setBorderWidth}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    /> \r\n                                </Box> \r\n                                <FormControl \r\n                                    variant='filled' \r\n                                    size='small'   \r\n                                    className={classes.inputNumber}\r\n                                >\r\n                                    <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"border-style-label\"\r\n                                        id=\"border-style\"\r\n                                        value={borderStyle}\r\n                                        onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Box mt={5} />\r\n                        {/* <Box  className={classes.btnSave}>\r\n                            <Button\r\n                                disabled={isDisableBtn}\r\n                            \r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size={'medium'} \r\n                                onClick={reSaveClassesSettings}\r\n                            >\r\n                                Save\r\n                            </Button> \r\n                        </Box> */}\r\n                        \r\n                    </React.Fragment> \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                </Modal> \r\n            </Box>                        \r\n             \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContainerElement\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// import { Typography } from '@material-ui/core';\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: color,  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} ,\r\n            resposiveFontSize: { \r\n                [`@media (max-width: 960px)`]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.8 : 20, \r\n                    marginTop: props.className.marginTop*0.8,\r\n                    marginBottom: props.className.marginBottom*0.8\r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    fontSize: props.className.fontSize > 40 ? props.className.fontSize*0.6 : 20,\r\n                    lineHeight : 1.2, \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n             \r\n          })\r\n    } );\r\n    const classes = useStyles();\r\n \r\n    \r\n    const classeForResp = props.data.responseFont ? classes.resposiveFontSize : '' \r\n\r\n    const renderText = () => {\r\n        if(props.textChildren.length > 0) { \r\n            return  <span dangerouslySetInnerHTML={{__html: props.textChildren}}></span>\r\n        }\r\n        else {\r\n            return `(No text - ${props.data.variant})`\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n             <Box \r\n                component={props.data.variant} \r\n                className={`${classes.myClassName} ${classeForResp}`} \r\n            >\r\n                { renderText() } \r\n            </Box>\r\n\r\n\r\n            {/* <Typography variant={props.data.variant} className={[classes.myClassName, classeForResp]} >\r\n                { \r\n                    props.textChildren\r\n                }\r\n            </Typography> */} \r\n            \r\n\r\n            {/* {  \r\n                React.createElement(`${props.data.variant}`, { className: `${classes.myClassName} ${classeForResp}` }, renderText() ) \r\n            } */}\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n \r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormControlLabel, \r\n    Switch,\r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    IconButton, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Tooltip,\r\n    DialogContent,\r\n    ButtonGroup,\r\n    FormGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport { DeleteOutline, InfoOutlined } from '@material-ui/icons';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled heading work')\r\n\r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n    \r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n \r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [isResponsiveFont, setIsResponsiveFont] = React.useState(props.data.responseFont || false)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n          \r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, responseValues, responseTablets, responseMobile, mobileTooltip, tabletTooltip } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle \r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            // btnSave: btnSave,\r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {    \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${margin.top * 0.8}px`,  \r\n                        height: `${margin.top * 0.8}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${margin.bottom * 0.8}px`,\r\n                        height: `${margin.bottom * 0.8 }px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${margin.bottom * 0.5}px`,\r\n                        height: `${margin.bottom * 0.5 }px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },    \r\n            menuTitle: menuTitle,  \r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n            tooltip: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.primary.main\r\n            }\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight,\r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n \r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n \r\n\r\n        sentData.text = textInDumb\r\n        sentData.responseFont = isResponsiveFont\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true); \r\n        // handleClose()\r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    const swapHeading = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleInputFocus = (event) => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const viewCorrect = props.data.classes.display !== 'block' ? `(uncorrect view for ${props.data.classes.display} display)` : ''\r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open} \r\n                    // PaperComponent={PaperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                            <div className={classes.menu}  >\r\n                                <Typography \r\n                                    component='p' \r\n                                    className={classes.menuTitle}\r\n                                    id=\"draggable-dialog-title\"\r\n                                >\r\n                                    { !isDisableBtn && \"Close to save - \" } Heading - {props.data.variant} Settings <OpenWithIcon/>\r\n                                </Typography>\r\n\r\n                                {/* text input */}\r\n                                <Box mb={2} >\r\n                                    <InputChange\r\n                                        id={null}\r\n                                        fullWidth={true}\r\n                                        multiline={true}\r\n                                        type='text'\r\n                                        size=\"medium\" \r\n                                        label=\"Text input\"\r\n                                        variant='standard'\r\n                                        value={textInDumb}\r\n                                        setValue={setTextInDumb}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                    />      \r\n                                </Box>  \r\n\r\n                                {/* Responsive font */}\r\n                                <Box mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={isResponsiveFont}\r\n                                                    onChange={() => {  setIsDisableBtn(false); setIsResponsiveFont(!isResponsiveFont) }}\r\n                                                    name=\"checkedB\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Set Responsive Font Size\"\r\n                                        />\r\n                                        <Tooltip classes={{tooltip: classes.tooltip}}  title=\"If enabled, the type will be smaller on mobile devices and the alignment will be centered\"  >\r\n                                            <IconButton>\r\n                                                <InfoOutlined/>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                </Box>\r\n                                <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                        <TabletMacIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.8 }</b>; MarginBottom: <b>{margin.bottom * 0.8 }</b> </p>   \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.8 : 20 }</b> </p>   \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                    <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                        <PhoneIphoneIcon/>\r\n                                        <Box> \r\n                                            {\r\n                                                isResponsiveFont ?\r\n                                                <React.Fragment> \r\n                                                    <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p>  \r\n                                                    <p>FontSize: <b>{ fontSize > 40 ? fontSize*0.6 : 20 }</b>  LineHeight: <b>{1.2} </b> </p>   \r\n                                                    <p>TextAlign:  <b>center</b> </p>\r\n  \r\n                                                </React.Fragment>\r\n                                                :\r\n                                                <Typography variant='caption'>\r\n                                                    Turn on the \"button\" at the top for auto-calculated responsive values\r\n                                                </Typography>\r\n                                            }\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Tooltip>\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={display}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'block'}>Block</MenuItem> \r\n                                            <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                            <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                            <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>  \r\n\r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='filled'\r\n                                                value={margin.top}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={margin.bottom}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Left'\r\n                                                variant='filled'\r\n                                                value={margin.left}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Right'\r\n                                                variant='filled'\r\n                                                value={margin.right}\r\n                                                setValue={handleMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                         \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* padding */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top\" \r\n                                                variant='filled'\r\n                                                value={padding.top}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Bottom\" \r\n                                                variant='filled'\r\n                                                value={padding.bottom}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Left\" \r\n                                                variant='filled'\r\n                                                value={padding.left}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Right\" \r\n                                                variant='filled'\r\n                                                value={padding.right}\r\n                                                setValue={handlePadding}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                \r\n                                </Box>\r\n                                \r\n                                {/* bg-color */}\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Background'}\r\n                                            colorSelect={backgroundSelect} \r\n                                            setColorSelect={setBackgroundSelect}\r\n                                            colorCustom={backgroundCustom}\r\n                                            setColorCustom={setBackgroundCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'left'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                     \r\n                                </Box>\r\n                                \r\n                                {/* font */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Font Size\" \r\n                                                variant='filled'\r\n                                                value={fontSize}\r\n                                                setValue={setFontSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"weight-select-label\"\r\n                                                id=\"weight-select\"\r\n                                                value={fontWeight}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                        \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Line Height (em)\" \r\n                                                variant='filled'\r\n                                                value={lineHeight}\r\n                                                setValue={setLineHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                     \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={borderRadius}\r\n                                                setValue={setBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={borderWidth}\r\n                                                setValue={setBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>   \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"border-style-label\"\r\n                                                id=\"border-style\"\r\n                                                value={borderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                        <Box className={classes.inputNumber} >   \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={borderColorSelect} \r\n                                                setColorSelect={setBorderColorSelect}\r\n                                                colorCustom={borderColorCustom}\r\n                                                setColorCustom={setBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'left'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                                {/* <Box className={classes.btnSave}>\r\n                                    <Button \r\n                                        disabled={isDisableBtn} \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size={'medium'} \r\n                                        onClick={saveData}\r\n                                    >\r\n                                        Save\r\n                                    </Button> \r\n                                </Box> */}\r\n                            \r\n                            </div>\r\n                        </Draggable>\r\n                    </DialogContent>\r\n                    \r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                       \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleInputFocus}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        >\r\n                            <Tooltip  title={` ${props.data.variant} margin top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` ${props.data.variant} margin bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding top ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` ${props.data.variant} padding bottom ${viewCorrect}`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>  \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}\r\n                                isResponsiveFont={props.data.responseFont}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text}\r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapHeading('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Heading\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                        \r\n                        \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}\r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'; \r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb list') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        \r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: color,   \r\n            }},  \r\n            liClass: props.data.itemsStyle,\r\n            mobileClass: {\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: props.className.marginTop === 0 ? 0 : (props.className.marginTop > 30 ? props.className.marginTop*0.6 : 15), \r\n                    marginBottom: props.className.marginBottom === 0 ? 0 : (props.className.marginBottom > 30 ? props.className.marginBottom*0.6 : 15),  \r\n                    paddingLeft: props.className.paddingLeft === 0 ? 0 : (props.className.paddingLeft > 30 ? props.className.paddingLeft*0.6 : 15)\r\n                } \r\n            }\r\n          })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n           <ul className={`${classes.myClassName} ${classes.mobileClass}`}>\r\n                {\r\n                    props.data.items.map( (item, index) => (\r\n                        <li key={index} className={classes.liClass}>\r\n                            {item}\r\n                        </li>\r\n                    ))        \r\n                }\r\n                {\r\n                    props.data.items.length === 0 &&\r\n                    <li className={classes.liClass} >No items</li>\r\n                }\r\n           </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    Grid,  \r\n    Button, \r\n    ButtonGroup, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n  \r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';   \r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled list work')\r\n\r\n    const [paddingLeft, setPaddingLeft] = React.useState( props.data.classes.paddingLeft || 15 )\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop ,  \r\n        bottom: props.data.classes.marginBottom ,  \r\n    }) \r\n     \r\n    const [colorSelect, setColorSelect] = React.useState(props.data.classes.color || 'inherit') \r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit') \r\n\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [items, setItems] = React.useState(props.data.items || [])\r\n    const [itemsPadding, setItemsPadding] = React.useState(props.data.itemsStyle.paddingBottom || [])\r\n    const [itemsListStyle, setItemsListStyle] = React.useState(props.data.itemsStyle.listStyle || 'decimal')\r\n    const [newItem, setNewItem] = React.useState('') \r\n\r\n    const mobileMarginTopComputed = margin.top === 0 ? 0 : (margin.top > 30 ? margin.top*0.6 : 15)\r\n    const mobileMarginBottomComputed = margin.bottom === 0 ? 0 : (margin.bottom > 30 ? margin.bottom*0.6 : 15)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    \r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n    }, [props.data.classes.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip  } = commonClasses \r\n        const { mtView, mbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({ \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }   \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            },  \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n            movingPageBtn: {  \r\n                '&>button' : {\r\n                    paddingLeft: 3,\r\n                    paddingRight: 3,\r\n                    minWidth: 22\r\n                }\r\n            },\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = {  \r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom, \r\n        paddingLeft: paddingLeft,  \r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight \r\n    } \r\n    const classes = useStyles();\r\n\r\n    \r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.itemsStyle = {\r\n            paddingBottom: itemsPadding, \r\n            listStyle: itemsListStyle\r\n        }\r\n        sentData.items = items\r\n        if(colorSelect === 'custom') {\r\n            sentData.classes.color = colorCustom\r\n        } else {\r\n            sentData.classes.color = colorSelect\r\n        }\r\n \r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleItemChange = (index, value) => {\r\n        let newItems = items.slice()\r\n        newItems[index] = value\r\n        setItems(newItems)\r\n        setIsDisableBtn(false)\r\n    }\r\n    const swapItem = (direction, index) => {\r\n        let newItems = items.slice() \r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex - 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newItems[activeIndex]\r\n          const placeItem = newItems[activeIndex + 1]\r\n    \r\n          newItems[activeIndex] = placeItem\r\n          newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const deleteItem = (index) => {  \r\n        let newItems = items.slice()\r\n        newItems.splice(index, 1)\r\n         \r\n        setItems(newItems) \r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleAddItem = () => {\r\n        let newItems = items.slice()\r\n        \r\n        newItems.push(newItem)\r\n \r\n        setItems(newItems)\r\n        \r\n        setNewItem('') \r\n        setIsDisableBtn(false)\r\n    } \r\n    const swapList = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } List Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>\r\n                                        <p>\r\n                                            MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                            MarginBottom: <b>{mobileMarginBottomComputed}</b> \r\n                                        </p> \r\n                                        <p>PaddingLeft:  <b>{paddingLeft === 0 ? 0 : (paddingLeft > 30 ? paddingLeft*0.6 : 15)}</b></p>\r\n                                    </Box>\r\n                                </Box> \r\n                            </Tooltip> \r\n                               \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Block Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>  \r\n                                </Box> \r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Block Padding Left\" \r\n                                            variant='filled'\r\n                                            value={paddingLeft}\r\n                                            setValue={setPaddingLeft}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Item Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={itemsPadding}\r\n                                            setValue={setItemsPadding}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>   \r\n                                </Box>\r\n                                 \r\n                            </Box>\r\n                           \r\n                                     \r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup} mt={2}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                     \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={300}>Light</MenuItem>\r\n                                            <MenuItem value={400}>Regular</MenuItem>\r\n                                            <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl> \r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">List Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={itemsListStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setItemsListStyle((e.target.value)) }}\r\n                                        >\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            <MenuItem value={'circle'}>Circle</MenuItem>\r\n                                            <MenuItem value={'disc'}>Disc</MenuItem>\r\n                                            <MenuItem value={'square'}>Square</MenuItem>\r\n                                            <MenuItem value={'decimal'}>Numbers</MenuItem>\r\n                                            <MenuItem value={'lower-alpha'}>lower-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-alpha'}>upper-alpha</MenuItem>\r\n                                            <MenuItem value={'upper-roman'}>upper-roman</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n \r\n                                       \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >\r\n                                        <ColorSelecter\r\n                                            label={'Color'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"left\"\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n\r\n                            {/* items */}\r\n                            <Box className={classes.inputGroup} mt={3}>  \r\n                                {\r\n                                    items.map( (item, index) => {\r\n                                        return (\r\n                                            <Box key={index} display={'flex'} p={1} > \r\n                                                <TextField \r\n                                                    className={classes.inputNumber}\r\n                                                    type='text'\r\n                                                    label={`Item ${index+1}`} \r\n                                                    variant=\"outlined\" \r\n                                                    size='small'  \r\n                                                    value={item}\r\n                                                    onChange={ (e) => {handleItemChange(index, e.target.value)} }     \r\n                                                /> \r\n                                                <ButtonGroup \r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"contained primary button group\"\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.movingPageBtn}\r\n                                                    >  \r\n                                                        {\r\n                                                            items.indexOf(item) !== 0 &&\r\n                                                            <Tooltip title='Get Up' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('up', index) }}\r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >  \r\n                                                                    <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                        {\r\n                                                            items.indexOf(item) !== items.length - 1 &&\r\n                                                            <Tooltip title='Get Down' placement='top'>\r\n                                                                <Button   \r\n                                                                    onClick={() => { swapItem('down', index) }} \r\n                                                                    size='small'\r\n                                                                    variant='contained'\r\n                                                                    color='primary'  \r\n                                                                >     \r\n                                                                    <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                </Button>\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                            \r\n                                                        <Tooltip title='Delete Item' placement='top'>\r\n                                                            <Button\r\n                                                                variant='contained'\r\n                                                                color=\"secondary\"\r\n                                                                disableElevation={true} \r\n                                                                onClick={() => { deleteItem(index) }}\r\n                                                            > \r\n                                                                <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>  \r\n                                                    </ButtonGroup> \r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                } \r\n                                <Box px={1}>\r\n                                    <TextField \r\n                                        className={classes.inputNumber}\r\n                                        type='text'\r\n                                        label={`New Item`} \r\n                                        variant=\"outlined\" \r\n                                        size='small'  \r\n                                        value={newItem}\r\n                                        onChange={ (e) => {setNewItem(e.target.value)} }     \r\n                                    />\r\n                                    <Box my={1}>\r\n                                        <Button \r\n                                            onClick={handleAddItem}\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            disabled={newItem.length > 0 ? false : true}\r\n                                        >\r\n                                            Add new item\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box mt={5} />\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` list margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` list margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                               \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}   \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                            \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapList('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete List\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                        \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes}  \r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n \r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n \r\nfunction DumbComponent(props) {\r\n\r\n    console.log('dumb paragraph')\r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: color,  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }}   \r\n        })\r\n    });\r\n    const classes = useStyles();\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={classes.myClassName} > \r\n                { \r\n                    props.textChildren.length !== 0 ? props.textChildren : '(No text - paragraph)'\r\n                } \r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,   \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    DialogContent, \r\n    Tooltip,\r\n    ButtonGroup\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\"  \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline';  \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n\r\n    console.log('styled paragraph work')\r\n    let [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop  , \r\n        left:  props.data.classes.paddingLeft ,\r\n        bottom: props.data.classes.paddingBottom , \r\n        right: props.data.classes.paddingRight \r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop , \r\n        left:  props.data.classes.marginLeft ,\r\n        bottom: props.data.classes.marginBottom , \r\n        right: props.data.classes.marginRight \r\n    })\r\n      \r\n    \r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit')\r\n\r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent') \r\n\r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  0 )\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius || 0)\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor]) \r\n         \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, responseValues, responseMobile } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n        return ({\r\n     \r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                top: `-${margin.top}px`, \r\n                height: `${margin.top}px`, \r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${margin.bottom}px`, \r\n                height: `${margin.bottom}px`, \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,  \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },   \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n             \r\n            menuTitle: menuTitle,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile\r\n             \r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right, \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n    const classes = useStyles();\r\n\r\n      \r\n     \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)   \r\n    }\r\n    const handleMargin= (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)   \r\n    }\r\n\r\n    const handleSave = () => {    \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName \r\n        sentData.text = textInDumb\r\n\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        \r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        \r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) {  \r\n            props.removeItem(props.data.id)\r\n        } \r\n    };\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n      };\r\n    \r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />     \r\n                            </Box>  \r\n                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                <PhoneIphoneIcon/>\r\n                                <Box>   \r\n                                    <p>Paragraph don`t have any response values</p>   \r\n                                </Box>\r\n                            </Box>\r\n\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'left'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >   \r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box> \r\n                                    \r\n                            </Box>\r\n\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                        \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"align-select-label\"\r\n                                            id=\"align-select\"\r\n                                            value={textAlign}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={'left'}>Left</MenuItem>\r\n                                        <MenuItem value={'center'}>Center</MenuItem>\r\n                                        <MenuItem value={'right'}>Right</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'left'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                            </Box>\r\n                                \r\n                                <Box mt={5} />\r\n                              \r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button> \r\n                            </Box> */}\r\n                        \r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer }>  \r\n                        <div \r\n                            className={classes.dumbItem }\r\n                            onClick={handleOpen}\r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraph margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraph margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraph padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip>   \r\n                            \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            /> \r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n   \r\n    return (   \r\n        // !!data.classes &&\r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tooltip } from '@material-ui/core';  \r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.className.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.className.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.className.borderColor)\r\n        let  imageBorderColor = getColorByPalette(theme, props.imageClassName.borderColor)\r\n\r\n        return({\r\n            myClassName: {...props.className, ...{\r\n                color: color,  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor\r\n            }} , \r\n            imageStyle: props.imageClassName ? {...props.imageClassName, ...{ \r\n                borderColor: imageBorderColor\r\n            }} : {} ,  \r\n            imageStabilization: {\r\n                maxWidth: '100%', \r\n                maxHeight: '100%',  \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    height: 'auto'\r\n                }, \r\n                // [theme.breakpoints.down('md')]: { \r\n                // }\r\n            },\r\n            mobileClass: {\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    textAlign: 'center', \r\n                    marginTop: props.className.marginTop*0.5, \r\n                    marginBottom: props.className.marginBottom*0.5,\r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n                [`@media (max-width: ${props.imageClassName.width}px)`]: {\r\n                    display: \"flex !important\",\r\n                    flexDirection: 'column', \r\n                    '& span': {\r\n                        marginTop: theme.spacing(1)\r\n                    }\r\n                }, \r\n            }\r\n          })\r\n    }); \r\n    const classes = useStyles();\r\n \r\n    const title = props.data.image.title ? props.data.image.title : ''\r\n \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Typography component={props.data.variant} className={`${classes.myClassName} ${classes.mobileClass}`} >\r\n                {\r\n                    props.imageUrl &&\r\n                    <Tooltip title={title} placement={props.data.image.placement}>\r\n                         <img src={props.imageUrl} className={`${classes.imageStyle} ${classes.imageStabilization}`}  alt={title} /> \r\n                    </Tooltip> \r\n                } \r\n                \r\n               <span style={{ display: 'inherit' }}>\r\n                { \r\n                    props.textChildren\r\n                } \r\n               </span>\r\n            </Typography> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n \r\nimport { makeStyles } from '@material-ui/core/styles'; \r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nfunction DumbComponent(props) {\r\n  \r\n    const useStyles = makeStyles(() => ({ \r\n        imageStyle: props.image.classes\r\n      }));\r\n    const classes = useStyles(); \r\n\r\n    const titleImg = props.image.title ? props.image.title : '' \r\n \r\n    return ( \r\n        <Tooltip title={titleImg} placement={props.image.placement}>\r\n            <img \r\n                src={props.imageUrl} \r\n                className={classes.imageStyle}   \r\n                alt={titleImg}\r\n            />  \r\n        </Tooltip>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'  \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport firebase from '../../../firebase/firebase'\r\n\r\nimport LoadingContext from '../../../context/loadingContext/LoadingContext' \r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n    FormGroup, \r\n    Grid,  \r\n    Button, \r\n    FormControl,\r\n    InputLabel,\r\n    Select, \r\n    MenuItem,  \r\n    ButtonGroup, \r\n    Typography,\r\n    Modal,\r\n    Box,\r\n    Accordion,\r\n    AccordionSummary,\r\n    DialogContent, \r\n    Tooltip,\r\n\r\n} from '@material-ui/core'\r\n\r\nimport DumbComponent from \"./DumbComponent\" \r\nimport DumbImage from '../image/DumbComponent' \r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport DeleteOutline  from '@material-ui/icons/DeleteOutline'; \r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nconst StyledComponent = (props) => {  \r\n    console.log(\"styled paragraph image\")\r\n    const { setIsLoading } = React.useContext(LoadingContext)\r\n    const { removeImage } = React.useContext(ImageContext)\r\n \r\n    const [padding, setPadding] = React.useState({ \r\n        top:  props.data.classes.paddingTop || 0, \r\n        left:  props.data.classes.paddingLeft || 0,\r\n        bottom: props.data.classes.paddingBottom || 0,\r\n        right: props.data.classes.paddingRight || 0\r\n    })\r\n    const [margin, setMargin] = React.useState({\r\n        top:  props.data.classes.marginTop || 0,\r\n        left:  props.data.classes.marginLeft || 0,\r\n        bottom: props.data.classes.marginBottom || 0, \r\n        right: props.data.classes.marginRight  || 0\r\n    })\r\n    \r\n\r\n    const [backgroundSelect,  setBackgroundSelect] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [backgroundCustom, setBackgroundCustom] = React.useState(props.data.classes.backgroundColor || 'transperent')\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.classes.color || 'inherit')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.classes.color || 'inherit') \r\n    const [borderColorSelect, setBorderColorSelect] = React.useState(props.data.classes.borderColor ||  'transperent')\r\n    const [borderColorCustom, setBorderColorCustom] = React.useState(props.data.classes.borderColor ||  'transperent') \r\n    const [imageBorderColorSelect, setImageBorderColorSelect] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n    const [imageBorderColorCustom, setImageBorderColorCustom] = React.useState(props.data.image.classes.borderColor ||  'transperent')\r\n  \r\n    const [image, setImage] = React.useState(props.data.image || {})\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image.url || '')\r\n    const [imageName, setImageName] = React.useState(props.data.image.imageName || '')\r\n    const [imageTitle, setImageTitle] = React.useState(props.data.image.title || '')\r\n    const [imagePlacement, setImagePlacement] = React.useState(props.data.image.imagePlacement || 'top')\r\n     \r\n    const [borderStyle, setBorderStyle] = React.useState(props.data.classes.borderStyle ||  'solid')\r\n    const [borderWidth, setBorderWidth] = React.useState(props.data.classes.borderWidth ||  '0px')\r\n    const [borderRadius, setBorderRadius] = React.useState(props.data.classes.borderRadius ||  '0px')\r\n\r\n    const [textAlign, setTextAlign] = React.useState(props.data.classes.textAlign ||  'left')\r\n    const [display, setDisplay] = React.useState(props.data.classes.display ||  'block')\r\n    const [fontSize, setFontSize] = React.useState(props.data.classes.fontSize ||  16)\r\n    const [fontWeight, setFontWeight] = React.useState(props.data.classes.fontWeight ||  400)\r\n    const [lineHeight, setLineHeight] = React.useState(props.data.classes.lineHeight ||  1.38)\r\n \r\n    const [imageWidth, setImageWidth] = React.useState(props.data.image.classes.width || 100)\r\n    const [imageHeight, setImageHeight] = React.useState(props.data.image.classes.height || 100)\r\n    const [imageBorderStyle, setImageBorderStyle] = React.useState(props.data.image.classes.borderStyle ||  'solid')\r\n    const [imageBorderWidth, setImageBorderWidth] = React.useState(props.data.image.classes.borderWidth ||  '0px')\r\n    const [imageBorderRadius, setImageBorderRadius] = React.useState(props.data.image.classes.borderRadius ||  0)\r\n    const [imageFloat, setImageFloat] = React.useState(props.data.image.classes.float || 'none')\r\n    const [imageMargin, setImageMargin] = React.useState({\r\n        top:  props.data.image.classes.marginTop || 0, \r\n        left:  props.data.image.classes.marginLeft || 0,\r\n        bottom: props.data.image.classes.marginBottom || 0, \r\n        right: props.data.image.classes.marginRight  || 0\r\n    })\r\n    const [textInDumb, setTextInDumb] = React.useState(props.data.text)\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n\r\n \r\n    const [open, setOpen] = React.useState(false);\r\n         \r\n    const bgTheme = isNoThemeColor(props.data.classes.backgroundColor)\r\n    const colorTheme = isNoThemeColor(props.data.classes.color)\r\n    const borderTheme = isNoThemeColor(props.data.classes.borderColor)\r\n    const imageBorderTheme = isNoThemeColor(props.data.image.classes.borderColor)\r\n    React.useEffect(() => {\r\n        if(bgTheme) {  \r\n            setBackgroundSelect('custom')\r\n        }  \r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n        if(borderTheme) {  \r\n            setBorderColorSelect('custom')\r\n        }  \r\n        if(imageBorderTheme) {  \r\n            setImageBorderColorSelect('custom')\r\n        }  \r\n    }, [props.data.classes.backgroundColor, props.data.classes.color, props.data.classes.borderColor, props.data.image.classes.borderColor ]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle,  responseValues, responseMobile, mobileTooltip  } = commonClasses \r\n        const { mtView, mbView, ptView, pbView, inputNumber, inputGroup, dumbItemContainer, dumbItem, dumbItemDelete } = commonStyle\r\n\r\n        return ({\r\n            inputNumber: inputNumber, \r\n            inputGroup: inputGroup, \r\n            dumbItemContainer: {  ...dumbItemContainer, ...{\r\n                '&:hover' : {     \r\n                    boxShadow: theme.shadows[10], \r\n                    cursor: 'pointer',\r\n                    outlineColor: `${theme.palette.error.light}`,  \r\n                    '& $dumbItemDelete' : { \r\n                        opacity: 1\r\n                    }  ,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    },  \r\n                }\r\n            }},\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${margin.top}px`, \r\n                    height: `${margin.top}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.top * 0.5}px`,  \r\n                        height: `${margin.top * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${margin.bottom}px`, \r\n                    height: `${margin.bottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${margin.bottom * 0.5}px`,  \r\n                        height: `${margin.bottom * 0.5}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${padding.top}px`,   \r\n                } \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${padding.bottom}px`,  \r\n                } \r\n            },     \r\n            dumbItem: dumbItem, \r\n            dumbItemDelete : dumbItemDelete,  \r\n            menu: {...menu, ...{\r\n                left: \"calc(50% - 250px)\",\r\n                width: 500, \r\n            } },\r\n            menuTitle: menuTitle,\r\n            imageAccordion: { \r\n                marginBottom: 10,  \r\n            },\r\n            imagePreview: {\r\n                position: 'relative', \r\n                width: 105, \r\n                height: 105, \r\n                border: `1px solid ${theme.palette.primary.light}`, \r\n                '&>img' : {  \r\n                    position: 'absolute',\r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    margin: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                }, \r\n                '&>button' : {\r\n                    position: 'absolute',\r\n                    zIndex: 10, \r\n                    top: 0, \r\n                    bottom: 0, \r\n                    left: 0, \r\n                    right: 0, \r\n                    width: \"100%\", \r\n                    maxWidth: \"100%\", \r\n                    height: \"100%\", \r\n                    maxHeight: \"100%\", \r\n                    backgroundColor: \"#0027ff70\", \r\n                    borderRadius: 0, \r\n                    transition: \"200ms cubic-bezier(0.4, 0, 1, 1)\",\r\n                    \"&:hover\": {\r\n                        opacity: 0\r\n                    } \r\n                }, \r\n            },\r\n            imageLabel: {\r\n                position: 'absolute',\r\n                zIndex: 10, \r\n                top: 0, \r\n                bottom: 0, \r\n                left: 0, \r\n                right: 0, \r\n                width: \"100%\", \r\n                maxWidth: \"100%\", \r\n                height: \"100%\", \r\n                maxHeight: \"100%\", \r\n                cursor: 'pointer'\r\n            }, \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n          })\r\n    });\r\n    \r\n    const myClassName = { \r\n        display: display,\r\n        paddingTop: padding.top,\r\n        paddingBottom: padding.bottom,\r\n        paddingLeft: padding.left,\r\n        paddingRight: padding.right,\r\n        marginTop: margin.top,\r\n        marginBottom: margin.bottom,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right,  \r\n        textAlign: textAlign,\r\n        fontSize: fontSize,\r\n        fontWeight: fontWeight, \r\n        lineHeight: lineHeight, \r\n        borderStyle: borderStyle,\r\n        borderRadius: borderRadius,\r\n        borderWidth: borderWidth\r\n    } \r\n\r\n    const imageClassName = { \r\n        marginTop: imageMargin.top,\r\n        marginBottom: imageMargin.bottom,\r\n        marginLeft: imageMargin.left,\r\n        marginRight: imageMargin.right,\r\n        width: imageWidth, \r\n        height: imageHeight,\r\n        borderWidth: imageBorderWidth, \r\n        borderRadius: imageBorderRadius,  \r\n        borderStyle: imageBorderStyle,\r\n        float : imageFloat\r\n    }\r\n    \r\n    const classes = useStyles();\r\n\r\n   \r\n \r\n    const handlePadding = (value, direction) => {  \r\n        let newPadding = Object.assign({}, padding)\r\n        newPadding[direction] = Number(value)\r\n        setPadding(newPadding)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, margin)\r\n        newMargin[direction] = Number(value)\r\n        setMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n    const handleImageMargin = (value, direction) => {  \r\n        let newMargin = Object.assign({}, imageMargin)\r\n        newMargin[direction] = Number(value)\r\n        setImageMargin(newMargin)  \r\n\r\n        setIsDisableBtn(false);\r\n    }\r\n\r\n    const handleSave = () => {   \r\n        const sentData = Object.assign({}, props.data)\r\n\r\n        sentData.classes = myClassName\r\n        if (backgroundSelect === 'custom') { sentData.classes.backgroundColor = backgroundCustom }\r\n        else { sentData.classes.backgroundColor = backgroundSelect }\r\n        if (colorSelect === 'custom') { sentData.classes.color = colorCustom } \r\n        else { sentData.classes.color = colorSelect }\r\n        if (borderColorSelect === 'custom') { sentData.classes.borderColor = borderColorCustom } \r\n        else { sentData.classes.borderColor = borderColorSelect }\r\n\r\n        sentData.image = Object.assign(image, {\r\n            title: imageTitle, \r\n            placement: imagePlacement,\r\n            classes: imageClassName, \r\n            url: imageUrl,\r\n            imageName: imageName\r\n        })\r\n        if (imageBorderColorSelect === 'custom') { sentData.classes.borderColor = imageBorderColorCustom } \r\n        else { sentData.classes.borderColor = imageBorderColorSelect }\r\n\r\n\r\n        sentData.text = textInDumb\r\n\r\n        props.reSaveChildren(props.data.id, sentData)\r\n        setIsDisableBtn(true);  \r\n    }\r\n    const removeItem = () => {  \r\n        let conf = window.confirm(\"Delete ?\");\r\n        if(conf) { \r\n            removeImage(imageName)\r\n            props.removeItem(props.data.id)\r\n        }\r\n    };\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }\r\n     \r\n    \r\n    const handleImageUpload = async (e) => { \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n        \r\n        setIsLoading(false) \r\n    }\r\n\r\n    const swapParagraph = (direction, id) => {\r\n        props.swapChildrens(direction, id)\r\n    }\r\n    \r\n\r\n    return ( \r\n            <Grid container style={{position: 'relative'}}> \r\n                <Modal \r\n                    open={open}  \r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                    onClose={handleClose} \r\n                >\r\n                    <DialogContent>\r\n                        <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}  >\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                { !isDisableBtn && \"Close to save - \" } Image Paragraph Settings <OpenWithIcon/>\r\n                            </Typography>\r\n                            <Box mb={3} >\r\n                                <InputChange\r\n                                    id={null}\r\n                                    fullWidth={true}\r\n                                    multiline={true}\r\n                                    type='text'\r\n                                    size=\"medium\" \r\n                                    label=\"Text input\"\r\n                                    variant='standard'\r\n                                    value={textInDumb}\r\n                                    setValue={setTextInDumb}\r\n                                    setIsDisableBtn={setIsDisableBtn} \r\n                                />   \r\n                            </Box> \r\n\r\n                            <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                    <PhoneIphoneIcon/>\r\n                                    <Box>   \r\n                                        <p>MarginTop: <b>{margin.top * 0.5 }</b>; MarginBottom: <b>{margin.bottom * 0.5 }</b> </p> \r\n                                        <p>flexDirection: <b> column</b>; alignItems: <b>center</b> </p>  \r\n                                        <p>TextAlign:  <b>center</b> </p>     \r\n                                    </Box>\r\n                                </Box>\r\n                            </Tooltip> \r\n \r\n                            <Accordion className={classes.imageAccordion}  >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"image-settings-content\"\r\n                                    id=\"panel1a-header\" \r\n                                >\r\n                                    <Typography >Image Settings</Typography>\r\n                                </AccordionSummary>\r\n                                <Box px={2} pt={1} pb={2}>\r\n                                    <Grid container >\r\n                                        <Grid item xs={4} className={classes.imagePreview}>\r\n                                            <Button> \r\n                                                <ImageIcon color=\"action\" />\r\n\r\n                                                <label htmlFor='image-input-label' className={classes.imageLabel}></label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={handleImageUpload} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            <DumbImage\r\n                                                imageUrl={imageUrl}\r\n                                                image={props.data.image}   \r\n                                            /> \r\n                                        </Grid>\r\n                                        <Grid item xs={8}> \r\n                                            <Box ml={1}>\r\n                                                <InputChange\r\n                                                    id={null} \r\n                                                    fullWidth={true}\r\n                                                    type='text'\r\n                                                    size=\"small\" \r\n                                                    label=\"Image title\" \r\n                                                    variant='filled'\r\n                                                    value={imageTitle}\r\n                                                    setValue={setImageTitle}\r\n                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                /> \r\n                                                 \r\n                                                <Box mt={1}>\r\n                                                    <FormControl \r\n                                                        variant='filled' \r\n                                                        size='small'    \r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <InputLabel id=\"image-placement-label\">Title placement</InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"image-placement-label\"\r\n                                                            id=\"image-placement\"\r\n                                                            value={imagePlacement}\r\n                                                            onChange={(e) => {setIsDisableBtn(false); setImagePlacement(e.target.value) }}\r\n                                                        >\r\n                                                            <MenuItem value={'top-start'}>Top Start</MenuItem>\r\n                                                            <MenuItem value={'top'}>Top</MenuItem>\r\n                                                            <MenuItem value={'top-end'}>Top End</MenuItem>\r\n                                                            <MenuItem value={'left-start'}>Left Start</MenuItem>\r\n                                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                                            <MenuItem value={'left-end'}>Left End</MenuItem>\r\n                                                            <MenuItem value={'right-start'}>Right Start</MenuItem>\r\n                                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                                            <MenuItem value={'right-end'}>Right End</MenuItem>\r\n                                                            <MenuItem value={'bottom-start'}>Bottom Start</MenuItem>\r\n                                                            <MenuItem value={'bottom'}>Bottom</MenuItem>\r\n                                                            <MenuItem value={'bottom-end'}>Bottom End</MenuItem>\r\n\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                                    \r\n                                            </Box> \r\n                                        </Grid>\r\n                                    </Grid>  \r\n                                </Box>\r\n                                \r\n                                 {/* float */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <FormGroup row>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                            fullWidth\r\n                                        >\r\n                                            <InputLabel id=\"display-style-label\">Float</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"display-style-label\"\r\n                                                id=\"display-style\"\r\n                                                value={imageFloat}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageFloat(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem> \r\n                                            <MenuItem value={'right'}>Right</MenuItem> \r\n                                            <MenuItem value={'none'}>None</MenuItem>  \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Box>                           \r\n                           \r\n                                {/* margin */}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'top'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Top'\r\n                                                variant='filled'\r\n                                                value={imageMargin.top}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'bottom'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Bottom'\r\n                                                variant='filled'\r\n                                                value={imageMargin.bottom}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                         \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'left'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Left'\r\n                                                variant='filled'\r\n                                                value={imageMargin.left}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={'right'}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Margin Right'\r\n                                                variant='filled'\r\n                                                value={imageMargin.right}\r\n                                                setValue={handleImageMargin}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* width height*/}\r\n                                <Box className={classes.inputGroup}>\r\n                                    <Typography variant={'caption'} display='block' align={\"center\"} color={'error'}>\r\n                                        !! set only width, height will set auto\r\n                                    </Typography>\r\n                                    <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Width'\r\n                                                variant='filled'\r\n                                                value={imageWidth}\r\n                                                setValue={setImageWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Image Height'\r\n                                                variant='filled'\r\n                                                value={imageHeight}\r\n                                                setValue={setImageHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                </Box>\r\n                                \r\n                                {/* border */}\r\n                                <Box className={classes.inputGroup}> \r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber} > \r\n                                            <ColorSelecter\r\n                                                label={'Border Color'}\r\n                                                colorSelect={imageBorderColorSelect} \r\n                                                setColorSelect={setImageBorderColorSelect}\r\n                                                colorCustom={imageBorderColorCustom}\r\n                                                setColorCustom={setImageBorderColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'left'}\r\n                                                noInherit={false}\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Radius\" \r\n                                                variant='filled'\r\n                                                value={imageBorderRadius}\r\n                                                setValue={setImageBorderRadius}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box> \r\n                                        <Box className={classes.inputNumber}>\r\n                                            <InputChange\r\n                                                id={null} \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Border Width\" \r\n                                                variant='filled'\r\n                                                value={imageBorderWidth}\r\n                                                setValue={setImageBorderWidth}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>  \r\n                                    </Box>\r\n                                    <Box display=\"flex\" flexDirection=\"row\" > \r\n                            \r\n                                        \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"image-border-style-label\">Border Style</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"image-border-style-label\"\r\n                                                id=\"image-border-style\"\r\n                                                value={imageBorderStyle}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setImageBorderStyle(e.target.value) }}\r\n                                            >\r\n                                            <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                            <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                            <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                            <MenuItem value={'double'}>Double</MenuItem>\r\n                                            <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                            <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                            <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                            <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                            <MenuItem value={'none'}>None</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Accordion>\r\n\r\n                            <Accordion>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"paragraph-settings-content\"\r\n                                    id=\"panel2a-header\" \r\n                                >\r\n                                    <Typography >Paragraph Settings</Typography>\r\n                                </AccordionSummary>\r\n                            \r\n                            {/* display */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <FormGroup row>\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                        fullWidth\r\n                                    >\r\n                                        <InputLabel id=\"display-style-label\">Display</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"display-style-label\"\r\n                                            id=\"display-style\"\r\n                                            value={display}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setDisplay(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'block'}>Block</MenuItem> \r\n                                        <MenuItem value={'inline-block'}>Inline-block</MenuItem> \r\n                                        <MenuItem value={'flex'}>Flex</MenuItem> \r\n                                        <MenuItem value={'inline-flex'}>Inline-flex</MenuItem> \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </FormGroup>\r\n                            </Box>                           \r\n                           \r\n                            {/* margin */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\"  > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='filled'\r\n                                            value={margin.top}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='filled'\r\n                                            value={margin.bottom}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Left'\r\n                                            variant='filled'\r\n                                            value={margin.left}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Right'\r\n                                            variant='filled'\r\n                                            value={margin.right}\r\n                                            setValue={handleMargin}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                             \r\n                            \r\n                            {/* padding */}\r\n                            <Box className={classes.inputGroup}>\r\n                                <Box display=\"flex\" flexDirection=\"row\" > \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'top'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Top\" \r\n                                            variant='filled'\r\n                                            value={padding.top}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'bottom'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Bottom\" \r\n                                            variant='filled'\r\n                                            value={padding.bottom}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'left'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Left\" \r\n                                            variant='filled'\r\n                                            value={padding.left}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Padding Right\" \r\n                                            variant='filled'\r\n                                            value={padding.right}\r\n                                            setValue={handlePadding}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                </Box>\r\n            \r\n                            </Box>\r\n                          \r\n                            {/* bg-color */}\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Background'}\r\n                                        colorSelect={backgroundSelect} \r\n                                        setColorSelect={setBackgroundSelect}\r\n                                        colorCustom={backgroundCustom}\r\n                                        setColorCustom={setBackgroundCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'left'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>  \r\n                            </Box>\r\n                            <Box className={classes.inputGroup} display=\"flex\" flexDirection=\"row\" > \r\n                                 \r\n                                <Box className={classes.inputNumber} >\r\n                                    <ColorSelecter\r\n                                        label={'Color'}\r\n                                        colorSelect={colorSelect} \r\n                                        setColorSelect={setColorSelect}\r\n                                        colorCustom={colorCustom}\r\n                                        setColorCustom={setColorCustom}\r\n                                        setIsDisableBtn={setIsDisableBtn} \r\n                                        position = {'right'}\r\n                                        noInherit={false}\r\n                                    />  \r\n                                </Box>   \r\n                            </Box>\r\n                                                    \r\n                            \r\n\r\n                            {/* font */}\r\n                            <Box className={classes.inputGroup}> \r\n                                <Box display=\"flex\" flexDirection=\"row\" >  \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Font Size\" \r\n                                            variant='filled'\r\n                                            value={fontSize}\r\n                                            setValue={setFontSize}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>  \r\n                                \r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"weight-select-label\">Font Weight</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"weight-select-label\"\r\n                                            id=\"weight-select\"\r\n                                            value={fontWeight}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setFontWeight(Number(e.target.value)) }}\r\n                                        >\r\n                                        <MenuItem value={300}>Light</MenuItem>\r\n                                        <MenuItem value={400}>Regular</MenuItem>\r\n                                        <MenuItem value={700}>Bold</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                \r\n                                    \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Line Height (em)\" \r\n                                            variant='filled'\r\n                                            value={lineHeight}\r\n                                            setValue={setLineHeight}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    \r\n                                    <FormControl \r\n                                            variant='filled' \r\n                                            size='small'   \r\n                                            className={classes.inputNumber}\r\n                                        >\r\n                                            <InputLabel id=\"align-select-label\">Text Align</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"align-select-label\"\r\n                                                id=\"align-select\"\r\n                                                value={textAlign}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setTextAlign((e.target.value)) }}\r\n                                            >\r\n                                            <MenuItem value={'left'}>Left</MenuItem>\r\n                                            <MenuItem value={'center'}>Center</MenuItem>\r\n                                            <MenuItem value={'right'}>Right</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Radius\" \r\n                                            variant='filled'\r\n                                            value={borderRadius}\r\n                                            setValue={setBorderRadius}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box className={classes.inputNumber}>\r\n                                        <InputChange\r\n                                            id={'right'}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label=\"Border Width\" \r\n                                            variant='filled'\r\n                                            value={borderWidth}\r\n                                            setValue={setBorderWidth}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box>   \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <FormControl \r\n                                        variant='filled' \r\n                                        size='small'   \r\n                                        className={classes.inputNumber}\r\n                                    >\r\n                                        <InputLabel id=\"border-style-label\">Border Style</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"border-style-label\"\r\n                                            id=\"border-style\"\r\n                                            value={borderStyle}\r\n                                            onChange={(e) => {setIsDisableBtn(false); setBorderStyle(e.target.value) }}\r\n                                        >\r\n                                        <MenuItem value={'solid'}>Solid</MenuItem>\r\n                                        <MenuItem value={'dotted'}>Dotted</MenuItem>\r\n                                        <MenuItem value={'dashed'}>Dashed</MenuItem>\r\n                                        <MenuItem value={'double'}>Double</MenuItem>\r\n                                        <MenuItem value={'groove'}>Groove</MenuItem>\r\n                                        <MenuItem value={'inset'}>Inset</MenuItem>\r\n                                        <MenuItem value={'outset'}>Outset</MenuItem>\r\n                                        <MenuItem value={'ridge'}>Ridge</MenuItem>\r\n                                        <MenuItem value={'none'}>None</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Box>\r\n                                <Box display=\"flex\" flexDirection=\"row\" >\r\n                                    <Box className={classes.inputNumber} >   \r\n                                        <ColorSelecter\r\n                                            label={'Border Color'}\r\n                                            colorSelect={borderColorSelect} \r\n                                            setColorSelect={setBorderColorSelect}\r\n                                            colorCustom={borderColorCustom}\r\n                                            setColorCustom={setBorderColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'left'}\r\n                                            noInherit={false}\r\n                                        />  \r\n                                    </Box> \r\n                                </Box>\r\n                                 \r\n\r\n\r\n                            </Box>\r\n\r\n                           \r\n                            </Accordion>   \r\n                            \r\n                            <Box mt={5} />\r\n                            {/* <Box className={classes.btnSave}>\r\n                                <Button \r\n                                    disabled={isDisableBtn} \r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size={'medium'} \r\n                                    onClick={saveData}\r\n                                >\r\n                                    Save\r\n                                </Button>  \r\n                            </Box>                 */}\r\n                        </div>\r\n                    </Draggable>\r\n                    </DialogContent>\r\n                </Modal>\r\n                \r\n                <Grid item xs={12}  className={classes.dumbItemContainer } onClick={handleOpen}>  \r\n                 \r\n                      \r\n                        <div \r\n                            className={classes.dumbItem } \r\n                            aria-controls=\"simple-menu\" aria-haspopup=\"true\"  \r\n                        > \r\n                            <Tooltip  title={` paragraphImg margin top`}  placement={'top'}>\r\n                                <div className={classes.mtView}></div>\r\n                            </Tooltip>\r\n                            <Tooltip  title={` paragraphImg margin bottom`}  placement={'top'}>\r\n                                <div className={classes.mbView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding top`}  placement={'top'}>\r\n                                <div className={classes.ptView}></div>\r\n                            </Tooltip> \r\n                            <Tooltip  title={` paragraphImg padding bottom`}  placement={'top'}>\r\n                                <div className={classes.pbView}></div>\r\n                            </Tooltip> \r\n                            <DumbComponent \r\n                                data={props.data} \r\n                                className={props.data.classes}  \r\n                                imageClassName={props.data.image.classes}\r\n                                imageUrl={props.data.image.url}\r\n                                prop={props.data.prop} \r\n                                textChildren={props.data.text} \r\n                            />\r\n                           \r\n                        </div>  \r\n                        <Box className={ classes.dumbItemDelete} >\r\n                            <ButtonGroup\r\n                                orientation=\"horizontal\"\r\n                                color=\"primary\"\r\n                                aria-label=\"horizontal contained primary button group\"\r\n                                variant=\"contained\" \r\n\r\n                            >  \r\n                                { \r\n                                    !props.isFirst  && \r\n                                    <Tooltip title='Get Up' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('up', props.data.id) }}\r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary'  \r\n                                        >  \r\n                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                        </Button>\r\n                                    </Tooltip> \r\n                                }\r\n                                {\r\n                                    !props.isLast &&\r\n                                    <Tooltip title='Get Down' placement='top'>\r\n                                        <Button   \r\n                                            onClick={() => { swapParagraph('down', props.data.id) }} \r\n                                            size='small'\r\n                                            variant='contained'\r\n                                            color='primary' \r\n                                            // disabled={categories.indexOf(item) === categories.length - 1 ? true : false }\r\n                                        >     \r\n                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                        </Button>\r\n                                    </Tooltip>  \r\n                                }\r\n \r\n\r\n                                <Tooltip  title=\"Delete Paragraph\"  placement={'top'}> \r\n                                    <Button \r\n                                        size=\"small\"\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        aria-label=\"delete\"\r\n                                        onClick={removeItem}\r\n                                    >\r\n                                        <DeleteOutline style={{ color: '#fff'}}/>\r\n                                    </Button> \r\n                                </Tooltip>\r\n                                    \r\n                            </ButtonGroup>\r\n                            \r\n                        </Box>\r\n                         \r\n \r\n                </Grid>\r\n            </Grid>\r\n           \r\n \r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    // const modeDev = false   \r\n    \r\n    return (   \r\n        // !!data.classes && \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent  \r\n                    data={props.item} \r\n                    reSaveChildren={props.reSaveChildren}\r\n                    removeItem={props.removeItem}  \r\n                    swapChildrens={props.swapChildrens}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.item} \r\n                    className={props.item.classes} \r\n                    imageClassName={props.item.image.classes}\r\n                    imageUrl={props.item.image.url}\r\n                    prop={props.item.prop} \r\n                    textChildren={props.item.text} \r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Paper } from '@material-ui/core';\r\n\r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nimport HeadingCreator from '../heading/ElementCreator'\r\nimport ListCreator from '../list/ElementCreator'\r\nimport ParagraphCreator from '../paragraph/ElementCreator'\r\nimport ParagraphImageCreator from '../paragraphImage/ElementCreator'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n \r\n    const {modeDev} = React.useContext(ModeContext)\r\n \r\n    console.log('dumb container work') \r\n  \r\n    const useStyles = makeStyles((theme) => {\r\n        let  color = getColorByPalette(theme, props.classes.color)\r\n        let  backgroundColor = getColorByPalette(theme, props.classes.backgroundColor)\r\n        let  borderColor = getColorByPalette(theme, props.classes.borderColor)\r\n\r\n        function computedContrastColor() {\r\n            if(color !== 'contrast') return color\r\n            if(backgroundColor !== 'inherit') return theme.palette.getContrastText(backgroundColor)\r\n            return color\r\n        }\r\n        return({\r\n             myClassName: {...props.classes, ...{\r\n                color: computedContrastColor(),  \r\n                backgroundColor: backgroundColor, \r\n                borderColor: borderColor \r\n            }} ,   \r\n            styleClass: { \r\n                [`@media (max-width: 960px)`]: { \r\n                    marginTop: props.classes.marginTop*0.8,\r\n                    marginBottom: props.classes.marginBottom*0.8, \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    marginTop: props.classes.marginTop*0.5,\r\n                    marginBottom: props.classes.marginBottom*0.5,  \r\n                },\r\n            },\r\n            noPadding : { \r\n                paddingTop: 0,  \r\n                paddingBottom: 0,\r\n                [`@media (max-width: 960px)`]: {  \r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                },\r\n            },\r\n            yesPadding : { \r\n                paddingTop: props.classes.paddingTop,  \r\n                paddingBottom: props.classes.paddingBottom,\r\n                [`@media (max-width: 960px)`]: {  \r\n                    paddingTop: props.classes.paddingTop*0.8,\r\n                    paddingBottom: props.classes.paddingBottom*0.8,\r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    paddingTop: props.classes.paddingTop*0.5,\r\n                    paddingBottom: props.classes.paddingBottom*0.5,\r\n                },\r\n            }, \r\n        })\r\n    });\r\n    const classes = useStyles(); \r\n\r\n    const isPaperClassForContainer = props.settings.isPaper ? classes.noPadding : classes.yesPadding\r\n    const isPaperClassForPaper = props.settings.isPaper ? classes.yesPadding : classes.noPadding\r\n   \r\n \r\n      \r\n\r\n    const renderItems = () => { \r\n        return (\r\n            modeDev ?\r\n            props.data.children.map((item) => {   \r\n                // eslint-disable-next-line\r\n                let orderFirst = props.data.children.indexOf(item) == 0 ? true : false\r\n                // eslint-disable-next-line\r\n                let orderLast = props.data.children.indexOf(item) == props.data.children.length - 1 ? true : false\r\n\r\n                switch(item.type) { \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens} \r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )\r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item}\r\n                                reSaveChildren={props.reSaveChildren}\r\n                                removeItem={props.removeItem}\r\n                                swapChildrens={props.swapChildrens}\r\n                                isFirst={orderFirst}\r\n                                isLast={orderLast}\r\n                            />\r\n                        )  \r\n                    default: break;\r\n                }  \r\n                return null\r\n            })\r\n            :\r\n            props.data.children.map((item) => {  \r\n                switch(item.type) { \r\n                    case 'heading' :  \r\n                        return ( \r\n                            <HeadingCreator \r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraph' :  \r\n                        return (\r\n                            <ParagraphCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'paragraphImage' :  \r\n                        return (\r\n                            <ParagraphImageCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    case 'list' :  \r\n                        return (\r\n                            <ListCreator\r\n                                key={item.id} \r\n                                item={item} \r\n                            />\r\n                        ) \r\n                    default: break;\r\n                }  \r\n                return null\r\n            }) \r\n        )\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.settings.isPaper && \r\n                <Container  \r\n                    maxWidth={props.settings.maxWidth} \r\n                    fixed={props.settings.fixed} \r\n                    disableGutters={props.settings.disableGutters} \r\n                    className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                > \r\n                    <Paper style={{paddingLeft: 15, paddingRight: 15}} className={isPaperClassForPaper}>\r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Paper>\r\n                </Container> \r\n            }\r\n            {\r\n                !props.settings.isPaper &&  \r\n                <Container  \r\n                        maxWidth={props.settings.maxWidth} \r\n                        fixed={props.settings.fixed} \r\n                        disableGutters={props.settings.disableGutters} \r\n                        className={`${classes.myClassName} ${classes.styleClass} ${isPaperClassForContainer}`}\r\n                    > \r\n                        {  \r\n                            props.settings.innerContainer && \r\n                            <Container\r\n                                maxWidth={'lg'}\r\n                                fixed={props.settings.fixed} \r\n                                disableGutters={props.settings.disableGutters} \r\n                            >\r\n                                 { renderItems() }\r\n                            </Container>\r\n                        }\r\n                        {  \r\n                            !props.settings.innerContainer && \r\n                            <React.Fragment>\r\n                                 { renderItems() }\r\n                            </React.Fragment>\r\n                        }\r\n                        \r\n                    </Container> \r\n                 \r\n            }\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport { makeStyles, Box, Tooltip, ButtonGroup, Button  } from '@material-ui/core'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\nimport ImageContext from '../../../context/imageContext/ImageContext'\r\n\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)   \r\n    const {removeImage} = React.useContext(ImageContext)   \r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    \r\n    const propsSettings = {\r\n        maxWidth: props.data.maxWidth,\r\n        disableGutters: props.data.disableGutters,\r\n        fixed: props.data.fixed, \r\n        innerContainer: props.data.innerContainer,\r\n        isPaper : props.data.isPaper\r\n    } \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { containerWrapper, btnDrawerItem, btnDrawerStyle } = commonClasses \r\n        const { mtView, mbView, ptView, pbView } = commonStyle \r\n        return ({\r\n             \r\n            containerWrapper: {\r\n                 ...containerWrapper, ...{\r\n                '&:hover' : {\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    zIndex: 25,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $ptView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $pbView' : { \r\n                        opacity: 1\r\n                    }, \r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    },  \r\n                }}    \r\n            },\r\n            btnDrawerStyle : btnDrawerStyle, \r\n            btnDrawerItem: btnDrawerItem,\r\n\r\n            \r\n\r\n            mtView: { ...mtView, ...{\r\n                top: `-${props.data.classes.marginTop}px`,  \r\n                height: `${props.data.classes.marginTop}px`\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                bottom: `-${props.data.classes.marginBottom}px`,\r\n                height: `${props.data.classes.marginBottom}px`,  \r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${props.data.classes.paddingTop}px`} \r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${props.data.classes.paddingBottom}px`} \r\n            }, \r\n              \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n   \r\n    const reSaveChildren = (id, data) => {   \r\n        const newArr =  props.data.children.map((item) => item.id === id ? { ...data} : item);\r\n        \r\n        // save in firestore\r\n        props.reSaveContainer(props.data.id, newArr)\r\n \r\n    }\r\n\r\n    const removeItem = async (id) => { \r\n\r\n        let filtered = props.data.children.filter((item) => (item.id !== id))   \r\n        // save in firestore \r\n        props.reSaveContainer(props.data.id, filtered)   \r\n    }\r\n\r\n    const handleClose =  () => {  \r\n        setOpen(!open)\r\n    }; \r\n     \r\n    const removeContainer = () => { \r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) {\r\n            let images = createArrayImages() \r\n            images.forEach( imageName => {\r\n                removeImage(imageName)\r\n            })\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    const swapChildrens = (direction, id) => {  \r\n\r\n        let newChildren = props.data.children.slice() \r\n        let activeIndex  \r\n        newChildren.map( (item) => { \r\n            if(item.id === id) {\r\n              activeIndex = newChildren.indexOf(item) \r\n            }\r\n            return 0 \r\n        }) \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newChildren.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex - 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newChildren[activeIndex]\r\n          const placeItem = newChildren[activeIndex + 1]\r\n    \r\n          newChildren[activeIndex] = placeItem\r\n          newChildren[activeIndex + 1 ] = movedItem  \r\n        } \r\n \r\n        props.reSaveContainer(props.data.id, newChildren)\r\n    }\r\n\r\n    const createArrayImages = () => {\r\n        let images = []\r\n        props.data.children.forEach( item => {\r\n            if(item.type === 'paragraphImage') {\r\n                images.push(item.image.imageName)\r\n            }\r\n        })\r\n        return images\r\n    }\r\n    createArrayImages()\r\n    return (    \r\n        <React.Fragment>   \r\n            { \r\n                modeDev ? \r\n                <Box className={classes.containerWrapper}>\r\n                    <Tooltip  title={` container margin top`}  placement={'top'}>\r\n                        <div className={classes.mtView}></div>\r\n                    </Tooltip>\r\n                    <Tooltip  title={` container margin bottom`}  placement={'top'}>\r\n                        <div className={classes.mbView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding top`}  placement={'top'}>\r\n                        <div className={classes.ptView}></div>\r\n                    </Tooltip> \r\n                    <Tooltip  title={` container padding bottom`}  placement={'top'}>\r\n                        <div className={classes.pbView}></div>\r\n                    </Tooltip>\r\n\r\n                    <Box className={classes.btnDrawerStyle}> \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            <Tooltip title='Container Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleClose} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        color='secondary'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                             \r\n    \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button \r\n                                    onClick={ removeContainer }\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <StyledComponent   \r\n                        data={props.data} \r\n                        reSaveContainer={props.reSaveContainer}\r\n                        reSaveContainerStyleSettings={props.reSaveContainerStyleSettings}  \r\n                        swapContainer={props.swapContainer}\r\n                        propsSettings={propsSettings}\r\n                        open={open}\r\n                        handleClose={handleClose}\r\n                    />\r\n                    <DumbComponent \r\n                        data={props.data}  \r\n                        classes={props.data.classes}\r\n                        reSaveContainer={props.reSaveContainer} \r\n                        settings={propsSettings}\r\n                        reSaveChildren={reSaveChildren}\r\n                        removeItem={removeItem}   \r\n                        swapChildrens={swapChildrens}\r\n                    />\r\n                </Box>\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}  \r\n                    classes={props.data.classes}\r\n                    reSaveContainer={props.reSaveContainer} \r\n                    settings={propsSettings}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, darken, fade } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/main-banner.scss'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(false)\r\n\r\n    const titleMain = props.data.heading\r\n    const titleSubText = props.data.headingIcon.title\r\n    const titleSubIcon = props.data.headingIcon.icon\r\n    const paragraph = props.data.paragraph\r\n    const inputLabel = props.data.form.inputLabel\r\n    const buttonLabel = props.data.form.buttonLabel\r\n    const policy = props.data.form.policy\r\n    const imageUrl = props.data.image\r\n    let color = props.data.color \r\n    let colorFocusInput\r\n  \r\n    \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n    \r\n    const useStyles = makeStyles( (theme) => { \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n          \r\n        return( {\r\n            subHeading: {  \r\n                color: `${color}` ,\r\n                '&>svg' : {\r\n                    fill: theme.palette.primary.main\r\n                }\r\n            },\r\n            input: { \r\n                border: `1px solid ${color}`,\r\n                backgroundColor: theme.palette.background.default, \r\n                color:  theme.palette.text.primary, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \"&:focus\": {\r\n                    borderColor: colorFocusInput, \r\n                    background: fade(color, 0.07), \r\n                }, \r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                }\r\n            },\r\n            button: {\r\n                border: `1px solid ${color} !important`, \r\n                backgroundColor: color, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                textTransform: 'inherit', \r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            },\r\n            icon: {\r\n                width: 512, \r\n                height: 512, \r\n                backgroundColor: '#fff',\r\n                webkitMaskImage: `url(${titleSubIcon})`,\r\n                maskImage: `url(${titleSubIcon})`,\r\n                webkitMask: `url(${titleSubIcon}) no-repeat 100% 100% ` ,\r\n                mask: `url(${titleSubIcon}) no-repeat 100% 100% `,\r\n                webkitMaskSize: 'cover',\r\n                maskSize: 'cover'\r\n            } ,\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('md')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 30),\r\n                }\r\n            }\r\n        } )\r\n    })\r\n \r\n    \r\n    const classes = useStyles()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        setIsDisableBtn(true)\r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            place: 'main page',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setIsDisableBtn(false) \r\n        setFormPhone('')\r\n    }\r\n\r\n    return (\r\n        <div className={`bulder-main-banner ${classes.styleClass}`}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={7} >\r\n                        <div className=\"bulder-main-banner_content\">\r\n                            <h1>\r\n                                {\r\n                                    titleMain\r\n                                }\r\n                            </h1>\r\n                            <h5 className={classes.subHeading}>  \r\n                                {\r\n                                    titleSubIcon &&\r\n                                    <svg style={{fill: '#fff'}}>       \r\n                                        <image style={{fill: '#fff'}} xlinkHref={titleSubIcon} src={titleSubIcon} width={'100%'} height={'100%'}   />    \r\n                                    </svg>\r\n                                }\r\n                                \r\n \r\n                                <span>\r\n                                    { titleSubText }\r\n                                </span>\r\n                            </h5>\r\n                            <p>\r\n                                { paragraph }\r\n                            </p>\r\n                            <div className=\"bulder-main-banner_content-form\">\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"bulder-main-banner_content-form__group\">\r\n                                        <span>\r\n                                            <input \r\n                                                type=\"tel\" \r\n                                                name=\"phone\" \r\n                                                required \r\n                                                placeholder={`${inputLabel}`} \r\n                                                className={classes.input}\r\n                                                value={formPhone}\r\n                                                onChange={(e) => { setFormPhone(e.target.value) }}\r\n                                            />\r\n                                        </span>\r\n                                        <div className=\"btn-form\">\r\n                                            <Button \r\n                                                className={classes.button}\r\n                                                type=\"submit\"\r\n                                                disabled={isDisableBtn}\r\n                                            >\r\n                                                { buttonLabel }\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <span>\r\n                                    { policy }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item md={5} > \r\n                        <div className=\"bulder-main-banner-image d-none d-lg-block\">\r\n                        <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'    \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const { removeImage } = React.useContext(ImageContext)\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [subHeading, setSubHeading] = React.useState(props.data.headingIcon.title)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n    const [inputLabel, setInputLabel] = React.useState(props.data.form.inputLabel)\r\n    const [buttonLabel, setButtonLabel] = React.useState(props.data.form.buttonLabel)\r\n    const [policy, setPolicy] = React.useState(props.data.form.policy)\r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [iconUrl, setIconUrl] = React.useState(props.data.headingIcon.icon)\r\n    const [iconName, setIconName] = React.useState(props.data.headingIcon.iconName || '')\r\n \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 120 ? marginTop*0.25 : 40)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 120 ? marginBottom*0.25 : 40)\r\n    const tabletMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 80 ? marginTop*0.8 : 50)\r\n    const tabletMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 80 ? marginBottom*0.8 : 50)\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        } \r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel,  \r\n            responseValues ,responseMobile , mobileTooltip, responseTablets, tabletTooltip } = commonClasses \r\n            \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues, \r\n            responseTablets: responseTablets,\r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            tabletTooltip: tabletTooltip, \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('md')]: {\r\n                        top: `-${tabletMarginTopComputed}px`,  \r\n                        height: `${tabletMarginTopComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px `,  \r\n                        height: `${mobileMarginTopComputed}px `,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`,  \r\n                    [theme.breakpoints.down('md')]: {\r\n                        bottom: `-${tabletMarginBottomComputed}px`,  \r\n                        height: `${tabletMarginBottomComputed}px`,\r\n                    },\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px `,  \r\n                        height: `${mobileMarginBottomComputed}px `,\r\n                    }\r\n                } \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleImageUpload = async (e, imageType) => {  \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        if( imageType === 'mainImage')  { \r\n            removeImage(imageName)   \r\n        }\r\n        if( imageType === 'icon') {\r\n            removeImage(iconName)   \r\n        }\r\n \r\n          \r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        if( imageType === 'mainImage')  { \r\n            setImageName(generateImageName)\r\n            setImageUrl(downloadURL)  \r\n        }\r\n        if( imageType === 'icon') {\r\n            setIconName(generateImageName)\r\n            setIconUrl(downloadURL)\r\n        }\r\n          \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.headingIcon = {\r\n            title: subHeading,\r\n            icon : iconUrl,\r\n            iconName : iconName\r\n        }  \r\n        newData.form = {\r\n            inputLabel: inputLabel,\r\n            buttonLabel: buttonLabel,\r\n            policy: policy \r\n        }\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) { \r\n            removeImage(imageName) \r\n            removeImage(iconName) \r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Main Banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Main Banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Main Banner Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        > \r\n                            {\r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Main banner settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.tabletTooltip}} title='Calculated styles for Tablets (>960px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseTablets}`}>\r\n                                                <TabletMacIcon/>\r\n                                                <Box>   \r\n                                                    <p> \r\n                                                        MarginTop: <b>{tabletMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{tabletMarginBottomComputed}</b> \r\n                                                    </p>     \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box> \r\n                                    <Box display=\"flex\" mt={3}>   \r\n                                        <Box display=\"flex\" mr={2} minWidth={150} >\r\n                                            <Button color='primary' variant={'contained'} className={classes.btnWithLabel} > \r\n                                                <label htmlFor='imageIcon-input-label'> Set Icon </label>\r\n                                                <input \r\n                                                    id=\"imageIcon-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'icon')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button>\r\n                                            {\r\n                                                iconUrl &&\r\n                                                <Box ml={1}>\r\n                                                    <img src={iconUrl} alt='icon' width={35} />\r\n                                                </Box>\r\n                                            }\r\n                                            \r\n                                        </Box> \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Sub Heading'\r\n                                            variant='outlined'\r\n                                            value={subHeading}\r\n                                            setValue={setSubHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                         \r\n                                    </Box> \r\n                                    <Box mt={3} mb={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box> \r\n                                    <Typography \r\n                                        component='h6'  \r\n                                    >\r\n                                        Form Settings\r\n                                    </Typography> \r\n                                    <Box display='flex' mt={2}>\r\n                                        <Box mr={1} flexGrow='1' >  \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Input Label\" \r\n                                                variant='outlined'\r\n                                                value={inputLabel}\r\n                                                setValue={setInputLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <Box flexGrow='1' >   \r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={true} \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label=\"Form Button Label\" \r\n                                                variant='outlined'\r\n                                                value={buttonLabel}\r\n                                                setValue={setButtonLabel}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                    </Box>\r\n                                    <Box mt={2}>   \r\n                                    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Form Policy\" \r\n                                            variant='outlined'\r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />   \r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Form and SubHeading'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start' >\r\n                                        <Tooltip title='recomended size 515x340' placement='top'>  \r\n                                            <Button color='primary' variant='contained' className={classes.btnWithLabel} > \r\n                                                <label htmlFor='image-input-label'> Set main image</label>\r\n                                                <input \r\n                                                    id=\"image-input-label\"\r\n                                                    type=\"file\" \r\n                                                    onChange={(e) => { handleImageUpload(e, 'mainImage')}} \r\n                                                    style={{ display: \"none\" }}\r\n                                                />\r\n                                            </Button> \r\n                                        </Tooltip>\r\n                                        {\r\n                                            imageUrl &&\r\n                                            <Box ml={1} maxWidth={300}>\r\n                                                <img src={imageUrl} alt='main' width={'100%'} />\r\n                                            </Box>\r\n                                        }\r\n                                        \r\n                                    </Box>\r\n\r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n    \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Accordion, AccordionSummary, makeStyles } from '@material-ui/core'\r\n\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\n\r\nimport '../../../assets/style/accordion.scss'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n    let color = props.data.color\r\n    const heading = props.data.heading\r\n    const items = props.data.items \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    const useStyles = makeStyles((theme) => { \r\n  \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({\r\n             \r\n            accordionReset: { \r\n                boxShadow: 'none', \r\n                marginBottom: 10,\r\n                [`@media (max-width: 576px)`]: {\r\n                    marginBottom: 0,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`\r\n                }, \r\n                '&:before' : {\r\n                    display: 'none'\r\n                }\r\n            }, \r\n            disableMobileGutters: { \r\n                [`@media (max-width: 576px)`]: { \r\n                    padding: 0\r\n                }\r\n            },\r\n            colorNumber: {\r\n                color: color\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n    \r\n    return ( \r\n        <div className={`${classes.styleClass} bulder-accordion heading`}>\r\n            <Container maxWidth={maxWidthContainer} className={classes.disableMobileGutters}>\r\n\r\n                {\r\n                    heading.length > 0 &&\r\n                    <h3> { heading } </h3> \r\n                }\r\n                \r\n\r\n                {\r\n                    items.map( (item, index) => { \r\n                        const indexForDisplay = '0' + (index + 1) + '.'\r\n                        return (\r\n                            <Accordion key={index} classes={{root: classes.accordionReset}}>\r\n                                <AccordionSummary expandIcon={ <ExpandMoreOutlinedIcon style={{color: color}} />}> \r\n                                    <div className=\"bulder-accordion_card-header_btn  \">\r\n                                        <span>\r\n                                            <b className={classes.colorNumber}>{indexForDisplay}</b> \r\n                                            { item.head }\r\n                                        </span> \r\n                                    </div> \r\n                                </AccordionSummary>\r\n                                <div className=\"bulder-accordion_card-body\">\r\n                                    { item.body }\r\n                                </div>\r\n                            </Accordion>  \r\n                        )\r\n                    })\r\n                }\r\n            \r\n            </Container>\r\n        </div> \r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemBody, setNewItemBody] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemBody)\r\n        setNewItemTitle('')\r\n        setNewItemBody('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} mt={3} mb={2}>\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new item</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item head\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item body\" \r\n                            variant=\"outlined\" \r\n                            value={newItemBody}\r\n                            onChange={(e) => { setNewItemBody(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Item\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useState} from 'react'\r\n \r\nimport { TextField , Box } from '@material-ui/core' \r\n\r\n\r\nconst ChangeItem = (props) => {\r\n\r\n    console.log('change item accordion')\r\n\r\n    const [head, setHead] = useState(props.head)\r\n    const [body, setBody] = useState(props.body)\r\n \r\n    const handleSave = () => { \r\n        props.handleUpdateItem(props.index, head, body)\r\n\r\n    }\r\n\r\n    return (\r\n        <Box display='flex' alignItems=\"center\" width=\"100%\">\r\n            \r\n            <Box width=\"100%\">\r\n                <Box mt={1} >\r\n                    <TextField  \r\n                        fullWidth\r\n                        size='small'\r\n                        type='text'\r\n                        label=\"Head\" \r\n                        variant=\"outlined\"  \r\n                        value={head}\r\n                        onChange={ (e) => {  setHead(e.target.value) } }     \r\n                        onBlur={handleSave}\r\n                    /> \r\n                </Box>\r\n                \r\n                <Box mt={2}  >\r\n                    <TextField  \r\n                        fullWidth\r\n                        size='small'\r\n                        type='text'\r\n                        label=\"Body\" \r\n                        variant=\"outlined\"  \r\n                        value={body}\r\n                        onChange={ (e) => {  setBody(e.target.value) } }     \r\n                        onBlur={handleSave}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'   \r\n\r\nimport Draggable from 'react-draggable';  \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport { \r\n    MenuItem,Button, Box, Tooltip, FormControl, InputLabel,\r\n    Select, Typography, ButtonGroup, makeStyles, Modal, DialogContent, Divider\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n \r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\"\r\nimport ChangeItem from \"./ChangeItem\"\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n        \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [items, setItems] = React.useState(props.data.items)   \r\n    const [heading, setHeading] = React.useState(props.data.heading)   \r\n\r\n    const [colorSelect, setColorSelect] = React.useState(props.data.color)\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color)\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg')\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, \r\n            containerWrapper, responseValues ,responseMobile , mobileTooltip \r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   } ,\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n \r\n        newData.heading = heading\r\n        newData.items = items\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if(colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n   \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeAccordion = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    const handleUpdateItem = (index, head, body) => { \r\n        const newItems = items.slice()\r\n        newItems[index].head = head\r\n        newItems[index].body = body\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    } \r\n    const swapItem = (direction, index) => { \r\n        const newItems = items.slice()\r\n        let activeIndex   \r\n    \r\n        newItems.map( (item) => { \r\n        if(newItems.indexOf(item) === index) {\r\n            activeIndex = index\r\n        }\r\n        return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex - 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newItems[activeIndex]\r\n            const placeItem = newItems[activeIndex + 1]\r\n\r\n            newItems[activeIndex] = placeItem\r\n            newItems[activeIndex + 1 ] = movedItem  \r\n        }\r\n \r\n            \r\n        setItems(newItems) \r\n        setIsDisableBtn(false); \r\n    }\r\n    const addItem = (head, body) => {\r\n        const newItems = items.slice()\r\n        const itemLayout = {\r\n            head: head,\r\n            body: body\r\n        }\r\n        newItems.push(itemLayout)\r\n\r\n        setItems(newItems)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const conf = window.confirm('Delete item?')\r\n        if(conf) {\r\n            const newItems = items.slice()\r\n            newItems.splice(index, 1) \r\n    \r\n            setItems(newItems)\r\n            setIsDisableBtn(false); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}> \r\n            <Tooltip  title={`accordion margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`accordion margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >   \r\n                <Box className={classes.btnDrawerStyle}> \r\n\r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Accordion Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            {\r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeAccordion}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Accordion Settings <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                             \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6'>\r\n                                            Items: \r\n                                        </Typography>\r\n                                        <Divider/>\r\n\r\n                                        {\r\n                                            items.map( (item, index) => { \r\n                                                return(\r\n                                                    <Box key={index} mt={2}>\r\n                                                        <Box display='flex' alignItems='center'>\r\n                                                            <Box component='p' mr={2}>\r\n                                                                Item № {index + 1}\r\n                                                            </Box>\r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    items.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n \r\n                                                        <ChangeItem index={index} head={item.head} body={item.body} handleUpdateItem={handleUpdateItem} />  \r\n                                                        \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        }\r\n\r\n                                        <AddItem addItem={addItem} />\r\n                                         \r\n                                        <Divider/>\r\n                                    </Box> \r\n\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Accordion'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={false}\r\n                                        />\r\n                                    </Box>\r\n \r\n                                    <Box mt={5} />  \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                     \r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, Grid, makeStyles, Button, Box, darken, fade } from '@material-ui/core'\r\n\r\nimport '../../../assets/style/contactMap.scss' \r\nimport {getColorByPalette, getColorByPaletteReverse} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('')\r\n    const [formComment, setFormComment] = React.useState('')\r\n \r\n    const mapHtml = props.data.mapFrame\r\n    const location = props.data.location \r\n    const phone = props.data.phone\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone\r\n    const inputComment = props.data.inputComment\r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n     \r\n    let colorMapOnload  \r\n    let color = props.data.color || 'primary'\r\n    let colorFocusInput\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    const useStyles = makeStyles((theme) => {  \r\n        colorMapOnload = theme.palette.primary.dark\r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n \r\n        return ({\r\n            svg: {\r\n                fill: colorFocusInput\r\n            }, \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper, \r\n                position: 'relative', \r\n                zIndex: 10, \r\n                [`@media (max-width: 960px)`]: {\r\n                    marginBottom: mapHtml !== null ? 380 : 0\r\n                }, \r\n                [`@media (max-width: 600px)`]: {\r\n                    marginBottom: mapHtml !== null ? 280 : 0\r\n                }, \r\n            },\r\n            input: {\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: theme.palette.background.paper,\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput\r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n            },\r\n            button: {\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                color: '#fff',\r\n                 \r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            link: { \r\n                '&:hover': { \r\n                    color: `${color} !important`,\r\n                }\r\n            },\r\n            boxForFlex: { \r\n                [`@media (min-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    display: mapHtml !== null ? 'block' : 'flex', \r\n                    flexDirection: 'row-reverse', \r\n                    justifyContent: 'space-between'\r\n                }, \r\n            }, \r\n            heightRegular: {\r\n                height: mapHtml === null ? 'auto' : 430,\r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                    height: 'auto', \r\n                }\r\n            }, \r\n            linksContainer : {\r\n                width: '100%',\r\n                display: mapHtml !== null ? 'block' : 'flex', \r\n                \r\n                justifyContent: 'center',\r\n                flexDirection: 'column', \r\n                alignItems: 'center'\r\n            }, \r\n            styleClass: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),  \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),  \r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName, \r\n            comment: formComment,\r\n            place: 'contact',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('')\r\n        setFormComment('')\r\n\r\n    }\r\n    return ( \r\n        <div style={{position: 'relative'}}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className={`bulder-contact ${classes.styleClass}`}> \r\n                    <Grid container>  \r\n                        <Grid item xs={12} md={ mapHtml !== null ? 6 : 12 } className={classes.itemBackground} >  \r\n                            <div className={`bulder-contact_item ${classes.heightRegular}`} >\r\n                                <Box className={classes.boxForFlex}>\r\n                                    <Box className={classes.linksContainer}>\r\n                                        <div className=\"loc\">\r\n                                            <svg className={classes.svg} viewBox=\"0 0 511.999 511.999\">\r\n                                                <g>\r\n                                                    <g>\r\n                                                        <path d=\"M255.999,0C152.786,0,68.817,85.478,68.817,190.545c0,58.77,29.724,130.103,88.349,212.017\r\n                                                            c42.902,59.948,85.178,102.702,86.957,104.494c3.27,3.292,7.572,4.943,11.879,4.943c4.182,0,8.367-1.558,11.611-4.683\r\n                                                            c1.783-1.717,44.166-42.74,87.149-101.86c58.672-80.701,88.421-153.007,88.421-214.912C443.181,85.478,359.21,0,255.999,0z\r\n                                                            M255.999,272.806c-50.46,0-91.511-41.052-91.511-91.511s41.052-91.511,91.511-91.511s91.511,41.052,91.511,91.511\r\n                                                            S306.457,272.806,255.999,272.806z\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </svg>\r\n                                            <span>\r\n                                                {location}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"tel\">\r\n                                            <svg className={classes.svg} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 513.64 513.64\" style={{enableBackground: 'new 0 0 513.64 513.64'}} xmlSpace=\"preserve\">\r\n                                                <g><g>\r\n                                                    <path d=\"M499.66,376.96l-71.68-71.68c-25.6-25.6-69.12-15.359-79.36,17.92c-7.68,23.041-33.28,35.841-56.32,30.72\r\n                                                                                        c-51.2-12.8-120.32-79.36-133.12-133.12c-7.68-23.041,7.68-48.641,30.72-56.32c33.28-10.24,43.52-53.76,17.92-79.36l-71.68-71.68\r\n                                                                                        c-20.48-17.92-51.2-17.92-69.12,0l-48.64,48.64c-48.64,51.2,5.12,186.88,125.44,307.2c120.32,120.32,256,176.641,307.2,125.44\r\n                                                                                        l48.64-48.64C517.581,425.6,517.581,394.88,499.66,376.96z\" />\r\n                                                </g></g> \r\n                                            </svg>\r\n\r\n                                            <a className={classes.link} href={`tel:${phone}`}> {phone} </a>\r\n                                        </div>\r\n                                    </Box>\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <p> \r\n                                            { paragraph }\r\n                                        </p>\r\n                                        <div className=\"kr-form\">\r\n                                            <div className=\"kr-form-inputs\">\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"name\" \r\n                                                    type=\"text\" \r\n                                                    placeholder={inputName} \r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formName}\r\n                                                    onChange={e => {setFormName(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                <input \r\n                                                    name=\"phone\" \r\n                                                    type=\"tel\" \r\n                                                    placeholder={inputPhone}\r\n                                                    required \r\n                                                    className={classes.input}\r\n                                                    value={formPhone}\r\n                                                    onChange={e => {setFormPhone(e.target.value)}}\r\n                                                />\r\n                                            </span>\r\n                                            </div>\r\n                                            <textarea   \r\n                                                cols={30} \r\n                                                rows={10} \r\n                                                placeholder={inputComment}  \r\n                                                className={classes.input}\r\n                                                value={formComment}\r\n                                                onChange={e => {setFormComment(e.target.value)}}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"bulder-contact_item-btn\">\r\n                                            <div className=\"btn-custom\">\r\n                                                <Button type=\"submit\" className={classes.button}>\r\n                                                    <span> { buttonText } </span>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <span>\r\n                                                { policy }\r\n                                            </span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Box>\r\n                            </div> \r\n                        </Grid>\r\n                        {   \r\n                            mapHtml  && \r\n                            <Grid item lg={6} className={`position-static`} > \r\n                                <div className=\"map\" style={{ backgroundColor: colorMapOnload }} > \r\n                                    <div style={{height: '100%'}} dangerouslySetInnerHTML={{__html: mapHtml}}></div> \r\n                                </div>\r\n                            </Grid>\r\n                        } \r\n                    </Grid> \r\n                </div>\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, \r\n    ButtonGroup, makeStyles, Modal, DialogContent, Switch, \r\n    FormControlLabel, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) { \r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [location, setLocation] = React.useState(props.data.location)\r\n    const [phone, setPhone] = React.useState(props.data.phone)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '')\r\n    const [inputComment, setInputComment] = React.useState(props.data.inputComment || '')\r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n\r\n    const [mapFrame, setMapFrame] = React.useState(props.data.mapFrame) \r\n    \r\n    const [isButton, setIsButton] = React.useState(props.data.mapFrame === null ? false : true)\r\n    \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.color])\r\n\r\n    \r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data) \r\n        newData.location = location\r\n        newData.phone = phone \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone \r\n        newData.inputComment = inputComment \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy \r\n        newData.mapFrame = !isButton ? null : mapFrame \r\n        \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData)  \r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Contact Map margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Contact Map margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Contacts Map Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" }  Contacts Map Settings  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p>  \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                         \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n\r\n                                    <Box mt={2}>  \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Location'\r\n                                            variant='outlined'\r\n                                            value={location}\r\n                                            setValue={setLocation}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>  \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Phone'\r\n                                            variant='outlined'  \r\n                                            value={phone}\r\n                                            setValue={setPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} > \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >  \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >    \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Comment Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputComment}\r\n                                            setValue={setInputComment}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box> \r\n                                    <Box mt={2} >       \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box   mt={2} mb={2}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Map Frame\"/> \r\n                                            {\r\n                                                isButton ?   \r\n                                                <Box mt={2} mb={2}>   \r\n                                                  \r\n                                                    <InputChange\r\n                                                        id={null}\r\n                                                        fullWidth={true} \r\n                                                        type='text'\r\n                                                        size=\"small\" \r\n                                                        label=\"Map Frame\" \r\n                                                        variant='outlined'  \r\n                                                        value={mapFrame}\r\n                                                        setValue={setMapFrame}\r\n                                                        setIsDisableBtn={setIsDisableBtn} \r\n                                                    />  \r\n                                                </Box>  \r\n                                                :\r\n                                                <Typography color='secondary'>\r\n                                                    If <b>Map Frame</b> is null layout have another view!\r\n                                                </Typography>\r\n                                            }\r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button and Inputs'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'right'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n  \r\n                                    <Box my={5} />\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, darken, fade } from '@material-ui/core'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nimport '../../../assets/style/about.scss'\r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext' \r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext) \r\n      \r\n    const imageUrl = props.data.image\r\n\r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    // let imageName = props.data.imageName\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n\r\n    let colorButton = props.data.colorButton || '#f00'\r\n   \r\n    const useStyles = makeStyles((theme) => {   \r\n\r\n        colorButton = getColorByPalette(theme, colorButton) \r\n\r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit', \r\n                marginTop: theme.spacing(3), \r\n                paddingLeft: theme.spacing(5),\r\n                paddingRight: theme.spacing(5),\r\n                backgroundColor: colorButton,\r\n                border: `1px solid ${colorButton}`, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: { \r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(colorButton, 0.15), \r\n                        color: theme.palette.text.primary\r\n                    }\r\n                }, \r\n            }, \r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30),\r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid position-relative\"> \r\n            <Container maxWidth={maxWidthContainer} >\r\n                <div className={`${classes.styleClass} bulder-about heading`}>\r\n                    <Grid container> \r\n                        <Grid item xs={12} md={6} >\r\n                            <div className=\"bulder-about_item\">\r\n                                <h3>\r\n                                    { heading }\r\n                                </h3>\r\n                                <p> \r\n                                    { paragraph }\r\n                                </p> \r\n                                {\r\n                                    isButton && \r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button> \r\n                                }\r\n                                \r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} >\r\n                            <Box clone={true}>\r\n                                <div className=\"bulder-about_image\" style={{backgroundImage: `url(${imageUrl})`}} />\r\n                            </Box> \r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers' \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n      \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)\r\n\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.image)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorButton)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.colorButton])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        \r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, \r\n            containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip\r\n        } = commonClasses \r\n        \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave, \r\n            btnWithLabel: btnWithLabel,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n  \r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => { \r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading\r\n        newData.paragraph = paragraph\r\n        newData.image = imageUrl\r\n        newData.imageName = imageName\r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf)  {\r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n           \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`about margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`about margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='About Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }  Settings About\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>25</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3}>   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />   \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />  \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'right'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box>\r\n\r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, makeStyles, Box, Button, Typography } from '@material-ui/core' \r\nimport { darken, fade } from '@material-ui/core/styles/colorManipulator';\r\n \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) {\r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading \r\n    const headingSize = props.data.headingSize \r\n\r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n  \r\n    let colorMain = props.data.colorMain || '#f00'\r\n    let colorTheme\r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        colorMain = getColorByPalette(theme, colorMain) \r\n \r\n        colorTheme = theme.palette.type === 'dark' ? fade(colorMain, 0.65) : fade(colorMain, 0.2) \r\n        return ({\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: headingSize > 50 ? headingSize/3 : 18, \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorMain, \r\n                color: theme.palette.getContrastText(colorMain), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorMain, 0.5) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    paddingTop: \".4em\",\r\n                    paddingBottom: \".4em\",\r\n                    '&:hover' : {\r\n                        backgroundColor: colorMain , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorMain, 0.3) ,  \r\n                    }\r\n                }, \r\n            },\r\n            heading: { \r\n                fontSize: headingSize, \r\n                marginRight: theme.spacing(3),\r\n                color: theme.palette.text.primary,\r\n                textAlign: 'center', \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {   \r\n                    fontSize: headingSize*0.8,  \r\n                },\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {  \r\n                    marginRight: 0, \r\n                    marginBottom: theme.spacing(1),\r\n                    fontSize: headingSize*0.65, \r\n                    textAlign: 'center'\r\n                },\r\n            },\r\n            containerColored: { \r\n                backgroundColor: colorTheme, \r\n                padding: theme.spacing(2, 0),  \r\n                [`@media (max-width: ${theme.breakpoints.values.md}px)`]: { \r\n                    padding: theme.spacing(2, 0), \r\n                    margin: theme.spacing(3, 0),\r\n                },\r\n            }, \r\n            containerFlexed: { \r\n                width: '100%', \r\n                display: 'flex',\r\n                alignItems: 'center', \r\n                justifyContent: 'space-between',\r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: { \r\n                    flexDirection: 'column', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'flex-start'\r\n                },\r\n            },\r\n            styleClass: {\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (\r\n        <Box className={`${classes.containerColored} ${classes.styleClass}`}> \r\n            <Container maxWidth={maxWidthContainer} > \r\n                    <Grid container> \r\n                        <Box className={classes.containerFlexed}> \r\n                            <Typography variant={'h3'} className={classes.heading}>\r\n                                { heading }\r\n                            </Typography>\r\n                            {\r\n                                isButton && \r\n                                <Button \r\n                                    className={classes.button}  \r\n                                    onClick={openModal}\r\n                                    variant=\"contained\"\r\n                                    size='large'\r\n                                >\r\n                                    { textButton }\r\n                                </Button> \r\n                            }\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                \r\n            </Container>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    TextField,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading) \r\n    const [headingSize, setHeadingSize] = React.useState(props.data.headingSize) \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorMain || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorMain || '')\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    }\r\n    \r\n    const colorTheme = isNoThemeColor(props.data.colorMain)\r\n\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.colorMain]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, \r\n            btnDrawerItem, containerWrapper , responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                    zIndex: 25,\r\n                    outlineColor: `${theme.palette.error.main}`,\r\n                    '& $mtView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $mbView' : { \r\n                        opacity: 1\r\n                    },\r\n                    '& $btnDrawerStyle' : { \r\n                        opacity: 1\r\n                    }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading  \r\n        newData.headingSize = Number(headingSize)  \r\n        newData.isButton = isButton\r\n        newData.textButton = textButton\r\n        newData.targetButton = targetButton\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.colorMain = colorCustom\r\n        } else {\r\n            newData.colorMain = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Action Line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Action Line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Action Line Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Action Line \r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Heading Size\"\r\n                                                variant='outlined'\r\n                                                value={headingSize}\r\n                                                setValue={setHeadingSize}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        FontSize Heading: <b>{ headingSize*0.65 }</b> \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n \r\n                                    </Box>\r\n                                   \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                            <ColorSelecter\r\n                                                label={'Color for Block'}\r\n                                                colorSelect={colorSelect} \r\n                                                setColorSelect={setColorSelect}\r\n                                                colorCustom={colorCustom}\r\n                                                setColorCustom={setColorCustom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                position = {'top'}\r\n                                                noInherit={true}\r\n                                            />\r\n                                    </Box>\r\n  \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            />   \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                    \r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n\r\n\r\n                                    <Box mt={5} /> \r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React , {useState} from 'react';\r\nimport { withStyles, makeStyles, darken } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody, \r\n    TableCell, \r\n    TableContainer, \r\n    TableHead, \r\n    TableRow, \r\n    Paper, \r\n    Button, \r\n    Container,\r\n    Box\r\n} from '@material-ui/core'; \r\n\r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n \r\nexport default function CustomizedTables(props) {\r\n    let mainColor = props.data.color\r\n    const buttonText = props.data.buttonText\r\n    const heading = props.data.heading\r\n    const rows = props.data.rows\r\n    const tableRow = props.data.tableRow\r\n    const visibleRows = props.data.visibleRows\r\n    const visibleBottonText = props.data.visibleBottonText\r\n    const visibleBottonTextClick = props.data.visibleBottonTextClick\r\n     \r\n    const isBotton = rows.length - visibleRows > 0 ? true : false  \r\n    const [isBottonClick, setIsBottonClick] = useState(false)\r\n\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n      \r\n    const StyledTableRow = withStyles((theme) => ({\r\n        root: {\r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`\r\n        },\r\n    }))(TableRow);\r\n        \r\n    const useStyles = makeStyles(theme => {\r\n        \r\n        mainColor = getColorByPalette(theme, mainColor)\r\n \r\n        return ({\r\n            table: {\r\n                minWidth: 200,\r\n            },\r\n            \r\n            tableCell: {\r\n                paddingTop: theme.spacing(2), \r\n                paddingBottom: theme.spacing(2),  \r\n                [theme.breakpoints.down('md')]: { \r\n                    paddingTop: theme.spacing(1), \r\n                    paddingBottom: theme.spacing(1), \r\n                },\r\n            },\r\n            tableButtonCell: { \r\n                maxWidth: 300,\r\n                width: 300,\r\n                [theme.breakpoints.down('md')]: {\r\n                    width: 'auto', \r\n                },\r\n            },\r\n            tableButton: { \r\n                padding: theme.spacing(1, 3), \r\n                textTransform: 'inherit', \r\n                backgroundColor: mainColor, \r\n                color: theme.palette.getContrastText(mainColor),\r\n                fontSize: 14, \r\n                lineHeight: 1.2, \r\n                [theme.breakpoints.down('sm')] : {\r\n                    padding: theme.spacing(1), \r\n                },\r\n                \"&:hover\": { \r\n                    backgroundColor: darken(mainColor, 0.3), \r\n                }\r\n            },\r\n            tableContainer: {\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            tableHeader: {\r\n                backgroundColor: mainColor,\r\n                color: theme.palette.getContrastText(mainColor), \r\n            }\r\n        })\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const { handleOpen  } = React.useContext(ModalContext)\r\n  \r\n    const handleOpenModal = (target) => {\r\n        handleOpen(target)\r\n    }\r\n    const handleVisible = () => {\r\n        setIsBottonClick(!isBottonClick)\r\n    }\r\n\r\n    const renderRows = () => {  \r\n        if(!isBottonClick)\r\n        return (\r\n            rows.map((row, index) => {\r\n                if(index < visibleRows)\r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n                return false\r\n            })\r\n        )\r\n        if(isBottonClick)\r\n        return (\r\n            rows.map((row, index) => { \r\n                return (\r\n                    OnceRow(row, index)\r\n                )\r\n            })\r\n        )\r\n    }\r\n    const OnceRow = (row, index) => (\r\n        <StyledTableRow key={index} hover={true}  >\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                {row.name}\r\n            </TableCell>\r\n            <TableCell align=\"center\" className={classes.tableCell}>\r\n                {row.price}\r\n            </TableCell> \r\n            <TableCell align=\"right\" className={`${classes.tableButtonCell} ${classes.tableCell}`}> \r\n                <Button \r\n                    variant='contained'   \r\n                    className={classes.tableButton}\r\n                    onClick={() => { handleOpenModal(row.name) }}\r\n                >\r\n                    { buttonText }\r\n                </Button>\r\n            </TableCell>\r\n        </StyledTableRow>\r\n    )\r\n    const renderBotton = () => {\r\n        return (  \r\n            <Box mt={2} display='flex' justifyContent='center'>\r\n                <Button\r\n                    onClick={handleVisible}\r\n                >\r\n                    { isBottonClick ? visibleBottonTextClick  : visibleBottonText }\r\n                </Button> \r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Container maxWidth={maxWidthContainer} className={`${classes.tableContainer} heading`} >\r\n            {\r\n                heading.length > 0 &&\r\n                <h3> { heading } </h3> \r\n            }\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {tableRow.map((item, index) => ( \r\n                                <TableCell \r\n                                    key={index} \r\n                                    align={index === 0 ? 'left' : 'center'}\r\n                                    className={`${classes.tableHeader} ${classes.tableCell}` }\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                            ))} \r\n                            <TableCell align=\"right\" className={`${classes.tableHeader} ${classes.tableCell}` } ></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            renderRows()\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {\r\n                isBotton &&\r\n                renderBotton()\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box, \r\n    FormGroup, \r\n    Typography, \r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newItemTitle, setNewItemTitle] = React.useState('')\r\n    const [newItemPrice, setNewItemPrice] = React.useState('')\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addItem(newItemTitle, newItemPrice)\r\n        setNewItemTitle('')\r\n        setNewItemPrice('') \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box width={'50%'} >\r\n                <FormGroup>\r\n                    <Typography variant='caption' gutterBottom >Add new row</Typography>\r\n                    <Box mb={1}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item title\" \r\n                            variant=\"outlined\" \r\n                            value={newItemTitle}\r\n                            onChange={(e) => { setNewItemTitle(e.target.value)}}\r\n                        />\r\n                    </Box>\r\n                    <Box mb={1} style={{position: 'relative'}}>\r\n                        <TextField\r\n                            required \r\n                            fullWidth\r\n                            label=\"New item price\" \r\n                            variant=\"outlined\" \r\n                            value={newItemPrice}\r\n                            onChange={(e) => { setNewItemPrice(e.target.value)}}\r\n                            \r\n                        /> \r\n                    </Box>\r\n                    <Box> \r\n                        <Button \r\n                            fullWidth\r\n                            type={'submit'}\r\n                            color={'primary'} \r\n                            variant=\"contained\"  \r\n                        >\r\n                            Add New Row\r\n                        </Button>\r\n                    </Box>\r\n                </FormGroup> \r\n            </Box>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React, {useState} from 'react'\r\n\r\n\r\nimport { Box , TextField, Tooltip, IconButton  } from '@material-ui/core'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\n\r\nconst ChangeItem = (props) => {\r\n    const [name, setName] = useState(props.item.name)\r\n    const [price, setPrice] = useState(props.item.price)\r\n \r\n    const handleSave = () => { \r\n        props.handleRowChange(props.index, name, price)\r\n    }\r\n\r\n    return (\r\n        <Box display='flex' alignItems=\"center\" width=\"100%\">\r\n           \r\n            <Box mr={1} flexGrow={1}>\r\n                <TextField \r\n                    fullWidth\r\n                    size='small'\r\n                    type='text'\r\n                    label={`Table Row Name ${props.index + 1}`}\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    onChange={(e) => { \r\n                        setName(e.target.value)\r\n                    }}\r\n                    onBlur={handleSave}\r\n                />\r\n            </Box>\r\n            <Box >\r\n                <TextField \r\n                    fullWidth\r\n                    size='small'\r\n                    type='text'\r\n                    label={`Table Row Price ${props.index + 1}`}\r\n                    variant=\"outlined\"\r\n                    value={price}\r\n                    onChange={(e) => { \r\n                        setPrice(e.target.value)\r\n                    }}\r\n                    onBlur={handleSave}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChangeItem\r\n","import React from 'react'\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n \r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent,\r\n    Divider,  \r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\nimport AddItem from \"./AddItem\"\r\nimport ChangeItem from \"./ChangeItem\" \r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n \r\n    const [textButton,  setTextButton] = React.useState(props.data.buttonText || '') \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    const [rows, setRows] = React.useState(props.data.rows)\r\n    const [tableRow, setTableRow] = React.useState(props.data.tableRow)\r\n\r\n    const [visibleRows, setVisibleRows] = React.useState(props.data.visibleRows || 5)\r\n    const [visibleBottonText, setVisibleBottonText] = React.useState(props.data.visibleBottonText || 'Show all')\r\n    const [visibleBottonTextClick, setVisibleBottonTextClick] = React.useState(props.data.visibleBottonTextClick || 'Show less') \r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 51)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n    \r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color])  \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper ,\r\n            responseValues ,responseMobile , mobileTooltip} = commonClasses \r\n\r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 400px )',\r\n                maxWidth: 800,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,  \r\n\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n             \r\n        })\r\n    })\r\n\r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading \r\n        newData.buttonText = textButton \r\n        newData.rows = rows \r\n        newData.tableRow = tableRow \r\n        newData.visibleRows = visibleRows \r\n        newData.visibleBottonText = visibleBottonText \r\n        newData.visibleBottonTextClick = visibleBottonTextClick \r\n\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeTable = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) \r\n            props.removeContainer(props.data.id)\r\n    }\r\n    const handleTableHeadChange = (value, index) => {\r\n        const newRow = tableRow.slice()\r\n        newRow[index] = value\r\n        setTableRow(newRow)\r\n    }\r\n    const handleRowChange = (index, name, price) => {\r\n        const newRows = rows.slice()\r\n\r\n        newRows[index].name = name\r\n        newRows[index].price = price\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const swapItem = (direction, index) => { \r\n        const newRows = rows.slice()\r\n        let activeIndex   \r\n    \r\n        newRows.map( (item) => { \r\n            if(newRows.indexOf(item) === index) {\r\n                activeIndex = index\r\n            }\r\n            return 0 \r\n        }) \r\n \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newRows.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex - 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n            const movedItem = newRows[activeIndex]\r\n            const placeItem = newRows[activeIndex + 1]\r\n\r\n            newRows[activeIndex] = placeItem\r\n            newRows[activeIndex + 1 ] = movedItem  \r\n        }\r\n  \r\n        setRows(newRows) \r\n        setIsDisableBtn(false);  \r\n    }\r\n    const addRow = (title, body) => {\r\n        const newRows = rows.slice()\r\n        const rowLayout = {\r\n            name: title, \r\n            price: body \r\n        }\r\n        newRows.push(rowLayout)\r\n\r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    const removeItem = (index) => { \r\n        const newRows = rows.slice()\r\n        newRows.splice(index, 1) \r\n \r\n        setRows(newRows)\r\n        setIsDisableBtn(false); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Table margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Table margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Table Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeTable}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                        { !isDisableBtn && \"Close to save - \" }Settings Table\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box> \r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        \r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{mobileMarginBottomComputed}</b> ;  \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Main Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <InputChange\r\n                                            id={null} \r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Text Button\"\r\n                                            variant='outlined'\r\n                                            value={textButton}\r\n                                            setValue={setTextButton}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Head row\r\n                                    </Typography>\r\n\r\n                                    <Box display='flex' mt={1} mb={3}> \r\n                                        {\r\n                                            tableRow.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} mr={1} flexGrow={1} >\r\n                                                        <InputChange\r\n                                                            id={index} \r\n                                                            fullWidth={true}\r\n                                                            type='text'\r\n                                                            size=\"small\" \r\n                                                            label={`Table Head Row ${index + 1}`}\r\n                                                            variant='outlined'\r\n                                                            value={item}\r\n                                                            setValue={handleTableHeadChange}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                        />  \r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Typography variant='h6' gutterBottom>\r\n                                        Table Rows\r\n                                    </Typography>\r\n\r\n                                    <Box mt={1} mb={1}> \r\n                                        \r\n                                        {\r\n                                            rows.map( (item, index) => {\r\n                                                return (\r\n                                                    <Box key={index} my={2} display='flex' alignItems='center' >\r\n                                                        <Box mr={1} display='flex' alignItems='center'>\r\n  \r\n                                                            <ButtonGroup \r\n                                                                color=\"primary\"\r\n                                                                aria-label=\"contained primary button group\"\r\n                                                                variant=\"contained\" \r\n                                                            >  \r\n                                                                {\r\n                                                                    index !== 0 &&\r\n                                                                    <Tooltip title='Get Up' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('up', index) }}\r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >  \r\n                                                                            <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                                                        </Button>\r\n                                                                    </Tooltip> \r\n                                                                }\r\n                                                                 \r\n                                                                {\r\n                                                                    rows.length - 1 !== index && \r\n                                                                    <Tooltip title='Get Down' placement='top'>\r\n                                                                        <Button   \r\n                                                                            onClick={() => { swapItem('down', index) }} \r\n                                                                            size='small'\r\n                                                                            variant='contained'\r\n                                                                            color='primary'  \r\n                                                                        >    \r\n                                                                            <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                        </Button>\r\n                                                                    </Tooltip>  \r\n                                                                }\r\n                                                                <Tooltip title='Delete Page' placement='top'>\r\n                                                                    <Button\r\n                                                                        variant='contained'\r\n                                                                        color=\"secondary\"\r\n                                                                        disableElevation={true}\r\n                                                                        className={classes.deletePageBtn}\r\n                                                                        onClick={() => { removeItem(index) }}\r\n                                                                    > \r\n                                                                        <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                                                    </Button>\r\n                                                                </Tooltip>  \r\n                                                            </ButtonGroup>\r\n                                                        </Box>\r\n                                                                \r\n                                                        <ChangeItem handleRowChange={handleRowChange} item={item} index={index} />\r\n\r\n                                                    </Box>\r\n                                                )\r\n                                            })\r\n                                        } \r\n                                    </Box>\r\n                                    \r\n                                    <AddItem addItem={addRow} />\r\n                                     \r\n\r\n                                    <Divider style={{margin: \"12px 0\"}}/>\r\n\r\n                                    <Box display='flex' mt={3} mb={3}> \r\n                                        <ColorSelecter\r\n                                            label={'Color for Table'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box mt={3} mb={3}>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label={`Quantity to show`}\r\n                                                variant='outlined'\r\n                                                value={visibleRows}\r\n                                                setValue={setVisibleRows}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}  \r\n                                                type='text'\r\n                                                size=\"small\" \r\n                                                label={`Text for botton`}\r\n                                                variant='outlined'\r\n                                                value={visibleBottonText}\r\n                                                setValue={setVisibleBottonText}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            /> \r\n                                        </Box>\r\n                                        <InputChange\r\n                                            id={null}  \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label={`Text for botton clicked`}\r\n                                            variant='outlined'\r\n                                            value={visibleBottonTextClick}\r\n                                            setValue={setVisibleBottonTextClick}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                        \r\n                                    </Box>\r\n                                                \r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev && \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n            }\r\n \r\n            {\r\n                !modeDev && \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            } \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport SendFormContext from '../../../context/sendFormContext/SendFormContext'\r\n\r\nimport { Container, makeStyles, Button, Box, Grid, fade, darken } from '@material-ui/core'\r\n\r\nimport {getColorByPalette, getColorByPaletteReverse} from '../colorPicker/ColorCalculation'\r\n\r\nimport '../../../assets/style/lineForm.scss' \r\n\r\nfunction DumbComponent(props) {  \r\n    const { sendRequests } = React.useContext(SendFormContext)\r\n    const [formPhone, setFormPhone] = React.useState('')\r\n    const [formName, setFormName] = React.useState('') \r\n   \r\n    const heading = props.data.heading\r\n    const paragraph = props.data.paragraph\r\n    const inputName = props.data.inputName\r\n    const inputPhone = props.data.inputPhone \r\n    const buttonText = props.data.buttonText\r\n    const policy = props.data.policy\r\n      \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n\r\n    let color = props.data.color\r\n    let colorFocusInput\r\n  \r\n    const useStyles = makeStyles((theme) => {    \r\n\r\n        color = getColorByPalette(theme, color)\r\n        colorFocusInput = getColorByPaletteReverse(theme, props.data.color) \r\n\r\n        return ({ \r\n            itemBackground: {  \r\n                backgroundColor: theme.palette.background.paper,  \r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            },\r\n            lineDecor: {\r\n                position: \"absolute\",\r\n                top: 8,\r\n                left: 8,\r\n                right: 8,\r\n                bottom: 8,\r\n                border: `1px solid ${fade(color, 0.25)}`,\r\n                borderRadius: 4,\r\n            },\r\n            input: {\r\n                width: '100%',\r\n                fontFamily: 'inherit', \r\n                border: `1px solid ${color}`, \r\n                backgroundColor: 'inherit',\r\n                color: theme.palette.text.primary,\r\n                boxShadow: 'none', \r\n                height: 50,\r\n                paddingLeft: 45,\r\n                paddingRight: 25, \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                '&::-webkit-input-placeholder':  {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&::-moz-placeholder' : { \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-ms-input-placeholder': {  \r\n                    color: theme.palette.text.primary,\r\n                },\r\n                '&:-moz-placeholder': { \r\n                    color: theme.palette.text.primary,\r\n                }, \r\n                '&:focus': {\r\n                    borderColor: colorFocusInput\r\n                },\r\n                \"&:hover\": {\r\n                    background: fade(color, 0.07), \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    textAlign: 'center' ,\r\n                    paddingLeft: 20,\r\n                    paddingRight: 20, \r\n                }\r\n            },\r\n            button: {\r\n                width: '100%',\r\n                backgroundColor: color ,\r\n                border: `2px solid ${color}`, \r\n                height: 50,\r\n                textTransform: 'inherit', \r\n                transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n                \r\n                color: theme.palette.getContrastText(color),\r\n                '&:active' : {\r\n                    backgroundColor: darken(color, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginTop: 0,  \r\n                    '&:hover' : {\r\n                        backgroundColor: color , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        background: fade(color, 0.15), \r\n                        color: theme.palette.getContrastText(theme.palette.background.paper),\r\n                    }\r\n                }, \r\n            }, \r\n            gridItem: {\r\n                paddingRight: theme.spacing(1),\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginBottom: 10,  \r\n                }\r\n            },\r\n            policy: {\r\n                height: \"100%\", \r\n                display: \"flex\", \r\n                alignItems: \"center\", \r\n                fontSize: 12,\r\n                lineHeight: 1.2,\r\n                fontWeight: 300, \r\n                [theme.breakpoints.down('md')]: {\r\n                    marginTop: 10, \r\n                    textAlign: 'center', \r\n                    justifyContent: 'center'\r\n                }\r\n            }\r\n            \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()  \r\n\r\n        const sendForm = {\r\n            phone: formPhone,\r\n            name: formName,  \r\n            place: 'line Form',  \r\n            isCheck: false\r\n        }\r\n\r\n        sendRequests(sendForm)\r\n        \r\n        setFormPhone('')\r\n        setFormName('') \r\n\r\n    }\r\n    return ( \r\n        <div className={classes.itemBackground}> \r\n            <Container maxWidth={maxWidthContainer}>\r\n                <div className=\"line-form\"> \r\n                    <Box className={classes.lineDecor} ></Box>\r\n                    {\r\n                        heading.length > 0 &&\r\n                        <h5>\r\n                            {heading}\r\n                        </h5>\r\n                    }\r\n                    {\r\n                        paragraph.length > 0 &&\r\n                        <p>\r\n                            {paragraph}\r\n                        </p>\r\n                    } \r\n\r\n                    <form onSubmit={handleSubmit} style={{position: 'relative', zIndex: 5}}>\r\n                        <Grid container >\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name={`name-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputName} \r\n                                    value={formName}\r\n                                    onChange={(e) => {setFormName(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} className={classes.gridItem}>\r\n                                <input \r\n                                    type=\"tel\" \r\n                                    name={`phone-${props.data.id}`} \r\n                                    required \r\n                                    placeholder={inputPhone} \r\n                                    value={formPhone}\r\n                                    onChange={(e) => {setFormPhone(e.target.value)}}\r\n                                    className={classes.input}\r\n                                /> \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4} lg={3} className={classes.gridItem}>\r\n                                <Button \r\n                                    type=\"submit\"\r\n                                    className={classes.button} \r\n                                >\r\n                                    <span>\r\n                                       { buttonText}\r\n                                    </span>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={3} >\r\n                                <span className={classes.policy}>\r\n                                    { policy }\r\n                                </span> \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                    </form>\r\n                </div> \r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\n \r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport StylesChangers from '../../../styles/changers'   \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';  \r\n \r\nimport { \r\n    Button, Box, Tooltip, Typography, ButtonGroup, makeStyles, Modal, DialogContent, FormControl, InputLabel, Select, MenuItem\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'; \r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true) \r\n    const [open, setOpen] = React.useState(false)\r\n \r\n    const [heading, setHeading] = React.useState(props.data.heading || '')\r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph || '')\r\n    const [inputName, setInputName] = React.useState(props.data.inputName || '')\r\n    const [inputPhone, setInputPhone] = React.useState(props.data.inputPhone || '') \r\n    const [buttonText, setButtonText] = React.useState(props.data.buttonText || '')\r\n    const [policy, setPolicy] = React.useState(props.data.policy || '')\r\n \r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || '')\r\n    \r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 51)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom )\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n     \r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if (colorTheme) {  \r\n            setColorSelect('custom')\r\n        }  \r\n    }, [props.data.color])\r\n\r\n    const handleOpen = () => {  \r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    };\r\n     \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, \r\n            responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n        const { mtView, mbView } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 300px )',\r\n                maxWidth: 600,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }\r\n                  \r\n        })\r\n    })\r\n \r\n    const classes = useStyles();\r\n \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)  \r\n        newData.heading = heading \r\n        newData.paragraph = paragraph \r\n        newData.inputName = inputName \r\n        newData.inputPhone = inputPhone  \r\n        newData.buttonText = buttonText \r\n        newData.policy = policy  \r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect \r\n        }\r\n  \r\n        props.reSaveItem(props.data.id, newData) \r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if(conf) props.removeContainer(props.data.id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Form line margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Form line margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{position: 'relative'}} >  \r\n                <Box className={classes.btnDrawerStyle}> \r\n                    <Box display=\"flex\" flexDirection=\"column\"> \r\n                        <Box mb={1}>\r\n                            <Tooltip title='Form Line Settings' placement='right'>\r\n                                <Button  \r\n                                    onClick={handleOpen} \r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >   \r\n                                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        \r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  &&\r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('up', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >  \r\n                                        <ExpandLessOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>   \r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            {\r\n                                !props.isLast &&\r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button   \r\n                                        onClick={() => { props.swapContainer('down', props.data.id) }}\r\n                                        size='medium'\r\n                                        variant='contained' \r\n                                        className={classes.btnDrawerItem}\r\n                                    >     \r\n                                        <ExpandMoreOutlinedIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip> \r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n                        \r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button   \r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained' \r\n                                    className={classes.btnDrawerItem}\r\n                                >     \r\n                                    <DeleteOutline style={{ color: '#fff' }} fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip> \r\n                        </Box>\r\n \r\n                    </Box>\r\n                    <Modal \r\n                        open={open}  \r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose} \r\n                    > \r\n                        <DialogContent> \r\n                            <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                                <div className={classes.menu}>\r\n                                    <Typography \r\n                                        component='p' \r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Form line  <OpenWithIcon/>\r\n                                    </Typography> \r\n\r\n                                    \r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select> \r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        \r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n\r\n                                      \r\n                                    <Box mt={2} >   \r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label='Paragraph'\r\n                                            variant='outlined'  \r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box> \r\n                                    <Box mt={2} >   \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Name Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputName}\r\n                                            setValue={setInputName}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />  \r\n                                    </Box> \r\n                                    <Box mt={2} >     \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Input Phone Placeholder\" \r\n                                            variant='outlined'  \r\n                                            value={inputPhone}\r\n                                            setValue={setInputPhone}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>  \r\n                                    <Box mt={2} >        \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Button Text\" \r\n                                            variant='outlined'  \r\n                                            value={buttonText}\r\n                                            setValue={setButtonText}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />\r\n                                    </Box> \r\n                                    <Box mt={2} >      \r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true} \r\n                                            type='text'\r\n                                            size=\"small\" \r\n                                            label=\"Policy Text\" \r\n                                            variant='outlined'  \r\n                                            value={policy}\r\n                                            setValue={setPolicy}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        /> \r\n                                    </Box> \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Button'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position=\"right\"\r\n                                            noInherit={true}\r\n                                        />\r\n                                        \r\n                                    </Box>\r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                        \r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'} \r\n                                            onClick={handleSave}\r\n                                        >\r\n                                            Save\r\n                                        </Button> \r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent> \r\n                    </Modal>  \r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }  \r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Typography, Container, Box, fade } from '@material-ui/core'  \r\n\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n \r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';  \r\n\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nSwiperCore.use([Navigation]);\r\n  \r\nfunction DumbComponent(props) {\r\n    \r\n    const heading = props.data.heading  \r\n    let color = props.data.color\r\n\r\n    const slidesForView = props.data.slidesPerView \r\n    const slidesForViewTablet = props.data.slidesPerViewTablet \r\n    const slidesForViewMobile = props.data.slidesPerViewMobile \r\n    const spaceBetween = props.data.spaceBetween\r\n    const speed = props.data.speed\r\n    const loop = props.data.loop\r\n    const freeMode = props.data.freeMode \r\n    const items = props.data.slides\r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer  \r\n \r\n    const [slideHeight, setSlideHeight] = React.useState(0)  \r\n\r\n    const slideRef = React.useRef(null);\r\n    \r\n\r\n    const useStyles = makeStyles((theme) => {   \r\n        \r\n        color = getColorByPalette(theme, color) \r\n\r\n        return ({  \r\n            swiper: {\r\n                 \r\n                '& .swiper-button-prev': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-button-next': {\r\n                    color: color, \r\n                    \"&:after\": { \r\n                        fontSize: `${25}px !important`\r\n                    }\r\n                },\r\n                '& .swiper-container': {\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    [theme.breakpoints.down('sm')]: { \r\n                        paddingLeft: 0,\r\n                        paddingRight: 0,\r\n                    }\r\n                }, \r\n                // [theme.breakpoints.down('xs')]: {\r\n                //     '& .swiper-button-prev': {\r\n                //         display: 'none !important'\r\n                //     },\r\n                //     '& .swiper-button-next': {\r\n                //         display: 'none'\r\n                //     }\r\n                // }, \r\n            },\r\n            slide: {\r\n                position: 'relative',  \r\n                height: slideHeight,   \r\n                overflow: 'hidden',   \r\n            },\r\n            slideBox: {\r\n                position: 'relative',  \r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }, \r\n            slideImg: {\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover'\r\n            },\r\n            slideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: 14, \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2), \r\n                borderBottom: `2px solid ${color}`\r\n            },\r\n            styleClass: {\r\n                marginTop: `${marginTop}px`,\r\n                marginBottom: `${marginBottom}px`,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop > 50 ? marginTop*0.6 : 30,\r\n                    marginBottom: marginBottom > 50 ? marginBottom*0.6 : 30,\r\n                }\r\n            },  \r\n        })\r\n    });\r\n \r\n\r\n    const classes  = useStyles();\r\n\r\n    \r\n    let actualWidth = window.innerWidth\r\n \r\n    React.useEffect(() => {  \r\n        const getWidthViewport = () => {  \r\n            console.log('swiper resize') \r\n\r\n            try {\r\n                setTimeout(() => {\r\n                    let slideHeightCalc = slideRef.current.clientWidth\r\n                    setSlideHeight(slideHeightCalc) \r\n                }, 200)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }; \r\n        getWidthViewport(); \r\n\r\n        window.addEventListener(\"resize\", getWidthViewport)\r\n\r\n        return function cleanupListener() { \r\n            window.removeEventListener('resize', getWidthViewport)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [actualWidth]);\r\n \r\n    \r\n\r\n    const renderSlide = (slide) => (\r\n        <SwiperSlide key={slide.imageUrl} ref={slideRef} className={`${classes.slide}`}>\r\n            <Box className={classes.slideBox}>\r\n                <Box \r\n                    style={{backgroundImage: `url(${slide.imageUrl})`}}\r\n                    className={classes.slideImg}\r\n                />\r\n                {\r\n                    slide.title.length > 0 &&\r\n                    <Typography\r\n                        component='h6'\r\n                        className={classes.slideTitle}\r\n                    >\r\n                        {slide.title}\r\n                    </Typography>\r\n                }\r\n                \r\n            </Box>\r\n        </SwiperSlide>\r\n    )\r\n \r\n    return ( \r\n        <Container className={`${classes.swiper} ${classes.styleClass} heading`} maxWidth={maxWidthContainer} >\r\n            <Typography variant={'h3'} className={classes.heading}>\r\n                { heading }\r\n            </Typography> \r\n            \r\n                \r\n                <Swiper\r\n                    loop={loop}  \r\n                    freeMode={freeMode}  \r\n\r\n                    height={slideHeight}\r\n                    spaceBetween={spaceBetween}\r\n                    speed={speed} \r\n                    slidesPerView={slidesForViewMobile}\r\n                    breakpoints={{\r\n                        // when window width is >= 600px\r\n                        600: { \r\n                          slidesPerView: slidesForViewTablet,\r\n                        },\r\n                        // when window width is >= 960px\r\n                        960: { \r\n                          slidesPerView: slidesForView,\r\n                        },\r\n                    }}\r\n    \r\n                    navigation  \r\n    \r\n                    onSlideChange={() => console.log('slide change')} \r\n                >\r\n                    {\r\n                        items.map( slide => {\r\n                            return renderSlide(slide)\r\n                        } )\r\n                    }\r\n                </Swiper> \r\n            \r\n        </Container>\r\n       \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react'\r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport {  \r\n    Button,  \r\n    TextField,  \r\n    Box,  \r\n    Typography, \r\n    makeStyles\r\n} from '@material-ui/core' \r\n   \r\n\r\nconst AddItem = (props) => {\r\n     \r\n    const [newImageName, setNewImageName] = React.useState('')\r\n    const [newImageUrl, setNewImageUrl] = React.useState('')\r\n    const [newImageTitle, setNewImageTitle] = React.useState('')\r\n\r\n    const handleImageUpload = async (e) => { \r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setNewImageUrl(downloadURL)\r\n        setNewImageName(generateImageName)   \r\n    }\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault()\r\n\r\n        props.addSlide(newImageUrl, newImageName, newImageTitle)\r\n        setNewImageName('')\r\n        setNewImageUrl('') \r\n        setNewImageTitle('') \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => { \r\n\r\n        return ({ \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    console.log(props.btnWithLabel)\r\n\r\n    return (\r\n        <Box className={classes.addSlide}>\r\n            <Button color='primary' variant='contained' className={props.btnWithLabel}  >\r\n                <label htmlFor='image-input-label'>\r\n                    Set image\r\n                </label>\r\n                <input\r\n                    id=\"image-input-label\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {  handleImageUpload(e) }}\r\n                    style={{\r\n                    display: \"none\"\r\n                }}/>\r\n            </Button> \r\n            <Typography variant='caption' > Image: { newImageName.replace(`-${props.id}`, '') }</Typography>\r\n            <Box my={1}>\r\n                <TextField \r\n                    type='text'\r\n                    size=\"small\" \r\n                    label='Set Title'\r\n                    variant=\"outlined\"\r\n                    value={newImageTitle}\r\n                    onChange={(e) => { setNewImageTitle(e.target.value) }}\r\n                />\r\n                <Box my={1}>\r\n                    <Button\r\n                        disabled={newImageName !== '' ? false : true }\r\n                        variant=\"contained\"\r\n                        color=\"primary\" \r\n                        onClick={handleSubmit}>\r\n                        Add Slide\r\n                    </Button> \r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddItem\r\n","import React from 'react' \r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button, \r\n    IconButton, \r\n    Box,\r\n    Tooltip, \r\n    Divider, \r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent, \r\n    fade,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline, InfoOutlined} from '@material-ui/icons'; \r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport AddItem from './AddItem'\r\nimport ChangeTitle from './ChangeItem'\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) {\r\n \r\n    const { removeImage } = React.useContext(ImageContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n      \r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [slidesPerView, setSlidesPerView] = React.useState(props.data.slidesPerView || 4)\r\n    const [slidesPerViewTablet, setSlidesPerViewTablet] = React.useState(props.data.slidesPerViewTablet || 3)\r\n    const [slidesPerViewMobile, setSlidesPerViewMobile] = React.useState(props.data.slidesPerViewMobile || 1)\r\n    const [spaceBetween, setSpaceBetween] = React.useState(props.data.spaceBetween || 30)\r\n    const [speed, setSpeed] = React.useState(props.data.speed || 200)\r\n    const [loop, setLoop] = React.useState(props.data.loop || false)\r\n    const [freeMode, setFreeMode] = React.useState(props.data.freeMode || false)\r\n    const [slides, setSlides] = React.useState(props.data.slides || []) \r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.color || 'primary')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.color || 'primary')\r\n\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 50)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 50)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const [imageForDelete, setImageForDelete] = React.useState([])\r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => { \r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n\r\n    const colorTheme = isNoThemeColor(props.data.color)\r\n    React.useEffect(() => {\r\n        if(colorTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n    }, [props.data.color]) \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel, responseValues ,responseMobile , mobileTooltip } = commonClasses \r\n \r\n        const { mtView, mbView } = commonStyle \r\n\r\n        return ({\r\n            btnWithLabel: btnWithLabel, \r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   zIndex: 25, \r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{ \r\n                left: 'calc( 50% - 450px )',\r\n                maxWidth: 900,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,   \r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            dumbSlide: {\r\n                display: 'inline-block', \r\n                width: 250, \r\n                height: 250, \r\n                position: 'relative', \r\n                margin: theme.spacing(1), \r\n                \"& img\": {\r\n                    width: '100%', \r\n                    height: '100%'\r\n                },\r\n                '&:hover': {\r\n                    \"& $dumbSlideButtons\" : {\r\n                        opacity: 1\r\n                    }\r\n                }\r\n            },  \r\n            dumbSlideButtons: {\r\n                opacity: 0, \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n            },\r\n            dumbSlideTitle: {\r\n                position: 'absolute',\r\n                zIndex: 5, \r\n                bottom: 20,  \r\n                right: 0,\r\n                maxWidth: \"75%\", \r\n                fontSize: 14, \r\n                lineHeight: 1.1, \r\n                backgroundColor: fade(theme.palette.background.default, 0.7), \r\n                padding: theme.spacing(1, 2)\r\n            }, \r\n            addSlide: { \r\n                padding: theme.spacing(1), \r\n                margin: theme.spacing(2, 0),\r\n                border: `1px solid ${theme.palette.divider}`, \r\n            }, \r\n            tooltipReload: {\r\n                fontSize: 14, \r\n                backgroundColor: theme.palette.warning.main\r\n            }\r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n  \r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.slidesPerView = slidesPerView   \r\n        newData.slidesPerViewMobile = slidesPerViewMobile   \r\n        newData.slidesPerViewTablet = slidesPerViewTablet   \r\n        newData.spaceBetween = spaceBetween   \r\n        newData.speed = speed   \r\n        newData.loop = loop   \r\n        newData.freeMode = freeMode   \r\n        newData.slides = slides   \r\n\r\n        newData.marginTop = marginTop   \r\n        newData.marginBottom = marginBottom   \r\n        newData.maxWidthContainer = maxWidthContainer   \r\n\r\n        if (colorSelect === 'custom') {\r\n            newData.color = colorCustom\r\n        } else {\r\n            newData.color = colorSelect\r\n        }\r\n\r\n        if(imageForDelete.length > 0) {\r\n            imageForDelete.forEach( name => {\r\n                removeImage(name)\r\n            })\r\n        }\r\n\r\n        props.reSaveItem(props.data.id, newData) \r\n        setIsDisableBtn(true)\r\n        setImageForDelete([])\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ') \r\n\r\n        if (conf)  { \r\n            let imgArray = []\r\n            slides.forEach( slide => {\r\n                if(slide.imageName !== 'ImageExample') imgArray.push(slide.imageName)\r\n            })\r\n            if(imgArray.length > 0) {\r\n                imgArray.forEach( name => {\r\n                    removeImage(name)\r\n                })\r\n            }\r\n\r\n            props.removeContainer(props.data.id)\r\n        }\r\n            \r\n    }\r\n\r\n    const handleSlideTitle = (title, index) => {\r\n        let newSlides = slides.slice()\r\n\r\n        newSlides[index].title = title \r\n        \r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n\r\n    const swipeSlide = (direction, index) => {\r\n        let newSlides = []\r\n        slides.forEach(element => {\r\n            newSlides.push(JSON.parse(JSON.stringify(element)))\r\n        });\r\n        let activeIndex = index  \r\n      \r\n        if(direction === 'up' && activeIndex === 0) return  \r\n        if(direction === 'down' && activeIndex === newSlides.length - 1 ) return\r\n        \r\n        if(direction === 'up') { \r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex - 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex - 1 ] = movedItem  \r\n        }\r\n        if(direction === 'down') {\r\n          const movedItem = newSlides[activeIndex]\r\n          const placeItem = newSlides[activeIndex + 1]\r\n    \r\n          newSlides[activeIndex] = placeItem\r\n          newSlides[activeIndex + 1 ] = movedItem  \r\n        }\r\n\r\n        setSlides(newSlides) \r\n        setIsDisableBtn(false)\r\n    }\r\n    const removeSlide = (index) => {\r\n        const newImageForDelete = imageForDelete.slice()\r\n        const newSlides = slides.slice()\r\n        const deletedImageName = newSlides[index].imageName\r\n\r\n        if(deletedImageName !== 'imageExample') newImageForDelete.push(deletedImageName)\r\n\r\n        newSlides.splice(index, 1)\r\n        setSlides(newSlides)\r\n        setImageForDelete(newImageForDelete)\r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n    const addSlide = ( url, name, title ) => {\r\n        const newSlides = slides.slice()\r\n        const slide = {\r\n            imageUrl: url, \r\n            imageName: name, \r\n            title: title \r\n        }\r\n        newSlides.push(slide)\r\n        setSlides(newSlides)\r\n \r\n        setIsDisableBtn(false)\r\n\r\n    }\r\n      \r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`Swiper margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`Swiper margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Swiper Settings' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\"\r\n                                    >\r\n                                        { !isDisableBtn && \"Close to save - \" } Settings Swiper\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />\r\n                                    </Box>\r\n                                    <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                        <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                            <PhoneIphoneIcon/>\r\n                                            <Box>  \r\n                                                <p> \r\n                                                    MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                    MarginBottom: <b>{ mobileMarginBottomComputed}</b> ;   \r\n                                                </p>        \r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Top'\r\n                                            variant='outlined'\r\n                                            value={marginTop}\r\n                                            setValue={setMarginTop}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        /> \r\n                                    </Box>\r\n                                    <Box mr={1} my={2} display='inline-block' >\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={false}\r\n                                            type='number'\r\n                                            size=\"small\" \r\n                                            label='Margin Bottom'\r\n                                            variant='outlined'\r\n                                            value={marginBottom}\r\n                                            setValue={setMarginBottom}\r\n                                            setIsDisableBtn={setIsDisableBtn}\r\n                                            direction='row'\r\n                                        />  \r\n                                    </Box>\r\n                                     \r\n                                    <Box mb={2} display='flex'> \r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Slides Per View Desktop\"\r\n                                                variant='outlined'\r\n                                                value={slidesPerView}\r\n                                                setValue={setSlidesPerView}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Slides Per View Tablet\"\r\n                                                variant='outlined'\r\n                                                value={slidesPerViewTablet}\r\n                                                setValue={setSlidesPerViewTablet}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Slides Per View Mobile\"\r\n                                                variant='outlined'\r\n                                                value={slidesPerViewMobile}\r\n                                                setValue={setSlidesPerViewMobile}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />   \r\n                                        </Box>\r\n                                        \r\n                                    </Box>\r\n                                    <Box mb={2} display='flex'>\r\n                                        <Box mr={1}>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Space Between\"\r\n                                                variant='outlined'\r\n                                                value={spaceBetween}\r\n                                                setValue={setSpaceBetween}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            /> \r\n                                        </Box>\r\n                                        <Box>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Speed (ms)\"\r\n                                                variant='outlined'\r\n                                                value={speed}\r\n                                                setValue={setSpeed}\r\n                                                setIsDisableBtn={setIsDisableBtn}\r\n                                                direction='row'\r\n                                            />  \r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    <Box my={2} display='flex'>\r\n                                        <Box mr={1}> \r\n                                            <Tooltip classes={{tooltip: classes.tooltipReload}} title=\"After change Loop, Slides Per View, Space Between settings you need to reloading page\" >\r\n                                                <IconButton>\r\n                                                    <InfoOutlined/>\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'    \r\n                                                style={{minWidth: 200}}\r\n                                            >\r\n                                                <InputLabel id=\"align-select-label\">Loop</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"align-select-label\"\r\n                                                    id=\"align-select\"\r\n                                                    value={loop}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setLoop((e.target.value)) }}\r\n                                                >\r\n                                                    <MenuItem value={true}>True</MenuItem>\r\n                                                    <MenuItem value={false}>False</MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                        <Box mr={1}>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'   \r\n                                                style={{minWidth: 200}} \r\n                                            >\r\n                                                <InputLabel id=\"align-select-label\">Free Mode</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"align-select-label\"\r\n                                                    id=\"align-select\"\r\n                                                    value={freeMode}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setFreeMode((e.target.value)) }}\r\n                                                >\r\n                                                    <MenuItem value={true}>True</MenuItem>\r\n                                                    <MenuItem value={false}>False</MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                        <Box>\r\n                                            <FormControl \r\n                                                variant='filled' \r\n                                                size='small'    \r\n                                            >\r\n                                                <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"maxWidth-label\"\r\n                                                    id=\"maxWidth-style\"\r\n                                                    value={maxWidthContainer}\r\n                                                    style={{minWidth: 180}}\r\n                                                    onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                                >\r\n                                                    <MenuItem value={false}>False</MenuItem>\r\n                                                    <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                    <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                    <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                    <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                    <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n\r\n                                    </Box>\r\n\r\n                                     \r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Arrows'}\r\n                                            colorSelect={colorSelect} \r\n                                            setColorSelect={setColorSelect}\r\n                                            colorCustom={colorCustom}\r\n                                            setColorCustom={setColorCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={true}\r\n                                        /> \r\n                                    </Box>\r\n\r\n                                    <Box my={2}> <Divider/> </Box>\r\n\r\n                                    <Typography variant=\"h6\">\r\n                                        Slides\r\n                                    </Typography>\r\n                                    { !slides.length && <Typography variant='caption'> No Slides there </Typography> }\r\n                                    {\r\n                                        slides.map((item, index) => (\r\n                                            <Box key={index} className={classes.dumbSlide}>\r\n                                                <Box className={classes.dumbSlideButtons}>\r\n                                                    <ButtonGroup\r\n                                                    orientation=\"horizontal\"\r\n                                                    color=\"primary\"\r\n                                                    aria-label=\"horizontal contained primary button group\"\r\n                                                    variant=\"contained\"\r\n                                                >   \r\n                                                    { \r\n                                                        index !== 0  && \r\n                                                        <Tooltip title='Get Left' placement='top'>\r\n                                                            <Button\r\n                                                                onClick={() => {  swipeSlide('up', index) }}\r\n                                                                size='medium'\r\n                                                                variant='contained' \r\n                                                            >\r\n                                                                <KeyboardArrowLeftIcon\r\n                                                                    style={{\r\n                                                                    color: '#fff'\r\n                                                                }}\r\n                                                                    fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                    {\r\n                                                        index !== slides.length - 1 && \r\n                                                        <Tooltip title='Get Right' placement='top'>\r\n                                                            <Button\r\n                                                                onClick={() => { swipeSlide('down', index) }}\r\n                                                                size='medium'\r\n                                                                variant='contained'\r\n                                                            >\r\n                                                                <KeyboardArrowRightIcon\r\n                                                                    style={{\r\n                                                                    color: '#fff'\r\n                                                                }}\r\n                                                                    fontSize='small'/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                    <Tooltip title='Remove slide' placement='top'>\r\n                                                        <Button\r\n                                                            onClick={() => { removeSlide(index) }}\r\n                                                            size='medium'\r\n                                                            color='secondary'\r\n                                                            variant='contained'\r\n                                                        >\r\n                                                            <DeleteOutline\r\n                                                                style={{\r\n                                                                color: '#fff'\r\n                                                            }}\r\n                                                                fontSize='small'/>\r\n                                                        </Button>\r\n                                                    </Tooltip>\r\n                                                    \r\n                                                </ButtonGroup>\r\n                                                </Box>\r\n                                                <img src={item.imageUrl} alt={item.imageName}/>\r\n                                                <Box className={classes.dumbSlideTitle}> \r\n                                                    <TextField\r\n                                                        fullWidth\r\n                                                        size='small'\r\n                                                        type='text' \r\n                                                        variant=\"outlined\"\r\n                                                        value={item.title}\r\n                                                        onChange={(e) => { \r\n                                                            handleSlideTitle(e.target.value, index)\r\n                                                        }}\r\n                                                        // onBlur={handleSave}\r\n                                                    />\r\n                                                    {/* <ChangeTitle\r\n                                                        item={item}\r\n                                                        index={index}\r\n                                                        reSave={handleSlideTitle}\r\n                                                    /> */}\r\n                                                    {/* <InputChange\r\n                                                        id={index} \r\n                                                        type='text'\r\n                                                        size=\"small\"  \r\n                                                        variant='outlined'\r\n                                                        value={item.title}\r\n                                                        setValue={handleSlideTitle}\r\n                                                        setIsDisableBtn={setIsDisableBtn}\r\n                                                        direction='column'\r\n                                                    /> */}\r\n                                                </Box>\r\n                                            </Box>\r\n                                        ))\r\n                                    }\r\n                                    <AddItem addSlide={addSlide} id={props.data.id} btnWithLabel={classes.btnWithLabel} />\r\n                                    \r\n   \r\n                                    <Box mt={5} />\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ? \r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                :\r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\n\r\nimport { makeStyles, Container, Grid, Box, Button, darken, fade } from '@material-ui/core'  \r\nimport ModalContext from '../../../context/modalContext/ModalContext'\r\nimport {getColorByPalette} from '../colorPicker/ColorCalculation'\r\n\r\nfunction DumbComponent(props) { \r\n\r\n    const { handleOpen } = React.useContext(ModalContext) \r\n\r\n    const heading = props.data.heading  \r\n    const paragraph = props.data.paragraph   \r\n     \r\n    const minHeight =  props.data.minHeight \r\n    const imageUrl =  props.data.imageUrl  \r\n \r\n    const isButton = props.data.isButton\r\n    const textButton = props.data.textButton\r\n    const targetButton = props.data.targetButton   \r\n    let colorButton = props.data.colorButton || '#f00'\r\n    let colorText = props.data.colorText || 'inherit'\r\n\r\n    const paddingVertical = props.data.paddingVertical  \r\n    const marginTop = props.data.marginTop  \r\n    const marginBottom = props.data.marginBottom  \r\n    const maxWidthContainer = props.data.maxWidthContainer \r\n \r\n    const useStyles = makeStyles((theme) => {   \r\n        colorButton = getColorByPalette(theme, colorButton) \r\n        colorText = getColorByPalette(theme, colorText) \r\n\r\n             \r\n        return ({ \r\n            bannerBackground: {\r\n                backgroundColor: fade(theme.palette.primary.main, 0.3), \r\n                backgroundImage: `url(${imageUrl})`, \r\n                backgroundPosition: 'center', \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundSize: 'cover',\r\n                marginTop: marginTop, \r\n                marginBottom: marginBottom, \r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30), \r\n                    marginBottom: marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30),\r\n                }\r\n            }, \r\n            bannerContent: {\r\n                display: 'flex',\r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                paddingTop: paddingVertical,\r\n                paddingBottom: paddingVertical,\r\n                minHeight: minHeight, \r\n                maxHeight: \"100vh\", \r\n                [theme.breakpoints.down('sm')]: { \r\n                    paddingTop: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20), \r\n                    paddingBottom: paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20),\r\n                }\r\n            },\r\n            heading: {  \r\n                marginBottom: theme.spacing(3), \r\n                textAlign: 'center',  \r\n                color: colorText\r\n            },\r\n            paragraph: {  \r\n                marginTop: -10, \r\n                marginBottom: 20,  \r\n                lineHeight: 1.5, \r\n                fontWeight: 400, \r\n                textAlign: 'center',  \r\n                fontSize: 15 , \r\n                color: colorText,\r\n                [theme.breakpoints.down('sm')]: { \r\n                    marginTop: 0, \r\n                    lineHeight: 1.1\r\n                }\r\n            },\r\n            button: {\r\n                textTransform: 'inherit',  \r\n                fontSize: 14,  \r\n                paddingLeft: \"2.5em\",\r\n                paddingRight: \"2.5em\",\r\n                paddingTop: \".8em\",\r\n                paddingBottom: \".8em\",\r\n                backgroundColor: colorButton, \r\n                color: theme.palette.getContrastText(colorButton), \r\n                transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut}`, \r\n                whiteSpace: 'nowrap', \r\n\r\n                  \r\n                '&:active' : {\r\n                    backgroundColor: darken(colorButton, 0.4) , \r\n                },\r\n                [theme.breakpoints.down('sm')]: {\r\n                    width: \"100%\", \r\n                    maxWidth: 400,\r\n                    '&:hover' : {\r\n                        backgroundColor: colorButton , \r\n                    },\r\n                },\r\n                [theme.breakpoints.up('sm')]: {\r\n                    '&:hover' : {\r\n                        backgroundColor: darken(colorButton, 0.2) , \r\n                    }\r\n                }, \r\n            },\r\n             \r\n        })\r\n    });\r\n\r\n    const classes  = useStyles();\r\n\r\n    const openModal = () => {\r\n        handleOpen(targetButton)\r\n    }\r\n\r\n    return (  \r\n        <div className={classes.bannerBackground}>\r\n            <Container maxWidth={maxWidthContainer}>\r\n                <Box className={classes.bannerContent} > \r\n                    <Grid item xs={12} sm={6} className=\"info heading\">\r\n                        { heading.length > 0 && <h3 className={classes.heading}>{heading}</h3> }\r\n                        { paragraph.length > 0 && <p className={classes.paragraph} > {paragraph} </p> } \r\n                        {\r\n                                isButton && \r\n                                <Box display={'flex'} justifyContent='center'>\r\n                                    <Button \r\n                                        className={classes.button}  \r\n                                        onClick={openModal}\r\n                                        variant=\"contained\"\r\n                                        size='large'\r\n                                    >\r\n                                        { textButton }\r\n                                    </Button>\r\n                                </Box> \r\n                            }\r\n                    </Grid> \r\n                </Box> \r\n            </Container>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default DumbComponent\r\n","import React from 'react' \r\nimport firebase from \"../../../firebase/firebase\"\r\n\r\nimport StylesChangers from '../../../styles/changers'  \r\nimport StyledInputs from '../../../styles/inputs'    \r\n\r\nimport Draggable from 'react-draggable';\r\nimport ColorSelecter from '../colorPicker/ColorSelecter'\r\nimport {isNoThemeColor} from '../colorPicker/ColorCalculation'\r\n\r\nimport {\r\n    Select, \r\n    FormControl,  \r\n    MenuItem, \r\n    InputLabel, \r\n    Button,\r\n    Box,\r\n    Tooltip,\r\n    FormControlLabel,\r\n    Switch,\r\n    Typography,\r\n    ButtonGroup,\r\n    makeStyles,\r\n    Modal,\r\n    DialogContent\r\n} from '@material-ui/core'\r\n\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExpandLessOutlinedIcon from '@material-ui/icons/ExpandLessOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport {DeleteOutline} from '@material-ui/icons';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\n\r\nimport DumbComponent from \"./DumbComponent\"\r\n\r\nimport InputChange from '../../functions/InputChange';\r\n\r\nimport ImageContext  from '../../../context/imageContext/ImageContext'\r\n\r\nfunction StyledComponent(props) { \r\n    \r\n    const { removeImage } = React.useContext(ImageContext)\r\n\r\n    const [isDisableBtn, setIsDisableBtn] = React.useState(true)\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const [heading, setHeading] = React.useState(props.data.heading)  \r\n    const [paragraph, setParagraph] = React.useState(props.data.paragraph)  \r\n    const [minHeight, setMinHeight] = React.useState(props.data.minHeight)  \r\n \r\n    const [isButton, setIsButton] = React.useState(props.data.isButton || false)\r\n    const [textButton,  setTextButton] = React.useState(props.data.textButton || '')\r\n    const [targetButton, setTargetButton] = React.useState(props.data.targetButton || '')\r\n    const [imageUrl, setImageUrl] = React.useState(props.data.imageUrl)\r\n    const [imageName, setImageName] = React.useState(props.data.imageName || '')\r\n\r\n    const [colorSelect,  setColorSelect] = React.useState(props.data.colorButton || '')\r\n    const [colorCustom, setColorCustom] = React.useState(props.data.colorButton || '')\r\n\r\n    const [colorTextSelect,  setColorTextSelect] = React.useState(props.data.colorText || 'inherit')\r\n    const [colorTextCustom, setColorTextCustom] = React.useState(props.data.colorText || 'inherit') \r\n\r\n    const [paddingVertical, setPaddingVertical] = React.useState(props.data.paddingVertical || 80)\r\n    const [marginTop, setMarginTop] = React.useState(props.data.marginTop || 0)\r\n    const [marginBottom, setMarginBottom] = React.useState(props.data.marginBottom || 0)\r\n    const [maxWidthContainer, setMaxWidthContainer] = React.useState(props.data.maxWidthContainer || 'lg') \r\n\r\n    const mobileMarginTopComputed = marginTop === 0 ? 0 : (marginTop > 50 ? marginTop*0.6 : 30)\r\n    const mobileMarginBottomComputed = marginBottom === 0 ? 0 : (marginBottom > 50 ? marginBottom*0.6 : 30)\r\n    const paddingVerticalComputed = paddingVertical === 0 ? 0 : (paddingVertical > 50 ? paddingVertical*0.6 : 20)\r\n \r\n    const handleChange = () => {\r\n        setIsButton(!isButton)\r\n        setIsDisableBtn(false)\r\n    } \r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        if(!isDisableBtn) handleSave()\r\n        setOpen(false);\r\n    }; \r\n    \r\n    const colorButtonTheme = isNoThemeColor(props.data.colorButton)\r\n    const colorTextTheme = isNoThemeColor(props.data.colorText)\r\n\r\n    React.useEffect(() => {\r\n        if(colorButtonTheme) {  \r\n            setColorSelect('custom')\r\n        }\r\n        if(colorTextTheme) {  \r\n            setColorTextSelect('custom')\r\n        }\r\n    }, [props.data.colorButton, props.data.colorText])  \r\n   \r\n\r\n    const useStyles = makeStyles((theme) => {\r\n        const styleRef = StyledInputs()\r\n        const commonStyle = styleRef(theme)\r\n        const classesRef = StylesChangers()\r\n        const commonClasses = classesRef(theme)\r\n\r\n        const { menu, menuTitle, btnSetting, btnDrawerStyle, btnDrawerItem, containerWrapper, btnWithLabel , \r\n             responseValues ,responseMobile , mobileTooltip} = commonClasses \r\n        \r\n        const { mtView, mbView, ptView, pbView  } = commonStyle \r\n        return ({\r\n            btnDrawerStyle: btnDrawerStyle,\r\n            btnDrawerItem: btnDrawerItem,\r\n            containerWrapper: {\r\n                ...containerWrapper, ...{\r\n               '&:hover' : {\r\n                   outlineColor: `${theme.palette.error.main}`,\r\n                   zIndex: 25,\r\n                   '& $mtView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $mbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $ptView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $pbView' : { \r\n                       opacity: 1\r\n                   },\r\n                   '& $btnDrawerStyle' : { \r\n                       opacity: 1\r\n                   }\r\n               }}    \r\n           },\r\n            menu: {...menu, ...{\r\n                left: 'calc( 50% - 350px )',\r\n                maxWidth: 700,\r\n                width: '100%',\r\n            }}, \r\n            menuTitle: menuTitle,\r\n            btnSetting: btnSetting,  \r\n            // btnSave: btnSave,\r\n            btnWithLabel: btnWithLabel,\r\n\r\n            responseValues: responseValues,  \r\n            responseMobile: responseMobile,\r\n            mobileTooltip: mobileTooltip,\r\n            mtView: { ...mtView, ...{\r\n                    top: `-${marginTop}px`,  \r\n                    height: `${marginTop}px`,\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        top: `-${mobileMarginTopComputed}px`,  \r\n                        height: `${mobileMarginTopComputed}px`,\r\n                    }\r\n                } \r\n            },\r\n            mbView: { ...mbView, ...{\r\n                    bottom: `-${marginBottom}px`,\r\n                    height: `${marginBottom}px`, \r\n                    [theme.breakpoints.down('sm')]: {\r\n                        bottom: `-${mobileMarginBottomComputed}px`,\r\n                        height: `${mobileMarginBottomComputed}px`,\r\n                    }\r\n                } \r\n            }, \r\n            ptView: { ...ptView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }, \r\n            pbView: { ...pbView, ...{\r\n                height: `${paddingVertical}px`} ,\r\n                [theme.breakpoints.down('sm')]: {   \r\n                    height: `${paddingVerticalComputed}px`,\r\n                }\r\n            }\r\n                  \r\n        })\r\n    })\r\n    \r\n    const classes = useStyles();\r\n\r\n    const handleImageUpload = async (e) => {\r\n  \r\n        removeImage(imageName)\r\n\r\n        const imageData = e.target.files[0]\r\n        const generateImageName = `${imageData.name}-${props.data.id}`\r\n\r\n        const storageRef = await firebase.storage.ref(generateImageName).put(imageData)\r\n        const downloadURL = await storageRef.ref.getDownloadURL();\r\n \r\n        setImageName(generateImageName)\r\n        setImageUrl(downloadURL)  \r\n         \r\n        setIsDisableBtn(false)\r\n    }\r\n    const handleSave = () => {\r\n        const newData = Object.assign({}, props.data)\r\n        newData.heading = heading   \r\n        newData.paragraph = paragraph   \r\n        newData.minHeight = minHeight   \r\n        newData.isButton = isButton   \r\n        newData.textButton = textButton   \r\n        newData.targetButton = targetButton     \r\n        newData.imageUrl = imageUrl   \r\n        newData.imageName = imageName\r\n        newData.paddingVertical = paddingVertical\r\n        newData.marginTop = marginTop\r\n        newData.marginBottom = marginBottom\r\n        newData.maxWidthContainer = maxWidthContainer\r\n        \r\n        if (colorSelect === 'custom') {\r\n            newData.colorButton = colorCustom\r\n        } else {\r\n            newData.colorButton = colorSelect\r\n        }\r\n\r\n        if (colorTextSelect === 'custom') {\r\n            newData.colorText = colorTextCustom\r\n        } else {\r\n            newData.colorText = colorTextSelect\r\n        }\r\n        \r\n        props.reSaveItem(props.data.id, newData)\r\n        // handleClose()\r\n        setIsDisableBtn(true)\r\n    }\r\n    const removeItem = () => {\r\n        const conf = window.confirm('Delete? ')\r\n        if (conf) { \r\n            removeImage(imageName)\r\n            props.removeContainer(props.data.id)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={classes.containerWrapper}>\r\n            <Tooltip  title={`banner margin top`}  placement={'top'}>\r\n                <div className={classes.mtView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={`banner margin bottom`}  placement={'top'}>\r\n                <div className={classes.mbView}></div>\r\n            </Tooltip>\r\n            <Tooltip  title={` banner padding top`}  placement={'top'}>\r\n                <div className={classes.ptView}></div>\r\n            </Tooltip> \r\n            <Tooltip  title={` banner padding bottom`}  placement={'top'}>\r\n                <div className={classes.pbView}></div>\r\n            </Tooltip>\r\n            <Box style={{\r\n                position: 'relative'\r\n            }}>\r\n                <Box className={classes.btnDrawerStyle}>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Box mb={1}>\r\n                            <Tooltip title='Banner Settings ' placement='right'>\r\n                                <Button\r\n                                    onClick={handleOpen}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <SettingsIcon\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\"\r\n                        >   \r\n                            { \r\n                                !props.isFirst  && \r\n                                <Tooltip title='Get Up' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('up', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandLessOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            {\r\n                                !props.isLast && \r\n                                <Tooltip title='Get Down' placement='right'>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                        props.swapContainer('down', props.data.id)\r\n                                    }}\r\n                                        size='medium'\r\n                                        variant='contained'\r\n                                        className={classes.btnDrawerItem}>\r\n                                        <ExpandMoreOutlinedIcon\r\n                                            style={{\r\n                                            color: '#fff'\r\n                                        }}\r\n                                            fontSize='small'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            }\r\n                            \r\n                        </ButtonGroup>\r\n\r\n                        <Box mt={1}>\r\n                            <Tooltip title='Remove' placement='right'>\r\n                                <Button\r\n                                    onClick={removeItem}\r\n                                    size='medium'\r\n                                    variant='contained'\r\n                                    className={classes.btnDrawerItem}>\r\n                                    <DeleteOutline\r\n                                        style={{\r\n                                        color: '#fff'\r\n                                    }}\r\n                                        fontSize='small'/>\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n\r\n                    </Box>\r\n                    <Modal\r\n                        open={open}\r\n                        aria-labelledby=\"draggable-dialog-title\"\r\n                        onClose={handleClose}>\r\n                        <DialogContent>\r\n                            <Draggable\r\n                                handle=\"#draggable-dialog-title\"\r\n                                cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                                <div className={classes.menu}>\r\n                                    <Typography\r\n                                        component='p'\r\n                                        className={classes.menuTitle}\r\n                                        id=\"draggable-dialog-title\">\r\n                                         { !isDisableBtn && \"Close to save - \" }  Settings Banner\r\n                                        <OpenWithIcon/>\r\n                                    </Typography>\r\n                                    <Box>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Styles\r\n                                        </Typography>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Top'\r\n                                                variant='outlined'\r\n                                                value={marginTop}\r\n                                                setValue={setMarginTop}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />  \r\n                                        </Box>\r\n                                        <Box mr={1} mb={2} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label='Margin Bottom'\r\n                                                variant='outlined'\r\n                                                value={marginBottom}\r\n                                                setValue={setMarginBottom}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block'>\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Min Height for block\"\r\n                                                variant='outlined'\r\n                                                value={minHeight}\r\n                                                setValue={setMinHeight}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />   \r\n                                        </Box>\r\n                                        <Box mr={1} display='inline-block' >\r\n                                            <InputChange\r\n                                                id={null}\r\n                                                fullWidth={false}\r\n                                                type='number'\r\n                                                size=\"small\" \r\n                                                label=\"Padding Top/Bottom\"\r\n                                                variant='outlined'\r\n                                                value={paddingVertical}\r\n                                                setValue={setPaddingVertical}\r\n                                                setIsDisableBtn={setIsDisableBtn} \r\n                                            />    \r\n                                        </Box>\r\n                                        <FormControl \r\n                                            variant='filled' \r\n                                            size='small'    \r\n                                        >\r\n                                            <InputLabel id=\"maxWidth-style-label\">Max-Width for Container</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"maxWidth-label\"\r\n                                                id=\"maxWidth-style\"\r\n                                                value={maxWidthContainer}\r\n                                                style={{minWidth: 180}}\r\n                                                onChange={(e) => {setIsDisableBtn(false); setMaxWidthContainer(e.target.value) }}\r\n                                            >\r\n                                                <MenuItem value={false}>False</MenuItem>\r\n                                                <MenuItem value={'xl'}>xl - 1920 </MenuItem> \r\n                                                <MenuItem value={'lg'}>lg - 1280 </MenuItem> \r\n                                                <MenuItem value={'md'}>md - 960 </MenuItem> \r\n                                                <MenuItem value={'sm'}>sm - 600 </MenuItem> \r\n                                                <MenuItem value={'xs'}>xs - 0 </MenuItem> \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <Tooltip classes={{tooltip: classes.mobileTooltip}} title='Calculated styles for Mobile (>600px)' placement={'top'}>\r\n                                            <Box className={`${classes.responseValues} ${classes.responseMobile}`}>\r\n                                                <PhoneIphoneIcon/>\r\n                                                <Box>  \r\n                                                    <p> \r\n                                                        MarginTop: <b>{mobileMarginTopComputed}</b>; \r\n                                                        MarginBottom: <b>{ mobileMarginBottomComputed}</b> ; \r\n                                                        Padding Top/Bottom: <b>{paddingVerticalComputed }</b> ; MinHeight: <b>{minHeight}</b>\r\n                                                    </p>        \r\n                                                </Box>\r\n                                            </Box>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <Typography variant='h6' gutterBottom>\r\n                                            Texts\r\n                                        </Typography>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label='Heading'\r\n                                            variant='outlined'\r\n                                            value={heading}\r\n                                            setValue={setHeading}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />   \r\n                                    </Box>\r\n                                    <Box mt={2}>\r\n                                        <InputChange\r\n                                            id={null}\r\n                                            fullWidth={true}\r\n                                            multiline={true}\r\n                                            type='text'\r\n                                            size=\"medium\" \r\n                                            label=\"Paragraph\" \r\n                                            variant='outlined'\r\n                                            value={paragraph}\r\n                                            setValue={setParagraph}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                        />    \r\n                                    </Box>\r\n                                    <Box mt={2} display=\"flex\" >\r\n                                        <ColorSelecter\r\n                                            label={'Color for Text'}\r\n                                            colorSelect={colorTextSelect} \r\n                                            setColorSelect={setColorTextSelect}\r\n                                            colorCustom={colorTextCustom}\r\n                                            setColorCustom={setColorTextCustom}\r\n                                            setIsDisableBtn={setIsDisableBtn} \r\n                                            position = {'top'}\r\n                                            noInherit={false}\r\n                                        /> \r\n                                    </Box>\r\n                                   \r\n                                    <Box display='flex' mt={3} mb={3}>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                < Switch checked = { isButton }\r\n                                                        onChange = { handleChange }\r\n                                                            name = \"checkedB\" \r\n                                                            color = \"primary\" />\r\n                                            }\r\n                                            label=\"Add Modal Button\"/> \r\n                                            {\r\n                                                isButton && \r\n                                                <Box display='flex' flexDirection='column' ml={2}>\r\n                                                    <Box mb={1}>\r\n                                                        <Box display='flex'>\r\n                                                            <Box mr={1}>\r\n                                                                <InputChange\r\n                                                                    id={null} \r\n                                                                    type='text'\r\n                                                                    size=\"small\" \r\n                                                                    label=\"Text for Button\"\r\n                                                                    variant='outlined'\r\n                                                                    value={textButton}\r\n                                                                    setValue={setTextButton}\r\n                                                                    setIsDisableBtn={setIsDisableBtn} \r\n                                                                />    \r\n                                                            </Box>\r\n                                                            <InputChange\r\n                                                                id={null} \r\n                                                                type='text'\r\n                                                                size=\"small\" \r\n                                                                label=\"Target for Button\"\r\n                                                                variant='outlined'\r\n                                                                value={targetButton}\r\n                                                                setValue={setTargetButton}\r\n                                                                setIsDisableBtn={setIsDisableBtn} \r\n                                                            /> \r\n                                                            \r\n                                                        </Box>\r\n                                                    </Box> \r\n                                                    <Box mt={2} display=\"flex\" >\r\n                                                        <ColorSelecter\r\n                                                            label={'Color for Button'}\r\n                                                            colorSelect={colorSelect} \r\n                                                            setColorSelect={setColorSelect}\r\n                                                            colorCustom={colorCustom}\r\n                                                            setColorCustom={setColorCustom}\r\n                                                            setIsDisableBtn={setIsDisableBtn} \r\n                                                            position = {'top'}\r\n                                                            noInherit={true}\r\n                                                        /> \r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                    </Box> \r\n                                    <Box mt={3} display=\"flex\" alignItems='flex-start'>\r\n                                        <Button color='primary' variant='contained' className={classes.btnWithLabel}  >\r\n                                            <label htmlFor='image-input-label'>\r\n                                                Set image</label>\r\n                                            <input\r\n                                                id=\"image-input-label\"\r\n                                                type=\"file\"\r\n                                                onChange={(e) => {\r\n                                                handleImageUpload(e)\r\n                                            }}\r\n                                                style={{\r\n                                                display: \"none\"\r\n                                            }}/>\r\n                                        </Button>\r\n                                        <Box ml={1} maxWidth={300}>\r\n                                            { imageUrl && <img src={imageUrl} alt='main' width={'100%'}/>}\r\n                                        </Box>\r\n                                    </Box>\r\n \r\n                                   \r\n                                    <Box mt={5} />\r\n\r\n                                    {/* <Box className={classes.btnSave}>\r\n                                        <Button\r\n                                            disabled={isDisableBtn}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size={'medium'}\r\n                                            onClick={handleSave}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Box> */}\r\n                                </div>\r\n                            </Draggable>\r\n                        </DialogContent>\r\n                    </Modal>\r\n                </Box>\r\n            </Box>\r\n            <DumbComponent data={props.data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledComponent\r\n","import React from 'react' \r\n\r\nimport StyledComponent from \"./StyledComponent\"\r\nimport DumbComponent from \"./DumbComponent\"\r\n \r\nimport ModeContext from '../../../context/modeContext/ModeContext'\r\n \r\nfunction ElementCreator(props) {\r\n\r\n    const {modeDev} = React.useContext(ModeContext)  \r\n   \r\n    return (    \r\n        <React.Fragment>  \r\n            {\r\n                modeDev ?\r\n                <StyledComponent \r\n                    data={props.data}\r\n                    swapContainer={props.swapContainer}\r\n                    removeContainer={props.removeContainer}\r\n                    reSaveItem={props.reSaveItem}\r\n                    isFirst={props.isFirst}\r\n                    isLast={props.isLast}\r\n                />\r\n                : \r\n                <DumbComponent \r\n                    data={props.data}\r\n                />\r\n            }\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default ElementCreator\r\n","import React from 'react'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport {  Box, Container  } from \"@material-ui/core\"; \r\n\r\nfunction SkeletonPage() {\r\n    return (\r\n        <Box mt={5} mb={3} clone={true} >\r\n            <Container>\r\n              <Box >\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={60}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box my={2} display='flex' alignItems='center'>\r\n                <Box mr={1}>\r\n                  <Skeleton\r\n                    width={30}\r\n                    height={30}\r\n                    variant='circle' \r\n                    animation={false}\r\n                  />\r\n                </Box>\r\n                <Skeleton \r\n                  variant='rect'  \r\n                  height={30}\r\n                  width='100%'\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Box mb={2}>\r\n                <Skeleton \r\n                  variant='rect'\r\n                  height={150}\r\n                  animation={false}\r\n                />\r\n              </Box>\r\n              <Skeleton \r\n                variant='rect'\r\n                height={80}\r\n                animation={false}\r\n              />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SkeletonPage\r\n","import React from 'react'; \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {\r\n    Typography,\r\n    Breadcrumbs, \r\n    Container,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'; \r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport CategoryContext from '../../context/headerContext/CategoryContext'\r\n\r\n\r\nconst SimpleBreadcrumbs = (props) =>  {\r\n    \r\n    const { settings } = React.useContext(CategoryContext)   \r\n     \r\n    const useStyles = makeStyles( theme => ({\r\n        breadcrumbsContainer: {\r\n            margin: '20px 0', \r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingLeft: theme.spacing(3),\r\n            paddingRight: theme.spacing(3),\r\n            backgroundColor: theme.palette.background.paper,\r\n            [`@media (max-width: ${theme.breakpoints.values.md}px)`]: {\r\n                paddingTop: 10,  \r\n                paddingBottom: 10,  \r\n                paddingLeft: theme.spacing(2),\r\n                paddingRight: theme.spacing(2),\r\n            }, \r\n            [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                margin: '10px 0', \r\n            }, \r\n        },\r\n        breadcrumbLink: {\r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            color: theme.palette.text.primary,\r\n            textDecoration: 'none', \r\n            transition: `${theme.transitions.duration.shortest}ms ${theme.transitions.easing.easeInOut} `,\r\n            \"&:hover\": { \r\n                color: theme.palette.text.secondary\r\n            }\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles();\r\n      \r\n    return (  \r\n        <React.Fragment>\r\n            {\r\n                props.breadcrumbs &&\r\n                <Container\r\n                    disableGutters={settings.disableGutters}\r\n                    fixed={settings.fixed} \r\n                    maxWidth={settings.maxWidth} \r\n                >\r\n                    <Paper className={classes.breadcrumbsContainer} >\r\n                    \r\n                        <Breadcrumbs  \r\n                            separator={<NavigateNextIcon fontSize=\"small\" />} \r\n                            aria-label=\"breadcrumb\"\r\n                        >\r\n                            \r\n                            <Link className={classes.breadcrumbLink} to=\"/\"  >\r\n                                <HomeIcon fontSize=\"small\" />\r\n                            </Link>\r\n                            {    \r\n                                props.breadcrumbs.map((crumb, index) => {\r\n                                    if(props.breadcrumbs.length - 1 !== props.breadcrumbs.indexOf(crumb))\r\n                                    return(\r\n                                        <Link key={index} className={classes.breadcrumbLink} to={`/${crumb.slug}`} >\r\n                                            {crumb.title}\r\n                                        </Link>\r\n                                    )\r\n                                    else return (\r\n                                    <Typography key={index} >\r\n                                        {crumb.title}\r\n                                    </Typography> \r\n                                    )  \r\n                                })\r\n                            }\r\n                            \r\n                        </Breadcrumbs>\r\n                    \r\n                    </Paper>\r\n                </Container>  \r\n            } \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SimpleBreadcrumbs","import React from 'react' \r\nimport StylesChangers from '../../styles/changers'   \r\nimport Draggable from 'react-draggable';  \r\nimport { useLocation } from 'react-router-dom';\r\nimport uuid from 'react-uuid' \r\n\r\nimport { Typography, Button, Box, Tooltip,  Modal, DialogContent, Divider } from \"@material-ui/core\"; \r\n \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\n\r\nimport ContainerElement from '../library/container/ElementCreator'  \r\nimport MainBannerElement from '../library/mainBanner/ElementCreator'  \r\nimport AccordionElement from '../library/accordion/ElementCreator'  \r\nimport ContactMapElement from '../library/contactMap/ElementCreator'  \r\nimport AboutElement from '../library/about/ElementCreator'  \r\nimport ActionLineElement from '../library/actionLine/ElementCreator'  \r\nimport TableElement from '../library/table/ElementCreator'  \r\nimport FormLineElement from '../library/formLine/ElementCreator'  \r\nimport SwiperElement from '../library/swiper/ElementCreator'  \r\nimport BannerElement from '../library/banner/ElementCreator'  \r\n\r\nimport SkeletonPage from '../placeholders/SkeletonPage'\r\nimport Breadcrumbs from '../placeholders/Breadcrumbs'\r\n \r\nimport firebase from '../../firebase/firebase'\r\n  \r\nimport ModeContext from '../../context/modeContext/ModeContext'\r\nimport LoadingContext from '../../context/loadingContext/LoadingContext'\r\nimport LibraryContext from '../../context/libraryContext/LibraryContext' \r\n\r\nfunction SinglePage(props) {\r\n\r\n  const location = useLocation() \r\n\r\n  const pageSlug = props.slugForUpdate\r\n\r\n  const { modeDev } = React.useContext(ModeContext)\r\n  const { setIsLoading } = React.useContext(LoadingContext)\r\n  const { layouts } = React.useContext(LibraryContext)\r\n\r\n  const pageLayout = layouts.page\r\n  const ContainerLayout = layouts.container \r\n  const MainBannerLayout = layouts.mainBanner \r\n  const AccordionLayout = layouts.accordion \r\n  const СontactMapLayout = layouts.contactMap \r\n  const AboutLayout = layouts.about \r\n  const ActionLineLayout = layouts.actionLine \r\n  const TableLayout = layouts.table \r\n  const FormLineLayout = layouts.formLine \r\n  const SwiperLayout = layouts.swiper \r\n  const BannerLayout = layouts.banner \r\n\r\n  const [data, setData] = React.useState({})\r\n  const [items, setItems] = React.useState([]) \r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  \r\n  const handleOpen = () => {  \r\n    setOpen(true);\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const useStyles = makeStyles((theme) => {\r\n    const classesRef = StylesChangers()\r\n    const commonClasses = classesRef(theme)\r\n\r\n    const { menu, menuTitle } = commonClasses \r\n\r\n    return ({ \r\n      btnContainer: {\r\n        position: 'relative',\r\n        '&:hover $btnSetting' : {\r\n          opacity: 1\r\n        }\r\n      },\r\n      btnSetting: { \r\n          position: 'absolute', \r\n          zIndex: 1031, \r\n          top: 0, \r\n          left: 70,\r\n          backgroundColor: theme.palette.error.dark,   \r\n          minWidth: 30, \r\n          maxWidth: 40, \r\n          minHeight: 38,  \r\n          opacity: 0, \r\n          transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms `, \r\n          '&:hover': { \r\n            backgroundColor: theme.palette.secondary.dark,   \r\n          }, \r\n          '&>span': {\r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              fontSize: 10\r\n          }\r\n      }, \r\n      menu: {...menu, ...{ \r\n        width: 600, \r\n        left: \"calc(50% - 300px)\",\r\n      }},     \r\n      menuTitle: menuTitle,\r\n      tooltip: {\r\n        fontSize: 14\r\n      }, \r\n      boxMenuItem : { \r\n        display: 'inline-block',\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n      }\r\n\r\n  \r\n    })\r\n  })\r\n  \r\n  const classes = useStyles();\r\n\r\n  React.useEffect( () => { \r\n    setIsLoading(true)\r\n    fetchData()\r\n    document.title = props.metaTitle\r\n    // eslint-disable-next-line\r\n  }, [location])\r\n  \r\n  const fetchData = async () => {  \r\n      \r\n    const pageRef = firebase.db.collection(\"site1\").doc(pageSlug)\r\n    const doc = await pageRef.get();\r\n    \r\n    if (!doc.exists) {\r\n      console.log('No such page!'); \r\n\r\n      let newPage = Object.assign({}, pageLayout) \r\n      newPage.id = uuid()\r\n      newPage.slug = pageSlug\r\n      newPage.items = []\r\n\r\n      await pageRef.set(newPage)\r\n\r\n      setData(newPage)  \r\n      setItems(newPage.items || [])  \r\n      setIsLoading(false)\r\n\r\n    } else { \r\n      setData(doc.data())  \r\n      setItems(doc.data().items)  \r\n        \r\n      setIsLoading(false)\r\n    }\r\n  \r\n  }  \r\n  \r\n  const reSaveContainer = async (id, childrenContainer) => {  \r\n  \r\n    let newData = Object.assign({}, data)\r\n    // newData.items = items\r\n\r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n          newData.items[elem].children = childrenContainer \r\n      }\r\n      return 0 \r\n    })\r\n   \r\n    setData(newData)\r\n    setItems(newData.items) \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items, \r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }).then( () => {\r\n        if(childrenContainer.length === 0) {\r\n          removeContainer(id)\r\n        }\r\n    })\r\n  } \r\n\r\n  const reSaveContainerStyleSettings = async (id, classes, settings) => {  \r\n    let newData = Object.assign({}, data)\r\n      \r\n    Object.keys(newData.items).map( (elem) => { \r\n      if(newData.items[elem].id === id) {\r\n        newData.items[elem].classes = classes \r\n        newData.items[elem].disableGutters = settings.disableGutters \r\n        newData.items[elem].fixed = settings.fixed \r\n        newData.items[elem].maxWidth = settings.maxWidth \r\n        newData.items[elem].innerContainer = settings.innerContainer \r\n        newData.items[elem].isPaper = settings.isPaper \r\n      }\r\n      return 0 \r\n    }) \r\n\r\n    setData(newData)\r\n    setItems(newData.items)  \r\n    setIsLoading(true)\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newData.items\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  } \r\n  \r\n  const addContainer = async (type) => {   \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n\r\n    let newCont\r\n    if(type === 'container')  newCont = JSON.parse(JSON.stringify(ContainerLayout))\r\n    if(type === 'mainBanner') newCont = JSON.parse(JSON.stringify(MainBannerLayout))\r\n    if(type === 'accordion')  newCont = JSON.parse(JSON.stringify(AccordionLayout))\r\n    if(type === 'contactMap') newCont = JSON.parse(JSON.stringify(СontactMapLayout))\r\n    if(type === 'about')      newCont = JSON.parse(JSON.stringify(AboutLayout))\r\n    if(type === 'actionLine') newCont = JSON.parse(JSON.stringify(ActionLineLayout))\r\n    if(type === 'table')      newCont = JSON.parse(JSON.stringify(TableLayout))\r\n    if(type === 'formLine')   newCont = JSON.parse(JSON.stringify(FormLineLayout))\r\n    if(type === 'swiper')     newCont = JSON.parse(JSON.stringify(SwiperLayout))\r\n    if(type === 'banner')     newCont = JSON.parse(JSON.stringify(BannerLayout))\r\n  \r\n\r\n    newCont.id = uuid()\r\n  \r\n    newItems.push(newCont) \r\n  \r\n    newData.items = newItems\r\n        \r\n    setData(newData)\r\n    setItems(newItems) \r\n    setIsLoading(true)\r\n    handleClose()\r\n\r\n    window.scrollTo({\r\n      top: window.innerHeight \r\n    })\r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const removeContainer = async (id) => {  \r\n    let newData = Object.assign({}, data)\r\n    const filtered = items.filter((item) => (item.id !== id))  \r\n\r\n    newData.items = filtered\r\n        \r\n    setData(newData)\r\n    setItems(filtered)  \r\n    setIsLoading(true)\r\n        \r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: filtered\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }); \r\n    \r\n  }\r\n\r\n  const swapContainer = async (direction, id) => { \r\n    let newData = Object.assign({}, data)\r\n    let newItems = items.slice()\r\n    let activeIndex   \r\n  \r\n    newItems.map( (item) => { \r\n      if(item.id === id) {\r\n        activeIndex = newItems.indexOf(item) \r\n      }\r\n      return 0 \r\n    }) \r\n  \r\n    if(direction === 'up' && activeIndex === 0) return  \r\n    if(direction === 'down' && activeIndex === newItems.length - 1 ) return\r\n    \r\n    if(direction === 'up') { \r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex - 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex - 1 ] = movedItem  \r\n    }\r\n    if(direction === 'down') {\r\n      const movedItem = newItems[activeIndex]\r\n      const placeItem = newItems[activeIndex + 1]\r\n\r\n      newItems[activeIndex] = placeItem\r\n      newItems[activeIndex + 1 ] = movedItem  \r\n    }\r\n\r\n    newData.items = newItems\r\n        \r\n    setItems(newItems)\r\n    setData(newData) \r\n    setIsLoading(true)\r\n  \r\n\r\n    await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n      items: newItems\r\n    }).then(() => { \r\n      setIsLoading(false)\r\n    }) \r\n  }\r\n\r\n  const reSaveItem = async (id, data) => { \r\n      let newData = Object.assign({}, data)\r\n      newData.items = items\r\n  \r\n      Object.keys(newData.items).map( (elem) => { \r\n        if(newData.items[elem].id === id) {\r\n            newData.items[elem] = data \r\n        }\r\n        return 0 \r\n      })\r\n    \r\n      setData(newData)\r\n      setItems(newData.items) \r\n      setIsLoading(true)\r\n       \r\n      await firebase.db.collection(\"site1\").doc(pageSlug).update({\r\n        items: newData.items, \r\n      }).then(() => { \r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function renderContainers () {   \r\n    if(items.length > 0) {\r\n      return Object.keys(items).map( (key) => {  \r\n        // eslint-disable-next-line\r\n        let orderFirst = key == 0 ? true : false\r\n        // eslint-disable-next-line\r\n        let orderLast = key == items.length - 1 ? true : false  \r\n        \r\n        if(items[key].type === 'container') {\r\n          return ( \r\n              <ContainerElement \r\n                key={items[key].id} \r\n                data={items[key]} \r\n                reSaveContainer={reSaveContainer}\r\n                reSaveContainerStyleSettings={reSaveContainerStyleSettings} \r\n                removeContainer={removeContainer}\r\n                swapContainer={swapContainer}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              /> \r\n          ) \r\n        }\r\n        if(items[key].type === 'mainBanner') { \r\n          return(\r\n              <MainBannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'accordion') { \r\n          return(\r\n              <AccordionElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'contactMap') { \r\n          return(\r\n              <ContactMapElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'about') { \r\n          return(\r\n              <AboutElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'actionLine') { \r\n          return(\r\n              <ActionLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'table') { \r\n          return(\r\n              <TableElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'formLine') { \r\n          return(\r\n              <FormLineElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'swiper') { \r\n          return(\r\n              <SwiperElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        if(items[key].type === 'banner') { \r\n          return(\r\n              <BannerElement\r\n                key={items[key].id} \r\n                data={items[key]} \r\n                swapContainer={swapContainer}\r\n                removeContainer={removeContainer}\r\n                reSaveItem={reSaveItem}\r\n                isFirst={orderFirst}\r\n                isLast={orderLast}\r\n              />\r\n          )\r\n        } \r\n        return false\r\n      })\r\n    }\r\n    else {\r\n      return ( \r\n        <SkeletonPage/> \r\n      ) \r\n    }\r\n    \r\n  } \r\n\r\n  return (\r\n    <Box className={classes.btnContainer}> \r\n\r\n        <Breadcrumbs \r\n          breadcrumbs={props.breadcrumbs}\r\n          history={props.history}\r\n        />\r\n\r\n        { \r\n          modeDev &&  \r\n          <React.Fragment>\r\n              \r\n            <Tooltip title='Page Settings' placement='bottom'>\r\n                <Button  \r\n                    onClick={handleOpen} \r\n                    size='medium'\r\n                    variant='contained'\r\n                    color={'primary'}\r\n                    className={classes.btnSetting}\r\n                >   \r\n                    <span>Page</span>\r\n                    <SettingsIcon style={{ color: '#fff' }} fontSize='small'/>\r\n                </Button>\r\n            </Tooltip>  \r\n            <Modal \r\n              open={open}  \r\n              aria-labelledby=\"draggable-dialog-title\"\r\n              onClose={handleClose} \r\n            > \r\n                <DialogContent> \r\n                    <Draggable  handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'} >\r\n                        <div className={classes.menu}>\r\n                            <Typography \r\n                                component='p' \r\n                                className={classes.menuTitle}\r\n                                id=\"draggable-dialog-title\"\r\n                            >\r\n                                Add Block for Page <OpenWithIcon/>\r\n                            </Typography> \r\n                            \r\n                            \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Container for heading, paragraph, image-paragraph, list' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('container') }}>\r\n                                    Container\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box> \r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With form\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block to start the page. Contain: text, form, image(desktop only)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('mainBanner') }}>\r\n                                    Main Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                           \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Contain: location and phone view, contact form, map. Has two different displays, with and without a map' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('contactMap') }}>\r\n                                    Contacts with Map\r\n                                </Button>  \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Small contact form with optional heading and paragrapher' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('formLine') }}>\r\n                                    Add Form Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Accordion with heading on top' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('accordion') }}>\r\n                                    Accordion\r\n                                </Button> \r\n                              </Tooltip>  \r\n                            </Box>\r\n                            \r\n                            <Box className={classes.boxMenuItem}> \r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Line for small text paragrapher with ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('actionLine') }}>\r\n                                    Colored Action Line \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Table with heading on top. Has ability to add \"Show More Botton \" on bottom' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('table') }}>\r\n                                    Add Table \r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            \r\n                            <Divider style={{margin: '15px 0'}} />\r\n\r\n                            <Typography variant='caption' component=\"h6\" gutterBottom>\r\n                              With image\r\n                            </Typography>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Block with heading, paragraph and image. Image on desktop - 50% vieport width. Image on mobile - 50% vieport width . Has the ability to add a button modal' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('about') }}>\r\n                                    About\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Simple slider with square images' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('swiper') }}>\r\n                                    Swiper\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Tooltip classes={{tooltip: classes.tooltip}} title='Banner with background image, heading, paragraph and modal button (optional)' placement='top'>\r\n                                <Button color={'primary'} variant={'contained'} onClick={() => {addContainer('banner') }}>\r\n                                    Banner\r\n                                </Button> \r\n                              </Tooltip>\r\n                            </Box>\r\n\r\n                            <Divider style={{margin: '15px 0'}} />\r\n \r\n                            <Box className={classes.boxMenuItem}>\r\n                              <Button color={'primary'} variant={'outlined'} disabled={true} >\r\n                                  More settings\r\n                              </Button> \r\n                            </Box> \r\n                        </div>\r\n                    </Draggable>\r\n                </DialogContent> \r\n            </Modal>  \r\n          </React.Fragment>\r\n        }\r\n  \r\n        { \r\n          renderContainers()  \r\n        } \r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default SinglePage\r\n","import React from 'react' \r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport ScrollToTop from '../components/functions/ScrollToTop'  \r\n    \r\nimport LoadingProgress from '../components/placeholders/LoadingProgress'\r\nimport Header from '../components/header/Header' \r\nimport Footer from '../components/footer/Footer' \r\n \r\nimport Login from '../components/Login'\r\nimport Error from '../components/Error'\r\nimport SinglePage from '../components/pages/SinglePage' \r\n\r\nimport CategoryContext from '../context/headerContext/CategoryContext'\r\nimport LoadingContext from '../context/loadingContext/LoadingContext'   \r\n\r\nfunction RouterComponent() {\r\n \r\n    const {categories} = React.useContext(CategoryContext) \r\n    const {isLoading} = React.useContext(LoadingContext)  \r\n\r\n    \r\n\r\n\r\n    return (   \r\n        <Router basename=\"builder\"> \r\n        \r\n            <ScrollToTop/>\r\n             \r\n            \r\n            { isLoading && <LoadingProgress/> }\r\n            \r\n            {\r\n                categories.length > 0 &&\r\n                <React.Fragment>\r\n                     \r\n                    <Header/>\r\n\r\n                    <main>\r\n                        <Switch>\r\n                            { \r\n                                categories.map( category => {\r\n                                    const breadcrumbs = [\r\n                                        {\r\n                                            title: category.title,\r\n                                            slug: category.slug\r\n                                        } \r\n                                    ]\r\n                                    return (\r\n                                        <Route \r\n                                            key={category.id}\r\n                                            exact\r\n                                            path={`/${category.slug}`}\r\n                                            render={\r\n                                                (props) => {\r\n                                                    if(category.slug === '/') { \r\n                                                        return <SinglePage {...props} slugForUpdate={'home'} metaTitle={category.title} breadcrumbs={null} />\r\n                                                    }\r\n                                                    //if === concacts => return contacts .... \r\n                                                    return <SinglePage {...props} slugForUpdate={category.slug} metaTitle={category.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            }\r\n                                        />  \r\n                                    ) \r\n                                })\r\n                            }\r\n                            { \r\n                                categories.map( category => (\r\n                                    category.pages.length > 0 &&\r\n                                    category.pages.map( page => {\r\n                                        const breadcrumbs = [\r\n                                            {\r\n                                                title: category.title,\r\n                                                slug: category.slug\r\n                                            }, \r\n                                            {\r\n                                                title: page.title,\r\n                                                slug: `${category.slug}/${page.slug}`\r\n                                            }\r\n                                        ]\r\n                                        return(\r\n                                            <Route \r\n                                                key={page.id}\r\n                                                exact\r\n                                                path={`/${category.slug}/${page.slug}`}\r\n                                                render = {\r\n                                                    (props) => <SinglePage {...props} slugForUpdate={page.slug} metaTitle={page.title} breadcrumbs={breadcrumbs} />\r\n                                                }\r\n                                            />\r\n                                            )\r\n                                    })\r\n                                ))\r\n                            }\r\n            \r\n                            <Route path='/login' render={ () => <Login/> } />\r\n\r\n                            <Route path='*' render={ () => <Error/> } />\r\n                            \r\n                        </Switch> \r\n                    </main>\r\n\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            } \r\n        </Router>\r\n        \r\n    )\r\n}\r\n\r\nexport default RouterComponent\r\n","import React from 'react';\r\nimport { \r\n    makeStyles, \r\n    Modal, \r\n    Backdrop, \r\n    Fade, \r\n    Button, \r\n    Typography,  \r\n    Box,\r\n    IconButton,\r\n    fade\r\n} from '@material-ui/core';  \r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../assets/style/modal.scss'\r\n\r\nimport SendFormContext from '../../context/sendFormContext/SendFormContext'\r\nimport ModalContext from '../../context/modalContext/ModalContext'\r\n\r\nimport {getColorByPaletteForGradient} from '../library/colorPicker/ColorCalculation'\r\n\r\n\r\nexport default function TransitionsModal() {\r\n  \r\n  const { sendRequests , modalSettings } = React.useContext(SendFormContext)\r\n  const { target, open, \r\n    // handleOpen, \r\n    handleClose } = React.useContext(ModalContext)\r\n \r\n  const [formPhone, setFormPhone] = React.useState('')\r\n  const [formName, setFormName] = React.useState('') \r\n\r\n  const heading = modalSettings.heading\r\n  const subHeading = modalSettings.subHeading\r\n  const targetText = modalSettings.targetText\r\n  const buttonText = modalSettings.buttonText\r\n  const policy = modalSettings.policy\r\n  const inputName = modalSettings.inputName\r\n  const inputPhone = modalSettings.inputPhone\r\n  // const colorButton = modalSettings.colorButton \r\n  let colorGradient1, colorGradient2  \r\n \r\n  const useStyles = makeStyles((theme) => {\r\n   \r\n    // const currentColor = getColorByPalette(theme, modalSettings.colorButton)\r\n  \r\n    colorGradient1 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[0]\r\n    colorGradient2 = getColorByPaletteForGradient(theme, modalSettings.colorButton)[1]\r\n    // colorGradient1 = lighten(currentColor, 0.2)\r\n    // colorGradient2 = darken(currentColor, 0.2) \r\n     \r\n\r\n    return ({\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper: {\r\n        position: 'relative', \r\n        backgroundColor: theme.palette.background.paper,  \r\n        padding: theme.spacing(2, 6, 4),\r\n        margin: theme.spacing(2),\r\n        [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n          padding: theme.spacing(2, 2, 3),\r\n        }, \r\n        '&:focus': {\r\n          outline: 0\r\n        }\r\n      },\r\n      closeBtn: {\r\n        position: 'absolute', \r\n        top: 15, \r\n        right: 10\r\n      }, \r\n      input: {\r\n        fontFamily: 'inherit', \r\n        border: `1px solid ${theme.palette.divider}`, \r\n        outline: 0, \r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        boxShadow: 'none', \r\n        width: \"100%\",\r\n        height: 50,\r\n        textAlign: 'center', \r\n        transition: `${theme.transitions.easing.easeInOut} ${theme.transitions.duration.shorter}ms`, \r\n        '&::-webkit-input-placeholder':  {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&::-moz-placeholder' : { \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-ms-input-placeholder': {  \r\n          color: theme.palette.text.primary,\r\n        },\r\n        '&:-moz-placeholder': { \r\n          color: theme.palette.text.primary,\r\n        }, \r\n        '&:focus': {\r\n          borderColor: colorGradient1\r\n        },\r\n        '&:hover': {\r\n          backgroundColor: fade(colorGradient1, 0.07), \r\n        },\r\n         \r\n      },\r\n      button: {\r\n        backgroundImage: `linear-gradient(180deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`,  \r\n        color: colorGradient2 ?  theme.palette.getContrastText(colorGradient2) : theme.palette.primary.main ,\r\n        textTransform: 'inherit', \r\n        width: \"100%\",\r\n        height: 50,\r\n        '&:hover': {  \r\n            backgroundImage: `linear-gradient(200deg, ${colorGradient1} 0%, ${colorGradient2} 100%)`, \r\n        }\r\n      },\r\n      targetContainer: {  \r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        marginTop: theme.spacing(2), \r\n        border: `1px solid ${colorGradient1}`, \r\n        padding: theme.spacing(1, 2), \r\n        minHeight: 50, \r\n        maxWidth: 250, \r\n        width: '100%', \r\n        textAlign: 'center', \r\n        fontSize: \".875rem\"\r\n      }, \r\n      targetLabel: {\r\n        display: 'block', \r\n        textAlign: 'center', \r\n        fontSize: \".9em\",  \r\n        fontWeight: 500, \r\n        color: theme.palette.text.secondary\r\n      } \r\n    })\r\n  });\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const sendForm = {\r\n      phone: formPhone,\r\n      name: formName,  \r\n      target: target,\r\n      place: 'modal',  \r\n      isCheck: false\r\n    }\r\n\r\n    sendRequests(sendForm)\r\n    \r\n    setFormPhone('')\r\n    setFormName('')\r\n    closeModal()\r\n  } \r\n\r\n  // const openModal = () => {\r\n  //   handleOpen('')\r\n  // }\r\n  const closeModal = () => {\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <button type=\"button\" onClick={ openModal }>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 250,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div className={classes.paper}>\r\n                <IconButton \r\n                  aria-label=\"close\" \r\n                  onClick={closeModal} \r\n                  size={'small'}\r\n                  className={classes.closeBtn}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <div className=\"modal-item\">\r\n                     \r\n                  <Typography component='h3'>\r\n                    { heading }\r\n                  </Typography>\r\n\r\n                  <Typography component='h6'>\r\n                    { subHeading }\r\n                  </Typography> \r\n\r\n                  {\r\n                    target.length > 0 && \r\n                    <Box className={classes.targetContainer}>\r\n                      <span className={classes.targetLabel}>{ targetText } &nbsp; </span> { target }\r\n                    </Box>  \r\n                  }\r\n                     \r\n                  <form onSubmit={handleSubmit}>   \r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"text\" \r\n                          placeholder={inputName} \r\n                          required \r\n                          variant='outlined' \r\n                          className={classes.input}\r\n                          value={formPhone}\r\n                          onChange={ e => setFormPhone(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box my={1}>\r\n                      <input  \r\n                          type=\"tel\" \r\n                          placeholder={`${inputPhone}`} \r\n                          required\r\n                          variant='outlined'  \r\n                          className={classes.input}\r\n                          value={formName}\r\n                          onChange={ e => setFormName(e.target.value)}\r\n                      /> \r\n                    </Box>\r\n                    <div className=\"btn-custom \">\r\n                      <Button\r\n                        type=\"submit\" \r\n                        variant='contained'\r\n                        className={classes.button}\r\n                      >\r\n                        { buttonText } \r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                  <span className='policy'> { policy } </span>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nconst  AlertComponent = (props) => {\r\n    const useStyles = makeStyles( (theme) => { \r\n        return {\r\n            alertContainer: {\r\n                position: 'fixed',\r\n                zIndex: 1050, \r\n                top: 30, \r\n                left: 'calc(50% - 200px)',\r\n                width: \"100%\",\r\n                maxWidth: 400, \r\n                [`@media (max-width: ${theme.breakpoints.values.sm}px)`]: {\r\n                    left: 10,\r\n                    right: 10, \r\n                    top: 15, \r\n                    width: 'auto', \r\n                    maxWidth: 'none'\r\n                },\r\n            },\r\n            alert: { \r\n                boxShadow: theme.shadows[9] ,\r\n                alignItems: 'center', \r\n            }, \r\n            message: {\r\n                textAlign: 'center',\r\n                width: \"100%\",\r\n\r\n            }\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        props.closeAlert()\r\n    }\r\n\r\n    const alertText = () => {\r\n        if(props.severity === 'success') return \"Your request was accepted successfully\"\r\n        if(props.severity === 'info') return \"Your request is being processed\"\r\n        if(props.severity === 'error') return \"An error has occurred :(\"\r\n        if(props.severity === 'warning') return \"Warning!\" \r\n    }\r\n      \r\n    return (\r\n        <div className={classes.alertContainer}>\r\n            <Alert \r\n                severity={props.severity} \r\n                variant=\"filled\"\r\n                onClose={handleClose} \r\n                className={classes.alert}\r\n                classes= {{ message: classes.message }}\r\n            >\r\n                { alertText() }\r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlertComponent\r\n","import React from 'react' \r\n\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport { createMuiTheme } from '@material-ui/core/styles'; \r\n   \r\nimport CategoryContext from '../context/headerContext/CategoryContext'  \r\nimport SendFormContext from '../context/sendFormContext/SendFormContext'  \r\n\r\nimport RouterComponent from '../Router/RouterComponent'\r\n\r\nimport Modal from '../components/modal/DumbComponent' \r\nimport Alert from '../components/placeholders/Alert'\r\n\r\nfunction ThemeComponent() {   \r\n    const {themeLight, themeDark, themeMode } = React.useContext(CategoryContext) \r\n    const { isShowAlert, closeAlert } = React.useContext(SendFormContext)  \r\n    \r\n    let themeCreate \r\n    if(themeMode === 'dark') { \r\n        themeCreate = createMuiTheme(themeDark);\r\n    }\r\n    else { \r\n        themeCreate = createMuiTheme(themeLight);\r\n    }\r\n     \r\n    return (\r\n        <ThemeProvider theme={themeCreate} >\r\n             \r\n            <CssBaseline/>   \r\n            {\r\n                isShowAlert &&\r\n                <Alert severity={isShowAlert} closeAlert={closeAlert} /> \r\n            } \r\n            <Modal/>\r\n            <RouterComponent/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ThemeComponent\r\n","import React from \"react\"   \n\nimport ModeProvider from './context/modeContext/ModeProvider'\nimport CategoryProvider from './context/headerContext/CategoryProvider'\nimport LoadingProvider from './context/loadingContext/LoadingProvider'\nimport LibraryProvider from './context/libraryContext/LibraryProvider' \nimport ImageProvider from './context/imageContext/ImageProvider'\nimport SendFormProvider from './context/sendFormContext/SendFormProvider'\nimport ModalProvider from './context/modalContext/ModalProvider'\n \nimport ThemeComponent from './theme/ThemeComponent' \n\n\nimport './assets/style/style.scss'\n \nconst App = () => {   \n\n  return (\n    <ModalProvider>\n      <SendFormProvider>\n        <ImageProvider> \n\n          <CategoryProvider>\n            <LibraryProvider>\n                <ModeProvider> \n                  <LoadingProvider>\n                    <div className=\"App\">  \n                      <ThemeComponent/> \n                    </div>\n                  </LoadingProvider> \n                </ModeProvider>\n            </LibraryProvider> \n          </CategoryProvider> \n\n        </ImageProvider>\n      </SendFormProvider>\n    </ModalProvider>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\n// import \"./assets/style.scss\"\n\nimport reportWebVitals from './reportWebVitals'; \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n//   ,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"sourceRoot":""}